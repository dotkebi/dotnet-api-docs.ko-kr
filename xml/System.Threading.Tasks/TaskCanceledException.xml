<Type Name="TaskCanceledException" FullName="System.Threading.Tasks.TaskCanceledException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3804fea5e6326419bc45532a244df07821db390" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58684533" /></Metadata><TypeSignature Language="C#" Value="public class TaskCanceledException : OperationCanceledException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TaskCanceledException extends System.OperationCanceledException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskCanceledException" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCanceledException&#xA;Inherits OperationCanceledException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskCanceledException : OperationCanceledException" />
  <TypeSignature Language="F#" Value="type TaskCanceledException = class&#xA;    inherit OperationCanceledException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.OperationCanceledException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="398c7-101">작업 취소를 알리기 위해 사용되는 예외를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-101">Represents an exception used to communicate task cancellation.</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="398c7-102"><see cref="P:System.Threading.Tasks.TaskCanceledException.Task" /> 속성은 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-102">The <see cref="P:System.Threading.Tasks.TaskCanceledException.Task" /> property is thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="398c7-103">작업 기반 비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="398c7-103">Task-based Asynchronous Programming</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="398c7-104">작업 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-104">Task Cancellation</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="398c7-105">방법: 작업 및 해당 자식 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-105">How to: Cancel a Task and Its Children</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="398c7-106"><see cref="T:System.Threading.Tasks.TaskCanceledException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="398c7-107">오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-107">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398c7-108">이 생성자는 새 인스턴스의 <xref:System.Exception.Message%2A> 속성을 오류를 설명하는 시스템 제공 메시지로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-108">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error.</span></span> <span data-ttu-id="398c7-109">이 메시지는 현재 시스템의 문화권을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-109">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="398c7-110">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.OperationCanceledException>:</span><span class="sxs-lookup"><span data-stu-id="398c7-110">The following table shows the initial property values for an instance of <xref:System.OperationCanceledException>:</span></span>  
  
|<span data-ttu-id="398c7-111">속성</span><span class="sxs-lookup"><span data-stu-id="398c7-111">Property</span></span>|<span data-ttu-id="398c7-112">값</span><span class="sxs-lookup"><span data-stu-id="398c7-112">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="398c7-113">`null`.</span><span class="sxs-lookup"><span data-stu-id="398c7-113">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="398c7-114">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-114">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="398c7-115">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="398c7-115">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="398c7-116">작업 기반 비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="398c7-116">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="398c7-117">작업 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-117">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="398c7-118">방법: 작업 및 해당 자식 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-118">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : string -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="398c7-119">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-119">The message that describes the exception.</span></span> <span data-ttu-id="398c7-120">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-120">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="398c7-121"><see cref="T:System.Threading.Tasks.TaskCanceledException" /> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-121">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398c7-122">다음 표에서는 <xref:System.Threading.Tasks.TaskCanceledException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-122">The following table shows the initial property values for an instance of <xref:System.Threading.Tasks.TaskCanceledException>.</span></span>  
  
|<span data-ttu-id="398c7-123">속성</span><span class="sxs-lookup"><span data-stu-id="398c7-123">Property</span></span>|<span data-ttu-id="398c7-124">값</span><span class="sxs-lookup"><span data-stu-id="398c7-124">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="398c7-125">`null`.</span><span class="sxs-lookup"><span data-stu-id="398c7-125">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="398c7-126">`message`에 지정된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-126">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="398c7-127">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="398c7-127">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="398c7-128">작업 기반 비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="398c7-128">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="398c7-129">작업 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-129">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="398c7-130">방법: 작업 및 해당 자식 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-130">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : System.Threading.Tasks.Task -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException task" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="398c7-131">취소된 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-131">A task that has been canceled.</span></span></param>
        <summary><span data-ttu-id="398c7-132">취소된 <see cref="T:System.Threading.Tasks.TaskCanceledException" />에 대한 참조를 사용하여 <see cref="T:System.Threading.Tasks.Task" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-132">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a reference to the <see cref="T:System.Threading.Tasks.Task" /> that has been canceled.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="398c7-133">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="398c7-133">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="398c7-134">작업 기반 비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="398c7-134">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="398c7-135">작업 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-135">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="398c7-136">방법: 작업 및 해당 자식 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-136">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TaskCanceledException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TaskCanceledException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="398c7-137">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-137">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="398c7-138">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-138">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="398c7-139">serialize된 데이터를 사용하여 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-139">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398c7-140">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-140">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="398c7-141">자세한 내용은 [XML 및 SOAP Serialization](https://go.microsoft.com/fwlink/p/?LinkID=248602)합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-141">For more information, see [XML and SOAP Serialization](https://go.microsoft.com/fwlink/p/?LinkID=248602).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="398c7-142">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="398c7-142">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="398c7-143">작업 기반 비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="398c7-143">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="398c7-144">작업 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-144">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="398c7-145">방법: 작업 및 해당 자식 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-145">How to: Cancel a Task and Its Children</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/p/?LinkID=248602"><span data-ttu-id="398c7-146">XML 및 SOAP Serialization</span><span class="sxs-lookup"><span data-stu-id="398c7-146">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : string * Exception -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="398c7-147">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-147">The message that describes the exception.</span></span> <span data-ttu-id="398c7-148">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-148">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="innerException"><span data-ttu-id="398c7-149">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-149">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="398c7-150"><paramref name="innerException" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-150">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="398c7-151">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-151">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398c7-152">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-152">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="398c7-153"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-153">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="398c7-154">다음 표에서는 <xref:System.Threading.Tasks.TaskCanceledException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-154">The following table shows the initial property values for an instance of <xref:System.Threading.Tasks.TaskCanceledException>.</span></span>  
  
|<span data-ttu-id="398c7-155">속성</span><span class="sxs-lookup"><span data-stu-id="398c7-155">Property</span></span>|<span data-ttu-id="398c7-156">값</span><span class="sxs-lookup"><span data-stu-id="398c7-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="398c7-157">`null`.</span><span class="sxs-lookup"><span data-stu-id="398c7-157">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="398c7-158">`message`에 지정된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-158">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="398c7-159">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="398c7-159">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="398c7-160">작업 기반 비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="398c7-160">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="398c7-161">작업 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-161">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="398c7-162">방법: 작업 및 해당 자식 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-162">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (string message, Exception innerException, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception, token As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::String ^ message, Exception ^ innerException, System::Threading::CancellationToken token);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : string * Exception * System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException (message, innerException, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="innerException" Type="System.Exception" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="innerException">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Task" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskCanceledException.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Task { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.TaskCanceledException.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="398c7-163">이 예외와 연결된 작업을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-163">Gets the task associated with this exception.</span></span></summary>
        <value><span data-ttu-id="398c7-164">이 예외와 연결된 <see cref="T:System.Threading.Tasks.Task" />에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-164">A reference to the <see cref="T:System.Threading.Tasks.Task" /> that is associated with this exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="398c7-165">사용 하 여 연결할 수 없는 작업에 대 한 허용 되는 것을 <xref:System.Threading.Tasks.TaskCanceledException>,이 경우이 속성은 null을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-165">It is permissible for no Task to be associated with a <xref:System.Threading.Tasks.TaskCanceledException>, in which case this property will return null.</span></span>  
  
 <span data-ttu-id="398c7-166">이 속성은 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="398c7-166">This property is thread-safe and may be used from multiple threads concurrently.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="398c7-167">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="398c7-167">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="398c7-168">작업 기반 비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="398c7-168">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="398c7-169">작업 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-169">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="398c7-170">방법: 작업 및 해당 자식 취소</span><span class="sxs-lookup"><span data-stu-id="398c7-170">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>