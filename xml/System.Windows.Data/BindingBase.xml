<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a621138e6b1f285d48a5acfbe22eee6c9f9487dd" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56361153" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="32daf-101"><see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" /> 및 <see cref="T:System.Windows.Data.MultiBinding" /> 클래스에 공통되는 특징을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-101">Defines the common characteristics of the <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, and <see cref="T:System.Windows.Data.MultiBinding" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32daf-102">때문에 합니다 <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> 메서드가 봉인 되었습니다. 사용자 지정 바인딩 클래스에서 파생 되는 <xref:System.Windows.Data.BindingBase> 으로 제대로 작동 하지 것입니다는 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 태그 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-102">Because the <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> method is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32daf-103">이 바인딩이 속하는 <see cref="T:System.Windows.Data.BindingGroup" />의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-103">Gets or sets the name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></summary>
        <value><span data-ttu-id="32daf-104">이 바인딩이 속하는 <see cref="T:System.Windows.Data.BindingGroup" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-104">The name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32daf-105">경우 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩이 속한를 설정 하지 않으면를 <xref:System.Windows.Data.BindingGroup> 경우에만 바인딩의 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 된 부모 요소는 <xref:System.Windows.Data.BindingGroup> 가 같은 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-105">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set, the binding belongs to a <xref:System.Windows.Data.BindingGroup> only if the binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> are the same object.</span></span>  
  
 <span data-ttu-id="32daf-106">하는 경우 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 설정 된 바인딩이 속한 값으로는 <xref:System.Windows.Data.BindingGroup> 다음 조건이 true 인 경우:</span><span class="sxs-lookup"><span data-stu-id="32daf-106">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to a value, the binding belongs to a <xref:System.Windows.Data.BindingGroup> if the following conditions are true:</span></span>  
  
-   <span data-ttu-id="32daf-107">합니다 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 합니다 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-107">The <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> are equal.</span></span>  
  
-   <span data-ttu-id="32daf-108"><xref:System.Windows.Data.BindingGroup> 바인딩의 대상 요소의 부모 요소에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-108">The <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
 <span data-ttu-id="32daf-109">하는 경우 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 로 설정 된 `null`, 바인딩을 포함 되지를 <xref:System.Windows.Data.BindingGroup>입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-109">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to `null`, the binding is never a part of a <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="32daf-110">다른 소스가 있는 바인딩을 포함할 수 있습니다는 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 부모 요소의 합니다 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 동일한 값에 대 한 바인딩의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-110">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span>  <span data-ttu-id="32daf-111">동일한 소스에 있는 바인딩을 제외할 수 있습니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 부모 요소의 합니다 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 서로 다른 값에 대 한 바인딩의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-111">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32daf-112">다음 예제는 사용자가 값과 동일 하 게 두 개체의 속성을 설정 하는지 여부를 확인 하는 애플리케이션의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-112">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="32daf-113">첫 번째 예제에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각 데이터가 다른 소스에 바인딩된 컨트롤: 첫 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부인 합니다 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Controls.TextBox> 상속 합니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 및 <xref:System.Windows.Data.BindingGroup> 에서 해당 부모 <xref:System.Windows.Controls.StackPanel></span><span class="sxs-lookup"><span data-stu-id="32daf-113">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel></span></span>  
  
 <span data-ttu-id="32daf-114">두 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부인 합니다 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 의 <xref:System.Windows.Data.Binding> 로 설정 됩니다 `bindingGroup`합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-114">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="32daf-115">다음 예제는 <xref:System.Windows.Controls.ValidationRule> 앞의 예제를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-115">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span>  <span data-ttu-id="32daf-116">에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져옵니다는 <xref:System.Windows.Data.BindingGroup> 개체 속성이 같은지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-116">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32daf-117">대상의 값이 변경된 후 바인딩 소스를 업데이트하기 전에 대기할 시간(밀리초)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-117">Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</span></span></summary>
        <value><span data-ttu-id="32daf-118">바인딩 소스를 업데이트하기 전까지 대기하는 시간(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-118">The amount of time, in milliseconds, to wait before updating the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32daf-119">바인딩 대상 속성의 값이 변경 될 때마다 바인딩 소스 업데이트를 사용 하 여 설정 합니다 <xref:System.Windows.Data.Binding.Mode%2A> 속성을 <xref:System.Windows.Data.BindingMode.TwoWay> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 를 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-119">When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <xref:System.Windows.Data.Binding.Mode%2A> property to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="32daf-120">이 이런 경우에 사용할 수는 <xref:System.Windows.Data.BindingBase.Delay%2A> 대상이 변경 되 면 원본 업데이트 될 때 사이의 시간 지연 되어야 하는지 여부를 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-120">In this situation, you can use the <xref:System.Windows.Data.BindingBase.Delay%2A> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</span></span>  <span data-ttu-id="32daf-121">원본 개체 속성을 변경 하려면 사용자를 사용 하도록 설정 하려는 각 변경 내용을 즉시 소스에 커밋할 수를 표시 하지 않으려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-121">This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</span></span>  <span data-ttu-id="32daf-122">예를 들어, 데이터 개체의 속성에 바인딩할 데이터 양방향 텍스트 상자에 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-122">For example, suppose that you have a text box that is data two-way bound to a property of a data object.</span></span>  <span data-ttu-id="32daf-123">텍스트 상자에 값을 변경 하는 사용자, 소스 업데이트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-123">When the user changes the value in the text box, the source gets updated.</span></span>  <span data-ttu-id="32daf-124">이 시나리오를 사용 하도록 설정 하려면 설정를 <xref:System.Windows.Data.Binding.Mode%2A> 속성에는 <xref:System.Windows.Data.Binding> 를 <xref:System.Windows.Data.BindingMode.TwoWay> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 에 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-124">To enable this scenario, you set the <xref:System.Windows.Data.Binding.Mode%2A> property on the <xref:System.Windows.Data.Binding> to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="32daf-125">모든 키 입력을 사용 하 여 원본 개체를 업데이트를 방지 하려면 설정의 <xref:System.Windows.Data.BindingBase.Delay%2A> 바인딩도 시간 사용자 입력을 중지 된 이후 경과한 후에 업데이트를 적절 한 값으로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-125">To avoid updating the source object with every keystroke, set the <xref:System.Windows.Data.BindingBase.Delay%2A> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32daf-126">바인딩에서 값을 반환할 수 없는 경우 사용할 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-126">Gets or sets the value to use when the binding is unable to return a value.</span></span></summary>
        <value><span data-ttu-id="32daf-127">기본값은 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-127">The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32daf-128">바인딩을 경우 성공적으로 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-128">A binding returns a value successfully if:</span></span>  
  
1.  <span data-ttu-id="32daf-129">경로 바인딩 소스를 성공적으로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-129">The path to the binding source resolves successfully.</span></span>  
  
2.  <span data-ttu-id="32daf-130">값 변환기가 있는 경우는 결과 값을 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-130">The value converter, if any, is able to convert the resulting value.</span></span>  
  
3.  <span data-ttu-id="32daf-131">결과 값이 바인딩 대상 (대상) 속성에 대 한 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-131">The resulting value is valid for the binding target (target) property.</span></span>  
  
 <span data-ttu-id="32daf-132">1과 2를 반환 하는 경우 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, 대상 속성의 값으로 설정 되는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>사용할 수 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="32daf-132">If 1 and 2 return <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, the target property is set to the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available.</span></span> <span data-ttu-id="32daf-133">없는 경우 없는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, 대상 속성의 기본값이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-133">If there is no <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, the default value of the target property is used.</span></span>  
  
 <span data-ttu-id="32daf-134">값 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 성공적인 반환 값으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-134">The value <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> is not considered a successful return value.</span></span>  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="32daf-135">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="32daf-135">XAML Text Usage</span></span>  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 <span data-ttu-id="32daf-136">**-또는-**</span><span class="sxs-lookup"><span data-stu-id="32daf-136">**- or -**</span></span>  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="32daf-137">XAML 값</span><span class="sxs-lookup"><span data-stu-id="32daf-137">XAML Values</span></span>  
 <span data-ttu-id="32daf-138">*fallbackValue*</span><span class="sxs-lookup"><span data-stu-id="32daf-138">*fallbackValue*</span></span>  
 <span data-ttu-id="32daf-139">특성 또는 개체 요소 값의 대상 속성 형식과 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-139">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="32daf-140">XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="32daf-140">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="32daf-141">해당 형식 또는 값으로 특성 구문을 지원 하지 않을 수 있습니다 또는 수 수도 있습니다 개체 요소 구문 (하며, 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-141">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</span></span> <span data-ttu-id="32daf-142">대상 속성 형식 값을 사용 하는 구문이 영향을 주는 따라서는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-142">The target property type will therefore influence which syntax you use for the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="32daf-143">태그 확장명 서비스를 제공할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-143">The object that can provide services for the markup extension.</span></span> <span data-ttu-id="32daf-144"><see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-144">May be <see langword="null" />;</span></span></param>
        <summary><span data-ttu-id="32daf-145">이 바인딩 및 확장이 적용되는 속성에 설정해야 하는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-145">Returns an object that should be set on the property where this binding and extension are applied.</span></span></summary>
        <returns><span data-ttu-id="32daf-146">바인딩 대상 속성에 설정할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-146">The value to set on the binding target property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32daf-147">이 구현을 통해 바인딩에 대 한 기본 구문 지원 제공 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 실용적인 파생된 클래스를 제공 하는 모든 (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, 및 <xref:System.Windows.Data.MultiBinding>).</span><span class="sxs-lookup"><span data-stu-id="32daf-147">This implementation provides the base syntax support for binding through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] for all provided practical derived classes (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding>).</span></span>  
  
 <span data-ttu-id="32daf-148"><xref:System.Windows.Data.BindingBase> 클래스가 메서드의 구현은 바인딩의 결과 나타내는 식 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-148">The <xref:System.Windows.Data.BindingBase> class implementation of this method is expected to return an expression object that is the result of a binding.</span></span> <span data-ttu-id="32daf-149">속성 바인딩 대상으로 하 여 작동는 지정 된 <xref:System.Windows.DependencyProperty> 에 지정 된 <xref:System.Windows.DependencyObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-149">Binding a property works by targeting a given <xref:System.Windows.DependencyProperty> on a given <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="32daf-150">이러한 두 가지 정보에 대 한 쿼리를 통해 전송 되는 <xref:System.Windows.Markup.IProvideValueTarget> 에 대 한 구현을 `serviceProvider`는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 바인딩을 구문 분석 하는 동안 판독기를 사용할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-150">These two pieces of information are transmitted by querying for an <xref:System.Windows.Markup.IProvideValueTarget> implementation on the `serviceProvider`, which the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] reader makes available during parsing of a binding.</span></span> <span data-ttu-id="32daf-151">이 기본 클래스 구현을 확인 하는 유효한 담당 <xref:System.Windows.DependencyProperty> 고 <xref:System.Windows.DependencyObject>입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-151">This base class implementation is responsible for checking for a valid <xref:System.Windows.DependencyProperty> and <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="32daf-152">없으면 이러한 기본 클래스 내부 추상 메서드를 호출 하 여 구현 될 때 바인딩 식을 반환의 실제 구현을 다양 한 파생된 클래스에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-152">If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</span></span> <span data-ttu-id="32daf-153">확장, 바인딩 개체 자체가 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-153">Otherwise, the extension returns the binding object itself.</span></span> <span data-ttu-id="32daf-154">바인딩 자체를 반환 형식 불일치 오류를 줄어들지만이 정상적인 상황에서 발생 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-154">Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="32daf-155">때문에 통해 바인딩하는 구문은 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 에서 구현 될 때이 메서드는 구현 내부 재정의 사용 하므로 <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> 자체는 봉인 클래스에서 파생 되는 사용자 지정 바인딩 클래스 <xref:System.Windows.Data.BindingBase> 으로 제대로 작동 하지 것입니다는 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 태그 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-155">Because the syntax for binding through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] as implemented in this method relies on implementing an internal override, and because <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> itself is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32daf-156">이 클래스의 인스턴스에서 serialization 프로세스를 통해 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 속성의 유효 값을 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-156">Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="32daf-157"><see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-157"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32daf-158"><see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 속성이 serialize되어야 하는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-158">Returns a value that indicates whether the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized.</span></span></summary>
        <returns><span data-ttu-id="32daf-159"><see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 속성을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-159"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32daf-160">바인딩된 값을 문자열로 표시하는 경우 바인딩의 형식을 지정하는 방법을 지정하는 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-160">Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</span></span></summary>
        <value><span data-ttu-id="32daf-161">바인딩된 값을 문자열로 표시하는 경우 바인딩의 형식을 지정하는 방법을 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-161">A string that specifies how to format the binding if it displays the bound value as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32daf-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> 미리 정의 된, 복합 또는 사용자 지정 문자열 형식의 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> can be a predefined, composite, or custom string format.</span></span> <span data-ttu-id="32daf-163">문자열 형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-163">For more information about string formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="32daf-164">설정 하는 경우는 <xref:System.Windows.Data.Binding.Converter%2A> 및 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 속성 변환기가 데이터 값에 먼저 적용 된 다음는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-164">If you set the <xref:System.Windows.Data.Binding.Converter%2A> and <xref:System.Windows.Data.BindingBase.StringFormat%2A> properties, the converter is applied to the data value first, and then the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is applied.</span></span>  
  
 <span data-ttu-id="32daf-165">설정한 경우 합니다 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 에 <xref:System.Windows.Data.Binding> 복합 문자열 형식의 매개 변수가 하나만 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-165">When you set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on a <xref:System.Windows.Data.Binding> to a composite string format, you can specify only one parameter.</span></span>  
  
 <span data-ttu-id="32daf-166">사용 하는 경우는 <xref:System.Windows.Data.MultiBinding>는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 속성에 설정 된 경우에 적용 됩니다는 <xref:System.Windows.Data.MultiBinding>합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-166">When you use a <xref:System.Windows.Data.MultiBinding>, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property applies only when it is set on the <xref:System.Windows.Data.MultiBinding>.</span></span>  <span data-ttu-id="32daf-167">변수의 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 모든 자식에 설정 된 <xref:System.Windows.Data.Binding> 개체는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-167">The value of <xref:System.Windows.Data.BindingBase.StringFormat%2A> that is set on any child <xref:System.Windows.Data.Binding> objects is ignored.</span></span>  <span data-ttu-id="32daf-168">복합 문자열 형식의 매개 변수 수가 자식 수가 초과할 수 없습니다 <xref:System.Windows.Data.Binding> 개체는 <xref:System.Windows.Data.MultiBinding>합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-168">The number of parameters in a composite string format cannot exceed the number of child <xref:System.Windows.Data.Binding> objects in the <xref:System.Windows.Data.MultiBinding>.</span></span>  
  
 <span data-ttu-id="32daf-169">사용 하는 경우를 <xref:System.Windows.Data.PriorityBinding>를 설정할 수 있습니다 합니다 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 에 <xref:System.Windows.Data.PriorityBinding>자식 바인딩 개체 중 하나 또는 둘 다에.</span><span class="sxs-lookup"><span data-stu-id="32daf-169">When you use a <xref:System.Windows.Data.PriorityBinding>, you can set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on the <xref:System.Windows.Data.PriorityBinding>, on child binding objects, or both.</span></span>  <span data-ttu-id="32daf-170">경우는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 집합 자식 즉 바인딩에 적용 된 값이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-170">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is set on the child binding that is applied, that value is used.</span></span>  <span data-ttu-id="32daf-171">경우는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 에 적용 되는 자식 바인딩에 설정 되어 있지는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 의 <xref:System.Windows.Data.PriorityBinding> 설정 된 경우 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-171">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is not set on the child binding that is applied, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> of the <xref:System.Windows.Data.PriorityBinding> is applied if it is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32daf-172">다음 예제에서는 합니다 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 변환할 속성 `Price`는 <xref:System.Double>, 통화를 나타내는 문자열을 합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-172">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.</span></span>  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 <span data-ttu-id="32daf-173">다음 예제에서는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 속성을 <xref:System.Windows.Data.MultiBinding> 포함 하는 문자열을 작성를 `Description` 및 `Price` 의 각 항목의를 <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="32daf-173">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32daf-174">소스 값이 <see langword="null" />일 때 대상에서 사용되는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-174">Gets or sets the value that is used in the target when the value of the source is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="32daf-175">소스 값이 <see langword="null" />일 때 대상에서 사용되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-175">The value that is used in the target when the value of the source is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="32daf-176">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="32daf-176">XAML Text Usage</span></span>  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 <span data-ttu-id="32daf-177">**-또는-**</span><span class="sxs-lookup"><span data-stu-id="32daf-177">**- or -**</span></span>  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="32daf-178">XAML 값</span><span class="sxs-lookup"><span data-stu-id="32daf-178">XAML Values</span></span>  
 <span data-ttu-id="32daf-179">*nullValue*</span><span class="sxs-lookup"><span data-stu-id="32daf-179">*nullValue*</span></span>  
 <span data-ttu-id="32daf-180">특성 또는 개체 요소 값의 대상 속성 형식과 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-180">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="32daf-181">XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="32daf-181">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="32daf-182">해당 형식 또는 값으로 특성 구문을 지원 하지 않을 수 있습니다 또는 수 수도 있습니다 개체 요소 구문 (하며, 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-182">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32daf-183">다음 예제에서는 한 <xref:System.Windows.Controls.TextBox> 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="32daf-183">The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.</span></span>  <span data-ttu-id="32daf-184">속성이 `null`, <xref:System.Windows.Controls.TextBox> 표시 "문자열을 입력 하십시오."</span><span class="sxs-lookup"><span data-stu-id="32daf-184">If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays "please enter a string."</span></span>  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>