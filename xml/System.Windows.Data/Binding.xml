<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="801b9b6758c7503f88433233450bd01c6f7f068d" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56372839" /></Metadata><TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <TypeSignature Language="F#" Value="type Binding = class&#xA;    inherit BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="96bac-101">바인딩의 정의에 고급 액세스를 제공하여 바인딩 대상 개체의 속성(일반적으로 WPF 요소), 임의 데이터 원본(예: 데이터베이스, XML 파일 또는 데이터가 포함된 개체)을 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <span data-ttu-id="96bac-102">데이터 바인딩은 애플리케이션이 데이터를 제공하고 상호 작용할 수 있는 간단하고 일관된 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-102">data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="96bac-103">데이터 바인딩을 사용 하면 두 개의 다른 개체의 속성 값을 동기화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="96bac-104">바인딩을 설정 하려면 사용 합니다 <xref:System.Windows.Data.Binding> 클래스나 상속 하는 다른 클래스 중 하나 <xref:System.Windows.Data.BindingBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="96bac-105">어떤 개체에 관계 없이 바인딩 및 데이터 원본의 특성을 각 바인딩에 다음 그림에 나온 모델을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="96bac-106">![기본 데이터 바인딩 다이어그램](~/add/media/databindingmostbasic.png "기본 데이터 바인딩 다이어그램")</span><span class="sxs-lookup"><span data-stu-id="96bac-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="96bac-107">그림에서는 다음 기본 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 데이터 바인딩 개념입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="96bac-108">일반적으로 각 바인딩에 네 가지 구성: 바인딩 대상 개체, 대상 속성, 바인딩 소스 및 <xref:System.Windows.Data.Binding.Path%2A> 바인딩 원본으로 사용할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="96bac-109">예를 들어 내용의 바인딩하려는 <xref:System.Windows.Controls.TextBox> 대상 개체는 Employee 개체의 이름 속성에 <xref:System.Windows.Controls.TextBox>, 대상 속성이 <xref:System.Windows.Controls.TextBox.Text%2A> 속성을 사용 하는 값은 이름 및 원본 개체가 직원 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="96bac-110">대상 속성은 종속성 속성이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-110">The target property must be a dependency property.</span></span> <span data-ttu-id="96bac-111">즉, 필드를 바인딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="96bac-112">속성을 대부분 <xref:System.Windows.UIElement> 개체는 종속성 속성 및 읽기 전용으로 제외한 대부분의 종속성 속성을 기본적으로 데이터 바인딩을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="96bac-113">(만 <xref:System.Windows.DependencyObject> 종속성 속성 및 모든 형식을 정의할 수 있습니다 <xref:System.Windows.UIElement> 개체에서 파생 <xref:System.Windows.DependencyObject>.)</span><span class="sxs-lookup"><span data-stu-id="96bac-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="96bac-114">그림에는 지정되지 않았지만 바인딩 소스 개체는 사용자 지정 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 개체로 제한되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96bac-115">데이터 바인딩은 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 개체 및 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 형식의 데이터를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-115">data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="96bac-116">바인딩 소스 수 몇 가지 예제를 제공 하기를 <xref:System.Windows.UIElement>, 목록 개체는 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 연관 된 개체 [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] 포함 된 XmlNode 데이터 나 웹 서비스에 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 데이터.</span><span class="sxs-lookup"><span data-stu-id="96bac-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="96bac-117">사용 된 <xref:System.Windows.Data.Binding.Mode%2A> 데이터 흐름의 방향을 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="96bac-118">단방향 또는 양방향 바인딩에 소스 변경 내용을 검색할 원본 구현 해야 적절 한 속성 변경 알림 메커니즘을 같은 <xref:System.ComponentModel.INotifyPropertyChanged>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="96bac-119">예는 [방법: 속성 변경 알림 구현](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="96bac-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성 소스 업데이트 시기를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="96bac-121">자세한 내용은 "기본 데이터 바인딩 개념"를 참조 하세요 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="96bac-122">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="96bac-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="96bac-123">XAML 값</span><span class="sxs-lookup"><span data-stu-id="96bac-123">XAML Values</span></span>  
 <span data-ttu-id="96bac-124">*declaration*</span><span class="sxs-lookup"><span data-stu-id="96bac-124">*declaration*</span></span>  
 <span data-ttu-id="96bac-125">0 개 이상의 특성 할당 절이 쉼표 (,)로 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="96bac-126">자세한 내용은 [Binding 태그 확장](~/docs/framework/wpf/advanced/binding-markup-extension.md) 하거나 [바인딩 선언 개요](~/docs/framework/wpf/data/binding-declarations-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96bac-127"><see cref="T:System.Windows.Data.Binding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bac-128"><see cref="T:System.Windows.Data.Binding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.Binding : string -&gt; System.Windows.Data.Binding" Usage="new System.Windows.Data.Binding path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="96bac-129">바인딩에 사용할 초기 <see cref="P:System.Windows.Data.Binding.Path" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span></span></param>
        <summary><span data-ttu-id="96bac-130">초기 경로를 사용하여 <see cref="T:System.Windows.Data.Binding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96bac-131">이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="96bac-132">추가할 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-132">The handler to add.</span></span></param>
        <summary><span data-ttu-id="96bac-133"><see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-134">이 메서드는에 연결 된 이벤트 사용을 지원 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96bac-135">이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="96bac-136">추가할 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-136">The handler to add.</span></span></param>
        <summary><span data-ttu-id="96bac-137"><see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-138">이 메서드는에 연결 된 이벤트 사용을 지원 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj with get, set" Usage="System.Windows.Data.Binding.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-139">비동기 데이터 디스패처로 전달된 불투명 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span></span></summary>
        <value><span data-ttu-id="96bac-140">비동기 데이터 디스패처로 전달된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-140">Data passed to the asynchronous data dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BindsDirectlyToSource : bool with get, set" Usage="System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-141">데이터 항목 또는 <see cref="T:System.Windows.Data.DataSourceProvider" /> 개체를 기준으로 <see cref="P:System.Windows.Data.Binding.Path" />를 평가할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span></span></summary>
        <value><span data-ttu-id="96bac-142">데이터 항목 자체를 기준으로 경로를 평가하려면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-142"><see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="96bac-143">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-144">일반적인 동작 (이 속성이 `false`)에 대 한 특수 처리가 포함 됩니다 <xref:System.Windows.Data.DataSourceProvider> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="96bac-145">이 경우 바인딩 엔진이 평가 <xref:System.Windows.Data.Binding.Path%2A> 에서 가져온 개체를 기준으로 <xref:System.Windows.Data.DataSourceProvider.Data%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="96bac-146">바인딩에 수신 뿐만 <xref:System.Windows.Data.DataSourceProvider.DataChanged> 이벤트 및 그에 따라 반응 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="96bac-147">이 속성을 설정 `true` 이 동작을 재정의 하 고 속성에 바인딩 파일에 대 한 액세스는 <xref:System.Windows.Data.DataSourceProvider> 개체 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IValueConverter with get, set" Usage="System.Windows.Data.Binding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-148">사용할 변환기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-148">Gets or sets the converter to use.</span></span></summary>
        <value><span data-ttu-id="96bac-149"><see cref="T:System.Windows.Data.IValueConverter" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span></span> <span data-ttu-id="96bac-150">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-150">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-151">바인딩 소스 값과 대상 값 간에 형식 변환을 수행 하려고 하는 기본 변환기를 암시적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="96bac-152">변환을 만들 수 없는 경우 기본 변환기는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="96bac-153">구현 하는 클래스를 만들어야 바인딩을 사용 하 여 사용자 지정 값 변환기를 연결 하려는 경우는 <xref:System.Windows.Data.IValueConverter> 인터페이스와 구현을 제공 합니다 <xref:System.Windows.Data.IValueConverter.Convert%2A> 및 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="96bac-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="96bac-154">값 변환기를 다른 형식 간에 데이터를 변경, 문자 집합과 같은 문화적 정보 사이 변환 하거나 프레젠테이션의 다른 측면을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="96bac-155">일반적인 변환 시나리오의 예에 "데이터 변환"을 참조 합니다 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="96bac-156">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="96bac-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="96bac-157">XAML 값</span><span class="sxs-lookup"><span data-stu-id="96bac-157">XAML Values</span></span>  
 <span data-ttu-id="96bac-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="96bac-158">*myConverter*</span></span>  
 <span data-ttu-id="96bac-159">구현 하는 클래스에 대 한 리소스 참조를 <xref:System.Windows.Data.IValueConverter> 인터페이스의 구현을 포함 하는 합니다 <xref:System.Windows.Data.IValueConverter.Convert%2A> 및 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="96bac-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="96bac-160">값 변환기를 참조 하려면 사용 합니다 [StaticResource 태그 확장](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.Binding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-161">변환기를 평가할 문화권을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-161">Gets or sets the culture in which to evaluate the converter.</span></span></summary>
        <value><span data-ttu-id="96bac-162">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-162">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-163">이 속성을 설정 하지 않으면 바인딩 엔진에서 사용 된 `Language` 바인딩 대상 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="96bac-164">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] "EN-US"를 기본값으로 사용 하거나 명시적으로 설정 된 경우 페이지의 루트 요소 (또는 요소)에서 값을 상속 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="96bac-165">데이터 변환에 대 한 자세한 내용은에서 데이터 변환 섹션을 참조 합니다 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.Binding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-166"><see cref="P:System.Windows.Data.Binding.Converter" />에 전달할 매개 변수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span></summary>
        <value><span data-ttu-id="96bac-167"><see cref="P:System.Windows.Data.Binding.Converter" />에 전달할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span> <span data-ttu-id="96bac-168">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-169">사용할 수는 <xref:System.Windows.Data.Binding.ConverterParameter%2A> 속성을 개체로 변환 되는 방법을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="96bac-170">이 속성에서 바인딩을 사용 하는 변환기에 추가 정보를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="96bac-171">지정 하는 경우는 <xref:System.Windows.Data.Binding.ConverterParameter%2A>, 값이 전달 되는 <xref:System.Windows.Data.IValueConverter.Convert%2A> 및 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드를 `parameter` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="96bac-172">예는 [방법: 바인딩된 항목 목록을 기반으로 값 산출](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="96bac-173">해당 예의 구현을 보여 줍니다는 <xref:System.Windows.Data.IMultiValueConverter> 하지만 사용이 여전히 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoNothing : obj" Usage="System.Windows.Data.Binding.DoNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-174">바인딩 엔진에 작업을 수행하지 않도록 지시하기 위해 반환된 값으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-174">Used as a returned value to instruct the binding engine not to perform any action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-175">바인딩 소스 속성 또는 변환기를 반환할 수 있습니다 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> 아무 작업도 수행할 필요가 바인딩 엔진 하도록 지시 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="96bac-176">예를 들어, 다음 이동할 필요가 바인딩 대상 값을 전송할 필요가 바인딩 엔진에 게 지시할 <xref:System.Windows.Data.Binding> 에 <xref:System.Windows.Data.PriorityBinding>, 또는를 사용 하지 않도록를 `FallBackValue` 값 또는 기본값.</span><span class="sxs-lookup"><span data-stu-id="96bac-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Windows.Data.Binding.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-177">바인딩 소스 개체로 사용할 요소의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-177">Gets or sets the name of the element to use as the binding source object.</span></span></summary>
        <value><span data-ttu-id="96bac-178">값을 <see langword="Name" /> 속성 또는 [X:name 지시문](~/docs/framework/xaml-services/x-name-directive.md) 관심 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span></span> <span data-ttu-id="96bac-179"><see langword="RegisterName" />을 통해 적절한 <see cref="T:System.Windows.NameScope" />에 등록된 경우에만 코드의 요소를 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span></span> <span data-ttu-id="96bac-180">자세한 내용은 [WPF XAML 이름 범위](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
<span data-ttu-id="96bac-181">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-181">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-182">이 속성은 애플리케이션에서 다른 요소의 속성에 바인딩할 때 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="96bac-183">예를 들어 사용 하려는 경우를 <xref:System.Windows.Controls.Slider> 애플리케이션에서 다른 컨트롤의 높이 제어 하 바인딩하려는 경우 또는 <xref:System.Windows.Controls.ContentControl.Content%2A> 컨트롤을 <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> 의 속성에 <xref:System.Windows.Controls.ListBox> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="96bac-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="96bac-184">바인딩은 기본적으로 지정 된 데이터 컨텍스트를 상속 된 `DataContext` 속성에 설정 된 경우.</span><span class="sxs-lookup"><span data-stu-id="96bac-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="96bac-185">그러나를 <xref:System.Windows.Data.Binding.ElementName%2A> 속성은 소스를 명시적으로 설정할 수 있습니다 하는 방법 중 하나를 <xref:System.Windows.Data.Binding> 상속 된 데이터 컨텍스트를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="96bac-186">자세한 내용은 [방법: 바인딩 소스 지정](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="96bac-187"><xref:System.Windows.Data.Binding.Source%2A> 및 <xref:System.Windows.Data.Binding.RelativeSource%2A> 의 속성을 <xref:System.Windows.Data.Binding> 바인딩 소스를 설정 하는 클래스도 사용 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="96bac-188">그러나 세 가지 속성 중 하나만 <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, 및 <xref:System.Windows.Data.Binding.RelativeSource%2A>집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="96bac-189">이 속성에 바인딩 원본 충돌이 발생 하는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetXmlNamespaceManager : System.Windows.DependencyObject -&gt; System.Xml.XmlNamespaceManager" Usage="System.Windows.Data.Binding.GetXmlNamespaceManager target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="96bac-190">네임스페이스 정보를 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-190">The object from which to get namespace information.</span></span></param>
        <summary><span data-ttu-id="96bac-191">지정된 개체에 연결된 바인딩에 사용되는 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 네임스페이스 관리자 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span></span></summary>
        <returns><span data-ttu-id="96bac-192">전달된 개체 요소의 바인딩과 관련된 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 네임스페이스를 보는 데 사용할 반환된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span></span> <span data-ttu-id="96bac-193">이 개체는 <see cref="T:System.Xml.XmlNamespaceManager" />로 캐스팅해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-194">이 메서드는 연결 된 속성 사용에 대 한 지원의 <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] <span data-ttu-id="96bac-195">네임 스페이스 관리자는 바인딩에서 데이터에서 가져온 경우에 관련 된 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 바인딩 소스 (<xref:System.Windows.Data.XmlDataProvider> 개체).</span><span class="sxs-lookup"><span data-stu-id="96bac-195">namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="96bac-196">원래 데이터 원본 만들기에서 또는 이후에 호출 하 여 네임 스페이스 관리자 특히 적용 되지 않은 경우 <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> 바인딩의 다음이 메서드는 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="96bac-197">이 메서드는 항상 반환 `null` 바인딩이 데이터가 없는 경우 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96bac-198"><paramref name="target" /> 매개 변수는 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberSignature Language="F#" Value="val mutable IndexerName : string" Usage="System.Windows.Data.Binding.IndexerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-199">인덱서 속성이 변경되었음을 나타내는 <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" />의 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool with get, set" Usage="System.Windows.Data.Binding.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-200"><see cref="T:System.Windows.Data.Binding" />에서 비동기적으로 값을 가져오고 설정해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span></span></summary>
        <value><span data-ttu-id="96bac-201">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-202">사용 된 <xref:System.Windows.Data.Binding.IsAsync%2A> 속성 때는 `get` 바인딩 소스 속성의 접근자에는 시간이 오래 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="96bac-203">한 가지 예는 사용 하 여 이미지 속성을 `get` 웹에서 다운로드 하는 접근자입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="96bac-204">설정 <xref:System.Windows.Data.Binding.IsAsync%2A> 하 `true` 차단 방지를 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 다운로드가 발생 하는 동안.</span><span class="sxs-lookup"><span data-stu-id="96bac-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="96bac-205">바인딩 값 도착을 대기 하는 동안 보고서를 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>가능한 경우 바인딩의 기본값 대상 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="96bac-206">그러나 안 사용 해야 하는 많은 시나리오를 <xref:System.Windows.Data.Binding.IsAsync%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="96bac-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] 크기가 커져 느린 필드 집합 보다 속성을 정의 하는 것에 대 한 지침을 권장 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="96bac-208">클래스를 만들 때 고려 외부 매우 느린 작업 처리를 `get` 접근자 및 결과 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.Binding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-209">바인딩에서 데이터 흐름의 방향을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-209">Gets or sets a value that indicates the direction of the data flow in the binding.</span></span></summary>
        <value><span data-ttu-id="96bac-210"><see cref="T:System.Windows.Data.BindingMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-210">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span></span> <span data-ttu-id="96bac-211">기본값은 <see cref="F:System.Windows.Data.BindingMode.Default" />이며, 대상 종속성 속성의 기본 바인딩 모드 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-211">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span></span> <span data-ttu-id="96bac-212">그러나 기본값은 각 종속성 속성에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-212">However, the default value varies for each dependency property.</span></span> <span data-ttu-id="96bac-213">일반적으로 텍스트 상자 및 확인란 속성처럼 사용자가 편집 가능한 컨트롤 속성의 기본값은 양방향 바인딩으로 설정되지만 대부분의 다른 속성 기본값은 단방향 바인딩으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-213">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span></span>  
  
<span data-ttu-id="96bac-214">종속성 속성이 기본적으로 단방향 또는 양방향으로 바인드되는지를 프로그래밍 방식으로 결정하려면 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />를 사용하여 속성의 속성 메타데이터를 가져온 후 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 속성의 부울 값을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-214">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-215">지원 하기 위해 <xref:System.Windows.Data.BindingMode.OneWay> 하 고 <xref:System.Windows.Data.BindingMode.TwoWay> 내부 데이터 바인딩 구현 해야 <xref:System.ComponentModel.INotifyPropertyChanged>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-215">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="96bac-216">자세한 내용은 [방법: 속성 변경 알림 구현](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-216">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="96bac-217">에 대 한 <xref:System.Windows.Data.BindingMode.TwoWay> 나 <xref:System.Windows.Data.BindingMode.OneWayToSource> 바인딩을 설정 하 여 대상에서 소스로 업데이트를 제어할 수 있습니다는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="96bac-217">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="96bac-218">자세한 내용은 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bac-218">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="96bac-219">다른 바인딩 모드에 대 한 자세한 내용은 참조 하세요. [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-219">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-220">값이 바인딩 대상에서 바인딩 소스로 전송되는 경우 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-220">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span></span></summary>
        <value><span data-ttu-id="96bac-221">바인딩 소스 값이 업데이트될 때 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 이벤트를 발생시켜야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-221"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="96bac-222">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-222">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-223">값이 바인딩 소스에서 바인딩 대상으로 전송될 때 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-223">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span></span></summary>
        <value><span data-ttu-id="96bac-224">바인딩 대상 값이 업데이트될 때 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 이벤트를 발생시켜야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-224"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="96bac-225">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-225">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-226">바인딩된 개체에서 <see cref="E:System.Windows.Controls.Validation.Error" /> 연결된 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-226">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span></span></summary>
        <value><span data-ttu-id="96bac-227"><see langword="true" /> 경우는 <see cref="E:System.Windows.Controls.Validation.Error" /> 연결 된 이벤트 고, 그렇지 않으면 원본 업데이트 중에 유효성 검사 오류가 있을 경우 바인딩된 개체에서 발생 해야 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-227"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="96bac-228">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-228">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-229">바인딩이 있으면 <xref:System.Windows.Data.Binding.ValidationRules%2A> 연결 된 바인딩 엔진 확인 될 때마다 각 규칙 소스 속성에 대상 속성 값을 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-229">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="96bac-230">바인딩 엔진에서 만드는 규칙 값을 무효화 하는 경우는 <xref:System.Windows.Controls.ValidationError> 개체에 추가 합니다는 <xref:System.Windows.Controls.Validation>합니다.<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="96bac-230">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="96bac-231">바인딩된 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-231">collection of the bound object.</span></span> <span data-ttu-id="96bac-232">경우는 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 속성이 비어 있는 경우는 <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> 연결 된 개체의 속성 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-232">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="96bac-233">경우는 <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> 의 속성을 <xref:System.Windows.Data.Binding> 로 설정 되어 `true`, 바인딩 엔진을 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 개체에서 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-233">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="96bac-234">유효성 검사 프로세스의 자세한 내용은 데이터 유효성 검사 섹션을 참조 합니다 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-234">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Windows.PropertyPath with get, set" Usage="System.Windows.Data.Binding.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-235">바인딩 소스 속성의 경로를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-235">Gets or sets the path to the binding source property.</span></span></summary>
        <value><span data-ttu-id="96bac-236">바인딩 소스의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-236">The path to the binding source.</span></span> <span data-ttu-id="96bac-237">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-238">일반적으로 각 바인딩에 네 가지 구성: 바인딩 대상 개체, 대상 속성, 바인딩 소스 및 사용할 바인딩 소스의 값에 대 한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-238">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="96bac-239">이러한 데이터 바인딩 개념에 대 한 자세한 내용은 참조 하세요. [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-239">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="96bac-240">사용 된 <xref:System.Windows.Data.Binding.Path%2A> 속성에 바인딩할 원본 값을 지정 하려면:</span><span class="sxs-lookup"><span data-stu-id="96bac-240">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="96bac-241">가장 간단한 경우에는 <xref:System.Windows.Data.Binding.Path%2A> 속성 값이 같은 바인딩에 사용할 소스 개체의 속성 이름을 `Path=PropertyName`입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-241">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="96bac-242">C#에서 사용한 것과 비슷한 구문을 사용 하 여 속성의 하위 속성을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-242">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="96bac-243">예를 들어 `Path=ShoppingCart.Order` 절은 개체 또는 속성 `ShoppingCart`의 하위 속성 `Order`에 대한 바인딩을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-243">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="96bac-244">연결된 속성에 바인딩하려면 연결된 속성을 괄호로 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-244">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="96bac-245">예를 들어 연결된 된 속성에 바인딩할 <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, 구문은 `Path=(DockPanel.Dock)`합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-245">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="96bac-246">속성의 인덱서는 인덱서가 적용되는 속성 이름 뒤에 대괄호로 묶어서 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-246">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="96bac-247">예를 들어 `Path=ShoppingCart[0]` 절은 속성의 내부 인덱싱에서 리터럴 문자열 "0"을 처리하는 방법에 해당하는 인덱스에 대한 바인딩을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-247">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="96bac-248">여러 인덱서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-248">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="96bac-249">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`와 같이 `Path` 절에서 인덱서와 하위 속성을 혼합할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-249">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="96bac-250">여러 인덱서 매개 변수를 쉼표(,)로 구분하여 인덱서 안에 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-250">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="96bac-251">각 매개 변수의 형식은 괄호를 사용하여 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-251">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="96bac-252">예를 들어 `Path="[(sys:Int32)42,(sys:Int32)24]"`를 사용할 수 있으며 여기서 `sys`는 `System` 네임스페이스에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-252">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="96bac-253">소스가 컬렉션 뷰인 경우 슬래시(/)를 사용하여 현재 항목을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-253">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="96bac-254">예를 들어 `Path=/` 절은 뷰의 현재 항목에 대한 바인딩을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-254">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="96bac-255">소스가 컬렉션인 경우 이 구문은 기본 컬렉션 뷰의 현재 항목을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-255">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="96bac-256">속성 이름과 슬래시를 결합하여 컬렉션인 속성을 트래버스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-256">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="96bac-257">예를 들어 `Path=/Offices/ManagerName`은 소스 컬렉션의 현재 항목을 지정하며 여기에는 컬렉션인 `Offices` 속성이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-257">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="96bac-258">현재 항목은 `ManagerName` 속성을 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-258">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="96bac-259">필요에 따라 마침표(.) 경로를 사용하여 현재 소스에 바인딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-259">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="96bac-260">예를 들어 `Text="{Binding}"`은 `Text="{Binding Path=.}"`와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-260">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="96bac-261">경로 구문에 대 한 자세한 내용은 [바인딩 선언 개요](~/docs/framework/wpf/data/binding-declarations-overview.md) 하거나 [PropertyPath XAML 구문](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-261">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="96bac-262">에 대 한 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 바인딩을 참조는 <xref:System.Windows.Data.Binding.XPath%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-262">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="96bac-263">전체 개체에 바인딩할 필요가 없습니다 지정 하는 <xref:System.Windows.Data.Binding.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-263">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="96bac-264">자세한 내용은 "를 지정 하는 경로 값에"를 참조 하세요 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-264">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bac-265">다음 예제에서는 만든 스타일 트리거는 <xref:System.Windows.Controls.ToolTip> 유효성 검사 오류 메시지를 보고 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-265">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="96bac-266">Setter 값 현재 오류 콘텐츠에 바인딩합니다 <xref:System.Windows.Controls.TextBox> (합니다 <xref:System.Windows.Controls.TextBox> 스타일을 사용 하)를 사용 하 여는 <xref:System.Windows.Data.Binding.RelativeSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-266">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="96bac-267">이 예제에 대 한 자세한 내용은 참조 하세요. [방법: 바인딩 유효성 검사 구현](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-267">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSource : System.Windows.Data.RelativeSource with get, set" Usage="System.Windows.Data.Binding.RelativeSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-268">바인딩 대상의 위치를 기준으로 해당 위치를 지정하여 바인딩 소스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-268">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span></span></summary>
        <value><span data-ttu-id="96bac-269">사용할 바인딩 소스의 상대 위치를 지정하는 <see cref="T:System.Windows.Data.RelativeSource" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-269">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span></span> <span data-ttu-id="96bac-270">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-270">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-271">이 속성은 개체의 속성 중 하나는 동일 개체의 다른 속성에 바인딩할 하거나 스타일 또는 템플릿에서 바인딩을 정의 하는 데 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-271">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="96bac-272">바인딩은 기본적으로 지정 된 데이터 컨텍스트를 상속 된 `DataContext` 속성에 설정 된 경우.</span><span class="sxs-lookup"><span data-stu-id="96bac-272">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="96bac-273">그러나를 <xref:System.Windows.Data.Binding.RelativeSource%2A> 속성은 소스를 명시적으로 설정할 수 있습니다 하는 방법 중 하나를 <xref:System.Windows.Data.Binding> 상속 된 데이터 컨텍스트를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-273">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="96bac-274">자세한 내용은 [방법: 바인딩 소스 지정](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-274">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="96bac-275">합니다 <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> 속성 또한을 사용 하면 바인딩 원본을 설정 하려면 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-275">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="96bac-276">그러나 세 가지 속성 중 하나만 <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, 및 <xref:System.Windows.Data.Binding.RelativeSource%2A>집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-276">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="96bac-277">이 속성에 바인딩 원본 충돌이 발생 하는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-277">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="96bac-278">에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보를 참조 하세요 [RelativeSource 태그 확장](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-278">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="96bac-279">다음 예제에서는 만든 스타일 트리거는 <xref:System.Windows.Controls.ToolTip> 유효성 검사 오류 메시지를 보고 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-279">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="96bac-280">Setter 값 현재 오류 콘텐츠에 바인딩합니다 <xref:System.Windows.Controls.TextBox> (합니다 <xref:System.Windows.Controls.TextBox> 스타일을 사용 하)를 사용 하 여는 <xref:System.Windows.Data.Binding.RelativeSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-280">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="96bac-281">이 예제에 대 한 자세한 내용은 참조 하세요. [방법: 바인딩 유효성 검사 구현](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-281">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="96bac-282">전체 예제를 보려면 [바인딩 유효성 검사 샘플](https://go.microsoft.com/fwlink/?LinkID=159972)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-282">To see the full example, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96bac-283">이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-283">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="96bac-284">제거할 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-284">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="96bac-285"><see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-285">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-286">이 메서드는에 연결 된 이벤트 사용을 지원 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-286">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96bac-287">이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-287">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="96bac-288">제거할 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-288">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="96bac-289"><see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-289">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-290">이 메서드는에 연결 된 이벤트 사용을 지원 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-290">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetXmlNamespaceManager : System.Windows.DependencyObject * System.Xml.XmlNamespaceManager -&gt; unit" Usage="System.Windows.Data.Binding.SetXmlNamespaceManager (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="96bac-291">네임스페이스 정보를 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-291">The object from which to get namespace information.</span></span></param>
        <param name="value"><span data-ttu-id="96bac-292">전달된 요소에서 네임스페이스 평가에 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-292">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span></span></param>
        <summary><span data-ttu-id="96bac-293">지정된 요소에 연결된 바인딩에 사용되는 네임스페이스 관리자 개체를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-293">Sets a namespace manager object used by the binding attached to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-294">이 메서드는 연결 된 속성 사용에 대 한 지원의 <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-294">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96bac-295"><paramref name="target" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-295"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePath : unit -&gt; bool" Usage="binding.ShouldSerializePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bac-296"><see cref="P:System.Windows.Data.Binding.Path" /> 속성을 유지해야 하는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-296">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="96bac-297">속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-297"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-298">이 `ShouldSerialize` 때문에 메서드가 제공 됩니다는 <xref:System.Windows.Data.Binding.Path%2A> 속성에는 간단한 기본 값이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-298">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="96bac-299">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-299">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="96bac-300">에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출 합니다 <xref:System.Windows.Data.Binding> 통합 하는 고유한 컨트롤을 개발 하거나는 <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="96bac-300">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSource : unit -&gt; bool" Usage="binding.ShouldSerializeSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bac-301"><see cref="P:System.Windows.Data.Binding.Source" /> 속성을 유지해야 하는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-301">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="96bac-302">속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-302"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-303">이 `ShouldSerialize` 때문에 메서드가 제공 됩니다는 <xref:System.Windows.Data.Binding.Source%2A> 속성에는 간단한 기본 값이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-303">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="96bac-304">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-304">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="96bac-305">에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출 합니다 <xref:System.Windows.Data.Binding> 통합 하는 고유한 컨트롤을 개발 하거나는 <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="96bac-305">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="binding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bac-306"><see cref="P:System.Windows.Data.Binding.ValidationRules" /> 속성을 유지해야 하는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-306">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="96bac-307">속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-307"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-308">이 `ShouldSerialize` 때문에 메서드가 제공 됩니다는 <xref:System.Windows.Data.Binding.ValidationRules%2A> 속성에는 간단한 기본 값이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-308">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="96bac-309">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-309">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="96bac-310">에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출 합니다 <xref:System.Windows.Data.Binding> 통합 하는 고유한 컨트롤을 개발 하거나는 <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="96bac-310">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.Data.Binding.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-311">바인딩 소스로 사용할 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-311">Gets or sets the object to use as the binding source.</span></span></summary>
        <value><span data-ttu-id="96bac-312">바인딩 소스로 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-312">The object to use as the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-313">바인딩은 기본적으로 지정 된 데이터 컨텍스트를 상속 된 `DataContext` 속성에 설정 된 경우.</span><span class="sxs-lookup"><span data-stu-id="96bac-313">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="96bac-314">그러나를 <xref:System.Windows.Data.Binding.Source%2A> 속성은 소스를 명시적으로 설정할 수 있습니다 하는 방법 중 하나를 <xref:System.Windows.Data.Binding> 상속 된 데이터 컨텍스트를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-314">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="96bac-315">범위를 설정 하는 기능을 수행 해야 하는 경우 동일한 데이터 컨텍스트를 상속 하는 몇 가지 속성, 사용할 수는 <xref:System.Windows.Data.Binding.Source%2A> 속성 대신는 `DataContext` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-315">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="96bac-316">합니다 <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> 속성 또한을 사용 하면 바인딩 원본을 설정 하려면 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-316">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="96bac-317">그러나 세 가지 속성 중 하나만 <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, 및 <xref:System.Windows.Data.Binding.RelativeSource%2A>집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-317">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="96bac-318">이 속성에 바인딩 원본 충돌이 발생 하는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-318">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="96bac-319">이 속성을 지우려면로 설정 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-319">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="96bac-320">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="96bac-320">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="96bac-321">XAML 값</span><span class="sxs-lookup"><span data-stu-id="96bac-321">XAML Values</span></span>  
 <span data-ttu-id="96bac-322">*object*</span><span class="sxs-lookup"><span data-stu-id="96bac-322">*object*</span></span>  
 <span data-ttu-id="96bac-323">기존 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-323">An existing object.</span></span> <span data-ttu-id="96bac-324">기존 개체를 참조 하려면 사용 된 [StaticResource 태그 확장](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="96bac-324">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bac-325">다음 예에서는 `Person` 이라는 문자열 속성을 사용 하 여 개체 `PersonName` 에 정의 된는 `SDKSample` 네임 스페이스를 강조 표시 된 줄은 첫 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-325">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="96bac-326">포함 하는 강조 표시 된 줄에는 `<src>` 인스턴스화할 요소는 `Person` 개체를 `PersonName` 속성 값 `Joe`.</span><span class="sxs-lookup"><span data-stu-id="96bac-326">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="96bac-327">이렇게 합니다 `Resources` 섹션 및 할당을 `x:Key`합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-327">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="96bac-328">포함 하는 강조 표시 된 줄을 `<TextBlock>` 요소에 바인딩하는 방법을 보여 줍니다는 `PersonName` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-328">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="96bac-329">결과적으로 <xref:System.Windows.Controls.TextBlock> "Joe" 값을 사용 하 여 컨트롤이 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-329">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="96bac-330">다음 예에서 합니다 <xref:System.Windows.Data.Binding.Source%2A> 값을 <xref:System.Windows.Data.Binding> 개체가으로 설정 됩니다는 `static` 속성 <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="96bac-330">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="96bac-331">전체 예제를 참조 하세요 [데이터 바인딩 데모](https://go.microsoft.com/fwlink/?LinkID=163703)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-331">For the full example, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" Usage="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96bac-332"><see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> 값이 <see langword="true" />로 설정된 바인딩에 대해서만 값이 바인딩 대상에서 바인딩 소스로 전송되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-332">Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SourceUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96bac-333">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="96bac-333">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96bac-334">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="96bac-334">Identifier field</span></span>|<xref:System.Windows.Data.Binding.SourceUpdatedEvent>|  
|<span data-ttu-id="96bac-335">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="96bac-335">Routing strategy</span></span>|<span data-ttu-id="96bac-336">버블링</span><span class="sxs-lookup"><span data-stu-id="96bac-336">Bubbling</span></span>|  
|<span data-ttu-id="96bac-337">대리자</span><span class="sxs-lookup"><span data-stu-id="96bac-337">Delegate</span></span>|<span data-ttu-id="96bac-338"><xref:System.EventHandler%601>에서 제한 <xref:System.Windows.Data.DataTransferEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-338"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-339"><see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-339">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" Usage="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96bac-340"><see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> 값이 <see langword="true" />로 설정된 바인딩에 대해서만 값이 바인딩 소스에서 바인딩 대상으로 전송될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-340">Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TargetUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96bac-341">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="96bac-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96bac-342">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="96bac-342">Identifier field</span></span>|<xref:System.Windows.Data.Binding.TargetUpdatedEvent>|  
|<span data-ttu-id="96bac-343">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="96bac-343">Routing strategy</span></span>|<span data-ttu-id="96bac-344">버블링</span><span class="sxs-lookup"><span data-stu-id="96bac-344">Bubbling</span></span>|  
|<span data-ttu-id="96bac-345">대리자</span><span class="sxs-lookup"><span data-stu-id="96bac-345">Delegate</span></span>|<span data-ttu-id="96bac-346"><xref:System.EventHandler%601>에서 제한 <xref:System.Windows.Data.DataTransferEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-346"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-347"><see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-347">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-348">바인딩 소스 값을 업데이트하는 동안 바인딩 엔진에서 발생하는 예외를 처리하기 위한 사용자 지정 논리를 제공하는 데 사용할 수 있는 처리기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-348">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span> <span data-ttu-id="96bac-349">이는 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />을 바인딩과 연결한 경우에만 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-349">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span></span></summary>
        <value><span data-ttu-id="96bac-350">바인딩 소스 값을 업데이트하는 동안 바인딩 엔진에서 발생하는 예외를 처리하기 위한 사용자 지정 논리를 제공하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-350">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-351"><xref:System.Windows.Controls.ExceptionValidationRule> 바인딩 소스 속성을 업데이트 하는 동안 throw 된 예외를 검사 하는 기본 제공 유효성 검사 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-351">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="96bac-352">연결한 경우 합니다 <xref:System.Windows.Controls.ExceptionValidationRule> 사용 하 여 프로그램 <xref:System.Windows.Data.Binding> 개체를 이러한 예외를 처리 하는 것에 대 한 사용자 지정 논리를 제공 하는 처리기를 설정 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-352">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="96bac-353">경우는 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 에 지정 되어 있지는 <xref:System.Windows.Data.Binding>, 바인딩 엔진에서 만드는 <xref:System.Windows.Controls.ValidationError> 예외를 사용 하 여에 추가 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 바인딩된 요소의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-353">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bac-354">합니다 <xref:System.Windows.Controls.TextBox.Text%2A> 속성 중 <xref:System.Windows.Controls.TextBox> 소스 속성에 데이터 바인딩된 `Age3` 형식의 `int`합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-354">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="96bac-355"><xref:System.Windows.Controls.ExceptionValidationRule> 원본 속성 (예: 사용자가 값을 정수로 변환할 수 없는) 업데이트 하는 동안 throw 된 예외에 대해 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-355">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="96bac-356">이러한 예외를 처리 하는 사용자 지정 논리를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-356">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="96bac-357">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 속성을 설정 하는 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-357">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="96bac-358">다음은 예제 구현의 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-358">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="96bac-359">합니다 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> 반환할 수도 있습니다 `null`, 자체 예외 또는 <xref:System.Windows.Controls.ValidationError>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-359">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="96bac-360">자세한 내용은 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bac-360">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="96bac-361">전체 샘플을 참조 하세요 [바인딩 유효성 검사 샘플](https://go.microsoft.com/fwlink/?LinkID=159972)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-361">For the complete sample, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-362">바인딩 소스 업데이트의 타이밍을 결정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-362">Gets or sets a value that determines the timing of binding source updates.</span></span></summary>
        <value><span data-ttu-id="96bac-363"><see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-363">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span></span> <span data-ttu-id="96bac-364">기본값은 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />이며, 대상 종속성 속성의 기본 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-364">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span></span> <span data-ttu-id="96bac-365">그러나 대부분의 종속성 속성 기본값이 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />인 반면 <see cref="P:System.Windows.Controls.TextBox.Text" /> 속성은 기본값이 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-365">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span></span>  
  
<span data-ttu-id="96bac-366">종속성 속성의 기본 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 값을 프로그래밍 방식으로 결정하려면 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />를 사용하여 속성의 속성 메타데이터를 가져온 후 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 속성의 값을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-366">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-367">바인딩 <xref:System.Windows.Data.BindingMode.TwoWay> 또는 <xref:System.Windows.Data.BindingMode.OneWayToSource> 대상 속성의 변경 내용을 수신 대기 하 고 소스에 다시 전파 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-367">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="96bac-368">이를 소스 업데이트라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-368">This is known as updating the source.</span></span> <span data-ttu-id="96bac-369">일반적으로 이러한 업데이트는 대상 속성이 변경 될 때마다 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-369">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="96bac-370">확인란 및 기타 간단한 컨트롤에 대 한이 경우 것만 일반적으로 텍스트 필드에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-370">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="96bac-371">모든 키 입력에는 성능이 저하 될 수 있습니다 하 고 새 값으로 커밋하기 전에 입력 오류를 수정 하 고 백스페이스 수 일반적인 사용자 거부 후 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-371">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="96bac-372">따라서 기본값 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 의 값을 <xref:System.Windows.Controls.TextBox.Text%2A> 속성은 <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> 아니라 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-372">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="96bac-373">설정 하는 경우는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 값을 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>를 호출 해야 합니다는 <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> 메서드 또는 변경 내용이 다시 소스에 전파 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-373">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-374"><see cref="T:System.Windows.Controls.DataErrorValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-374">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="96bac-375"><see cref="T:System.Windows.Controls.DataErrorValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-375"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-376">사용 하는 대신 제공이 속성을 설정 합니다 <xref:System.Windows.Controls.DataErrorValidationRule> 요소가 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-376">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="96bac-377">합니다 <xref:System.Windows.Controls.DataErrorValidationRule> 에서 발생 하는 오류를 검사 하는 기본 제공 유효성 검사 규칙을 <xref:System.ComponentModel.IDataErrorInfo> 소스 개체의 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-377">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="96bac-378">바인딩 엔진에서 만드는 오류가 발생 하는 경우는 <xref:System.Windows.Controls.ValidationError> 오류로 추가 합니다 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 바인딩된 요소의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-378">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="96bac-379">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 의견을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-379">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="96bac-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="96bac-381">자세한 내용은 [.NET Framework 버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bac-381">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bac-382">다음 예제에서는 <xref:System.ComponentModel.IDataErrorInfo> 하 고 <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> 에서 사용자 입력의 유효성을 검사 하는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-382">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="96bac-383">첫 번째 예제를 구현 하는 데이터 형식을 만듭니다 <xref:System.ComponentModel.IDataErrorInfo> 유효성 검사 오류를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-383">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="96bac-384">다음 예제에서는 `Age` 속성을를 <xref:System.Windows.Controls.TextBox> 설정 <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> 에 `true` 에 <xref:System.Windows.Data.Binding>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-384">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="96bac-385">빨간색 테두리가 나타나는 사용자가 잘못 된 값을 입력 합니다 <xref:System.Windows.Controls.TextBox> 하며 <xref:System.Windows.Controls.ToolTip> 오류 메시지를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-385">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-386"><see cref="T:System.Windows.Controls.ExceptionValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-386">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="96bac-387"><see cref="T:System.Windows.Controls.ExceptionValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-387"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-388">사용 하는 대신 제공이 속성을 설정 합니다 <xref:System.Windows.Controls.ExceptionValidationRule> 요소가 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-388">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="96bac-389"><xref:System.Windows.Controls.ExceptionValidationRule> 원본 속성을 업데이트 하는 동안 throw 된 예외를 검사 하는 기본 제공 유효성 검사 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-389">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="96bac-390">예외가 throw 되 면 바인딩 엔진에서 만드는 <xref:System.Windows.Controls.ValidationError> 예외를 사용 하 여 추가 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 바인딩된 요소의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-390">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="96bac-391">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 의견을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-391">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="96bac-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="96bac-393">자세한 내용은 [.NET Framework 버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bac-393">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bac-394">다음 예에서는 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> 에서 사용자 입력의 유효성을 검사 하는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-394">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="96bac-395">첫 번째 예제에서는 예외가 throw 되는 데이터 형식을 만듭니다 때는 `Age` 속성이 잘못 된 속성으로 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-395">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="96bac-396">다음 예제에서는 `Age` 속성을를 <xref:System.Windows.Controls.TextBox> 설정 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> 에 `true` 에 <xref:System.Windows.Data.Binding>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-396">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="96bac-397">빨간색 테두리가 나타나는 사용자가 잘못 된 값을 입력 합니다 <xref:System.Windows.Controls.TextBox> 하며 <xref:System.Windows.Controls.ToolTip> 오류 메시지를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-397">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-398"><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-398">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="96bac-399"><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-399"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="96bac-400">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-400">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-401">때 <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> 됩니다 `true`, 바인딩을 확인 하 고 구현 하는 데이터 소스에 의해 발생 하는 오류를 보고 <xref:System.ComponentModel.INotifyDataErrorInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-401">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.Binding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-402">사용자 입력의 유효성을 검사하는 규칙 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-402">Gets a collection of rules that check the validity of the user input.</span></span></summary>
        <value><span data-ttu-id="96bac-403"><see cref="T:System.Windows.Controls.ValidationRule" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-403">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-404">합니다 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 데이터 바인딩 모델에 연결할 수 있습니다 <xref:System.Windows.Data.Binding.ValidationRules%2A> 사용 하 여 프로그램 <xref:System.Windows.Data.Binding> 또는 <xref:System.Windows.Data.MultiBinding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-404">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="96bac-405">파생 하 여 사용자 지정 규칙을 만들 수 있습니다 합니다 <xref:System.Windows.Controls.ValidationRule> 클래스 및 구현 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용할 수 있습니다 기본 제공 <xref:System.Windows.Controls.ExceptionValidationRule>, 원본 업데이트 중 예외가 있는 경우 값을 무효화 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-405">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="96bac-406">바인딩 엔진에서는 각 검사 <xref:System.Windows.Controls.ValidationRule> 는 입력된 값 (바인딩 대상 속성 값) 바인딩 소스 속성으로 전송 될 때마다 바인딩과 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-406">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="96bac-407">유효성 검사 프로세스의 자세한 내용은 데이터 유효성 검사 섹션을 참조 합니다 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-407">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bac-408">이 속성 설정할 수 있습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 표시 된 컬렉션 구문을 사용 해야만 또는 컬렉션 개체를 액세스 및와 같은 여러 메서드를 사용 하 여 `Add`입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-408">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="96bac-409">컬렉션 개체에 액세스 하려면 속성은 읽기 전용 컬렉션 자체는 읽기-쓰기 이지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-409">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="96bac-410">XAML 속성 요소 사용</span><span class="sxs-lookup"><span data-stu-id="96bac-410">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="96bac-411">XAML 값</span><span class="sxs-lookup"><span data-stu-id="96bac-411">XAML Values</span></span>  
 <span data-ttu-id="96bac-412">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="96bac-412">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="96bac-413">하나 이상의 <xref:System.Windows.Controls.ValidationRule> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-413">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="96bac-414">사용할 수는 <xref:System.Windows.Controls.ExceptionValidationRule> 클래스 또는 서브클래싱하 여 사용자 지정 규칙을 만들는 <xref:System.Windows.Controls.ValidationRule> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-414">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="F#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" Usage="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96bac-415">XML 바인딩의 네임스페이스가 인식하는 <see langword="XPath" /> 쿼리를 수행하는 데 사용되는 <see cref="T:System.Xml.XmlNamespaceManager" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-415">Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware <see langword="XPath" /> queries in XML bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-416">이 연결 된 속성에 있는 네임 스페이스 상속 동작을 재현 하는 속성 값 상속을 사용 하 여 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-416">This attached property uses property value inheritance, which reproduces the behavior of namespace inheritance that is present in [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)].</span></span> <span data-ttu-id="96bac-417">자세한 내용은 [속성 값 상속](~/docs/framework/wpf/advanced/property-value-inheritance.md)을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bac-417">For details, see [Property Value Inheritance](~/docs/framework/wpf/advanced/property-value-inheritance.md).</span></span>  
  
<a name="dependencyPropertyInfo_XmlNamespaceManager"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="96bac-418">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="96bac-418">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96bac-419">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="96bac-419">Identifier field</span></span>|<xref:System.Windows.Data.Binding.XmlNamespaceManagerProperty>|  
|<span data-ttu-id="96bac-420">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="96bac-420">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XmlNamespaceManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-421"><see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 연결된 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-421">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Windows.Data.Binding.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bac-422">사용할 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 바인딩 소스에서 값을 반환하는 <see langword="XPath" /> 쿼리를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-422">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span></span></summary>
        <value><span data-ttu-id="96bac-423"><see langword="XPath" /> 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-423">The <see langword="XPath" /> query.</span></span> <span data-ttu-id="96bac-424">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-424">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bac-425">바인딩 소스 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 대신 데이터를 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 개체를 <xref:System.Windows.Data.Binding.XPath%2A> 속성 대신 사용 됩니다는 <xref:System.Windows.Data.Binding.Path%2A> 경로를 사용 하 여 바인딩 소스 값을 나타내는 속성을 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-425">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="96bac-426">설정 하 여는 <xref:System.Windows.Data.Binding.XPath%2A> 만들려는 속성을 `XPath` 노드 또는 노드 컬렉션을 선택 하는 쿼리 (<xref:System.Xml.XmlElement?displayProperty=nameWithType> 및 <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> 에서 파생 <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="96bac-426">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="96bac-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 개체를 사용 하 여 해당 속성에 바인딩할 수 있습니다는 <xref:System.Windows.Data.Binding.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="96bac-428"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 메서드 핸들을 `XPath` 식에서는 <xref:System.Windows.Data.Binding.XPath%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-428">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="96bac-429">`XPath` 함수가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-429">`XPath` functions are not supported.</span></span> <span data-ttu-id="96bac-430">에 대 한 `XPath` 식 내용은 참조는 <xref:System.Xml.XmlNode.SelectNodes%2A> 설명서 및 예제 단원에 제공 하는 몇 가지 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-430">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="96bac-431">LINQ to XML 개체 <xref:System.Xml.Linq.XDocument> 하 고 <xref:System.Xml.Linq.XElement> 사용 하지 않는 `XPath`합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-431">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="96bac-432">자세한 내용은 [방법: XDocument, XElement 또는 LINQ for XML 쿼리 결과에 바인딩](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bac-432">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>