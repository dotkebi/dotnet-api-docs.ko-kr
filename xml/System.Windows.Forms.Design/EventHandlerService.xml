<Type Name="EventHandlerService" FullName="System.Windows.Forms.Design.EventHandlerService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d08bb61d580b54d16d28dbe53ab42b4e10090d6b" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56388772" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventHandlerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.EventHandlerService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerService sealed" />
  <TypeSignature Language="F#" Value="type EventHandlerService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="55abe-101">현재 문서의 이벤트 처리기를 관리하는 체계적인 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-101">Provides a systematic way to manage event handlers for the current document.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55abe-102">개발자는 특정 유형의 이벤트를 처리 하는 한 곳에서 코드를 작성할 수 있게 되기를 원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-102">Developers may want to be able to write code in one place that handles events of a certain type.</span></span>  
  
 <span data-ttu-id="55abe-103">또한 개발자가 전역적으로 특정 이벤트 또는 디자이너 구성 요소 간에 분산 될 수 있는 이벤트의 형식에 대 한 처리기의 동작을 변경 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-103">Also, developers may need to globally change the behavior of the handlers for specific events or types of events, which may be distributed among designer components.</span></span>  
  
 <span data-ttu-id="55abe-104">일반적인 프로젝트에 대 한 디자이너는 다양 한 개체 목록 및 공통 위치에서 이러한 이벤트에 대 한 참조를 저장 하는 데 유용 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-104">The designers for a typical project are many different objects so it can be useful to list and store reference to these events from a common place.</span></span>  
  
 <span data-ttu-id="55abe-105">이 서비스는 이벤트 처리기의 현재 집합을 포함 하는 "이벤트 스택"을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-105">This service implements an "event stack" that contains the current set of event handlers.</span></span> <span data-ttu-id="55abe-106">스택에서 스택의 다양 한 다른 유형의 처리기 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-106">The stack may have a variety of different types of handlers on the stack.</span></span>  
  
 <span data-ttu-id="55abe-107">예를 들어 디자이너에 푸시할 수도 키보드 처리기 및 마우스 처리기를 스택에 추가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-107">For example, a designer might push, or add, a keyboard handler and a mouse handler onto the stack.</span></span> <span data-ttu-id="55abe-108">디자이너 이벤트 처리기를 요청 하면 서비스 요청한 클래스와 일치 하는 스택의 맨 위에 있는 처리기를 찾이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-108">When a designer requests an event handler, the service will find the topmost handler on the stack that matches the class you requested.</span></span>  
  
 <span data-ttu-id="55abe-109">이러한 방식으로 서비스는 모든 이벤트 스키마를 확장할 수 있습니다 하 고 특정 유형의 이벤트 처리기를 바꿀 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-109">This way the service can be extended to any eventing scheme, and it also allows specific types of event handlers to be replaced.</span></span> <span data-ttu-id="55abe-110">예를 들어 메뉴 이벤트 처리기 또는 키보드 이벤트 처리기를 영향을 주지 않고 마우스 이벤트 처리기를 바꿀 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-110">For example, you can replace mouse event handlers without affecting menu event handlers or keyboard event handlers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerService (System.Windows.Forms.Control focusWnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control focusWnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (focusWnd As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerService(System::Windows::Forms::Control ^ focusWnd);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.EventHandlerService : System.Windows.Forms.Control -&gt; System.Windows.Forms.Design.EventHandlerService" Usage="new System.Windows.Forms.Design.EventHandlerService focusWnd" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="focusWnd" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="focusWnd"><span data-ttu-id="55abe-111">디자인되고 있는 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-111">The <see cref="T:System.Windows.Forms.Control" /> which is being designed.</span></span></param>
        <summary><span data-ttu-id="55abe-112"><see cref="T:System.Windows.Forms.Design.EventHandlerService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandlerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EventHandlerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EventHandlerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventHandlerChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ EventHandlerChanged;" />
      <MemberSignature Language="F#" Value="member this.EventHandlerChanged : EventHandler " Usage="member this.EventHandlerChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Forms.Design.IEventHandlerService.EventHandlerChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55abe-113">OnEventHandlerChanged 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-113">Fires an OnEventHandlerChanged event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control FocusWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control FocusWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusWindow As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ FocusWindow { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusWindow : System.Windows.Forms.Control" Usage="System.Windows.Forms.Design.EventHandlerService.FocusWindow" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Design.IEventHandlerService.FocusWindow</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55abe-114">이벤트 처리기가 연결되는 컨트롤을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-114">Gets the control to which event handlers are attached.</span></span></summary>
        <value><span data-ttu-id="55abe-115">생성자를 통해 연결된 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-115">The <see cref="T:System.Windows.Forms.Control" /> which was attached through the constructor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public object GetHandler (Type handlerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetHandler(class System.Type handlerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHandler (handlerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetHandler(Type ^ handlerType);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : Type -&gt; obj&#xA;override this.GetHandler : Type -&gt; obj" Usage="eventHandlerService.GetHandler handlerType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Design.IEventHandlerService.GetHandler(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="handlerType"><span data-ttu-id="55abe-116">가져올 처리기의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-116">The type of the handler to get.</span></span></param>
        <summary><span data-ttu-id="55abe-117">지정된 형식의 현재 활성 이벤트 처리기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-117">Gets the currently active event handler of the specified type.</span></span></summary>
        <returns><span data-ttu-id="55abe-118">처리기의 인스턴스이거나, 요청된 형식의 처리기가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-118">An instance of the handler, or <see langword="null" /> if there is no handler of the requested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55abe-119">다른 구성 요소는 임의로 변경할 수 있으므로이 값을 캐시 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-119">You should never cache this value because other components are free to change it.</span></span> <span data-ttu-id="55abe-120">그러나이 호출은 상당히 빠른는 동일한 유형의 처리기 요청 항상 하는 경우에 특히 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-120">This call is fairly quick, however, especially for cases when you are always asking for the same type of handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopHandler">
      <MemberSignature Language="C#" Value="public void PopHandler (object handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopHandler(object handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopHandler (handler As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PopHandler(System::Object ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member PopHandler : obj -&gt; unit&#xA;override this.PopHandler : obj -&gt; unit" Usage="eventHandlerService.PopHandler handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Design.IEventHandlerService.PopHandler(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="55abe-121">스택에서 제거할 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-121">The handler to remove from the stack.</span></span></param>
        <summary><span data-ttu-id="55abe-122">지정된 처리기를 스택에서 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-122">Pops the given handler off of the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55abe-123">처리기를 스택의 맨 위 구성 요소가 없는 경우 모든 처리기를 등록 및 포함 하 여 처리기를 팝 합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-123">If the handler is not the topmost component on the stack, this will pop all handlers up to and including handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushHandler">
      <MemberSignature Language="C#" Value="public void PushHandler (object handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushHandler(object handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushHandler (handler As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushHandler(System::Object ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member PushHandler : obj -&gt; unit&#xA;override this.PushHandler : obj -&gt; unit" Usage="eventHandlerService.PushHandler handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Design.IEventHandlerService.PushHandler(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="55abe-124">스택에 추가할 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-124">The handler to add to the stack.</span></span></param>
        <summary><span data-ttu-id="55abe-125">새 이벤트 처리기를 스택에 푸시합니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-125">Pushes a new event handler on the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55abe-126">이 처리기는 호환 되는 처리기 종류를 요청 하는 모든 구성 요소에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-126">This handler will be used by all components that request a compatible handler type.</span></span> <span data-ttu-id="55abe-127">이 처리기는 요청된 된 형식을 지원 하지 않으면, 스택에서 다음 처리기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55abe-127">If this handler does not support the requested type, the next handler on the stack will be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>