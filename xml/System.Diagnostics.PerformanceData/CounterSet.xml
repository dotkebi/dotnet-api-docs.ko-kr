<Type Name="CounterSet" FullName="System.Diagnostics.PerformanceData.CounterSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a468e51b20f449850c39d2e0c266331b85d89a36" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56785117" /></Metadata><TypeSignature Language="C#" Value="public class CounterSet : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CounterSet extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceData.CounterSet" />
  <TypeSignature Language="VB.NET" Value="Public Class CounterSet&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CounterSet : IDisposable" />
  <TypeSignature Language="F#" Value="type CounterSet = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="02198-101">논리 카운터 집합을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-101">Defines a set of logical counters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02198-102">호출 된 <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> 메서드 했으면 해당 공급자의 등록을 제거 하 고 모든 릴리스 관리 및 관리 되지 않는 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="02198-102">Call the <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> method when you are finished to remove your provider's registration and to release all managed and unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02198-103">예제를 보려면 <xref:System.Diagnostics.PerformanceData>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="02198-103">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid providerGuid, valuetype System.Guid counterSetGuid, valuetype System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerGuid As Guid, counterSetGuid As Guid, instanceType As CounterSetInstanceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CounterSet(Guid providerGuid, Guid counterSetGuid, System::Diagnostics::PerformanceData::CounterSetInstanceType instanceType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceData.CounterSet : Guid * Guid * System.Diagnostics.PerformanceData.CounterSetInstanceType -&gt; System.Diagnostics.PerformanceData.CounterSet" Usage="new System.Diagnostics.PerformanceData.CounterSet (providerGuid, counterSetGuid, instanceType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerGuid" Type="System.Guid" />
        <Parameter Name="counterSetGuid" Type="System.Guid" />
        <Parameter Name="instanceType" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" />
      </Parameters>
      <Docs>
        <param name="providerGuid"><span data-ttu-id="02198-104">카운터 데이터의 공급자를 고유하게 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="02198-104">Guid that uniquely identifies the provider of the counter data.</span></span> <span data-ttu-id="02198-105">매니페스트에 지정된 GUID를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-105">Use the Guid specified in the manifest.</span></span></param>
        <param name="counterSetGuid"><span data-ttu-id="02198-106">공급자의 카운터 집합을 고유하게 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="02198-106">Guid that uniquely identifies the counter set for a provider.</span></span> <span data-ttu-id="02198-107">매니페스트에 지정된 GUID를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-107">Use the Guid specified in the manifest.</span></span></param>
        <param name="instanceType"><span data-ttu-id="02198-108">카운터 집합의 형식을 식별합니다. 예를 들어 카운터 집합이 단일 인스턴스인지 아니면 여러 인스턴스인지 여부를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-108">Identifies the type of the counter set, for example, whether the counter set is a single or multiple instance counter set.</span></span></param>
        <summary><span data-ttu-id="02198-109"><see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-109">Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02198-110">공급자를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-110">Registers your provider.</span></span> <span data-ttu-id="02198-111">호출 된 <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> 메서드 등록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-111">Calling the <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> method removes the registration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02198-112">예제를 보려면 <xref:System.Diagnostics.PerformanceData>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="02198-112">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InsufficientMemoryException"><span data-ttu-id="02198-113">메모리가 부족하여 작업을 완료할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="02198-113">Not enough memory is available to complete the operation.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="02198-114">Windows Vista 이전 버전이므로 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="02198-114">Not supported prior to Windows Vista.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02198-115">매개 변수 중 하나가 NULL이거나 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="02198-115">One of the parameters is NULL or not valid.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="02198-116">내부 Win32 함수 호출에 실패한 경우</span><span class="sxs-lookup"><span data-stu-id="02198-116">An underlying Win32 function call failed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCounter">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02198-117">카운터 집합에 카운터를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-117">Adds a counter to the counter set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCounter">
      <MemberSignature Language="C#" Value="public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCounter(int32 counterId, valuetype System.Diagnostics.PerformanceData.CounterType counterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCounter(int counterId, System::Diagnostics::PerformanceData::CounterType counterType);" />
      <MemberSignature Language="F#" Value="member this.AddCounter : int * System.Diagnostics.PerformanceData.CounterType -&gt; unit" Usage="counterSet.AddCounter (counterId, counterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" />
      </Parameters>
      <Docs>
        <param name="counterId"><span data-ttu-id="02198-118">카운터를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-118">Identifies the counter.</span></span> <span data-ttu-id="02198-119">매니페스트에서 카운터를 정의하는 데 사용한 것과 동일한 값을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-119">Use the same value that you used in the manifest to define the counter.</span></span></param>
        <param name="counterType"><span data-ttu-id="02198-120">카운터 형식을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-120">Identifies the counter type.</span></span> <span data-ttu-id="02198-121">카운터 형식은 카운터 데이터를 계산하고 평균을 구하여 표시하는 방법을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-121">The counter type determines how the counter data is calculated, averaged, and displayed.</span></span></param>
        <summary><span data-ttu-id="02198-122">지정된 카운터 식별자 및 형식을 사용하여 카운터 집합에 카운터를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-122">Adds a counter to the counter set by using the specified counter identifier and type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02198-123">카운터 집합의 인스턴스를 만들기 전에 카운터 집합에 카운터를 추가한 경우</span><span class="sxs-lookup"><span data-stu-id="02198-123">You must add counters to the counter set before creating an instance of the counter set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02198-124">카운터 식별자가 이미 집합에 있거나 음수이거나 NULL이거나 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="02198-124">The counter identifier already exists in the set or is negative, or the counter type is NULL or not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="02198-125">카운터 집합의 인스턴스를 만든 후 카운터 집합에 카운터를 추가한 경우</span><span class="sxs-lookup"><span data-stu-id="02198-125">You cannot add counters to the counter set after creating an instance of the counter set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCounter">
      <MemberSignature Language="C#" Value="public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCounter(int32 counterId, valuetype System.Diagnostics.PerformanceData.CounterType counterType, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCounter(int counterId, System::Diagnostics::PerformanceData::CounterType counterType, System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.AddCounter : int * System.Diagnostics.PerformanceData.CounterType * string -&gt; unit" Usage="counterSet.AddCounter (counterId, counterType, counterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterId"><span data-ttu-id="02198-126">카운터를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-126">Identifies the counter.</span></span> <span data-ttu-id="02198-127">매니페스트에서 카운터를 정의하는 데 사용한 것과 동일한 값을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-127">Use the same value that you used in the manifest to define the counter.</span></span></param>
        <param name="counterType"><span data-ttu-id="02198-128">카운터 형식을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-128">Identifies the counter type.</span></span> <span data-ttu-id="02198-129">카운터 형식은 카운터 데이터를 계산하고 평균을 구하여 표시하는 방법을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-129">The counter type determines how the counter data is calculated, averaged, and displayed.</span></span></param>
        <param name="counterName"><span data-ttu-id="02198-130">카운터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02198-130">Name of the counter.</span></span> <span data-ttu-id="02198-131">이 이름을 사용하여 카운터 집합 인스턴스에서 카운터를 인덱싱할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02198-131">You can use this name to index the counter in the counter set instance.</span></span> <span data-ttu-id="02198-132"><see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="02198-132">(See <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />.)</span></span></param>
        <summary><span data-ttu-id="02198-133">지정된 카운터 식별자, 카운터 형식 및 표시 이름을 사용하여 카운터 집합에 카운터를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-133">Adds a counter to the counter set by using the specified counter identifier and type and a display name for the counter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02198-134">카운터 집합의 인스턴스를 만들기 전에 카운터 집합에 카운터를 추가한 경우</span><span class="sxs-lookup"><span data-stu-id="02198-134">You must add counters to the counter set before creating an instance of the counter set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02198-135">예제를 보려면 <xref:System.Diagnostics.PerformanceData>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="02198-135">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02198-136">카운터 식별자가 이미 집합에 있거나 음수이거나 NULL이거나 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="02198-136">The counter identifier already exists in the set or is negative, or the counter type is NULL or not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="02198-137">카운터 집합의 인스턴스를 만든 후 카운터 집합에 카운터를 추가한 경우</span><span class="sxs-lookup"><span data-stu-id="02198-137">You cannot add counters to the counter set after creating an instance of the counter set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCounterSetInstance">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCounterSetInstance (instanceName As String) As CounterSetInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::PerformanceData::CounterSetInstance ^ CreateCounterSetInstance(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.CreateCounterSetInstance : string -&gt; System.Diagnostics.PerformanceData.CounterSetInstance" Usage="counterSet.CreateCounterSetInstance instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceData.CounterSetInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName"><span data-ttu-id="02198-138">인스턴스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02198-138">Name of the instance.</span></span> <span data-ttu-id="02198-139">이 이름은 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-139">The name must be unique.</span></span></param>
        <summary><span data-ttu-id="02198-140">카운터 집합의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="02198-140">Creates an instance of the counter set.</span></span></summary>
        <returns><span data-ttu-id="02198-141">카운터 데이터를 포함할 카운터 집합의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="02198-141">An instance of the counter set which will contain the counter data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02198-142">단일 인스턴스 카운터 집합과 하나 또는 회 다중 인스턴스 카운터 집합에 대 한이 메서드를 한 번 더 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-142">Call this method one time for single-instance counter sets and one or more times for multiple-instance counter sets.</span></span>  
  
 <span data-ttu-id="02198-143">공급자는 인스턴스를 만들 때 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-143">The provider determines when it creates an instance.</span></span> <span data-ttu-id="02198-144">카운터 데이터를 좀 더 정적 이면 공급자 초기화 시 인스턴스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02198-144">If the counter data is more static, the provider can create an instance at initialization time.</span></span> <span data-ttu-id="02198-145">예를 들어, 컴퓨터의 프로세서 수는 고려해 야 정적 프로세서에 대 한 카운터 데이터를 제공 하는 공급자 컴퓨터의 초기화 시에 각 프로세서에 대 한 인스턴스를 만들 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-145">For example, the number of processors on a computer would be considered static, so a provider that provides counter data for processors could create an instance for each processor on the computer at initialization time.</span></span> <span data-ttu-id="02198-146">더욱 동적 디스크와 같은 하거나 카운터를 처리 하는 카운터에 대 한 공급자 추가 될 새로운 USB 디바이스 또는 생성 되는 새 프로세스에 대 한 응답에 새 인스턴스가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="02198-146">For counters that are more dynamic, such as disk or process counters, the providers would create the new instances in response to a new USB device being added or a new process being created.</span></span>  
  
 <span data-ttu-id="02198-147">공급자는 데이터를 최신 버전 항상 카운터를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-147">The provider should keep the counter data up-to-date at all times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02198-148">예제를 보려면 <xref:System.Diagnostics.PerformanceData>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="02198-148">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02198-149">인스턴스 이름이 NULL인 경우</span><span class="sxs-lookup"><span data-stu-id="02198-149">The instance name is NULL.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="02198-150">카운터 집합의 인스턴스를 만들기 전에 카운터 집합에 카운터를 추가한 경우</span><span class="sxs-lookup"><span data-stu-id="02198-150">You must add counters to the counter set before creating an instance of the counter set.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02198-151">이 개체에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-151">Releases resources used by this object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="counterSet.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02198-152">이 개체에서 사용하는 관리되지 않는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-152">Releases all unmanaged resources used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="counterSet.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="02198-153">Dispose 메서드에서 호출된 경우 <see langword="True" />이고, 종료자에서 호출된 경우 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02198-153"><see langword="True" /> if this was called from the Dispose method, <see langword="False" /> if called from the finalizer.</span></span></param>
        <summary><span data-ttu-id="02198-154">이 개체에서 사용하는 관리되지 않는 모든 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-154">Releases all unmanaged resources used by this object and optionally release the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CounterSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CounterSet ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="counterSet.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02198-155">가비지 수집에서 개체를 회수해 넣기 전에 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="02198-155">Frees resources before the object is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02198-156">이 메서드는 런타임에 의해 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02198-156">This method is called automatically by the runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>