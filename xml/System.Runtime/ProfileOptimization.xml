<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0915ded9947c9a7c9b06996766715c6a3e2d1d19" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56352182" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e0cdc-101">이전 컴파일 중 생성된 프로필을 기반으로, 실행될 가능성이 높은 메서드에 대해 백그라운드 컴파일을 수행함으로써 JIT(just-in-time) 컴파일러를 필요로 하는 응용 프로그램에서 응용 프로그램 도메인의 시작 성능을 향상시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-101">Improves the startup performance of application domains in applications that require the just-in-time (JIT) compiler by performing background compilation of methods that are likely to be executed, based on profiles created during previous compilations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e0cdc-102">프로필 최적화에는 다중 코어 컴퓨터에 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-102">Profile optimization requires a multicore computer.</span></span> <span data-ttu-id="e0cdc-103">메서드는 다른 컴퓨터에서 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-103">The methods are ignored on other computers.</span></span>  
  
 <span data-ttu-id="e0cdc-104">애플리케이션 도메인에서 프로필 최적화를 시작 될 때마다 이전 사용 하는 동안 만들어진 프로필이 읽힙니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-104">Each time you initiate profile optimization in an application domain, the profile that was created during the previous use is read.</span></span> <span data-ttu-id="e0cdc-105">프로필의 정보는 시작 하는 동안 실행 될 가능성이 있는 메서드를 식별 하 여 백그라운드 컴파일 가이드에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-105">The information in the profile is used to guide background compilation by identifying the methods that are most likely to be executed during startup.</span></span> <span data-ttu-id="e0cdc-106">다중 코어 컴퓨터에서이 증가 가능성 메서드는 이미을 기본 애플리케이션 스레드는 JIT 컴파일러를 호출 하지 않아도 되도록 필요할 때 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-106">On multicore computers, this increases the chances that a method is already compiled by the time it is needed so that the main application thread does not have to call the JIT compiler.</span></span>  
  
 <span data-ttu-id="e0cdc-107">시작 하는 동안 사용 됩니다 방법에 대 한 최신 정보를 항상 포함 하도록 각 사용할 프로필 파일을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-107">The profile file is overwritten on each use, so it always contains the most recent information about which methods are used during startup.</span></span>  
  
 <span data-ttu-id="e0cdc-108">최적화 프로필 애플리케이션 도메인 시작에 제한 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-108">Optimization profiles are not restricted to application domain startup.</span></span> <span data-ttu-id="e0cdc-109">JIT 컴파일러를 많이 사용 해야 하는 모든 작업에 대 한 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-109">They can be used for any activity that will require heavy use of the JIT compiler.</span></span> <span data-ttu-id="e0cdc-110">이러한 각 작업에는 자체 프로필에 포함 되도록 애플리케이션 도메인에 대 한 여러 프로필을 유지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-110">You can maintain multiple profiles for an application domain so that each such activity has its own profile.</span></span>  
  
 <span data-ttu-id="e0cdc-111">호출 애플리케이션 도메인에서 최적화 프로필을 사용 해야 합니다는 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 메서드 프로필이 저장 된 폴더를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-111">To use optimization profiles in an application domain, you must call the <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> method and specify the folder where profiles are stored.</span></span> <span data-ttu-id="e0cdc-112">폴더가 이미 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-112">The folder must already exist.</span></span> <span data-ttu-id="e0cdc-113">프로필 사용을 시작 하려면 호출을 <xref:System.Runtime.ProfileOptimization.StartProfile%2A> 메서드 프로 파일의 파일 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-113">To begin using a profile, call the <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method and specify the file name of the profile.</span></span> <span data-ttu-id="e0cdc-114">파일 기록 되어 있지 않으면 이전에, 처음 사용할 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-114">If the file was not recorded previously, it is created on first use.</span></span> <span data-ttu-id="e0cdc-115">프로필을 만든 성능 혜택 첫 번째 시간이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-115">There is no performance benefit the first time a profile is created.</span></span>  
  
 <span data-ttu-id="e0cdc-116">프로필 최적화 메서드 실행 되는 순서를 변경 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-116">Profile optimization does not change the order in which methods are executed.</span></span> <span data-ttu-id="e0cdc-117">메서드는 백그라운드 스레드에서 실행 되지 않습니다. 메서드는 컴파일되지만 절대 호출 하는 경우이 단순히 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-117">Methods are not executed on the background thread; if a method is compiled but never called, it is simply not used.</span></span> <span data-ttu-id="e0cdc-118">프로필 파일을 손상 되었거나 (예를 들어 없기 때문에 폴더)에 지정된 된 폴더에 쓸 수 없는 경우, 프로그램 실행이 최적화 프로 파일링 하지 않고 계속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-118">If a profile file is corrupt or cannot be written to the specified folder (for example, because the folder does not exist), program execution continues without optimization profiling.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath"><span data-ttu-id="e0cdc-119">현재 응용 프로그램 도메인에 대한 프로필 파일이 저장되는 폴더의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-119">The full path to the folder where profile files are stored for the current application domain.</span></span></param>
        <summary><span data-ttu-id="e0cdc-120">현재 응용 프로그램 도메인에 대한 최적화 프로파일링을 사용하도록 설정하고 최적화 프로파일 파일이 저장되는 폴더를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-120">Enables optimization profiling for the current application domain, and sets the folder where the optimization profile files are stored.</span></span> <span data-ttu-id="e0cdc-121">단일 코어 컴퓨터에서 메서드는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-121">On a single-core computer, the method is ignored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cdc-122">호출 하기 전에이 메서드를 호출 해야 합니다 <xref:System.Runtime.ProfileOptimization.StartProfile%2A> 현재 애플리케이션 도메인에서 처음으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-122">You must call this method before you call the <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method for the first time in the current application domain.</span></span> <span data-ttu-id="e0cdc-123">호출 하는 경우 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 두 번 이상 동일한 애플리케이션 도메인에서 첫 번째 후 모든 호출은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-123">If you call <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> more than once in the same application domain, all calls after the first are ignored.</span></span>  
  
 <span data-ttu-id="e0cdc-124">지정한 폴더가 이미 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-124">The specified folder must already exist.</span></span> <span data-ttu-id="e0cdc-125">존재 하지 않는 경우이 메서드를 호출을 만들지 않고, 발생 프로 파일링 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-125">If it does not exist, calling this method does not create it, and no profiling occurs.</span></span>  
  
 <span data-ttu-id="e0cdc-126">다중 코어에 있지 않은 컴퓨터에서이 메서드는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-126">On computers that do not have multiple cores, this method is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e0cdc-127">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-127">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e0cdc-128">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-128">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile"><span data-ttu-id="e0cdc-129">사용할 프로필의 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-129">The file name of the profile to use.</span></span></param>
        <summary><span data-ttu-id="e0cdc-130">백그라운드 스레드에서 지정한 프로필 파일에 이전에 기록되었던 메서드의 JIT(just-in-time) 컴파일을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-130">Starts just-in-time (JIT) compilation of the methods that were previously recorded in the specified profile file, on a background thread.</span></span> <span data-ttu-id="e0cdc-131">현재 메서드 사용을 기록하는 프로세스를 시작합니다. 이 프로세스에서는 나중에 지정된 프로필 파일을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-131">Starts the process of recording current method use, which later overwrites the specified profile file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cdc-132">지정된 된 프로필에서 지정 된 폴더에 있는 경우는 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 메서드를 포함 하는 정보를 백그라운드 스레드에서 메서드가 컴파일되지 순서를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-132">If the specified profile exists in the folder specified by the <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> method, the information it contains is used to determine the order in which methods are compiled on the background thread.</span></span> <span data-ttu-id="e0cdc-133"><xref:System.Runtime.ProfileOptimization.StartProfile%2A> 메서드가 아직 존재 하지 않는 경우 메서드가 사용 하 여 기록 시작 프로필을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-133">The <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method creates the profile if it does not already exist, and initiates the recording of method use.</span></span>  
  
 <span data-ttu-id="e0cdc-134">기본 애플리케이션 스레드 또는 백그라운드 스레드에서 컴파일할 여부에 관계 없이 실제로 호출 되는 방법만 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-134">Only methods that are actually called are recorded, regardless of whether they were compiled on the background thread or on the main application thread.</span></span> <span data-ttu-id="e0cdc-135">메서드는 애플리케이션을 백그라운드 스레드는 컴파일 전에 호출 해야 하는 경우 기본 애플리케이션 스레드에서 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-135">A method is compiled on the main application thread if the application needs to call it before the background thread has compiled it.</span></span>  
  
 <span data-ttu-id="e0cdc-136">녹음/녹화를 수행 하는 코드는 메서드가 컴파일되지, 주 스레드가 백그라운드 스레드 모두에 컴파일되는 메서드를 포함 하는 속도 추적 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-136">The code that performs the recording tracks the rate at which methods are compiled, including methods that are compiled on both the background thread and on the main thread.</span></span> <span data-ttu-id="e0cdc-137">경우 속도 이하가 미리 결정 된 수준에서 기록 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-137">When the rate falls below a predetermined level, recording stops.</span></span> <span data-ttu-id="e0cdc-138">녹음/녹화 JIT 컴파일 속도 미리 결정 된 상한을 초과 하는 경우에 중지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-138">Recording also stops if the rate of JIT compilation exceeds a predetermined upper limit.</span></span>  
  
 <span data-ttu-id="e0cdc-139">경우는 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 현재 애플리케이션 도메인에 대 한 메서드 호출 되지 않았습니다 다중 코어 컴퓨터에 없는 경우 또는 <xref:System.Runtime.ProfileOptimization.StartProfile%2A> 메서드는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-139">If the <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> method has not been called for the current application domain, or if the computer does not have multiple cores, the <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e0cdc-140">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-140">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e0cdc-141">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0cdc-141">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>