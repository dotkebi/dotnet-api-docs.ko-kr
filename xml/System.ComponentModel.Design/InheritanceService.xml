<Type Name="InheritanceService" FullName="System.ComponentModel.Design.InheritanceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1f2acdc8a8a46b9bc7e8155d517d8748d6d7aac" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941557" /></Metadata><TypeSignature Language="C#" Value="public class InheritanceService : IDisposable, System.ComponentModel.Design.IInheritanceService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InheritanceService extends System.Object implements class System.ComponentModel.Design.IInheritanceService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.InheritanceService" />
  <TypeSignature Language="VB.NET" Value="Public Class InheritanceService&#xA;Implements IDisposable, IInheritanceService" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceService : IDisposable, System::ComponentModel::Design::IInheritanceService" />
  <TypeSignature Language="F#" Value="type InheritanceService = class&#xA;    interface IInheritanceService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IInheritanceService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b3e61-101">상속된 구성 요소를 식별하는 데 사용하는 메서드 집합을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-101">Provides a set of methods for identifying inherited components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e61-102"><xref:System.ComponentModel.Design.InheritanceService> 상속 된 구성 요소를 찾아를 무시 하는 시나리오를 선택 하 고 서비스에 의해 추적 되는 각 상속 된 클래스의 상속 특성을 검색 하는 데 사용 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-102">The <xref:System.ComponentModel.Design.InheritanceService> can be used to find inherited components, select which ones to ignore, and retrieve the inheritance attribute of each inherited class that is tracked by the service.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e61-103"><see cref="T:System.ComponentModel.Design.InheritanceService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddInheritedComponents">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e61-104">지정된 구성 요소에 의해 상속된 구성 요소를 <see cref="T:System.ComponentModel.Design.InheritanceService" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-104">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="public void AddInheritedComponents (System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddInheritedComponents(class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInheritedComponents (component As IComponent, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddInheritedComponents(System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (component, container)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b3e61-105">지정된 컨테이너에 추가하기 위해 상속된 구성 요소를 검색할 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-105">The component to search for inherited components to add to the specified container.</span></span></param>
        <param name="container"><span data-ttu-id="b3e61-106">상속된 구성 요소를 추가할 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-106">The container to add the inherited components to.</span></span></param>
        <summary><span data-ttu-id="b3e61-107">지정된 구성 요소에 의해 상속된 구성 요소를 <see cref="T:System.ComponentModel.Design.InheritanceService" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-107">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e61-108">이 메서드는 지정된 된 구성 요소의 모든 기본 클래스의 모든 필드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-108">This method searches all the fields of all base classes of the specified component.</span></span> <span data-ttu-id="b3e61-109">구현 하는 각 필드 <xref:System.ComponentModel.IComponent> 지정된 된 컨테이너에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-109">Each field that implements <xref:System.ComponentModel.IComponent> is added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="protected virtual void AddInheritedComponents (Type type, System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddInheritedComponents(class System.Type type, class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddInheritedComponents(Type ^ type, System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (type, component, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b3e61-110">검색할 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-110">The base type to search for.</span></span></param>
        <param name="component"><span data-ttu-id="b3e61-111">지정된 컨테이너에 추가하기 위해 상속된 구성 요소를 검색할 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-111">The component to search for inherited components to add to the specified container.</span></span></param>
        <param name="container"><span data-ttu-id="b3e61-112">상속된 구성 요소를 추가할 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-112">The container to add the inherited components to.</span></span></param>
        <summary><span data-ttu-id="b3e61-113">지정된 구성 요소에 의해 상속된 지정된 형식의 구성 요소를 <see cref="T:System.ComponentModel.Design.InheritanceService" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-113">Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e61-114">이 메서드는 구성 요소의 모든 기본 클래스의 모든 필드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-114">This method searches all the fields of all base classes of component.</span></span> <span data-ttu-id="b3e61-115">구현 하는 각 필드 <xref:System.ComponentModel.IComponent> 를 저장 하는 내부 목록에 추가 되는 <xref:System.ComponentModel.InheritanceAttribute> 구성 요소의 상속 수준을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-115">Each field that implements <xref:System.ComponentModel.IComponent> is added to an internal list that stores an <xref:System.ComponentModel.InheritanceAttribute> that identifies the inheritance level of the component.</span></span> <span data-ttu-id="b3e61-116">다음 구성 요소는 지정된 된 컨테이너에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-116">The component is then added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e61-117"><see cref="T:System.ComponentModel.Design.InheritanceService" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-117">Releases the resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inheritanceService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e61-118"><see cref="T:System.ComponentModel.Design.InheritanceService" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-118">Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e61-119">호출 <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> 에서 사용 하는 리소스는 <xref:System.ComponentModel.Design.InheritanceService> 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-119">Calling <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> allows the resources used by the <xref:System.ComponentModel.Design.InheritanceService> to be reallocated for other purposes.</span></span> <span data-ttu-id="b3e61-120">에 대 한 자세한 내용은 <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-120">For more information about <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="inheritanceService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b3e61-121">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-121"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b3e61-122"><see cref="T:System.ComponentModel.Design.InheritanceService" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-122">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e61-123">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b3e61-123">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b3e61-124">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-124">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b3e61-125"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-125"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b3e61-126">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.ComponentModel.Design.InheritanceService> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-126">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.InheritanceService> references.</span></span> <span data-ttu-id="b3e61-127">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-127">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b3e61-128">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-128">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b3e61-129">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-129">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b3e61-130">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-130">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="b3e61-131">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-131">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.InheritanceAttribute GetInheritanceAttribute (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.InheritanceAttribute GetInheritanceAttribute(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInheritanceAttribute (component As IComponent) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::InheritanceAttribute ^ GetInheritanceAttribute(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute&#xA;override this.GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute" Usage="inheritanceService.GetInheritanceAttribute component" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b3e61-132">상속 특성을 검색할 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-132">The component to retrieve the inheritance attribute for.</span></span></param>
        <summary><span data-ttu-id="b3e61-133">지정된 구성 요소의 상속 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-133">Gets the inheritance attribute of the specified component.</span></span></summary>
        <returns><span data-ttu-id="b3e61-134">해당 구성 요소가 만들어진 상속 수준을 설명하는 <see cref="T:System.ComponentModel.InheritanceAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-134">An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e61-135">이 메서드가 반환 값 구성 요소가 상속 되지 않는 경우 <xref:System.ComponentModel.InheritanceAttribute.NotInherited>합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-135">If the component is not inherited, this method returns the value <xref:System.ComponentModel.InheritanceAttribute.NotInherited>.</span></span> <span data-ttu-id="b3e61-136">그렇지 않으면이 구성 요소의 상속 특성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-136">Otherwise, it returns the inheritance attribute for this component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreInheritedMember">
      <MemberSignature Language="C#" Value="protected virtual bool IgnoreInheritedMember (System.Reflection.MemberInfo member, System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IgnoreInheritedMember(class System.Reflection.MemberInfo member, class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IgnoreInheritedMember (member As MemberInfo, component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IgnoreInheritedMember(System::Reflection::MemberInfo ^ member, System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool&#xA;override this.IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool" Usage="inheritanceService.IgnoreInheritedMember (member, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="b3e61-137">확인할 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-137">The member to check.</span></span> <span data-ttu-id="b3e61-138">이 멤버는 <see cref="T:System.Reflection.FieldInfo" /> 또는 <see cref="T:System.Reflection.MethodInfo" /> 중 하나여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-138">This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />.</span></span></param>
        <param name="component"><span data-ttu-id="b3e61-139">이 멤버가 바인딩된 구성 요소 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-139">The component instance this member is bound to.</span></span></param>
        <summary><span data-ttu-id="b3e61-140">지정된 멤버를 무시할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-140">Indicates whether to ignore the specified member.</span></span></summary>
        <returns><span data-ttu-id="b3e61-141">지정된 구성 요소가 상속된 구성 요소의 집합에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-141"><see langword="true" /> if the specified member should be included in the set of inherited components; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b3e61-142">이 메서드를 재정의 하 여 상속을 무시 하는 멤버 집합을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-142">By overriding this method, users can modify the set of members that the inheritance service ignores.</span></span> <span data-ttu-id="b3e61-143">기본 구현은 전용, 모든 멤버를 무시 하 고 허용 공용 또는 보호 된 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b3e61-143">The default implementation ignores all members that are private, and allows only public or protected members.</span></span></para></block>
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
  </Members>
</Type>