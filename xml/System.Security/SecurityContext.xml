<Type Name="SecurityContext" FullName="System.Security.SecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e70214df05df947f2483972d2b320b6552d5421" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56787210" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9f1c9-101">여러 스레드 사이에 전송되는 실행 컨텍스트에 대한 모든 보안 관련 데이터를 캡슐화하여 전파합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-101">Encapsulates and propagates all security-related data for execution contexts transferred across threads.</span></span> <span data-ttu-id="9f1c9-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-103">A <xref:System.Security.SecurityContext> 개체에 포함 된 정보를 포함 하는 논리 스레드에 대 한 모든 보안 관련 정보를 캡처하는 <xref:System.Security.Principal.WindowsIdentity> 및 <xref:System.Threading.CompressedStack> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-103">A <xref:System.Security.SecurityContext> object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.</span></span>  <span data-ttu-id="9f1c9-104">이 구성은 스택의 경우 자동으로 전파 됩니다 Windows id 및 보안 요소를 허용 합니다 <xref:System.Security.SecurityContext> 를 복사 하 고 여러 비동기 스레드 사이의 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-104">This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the <xref:System.Security.SecurityContext> is copied and transferred across asynchronous threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f1c9-105">CLR (공용 언어 런타임)는 Win32 함수를 직접 호출을 통해 관리 되지 않는 코드와 같은 플랫폼을 통해 관리 되는 코드 외부에서 수행 된 가장의 관리 되는 코드만 사용 하 여 수행 되는 작업 호출이 가장 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-105">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="9f1c9-106">관리 되는 <xref:System.Security.Principal.WindowsIdentity> 경우가 아니면 개체 비동기 지점 간을 이동할 수는 `alwaysFlowImpersonationPolicy` 요소 설정한 `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span><span class="sxs-lookup"><span data-stu-id="9f1c9-106">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="9f1c9-107">설정 된 `alwaysFlowImpersonationPolicy` 요소를 `true` Windows id 가장을 수행 하는 방법에 관계 없이 비동기 지점 간을 항상 전달 되도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-107">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="9f1c9-108">자세한 내용은 관리 되지 않는 흐름에 대 한 내용은 가장 비동기 지점 간을 [ &lt;alwaysFlowImpersonationPolicy&gt; 요소](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-108">For more information about flowing unmanaged impersonation across asynchronous points, see [&lt;alwaysFlowImpersonationPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 <span data-ttu-id="9f1c9-109">합니다 <xref:System.Security.SecurityContext> 더 큰 숫자의 일부인 <xref:System.Threading.ExecutionContext> 흐름 또는 마이그레이션 및 경우를 <xref:System.Threading.ExecutionContext> 흐름 또는 마이그레이션합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-109">The <xref:System.Security.SecurityContext> is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f1c9-110">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="9f1c9-111">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-111">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="9f1c9-112">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="9f1c9-113">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="9f1c9-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="9f1c9-114">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityContext ^ Capture();" />
      <MemberSignature Language="F#" Value="static member Capture : unit -&gt; System.Security.SecurityContext" Usage="System.Security.SecurityContext.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-115">현재 스레드에 대한 보안 컨텍스트를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-115">Captures the security context for the current thread.</span></span></summary>
        <returns><span data-ttu-id="9f1c9-116">현재 스레드에 대한 보안 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-116">The security context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-117">다른 스레드로 캡처된 보안 컨텍스트를 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-117">The captured security context can be applied to another thread.</span></span> <span data-ttu-id="9f1c9-118"><xref:System.Security.SecurityContext> 이루어져 합니다 <xref:System.Threading.CompressedStack> 및 <xref:System.Security.Principal.WindowsIdentity> 실행 중인 스레드에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-118">The <xref:System.Security.SecurityContext> consists of the <xref:System.Threading.CompressedStack> and the <xref:System.Security.Principal.WindowsIdentity> for the executing thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="member this.CreateCopy : unit -&gt; System.Security.SecurityContext" Usage="securityContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-119">현재 보안 컨텍스트의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-119">Creates a copy of the current security context.</span></span></summary>
        <returns><span data-ttu-id="9f1c9-120">현재 스레드에 대한 보안 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-120">The security context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-121">현재 컨텍스트 캡처 또는 복사 작업을 통해 획득 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-121">The current context must have been acquired through a capture or a copy operation.</span></span> <span data-ttu-id="9f1c9-122">이 메서드는 캡처된를 적용 하기 위한 유용한 <xref:System.Security.SecurityContext> 여러 스레드를 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-122">This method is useful for applying a captured <xref:System.Security.SecurityContext> to multiple threads.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f1c9-123">현재 보안 컨텍스트가 이전에 사용된 적이 있거나, 여러 애플리케이션 도메인 사이에 마샬링되었거나, <see cref="M:System.Security.SecurityContext.Capture" /> 메서드를 통해 가져오지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="9f1c9-123">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-124"><see cref="T:System.Security.SecurityContext" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-124">Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-125">`Dispose` 사용을 마치면 <xref:System.Security.SecurityContext>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-125">Call `Dispose` when you are finished using the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="9f1c9-126">`Dispose` 메서드를 사용하면 <xref:System.Security.SecurityContext>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-126">The `Dispose` method leaves the <xref:System.Security.SecurityContext> in an unusable state.</span></span> <span data-ttu-id="9f1c9-127">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Security.SecurityContext> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Security.SecurityContext> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-127">After calling `Dispose`, you must release all references to the <xref:System.Security.SecurityContext> so the garbage collector can reclaim the memory that the <xref:System.Security.SecurityContext> was occupying.</span></span>  
  
 <span data-ttu-id="9f1c9-128">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f1c9-129">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Security.SecurityContext>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-129">Always call `Dispose` before you release your last reference to the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="9f1c9-130">이렇게 하지 않으면 가비지 수집기가 <xref:System.Security.SecurityContext> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.SecurityContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-131">보안 컨텍스트 흐름이 억제되었는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-131">Determines whether the flow of the security context has been suppressed.</span></span></summary>
        <returns><span data-ttu-id="9f1c9-132">흐름이 억제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-132"><see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-133">합니다 <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> 메서드를 전송 하는지 여부를 확인 하려면 인프라 구성 요소에서 사용 됩니다는 <xref:System.Security.SecurityContext> 비동기 작업 중에 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-133">The <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Security.SecurityContext> information during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowsIdentityFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsWindowsIdentityFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWindowsIdentityFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWindowsIdentityFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWindowsIdentityFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsWindowsIdentityFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-134">현재 보안 컨텍스트의 Windows ID 부분의 흐름이 억제되었는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-134">Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</span></span></summary>
        <returns><span data-ttu-id="9f1c9-135">흐름이 억제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-135"><see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-136">합니다 <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> 메서드를 Windows id 정보를 전송 하는지 여부를 확인 하려면 인프라 구성 요소에서 사용 됩니다 때는 <xref:System.Security.SecurityContext> 은 비동기 작업 중에 마이그레이션합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-136">The <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the Windows identity information when the <xref:System.Security.SecurityContext> migrates during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberSignature Language="F#" Value="static member RestoreFlow : unit -&gt; unit" Usage="System.Security.SecurityContext.RestoreFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-137">여러 비동기 스레드 사이의 보안 컨텍스트 흐름을 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-137">Restores the flow of the security context across asynchronous threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-138">합니다 <xref:System.Security.SecurityContext.RestoreFlow%2A> 메서드를 호출 합니다 <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> 메서드는 이전 버전의 효과를 <xref:System.Security.SecurityContext.SuppressFlow%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-138">The <xref:System.Security.SecurityContext.RestoreFlow%2A> method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> method to reverse the effect of a prior <xref:System.Security.SecurityContext.SuppressFlow%2A> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f1c9-139">보안 컨텍스트가 <see langword="null" /> 또는 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="9f1c9-139">The security context is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Security.SecurityContext securityContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Security::SecurityContext ^ securityContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member Run : System.Security.SecurityContext * System.Threading.ContextCallback * obj -&gt; unit" Usage="System.Security.SecurityContext.Run (securityContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityContext" Type="System.Security.SecurityContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="securityContext"><span data-ttu-id="9f1c9-140">설정할 보안 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-140">The security context to set.</span></span></param>
        <param name="callback"><span data-ttu-id="9f1c9-141">지정한 보안 컨텍스트에서 실행할 메서드를 나타내는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-141">The delegate that represents the method to run in the specified security context.</span></span></param>
        <param name="state"><span data-ttu-id="9f1c9-142">콜백 메서드로 전달할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-142">The object to pass to the callback method.</span></span></param>
        <summary><span data-ttu-id="9f1c9-143">현재 스레드의 지정한 보안 컨텍스트에서 지정한 메서드를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-143">Runs the specified method in the specified security context on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-144">메서드 호출이 완료 되 면 현재 스레드의 보안 컨텍스트를 이전 상태로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-144">The security context for the current thread is returned to its previous state when the method call is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f1c9-145">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Security.SecurityContext.Run%2A> 지정 된 보안 컨텍스트에서 메서드를 실행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-145">The following code example shows how to use the <xref:System.Security.SecurityContext.Run%2A> method to execute a method in a specified security context.</span></span>  
  
 [!code-csharp[System.Security.SecurityContext.Run#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/CS/form1.cs#1)]
 [!code-vb[System.Security.SecurityContext.Run#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f1c9-146"><paramref name="securityContext" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="9f1c9-146"><paramref name="securityContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9f1c9-147">또는</span><span class="sxs-lookup"><span data-stu-id="9f1c9-147">-or-</span></span> 
 <span data-ttu-id="9f1c9-148">캡처 작업을 통해 <paramref name="securityContext" />를 가져오지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="9f1c9-148"><paramref name="securityContext" /> was not acquired through a capture operation.</span></span>  
  
<span data-ttu-id="9f1c9-149">또는</span><span class="sxs-lookup"><span data-stu-id="9f1c9-149">-or-</span></span> 
 <span data-ttu-id="9f1c9-150"><paramref name="securityContext" />가 이미 <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> 메서드 호출에 대한 인수로 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="9f1c9-150"><paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9f1c9-151">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-151">requires full trust for the immediate caller.</span></span> <span data-ttu-id="9f1c9-152">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-152">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberSignature Language="F#" Value="static member SuppressFlow : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-153">여러 비동기 스레드 사이의 보안 컨텍스트 흐름을 억제합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-153">Suppresses the flow of the security context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="9f1c9-154">흐름을 복원하기 위한 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-154">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-155">이 메서드를 사용 하 여 흐름을 표시 하지 않으려면 <xref:System.Security.SecurityContext> 비동기 작업에 대 한 현재 스레드에 대 한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-155">Use this method to suppress the flow of <xref:System.Security.SecurityContext> information on the current thread for asynchronous operations.</span></span>  
  
 <span data-ttu-id="9f1c9-156">CLR (공용 언어 런타임)은 관리 되는 코드를 사용 하 여 수행 된 가장 작업이 인식 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-156">The common language runtime (CLR) is only aware of the impersonation operations performed using managed code.</span></span> <span data-ttu-id="9f1c9-157">CLR에 플랫폼 호출 Win32 함수 호출을 통해 가장을 수행 하는 관리 되지 않는 코드와 같은 관리 되는 코드 외부에서 수행 된 가장 알지 못합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-157">The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions.</span></span> <span data-ttu-id="9f1c9-158">Id를 전달 하려면 관리 되는 사용 해야 하는 비동기 지점 간을 <xref:System.Security.Principal.WindowsIdentity> 고 <xref:System.Security.Principal.WindowsImpersonationContext> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-158">To flow identity across asynchronous points you must use the managed <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Security.Principal.WindowsImpersonationContext> methods.</span></span>  
  
 <span data-ttu-id="9f1c9-159">사용 합니다 <xref:System.Threading.AsyncFlowControl.Undo%2A> 메서드는 반환 된 <xref:System.Threading.AsyncFlowControl> 반환할 구조는 <xref:System.Security.SecurityContext> 개체를 이전 상태로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-159">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
 <span data-ttu-id="9f1c9-160">이 방법을 사용 하 여 보호 되는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 에 대 한 <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> 권한.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-160">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="9f1c9-161">완전히 신뢰할 수 있는 구성 요소 흐름을 표시 하지 않으려면이 메서드를 호출할 수는 <xref:System.Security.SecurityContext> 비동기 호출 하는 동안 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-161">A fully trusted component can call this method to suppress the flow of the <xref:System.Security.SecurityContext> information during asynchronous calls.</span></span> <span data-ttu-id="9f1c9-162">흐름이 억제 되 면 합니다 <xref:System.Security.SecurityContext.Capture%2A> 메서드가 반환 되는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-162">When the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9f1c9-163">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-163">requires full trust for the immediate caller.</span></span> <span data-ttu-id="9f1c9-164">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-164">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlowWindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlowWindowsIdentity () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlowWindowsIdentity();" />
      <MemberSignature Language="F#" Value="static member SuppressFlowWindowsIdentity : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlowWindowsIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f1c9-165">여러 비동기 스레드 사이에서 현재 보안 컨텍스트의 Windows ID 부분의 흐름을 억제합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-165">Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="9f1c9-166">흐름을 복원하기 위한 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-166">A structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f1c9-167">이 메서드를 사용 하 여 Windows id의 흐름을 표시 하지 않을 때를 <xref:System.Security.SecurityContext> 여러 비동기 스레드 사이의 마이그레이션합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-167">Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.</span></span>  
  
 <span data-ttu-id="9f1c9-168">사용 합니다 <xref:System.Threading.AsyncFlowControl.Undo%2A> 메서드는 반환 된 <xref:System.Threading.AsyncFlowControl> 반환할 구조는 <xref:System.Security.SecurityContext> 개체를 이전 상태로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-168">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f1c9-169">CLR (공용 언어 런타임)는 Win32 함수를 직접 호출을 통해 관리 되지 않는 코드와 같은 플랫폼을 통해 관리 되는 코드 외부에서 수행 된 가장의 관리 되는 코드만 사용 하 여 수행 되는 작업 호출이 가장 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-169">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="9f1c9-170">관리 되는 <xref:System.Security.Principal.WindowsIdentity> 경우가 아니면 개체 비동기 지점 간을 이동할 수는 `alwaysFlowImpersonationPolicy` 요소 설정한 `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span><span class="sxs-lookup"><span data-stu-id="9f1c9-170">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="9f1c9-171">설정 된 `alwaysFlowImpersonationPolicy` 요소를 `true` Windows id 가장을 수행 하는 방법에 관계 없이 비동기 지점 간을 항상 전달 되도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-171">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="9f1c9-172">자세한 내용은 관리 되지 않는 흐름에 대 한 내용은 가장 비동기 지점 간을 [ \<alwaysFlowImpersonationPolicy > 요소](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-172">For more information about flowing unmanaged impersonation across asynchronous points, see [\<alwaysFlowImpersonationPolicy> Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9f1c9-173">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-173">requires full trust for the immediate caller.</span></span> <span data-ttu-id="9f1c9-174">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9f1c9-174">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>