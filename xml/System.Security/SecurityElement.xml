<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcf18faba5d9af88089f384c842ac5b4b87e99ad" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941180" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7fc39-101">보안 개체를 인코딩하기 위한 XML 개체 모델을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-101">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="7fc39-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-103">이 클래스를 사용 하 여 일반 XML 개체 모델을 사용 하지 않고에 보안 시스템에서 사용 하 여에 대 한 간단한 XML 개체 모델의 간단한 구현 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="7fc39-104">이 설명서에는 XML에 대 한 기본 지식이 있다고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="7fc39-105">단순 XML 개체 모델 요소에 대 한 다음과 같은 부분으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="7fc39-106">태그 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="7fc39-107">특성은 요소에 0 개 이상의 이름/값 특성 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="7fc39-108">자식은 0 또는 다른 요소 안에 중첩 `<tag>` 고 `</tag>`입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="7fc39-109">특성 기반 XML 표현을 보안 요소 및 해당 값을 표현 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="7fc39-110">즉, 특성으로 표현 되는 요소의 속성 및 속성 값은 특성 값으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="7fc39-111">태그 내의 텍스트를 중첩 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="7fc39-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="7fc39-112">에 대 한 `<tag>text</tag>` 형식의 표현을 표현을 `<tag value="text"/>` 일반적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="7fc39-113">이 특성에 기반한 XML 표현을 사용 하 여 가독성이 향상 되 고 결과 XML serialization의 쉽게 WMI 이식성을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="7fc39-114">특성 이름을 한 자 이상 이어야 합니다 하 고이 하 여야 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="7fc39-115">요소 기반 값 표현을 사용 하는 경우 텍스트를 사용 하 여 요소 문자열입니다 `null` 에 표시 되는 `<tag/>` 형성 텍스트 구분이 고, 그렇지 않으면 합니다 `<tag>` 및 `</tag>` 토큰.</span><span class="sxs-lookup"><span data-stu-id="7fc39-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="7fc39-116">두 형태 모두 표시 되는 특성을 함께 사용할 수 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="7fc39-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="7fc39-117">태그, 특성 및 요소의 텍스트는 존재 하면 항상 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="7fc39-118">XML 형식에는 인용 부호를 포함 하 고 필요한 경우를 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="7fc39-119">XML에서 사용 하 여에 대 한 잘못 된 문자를 포함 하는 문자열 값을 <xref:System.ArgumentException>입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="7fc39-120">이러한 규칙이 모든 속성 및 메서드에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7fc39-121">성능상의 이유로 문자의 유효성은 때만 확인 요소 속성 또는 메서드의 모든 집합에 없는 및 XML 텍스트 형식으로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="7fc39-122">정적 메서드를 명시적으로 필요한 경우 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-123">다음 예제에서는의 멤버를 사용 하 여 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7fc39-124"><see cref="T:System.Security.SecurityElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="7fc39-125">XML 요소의 태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-125">The tag name of an XML element.</span></span></param>
        <summary><span data-ttu-id="7fc39-126">지정된 태그를 사용하여 <see cref="T:System.Security.SecurityElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-127">`tag` 매개 변수는 유효한 XML 태그 이름으로 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="7fc39-128">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-129">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.%23ctor%2A> 새 생성자 <xref:System.Security.SecurityElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="7fc39-130">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-131"><paramref name="tag" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc39-132"><paramref name="tag" /> 매개 변수가 XML에 적합하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-132">The <paramref name="tag" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="7fc39-133">XML 요소의 태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-133">The tag name of the XML element.</span></span></param>
        <param name="text"><span data-ttu-id="7fc39-134">요소 안에 있는 텍스트 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-134">The text content within the element.</span></span></param>
        <summary><span data-ttu-id="7fc39-135">지정된 태그 및 텍스트를 사용하여 <see cref="T:System.Security.SecurityElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-136">경우는 `text` 매개 변수는 `null` 이 생성자는 기본 생성자와 동일한 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-137"><paramref name="tag" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc39-138"><paramref name="tag" /> 매개 변수 또는 <paramref name="text" /> 매개 변수가 XML에 적합하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7fc39-139">특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-139">The name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="7fc39-140">특성 값</span><span class="sxs-lookup"><span data-stu-id="7fc39-140">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="7fc39-141">이름/값 특성을 XML 요소에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-141">Adds a name/value attribute to an XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-142">이름 및 값 특성에 유효한 XML 특성 문자만 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="7fc39-143">XML 특성 이름은 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-143">XML attribute names must be unique.</span></span> <span data-ttu-id="7fc39-144">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="7fc39-145">지원은 없습니다 따옴표 붙은 문자열에 대 한 이름/값 쌍에 대 한 문자열 따옴표를 포함 하지 않아야 하므로 또는 따옴표가 필요한 기타 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-146">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.AddAttribute%2A> XML 요소에 이름/값 특성을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="7fc39-147">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-148"><paramref name="name" /> 매개 변수 또는 <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc39-149"><paramref name="name" /> 매개 변수 또는 <paramref name="value" /> 매개 변수가 XML에 적합하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span></span>  
  
<span data-ttu-id="7fc39-150">또는</span><span class="sxs-lookup"><span data-stu-id="7fc39-150">-or-</span></span> 
<span data-ttu-id="7fc39-151"><paramref name="name" /> 매개 변수에서 지정한 이름을 가진 특성이 이미 존재하는 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="7fc39-152">추가할 자식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-152">The child element to add.</span></span></param>
        <summary><span data-ttu-id="7fc39-153">자식 요소를 XML 요소에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-153">Adds a child element to the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-154">자식 요소는 다음과 같은 모든 기존 자식 요소가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-155">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.AddChild%2A> XML 요소에 자식 요소를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="7fc39-156">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-157"><paramref name="child" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-157">The <paramref name="child" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7fc39-158">검색할 특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-158">The name of the attribute for which to search.</span></span></param>
        <summary><span data-ttu-id="7fc39-159">XML 요소에서 특성을 이름으로 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-159">Finds an attribute by name in an XML element.</span></span></summary>
        <returns><span data-ttu-id="7fc39-160">이름이 지정된 특성과 연결된 값입니다. <paramref name="name" />이 포함된 특성이 존재하지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-161">다음과 같이 XML을 사용 하 여 `Attribute("B")` "456"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-162">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Attribute%2A> 이름으로 특성을 찾는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="7fc39-163">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-164"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-164">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fc39-165">XML 요소의 특성을 이름/값 쌍으로 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-165">Gets or sets the attributes of an XML element as name/value pairs.</span></span></summary>
        <value><span data-ttu-id="7fc39-166">XML 요소의 특성 값에 대한 <see cref="T:System.Collections.Hashtable" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-167">각 특성에 저장 됩니다는 <xref:System.Collections.Hashtable> 이름/값 쌍으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="7fc39-168">이름 및 특성의 값만 유효한 XML 특성 문자를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="7fc39-169">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="7fc39-170">지원은 없습니다 따옴표 붙은 문자열에 대 한 이름/값 쌍에 대 한 문자열 따옴표를 포함 하지 않아야 하므로 또는 따옴표가 필요한 기타 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-171">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Attributes%2A> XML 요소의 특성을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="7fc39-172">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7fc39-173"><see cref="T:System.Collections.Hashtable" /> 개체의 이름 또는 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc39-174">이름이 유효한 XML 특성 이름이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-174">The name is not a valid XML attribute name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fc39-175">XML 요소의 자식 요소 배열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-175">Gets or sets the array of child elements of the XML element.</span></span></summary>
        <value><span data-ttu-id="7fc39-176">보안 요소로서 순서가 있는 XML 요소의 자식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-176">The ordered child elements of the XML element as security elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-177">경우는 <xref:System.Security.SecurityElement> 둘 다 포함 <xref:System.Security.SecurityElement.Text%2A> 하 고 <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> 가 제일 먼저 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-178">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Children%2A> 배열을 XML 요소의 자식 요소를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="7fc39-179">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc39-180">XML 부모 노드의 자식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-180">A child of the XML parent node is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc39-181">현재 <see cref="T:System.Security.SecurityElement" /> 개체의 동일한 복사본을 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></summary>
        <returns><span data-ttu-id="7fc39-182">현재 <see cref="T:System.Security.SecurityElement" /> 개체의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-183">복사본을 모두 포함 된 <xref:System.Security.SecurityElement.Children%2A> 및 <xref:System.Security.SecurityElement.Attributes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="7fc39-184">현재 XML 요소 개체와 비교할 XML 요소 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-184">An XML element object to which to compare the current XML element object.</span></span></param>
        <summary><span data-ttu-id="7fc39-185">두 개의 XML 요소 개체가 일치하는지 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-185">Compares two XML element objects for equality.</span></span></summary>
        <returns><span data-ttu-id="7fc39-186">현재 XML 요소의 태그, 특성 이름과 값, 자식 요소 및 텍스트 필드가 <paramref name="other" /> 매개 변수의 상대 요소와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-186"><see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-187">자식 요소가 비교에 재귀적으로 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="7fc39-188">여러 가지 XML 표현과 동일한 문자를 비교 하는 것에 대 한 지원은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-189">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Equal%2A> 두 XML 요소를 비교 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="7fc39-190">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="7fc39-191">이스케이프할 잘못된 문자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-191">The string within which to escape invalid characters.</span></span></param>
        <summary><span data-ttu-id="7fc39-192">문자열에 있는 잘못된 XML 문자를 해당하는 올바른 XML로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span></span></summary>
        <returns><span data-ttu-id="7fc39-193">잘못된 문자가 있었으나 바뀐 입력 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-193">The input string with invalid characters replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-194">이 메서드를 사용 하 여 문자열을 사용 하기 전에 문자열의 잘못 된 문자 대체를 <xref:System.Security.SecurityElement>입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="7fc39-195">잘못 된 문자에 사용 되는 경우는 <xref:System.Security.SecurityElement> 이스케이프 하지 않고는 <xref:System.ArgumentException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="7fc39-196">다음 표에서 잘못 된 XML 문자 및 해당 하는 이스케이프를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="7fc39-197">잘못 된 XML 문자</span><span class="sxs-lookup"><span data-stu-id="7fc39-197">Invalid XML character</span></span> | <span data-ttu-id="7fc39-198">으로 대체</span><span class="sxs-lookup"><span data-stu-id="7fc39-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="7fc39-199">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Escape%2A> 동등한 유효한 XML 사용 하 여 문자열에서 문자가 잘못 된 XML을 대체 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="7fc39-200">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="7fc39-201">보안 요소를 만드는 데 사용할 XML로 인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-201">The XML-encoded string from which to create the security element.</span></span></param>
        <summary><span data-ttu-id="7fc39-202">XML로 인코딩된 문자열에서 보안 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-202">Creates a security element from an XML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="7fc39-203">XML에서 만든 <see cref="T:System.Security.SecurityElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-204">XML 문자열에서 작은따옴표를 사용 하지 마십시오 대신 이스케이프 된 큰따옴표를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="7fc39-205">예를 들어, 대신의 "`<value name='Company'>Microsoft</value>"` 사용 하 여"`<value name=\"Company\">Microsoft</value>"`합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="7fc39-206">작은따옴표를 사용 하 여 중 예외가 throw 또는 일부 경우 작은따옴표를 문자열에 텍스트로 처리 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException"><span data-ttu-id="7fc39-207"><paramref name="xml" />에 하나 이상의 작은따옴표 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-207"><paramref name="xml" /> contains one or more single quotation mark characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-208"><paramref name="xml" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-208"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7fc39-209">유효성을 테스트할 특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-209">The attribute name to test for validity.</span></span></param>
        <summary><span data-ttu-id="7fc39-210">문자열이 유효한 특성 이름인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-210">Determines whether a string is a valid attribute name.</span></span></summary>
        <returns><span data-ttu-id="7fc39-211"><paramref name="name" /> 매개 변수가 유효한 XML 특성 이름이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-211"><see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-212">보안 요소에 추가 하기 전에 특성을 테스트 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-213">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidAttributeName%2A> 문자열이 유효한 특성 이름 인지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="7fc39-214">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fc39-215">유효성을 테스트할 특성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-215">The attribute value to test for validity.</span></span></param>
        <summary><span data-ttu-id="7fc39-216">문자열이 유효한 특성 값인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-216">Determines whether a string is a valid attribute value.</span></span></summary>
        <returns><span data-ttu-id="7fc39-217"><paramref name="value" /> 매개 변수가 유효한 XML 특성 값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-217"><see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-218">보안 요소에 추가 하기 전에 특성을 테스트 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-219">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> 문자열로 유효한 특성 값인지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="7fc39-220">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="7fc39-221">유효성을 테스트할 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-221">The tag to test for validity.</span></span></param>
        <summary><span data-ttu-id="7fc39-222">문자열이 유효한 태그인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-222">Determines whether a string is a valid tag.</span></span></summary>
        <returns><span data-ttu-id="7fc39-223"><paramref name="tag" /> 매개 변수가 유효한 XML 태그이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-223"><see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-224">이 테스트에 사용할 수 있습니다는 <xref:System.Security.SecurityElement.Tag%2A> 설정 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-225">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidTag%2A> 문자열이 유효한 특성 태그 인지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="7fc39-226">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="7fc39-227">유효성을 테스트할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-227">The text to test for validity.</span></span></param>
        <summary><span data-ttu-id="7fc39-228">문자열이 XML 요소 내의 텍스트로 유효한지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-228">Determines whether a string is valid as text within an XML element.</span></span></summary>
        <returns><span data-ttu-id="7fc39-229"><paramref name="text" /> 매개 변수가 유효한 XML 텍스트 요소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-229"><see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-230">이 메서드를 사용 하 여 테스트할 수 <xref:System.Security.SecurityElement.Text%2A> 설정 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-231">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidText%2A> 문자열로 XML 요소의 텍스트로 유효한 지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="7fc39-232">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="7fc39-233">자식 요소에서 검색할 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-233">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="7fc39-234">태그 이름으로 자식을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-234">Finds a child by its tag name.</span></span></summary>
        <returns><span data-ttu-id="7fc39-235">지정된 태그 값을 가지는 첫째 자식 XML 요소입니다. <paramref name="tag" />를 가지는 자식 요소가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-236">다음과 같이 XML을 사용 하 여 `SearchForChildByTag("second")` 자식 요소를 반환 하는 `<second>`합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-237">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.SearchForChildByTag%2A> 태그 이름으로 자식을 찾는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="7fc39-238">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-239"><paramref name="tag" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="7fc39-240">자식 요소에서 검색할 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-240">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="7fc39-241">태그 이름으로 자식을 찾고 포함된 텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-241">Finds a child by its tag name and returns the contained text.</span></span></summary>
        <returns><span data-ttu-id="7fc39-242">지정된 태그 값을 가지는 첫째 자식 요소의 텍스트 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-242">The text contents of the first child element with the specified tag value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-243">이 메서드는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="7fc39-244">다음과 같이 XML을 사용 하 여 `SearchForTextOfTag("second")` "텍스트 2"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-245">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> 메서드 태그 이름을 사용 하 여 자식을 찾아 포함된 된 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="7fc39-246">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-247"><paramref name="tag" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-247"><paramref name="tag" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fc39-248">XML 요소의 태그 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-248">Gets or sets the tag name of an XML element.</span></span></summary>
        <value><span data-ttu-id="7fc39-249">XML 요소의 태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-249">The tag name of an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-250">Xml에서 태그 아래에 표시 하는 경우 스크립트에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="7fc39-251">이 요소에 자식 요소가 자식 바뀝니다 `text`합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="7fc39-252">이 속성에만 유효한 XML 태그 문자열을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="7fc39-253">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-254">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Tag%2A> XML 요소의 태그 이름을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="7fc39-255">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fc39-256">태그가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-256">The tag is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc39-257">태그가 XML에 적합하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-257">The tag is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fc39-258">XML 요소 안에 있는 텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-258">Gets or sets the text within an XML element.</span></span></summary>
        <value><span data-ttu-id="7fc39-259">XML 요소 안에 있는 텍스트 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-259">The value of the text within an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-260">텍스트는 XML 특수 문자가 없어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="7fc39-261">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="7fc39-262">경우는 <xref:System.Security.SecurityElement> 둘 다 포함 <xref:System.Security.SecurityElement.Text%2A> 하 고 <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> 가 제일 먼저 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc39-263">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Text%2A> 속성 XML 요소의 텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="7fc39-264">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc39-265">태그가 XML에 적합하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7fc39-265">The text is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc39-266">XML 요소의 문자열 표현과 구성 요소 특성, 자식 요소 및 텍스트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span></span></summary>
        <returns><span data-ttu-id="7fc39-267">XML 요소 및 해당 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-267">The XML element and its contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc39-268">이 메서드는 요소의 XML 표현을 확인 하는 디버깅에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc39-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>