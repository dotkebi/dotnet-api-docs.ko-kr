<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b72a4288d88935d936cc6642a67cd5e4803fe19c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57939893" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type ApplicationManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c8a8c-101">ASP.NET 호스팅 응용 프로그램의 ASP.NET 응용 프로그램 도메인을 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-102"><xref:System.Web.Hosting.ApplicationManager> 개체는 ASP.NET 응용 프로그램에 대 한 호스팅 환경에서 개체의 수명 관리를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="c8a8c-103">이 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="c8a8c-104">활성화 및 ASP.NET 응용 프로그램을 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="c8a8c-105">응용 프로그램에 등록 된 응용 프로그램 수명 및 개체의 수명을 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="c8a8c-106">호스팅 환경에서 ASP.NET 응용 프로그램 요청을 처리 하는 데 사용 되는 개체를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="c8a8c-107">특정된 시점에 호스팅 프로세스에서 실행 중인 응용 프로그램의 목록을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="applicationManager.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a8c-108">모든 응용 프로그램 도메인을 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-109">호출 하는 경우는 <xref:System.Web.Hosting.ApplicationManager.Close%2A> 메서드를 0으로 응용 프로그램 관리자를 사용 하 여 응용 프로그램의 참조 횟수를 줄입니다 합니다 <xref:System.Web.Hosting.ApplicationManager.Close%2A> 메서드 호출을 <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8a8c-110">지정된 응용 프로그램 도메인에 대한 개체 및 개체 형식을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : System.Web.Hosting.IApplicationHost * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appHost, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="c8a8c-111"><see cref="T:System.Web.Hosting.IApplicationHost" /> 개체</span><span class="sxs-lookup"><span data-stu-id="c8a8c-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="c8a8c-112">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="c8a8c-113">형식에 따라, 지정된 애플리케이션 도메인에 대한 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-114"><paramref name="type" />에 지정된 형식의 새 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="c8a8c-116">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8a8c-117">애플리케이션에 대한 실제 경로가 존재하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="c8a8c-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a8c-118"><paramref name="appHost" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8a8c-119">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-119">-or-</span></span> 
 <span data-ttu-id="c8a8c-120"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="c8a8c-121">개체가 속한 응용 프로그램의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="c8a8c-122">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="c8a8c-123">응용 프로그램의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="c8a8c-124">응용 프로그램의 실제 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-124">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="c8a8c-125">지정된 형식의 개체가 현재 등록된 경우 예외를 throw하려면 <see langword="true" />이고, 지정된 형식의 등록된 기존 개체를 반환하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="c8a8c-126">형식, 가상 및 실제 경로, 지정된 형식의 개체가 이미 있는 경우의 실패 동작을 나타내는 부울 값을 기반으로 지정된 응용 프로그램 도메인에 대한 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-127">지정된 <paramref name="type" />의 새 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-128"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드를 만들고 응용 프로그램에서 개체를 등록 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="c8a8c-129">각 유형의 개체를 하나만 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-129">Only one object of each type can be created.</span></span> <span data-ttu-id="c8a8c-130">동일한 형식의 여러 개체를 만들 경우 개체 팩터리를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="c8a8c-131">자세한 내용은이 항목의 코드 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="c8a8c-132">각 응용 프로그램에는 고유한 응용 프로그램 식별자로 식별 되는 자체 응용 프로그램 도메인에서 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="c8a8c-133">합니다 <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드는 응용 프로그램 도메인에 지정 된 응용 프로그램의 지정 된 형식의 개체를 만듭니다는 `appID` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="c8a8c-134">지정된 된 응용 프로그램에 대 한 응용 프로그램 도메인이 없으면 하나에 개체를 만들기 전에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="c8a8c-135">합니다 `failIfExists` 의 동작을 제어 하는 매개 변수는 <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드는 지정 된 형식의 개체는 응용 프로그램에 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="c8a8c-136">때 `failIfExists` 됩니다 `true`의 <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드가 throw는 <xref:System.InvalidOperationException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="c8a8c-137">때 `failIfExists` 됩니다 `false`, <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드는 지정 된 형식의 등록된 된 기존 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="c8a8c-138">합니다 <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드를 추가 하는 오버 로드를 호출 `throwOnError` 매개 변수 `throwOnError` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8a8c-139">다음 코드 예제는 등록 된 개체에 대 한 개체 팩터리 디자인 패턴의 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="c8a8c-140">팩터리 패턴을 사용 하 여 개체의 여러 인스턴스를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="c8a8c-141">두 개체를 포함 하는 예: `SampleComponent`, 개체인 응용 프로그램의 여러 인스턴스를 사용할지 및 `SampleComponentFactory`, 목록을 관리 하는 `SampleComponent` 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8a8c-142"><paramref name="physicalPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c8a8c-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="c8a8c-143">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-143">-or-</span></span> 
 <span data-ttu-id="c8a8c-144"><paramref name="physicalPath" />가 잘못된 응용 프로그램 경로인 경우</span><span class="sxs-lookup"><span data-stu-id="c8a8c-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="c8a8c-145">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-145">-or-</span></span> 
 <span data-ttu-id="c8a8c-146"><paramref name="type" />가 <see cref="T:System.Web.Hosting.IRegisteredObject" /> 인터페이스를 구현하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a8c-147"><paramref name="appID" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8a8c-148">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-148">-or-</span></span> 
 <span data-ttu-id="c8a8c-149"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8a8c-150"><paramref name="failIfExists" />가 <see langword="true" />이고 지정된 형식의 개체가 이미 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="c8a8c-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="c8a8c-151">개체가 속한 응용 프로그램의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="c8a8c-152">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="c8a8c-153">응용 프로그램의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="c8a8c-154">응용 프로그램의 실제 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-154">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="c8a8c-155">지정된 형식의 개체가 현재 등록된 경우 예외를 throw하려면 <see langword="true" />이고, 지정된 형식의 등록된 기존 개체를 반환하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="c8a8c-156">호스팅 초기화 오류에 대한 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="c8a8c-157">형식, 가상 및 실제 경로, 지정된 형식의 개체가 이미 있는 경우의 실패 동작을 나타내는 부울 값 및 호스팅 초기화 오류 예외가 throw되는지 여부를 나타내는 부울 값을 기반으로 지정된 응용 프로그램 도메인에 대한 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-158">지정된 <paramref name="type" />의 새 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-159">이 오버 로드는 <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드를 제공 합니다 `throwOnError` 매개 변수를 호스팅 초기화 예외가 throw 되는지 여부를 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="c8a8c-160">오버 로드는 <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 메서드를 제공 하지 않는 `throwOnError` 로 설정 하는 매개 변수를 사용 하 여이 오버 로드를 호출 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8a8c-161"><paramref name="physicalPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c8a8c-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="c8a8c-162">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-162">-or-</span></span> 
 <span data-ttu-id="c8a8c-163"><paramref name="physicalPath" />가 잘못된 응용 프로그램 경로인 경우</span><span class="sxs-lookup"><span data-stu-id="c8a8c-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="c8a8c-164">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-164">-or-</span></span> 
 <span data-ttu-id="c8a8c-165"><paramref name="type" />가 <see cref="T:System.Web.Hosting.IRegisteredObject" /> 인터페이스를 구현하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a8c-166"><paramref name="appID" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8a8c-167">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-167">-or-</span></span> 
 <span data-ttu-id="c8a8c-168"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8a8c-169"><paramref name="failIfExists" />가 <see langword="true" />이고 지정된 형식의 개체가 이미 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="c8a8c-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8a8c-170">지정된 응용 프로그램의 응용 프로그램 도메인을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : string -&gt; AppDomain" Usage="applicationManager.GetAppDomain appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="c8a8c-171">응용 프로그램의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="c8a8c-172">지정된 응용 프로그램의 응용 프로그램 도메인을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-173">응용 프로그램의 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : System.Web.Hosting.IApplicationHost -&gt; AppDomain" Usage="applicationManager.GetAppDomain appHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="c8a8c-174">응용 프로그램 도메인을 가져올 호스트입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="c8a8c-175">지정된 호스트를 사용하여 응용 프로그램의 응용 프로그램 도메인을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-176">응용 프로그램의 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberSignature Language="F#" Value="static member GetApplicationManager : unit -&gt; System.Web.Hosting.ApplicationManager" Usage="System.Web.Hosting.ApplicationManager.GetApplicationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a8c-177">ASP.NET 호스트 프로세스와 관련된 <see cref="T:System.Web.Hosting.ApplicationManager" /> 개체의 단일 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-178">실행 중인 ASP.NET 호스트 프로세스와 관련된 <see cref="T:System.Web.Hosting.ApplicationManager" /> 개체의 단일 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-179">하나의 인스턴스만 <xref:System.Web.Hosting.ApplicationManager> 개체가 기본 응용 프로그램 도메인에서 ASP.NET 호스트 프로세스에 의해 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="c8a8c-180">인스턴스를 <xref:System.Web.Hosting.ApplicationManager> 클래스를 사용할 수 없는 합니다 <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> 메서드의 인스턴스를 먼저 만듭니다는 <xref:System.Web.Hosting.ApplicationManager> 클래스 및 다음 새로 만든된 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="c8a8c-181">인스턴스를 <xref:System.Web.Hosting.ApplicationManager> 클래스를 이전에 만든를 <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> 메서드는 기존 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8a8c-182">다음 코드 예제에서는 합니다 <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> 검색 하는 메서드는 <xref:System.Web.Hosting.ApplicationManager> 웹 응용 프로그램에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetObject : string * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.GetObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="c8a8c-183">개체가 속한 응용 프로그램의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="c8a8c-184">반환할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="c8a8c-185">지정한 응용 프로그램에서 지정한 형식의 등록된 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-186">지정된 형식의 등록된 개체이거나, 형식이 <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> 메서드 호출을 통해 등록되지 않았으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a8c-187"><paramref name="appId" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8a8c-188">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-188">-or-</span></span> 
 <span data-ttu-id="c8a8c-189"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberSignature Language="F#" Value="member this.GetRunningApplications : unit -&gt; System.Web.Hosting.ApplicationInfo[]" Usage="applicationManager.GetRunningApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a8c-190">실행 중인 응용 프로그램의 스냅숏을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-191">이 <see cref="T:System.Web.Hosting.ApplicationInfo" /> 인스턴스가 관리하는 응용 프로그램에 대한 정보를 포함하는 <see cref="T:System.Web.Hosting.ApplicationManager" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8a8c-192">다음 코드 예제에서는 합니다 <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> 에서 관리 하는 응용 프로그램에 대 한 정보를 표시 하는 메서드는 <xref:System.Web.Hosting.ApplicationManager> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="applicationManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a8c-193">임대가 만들어지는 것을 방지하여 응용 프로그램 도메인에 영구 수명을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-194">항상 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-195">이 메서드를 재정의 합니다 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 해당 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="c8a8c-196">항상 반환 `null` 응용 프로그램 도메인의 수명을 제한 하는 임대가 생성 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="member this.IsIdle : unit -&gt; bool" Usage="applicationManager.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a8c-197">프로세스가 호스팅하는 모든 응용 프로그램이 유휴 상태이며 요청을 처리하고 있지 않은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns><span data-ttu-id="c8a8c-198">프로세스의 모든 응용 프로그램이 유휴 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-199">합니다 <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> 메서드가 반환 되는 `true` 프로세스에서 호스팅되는 모든 응용 프로그램 유휴 상태인 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="applicationManager.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a8c-200">응용 프로그램 관리자 인터페이스의 사용자 참조 횟수를 스레드로부터 안전한 방식으로 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberSignature Language="F#" Value="member this.ShutdownAll : unit -&gt; unit" Usage="applicationManager.ShutdownAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a8c-201">모든 응용 프로그램 리소스를 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-202">그러나 호출을 <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> 호출 하는 것과 같습니다 합니다 <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> 이 관리 되는 모든 응용 프로그램 도메인에서 메서드 <xref:System.Web.Hosting.ApplicationManager> ; 인스턴스를 <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> 관리 되는 응용 프로그램 도메인 외부에서 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.ShutdownApplication : string -&gt; unit" Usage="applicationManager.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="c8a8c-203">언로드할 응용 프로그램의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="c8a8c-204">지정된 응용 프로그램을 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a8c-205">그러나 호출을 <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> 호출 하는 것과 같습니다 합니다 <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> 메서드는 특정 응용 프로그램 도메인에 대 한를 <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> 외부 관리 되는 응용 프로그램 도메인에서 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a8c-206"><paramref name="appId" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.StopObject : string * Type -&gt; unit" Usage="applicationManager.StopObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="c8a8c-207">개체가 속한 응용 프로그램의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="c8a8c-208">언로드할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="c8a8c-209">응용 프로그램의 등록된 개체 목록에서 지정된 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="c8a8c-210">제거하려는 개체가 응용 프로그램의 등록된 개체 목록에 마지막으로 남아 있는 개체이면 응용 프로그램이 언로드됩니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a8c-211"><paramref name="appId" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8a8c-212">또는</span><span class="sxs-lookup"><span data-stu-id="c8a8c-212">-or-</span></span> 
 <span data-ttu-id="c8a8c-213"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c8a8c-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>