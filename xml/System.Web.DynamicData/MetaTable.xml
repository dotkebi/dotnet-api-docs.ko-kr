<Type Name="MetaTable" FullName="System.Web.DynamicData.MetaTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="368674963cd91da1111d2ea4951de635f21f3897" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874066" /></Metadata><TypeSignature Language="C#" Value="public class MetaTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaTable" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaTable" />
  <TypeSignature Language="F#" Value="type MetaTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ef767-101">동적 데이터 페이지에서 사용할 테이블을 설명하는 메타데이터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-101">Represents the metadata that describes a table for use by Dynamic Data pages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef767-102">다음 예제는 Insert.aspx 페이지 서식 파일에 대 한 코드 숨김 파일의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-102">The following example is part of the code-behind file for the Insert.aspx page template.</span></span> <span data-ttu-id="ef767-103">합니다 <xref:System.Web.DynamicData.MetaTable> 의 인스턴스가 초기화 되는 `Page_Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef767-103">The <xref:System.Web.DynamicData.MetaTable> instance is initialized in the `Page_Load` method.</span></span> <span data-ttu-id="ef767-104">테이블에 페이지의 제목을 설정 되어 `DisplayName` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-104">The title for the page is set to the table `DisplayName` property.</span></span>  
  
```csharp  
public partial class Insert : System.Web.UI.Page {  
    protected MetaTable table;     
  
    protected void Page_Load(object sender, EventArgs e) {  
        table = DetailsDataSource.GetTable();  
        Title = table.DisplayName;  
    }  
}  
```  
  
```vb  
Partial Class Insert  
    Inherits System.Web.UI.Page  
  
    Protected table As MetaTable      
  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As EventArgs)  
        table = DetailsDataSource.GetTable  
        Title = table.DisplayName  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaModel metaModel, class System.Web.DynamicData.ModelProviders.TableProvider tableProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaTable(System::Web::DynamicData::MetaModel ^ metaModel, System::Web::DynamicData::ModelProviders::TableProvider ^ tableProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaTable : System.Web.DynamicData.MetaModel * System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="new System.Web.DynamicData.MetaTable (metaModel, tableProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metaModel" Type="System.Web.DynamicData.MetaModel" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tableProvider" Type="System.Web.DynamicData.ModelProviders.TableProvider" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="metaModel"><span data-ttu-id="ef767-105">엔터티 메타 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-105">The entity meta model.</span></span></param>
        <param name="tableProvider"><span data-ttu-id="ef767-106">엔터티 모델 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-106">The entity model provider.</span></span></param>
        <summary><span data-ttu-id="ef767-107"><see cref="T:System.Web.DynamicData.MetaTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-107">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-108">합니다 `tableProvider` 초기화 매개 변수를 사용 합니다 <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-108">The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.MetaTable.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-109">테이블에 연결된 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-109">Gets the attributes that are associated with the table.</span></span></summary>
        <value><span data-ttu-id="ef767-110">테이블의 특성을 포함하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-110">A collection that contains the attributes of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberSignature Language="F#" Value="abstract member BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection" Usage="metaTable.BuildAttributeCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-111">특성 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-111">Creates the attribute collection.</span></span></summary>
        <returns><span data-ttu-id="ef767-112">특성 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-112">The attribute collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanDelete : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanDelete : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanDelete principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanDelete(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ef767-113">사용자의 보안 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-113">The user's security context.</span></span></param>
        <summary><span data-ttu-id="ef767-114">지정된 사용자가 삭제 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-114">Gets a value that indicates whether the specified user is allowed to perform delete operations.</span></span></summary>
        <returns><span data-ttu-id="ef767-115">사용자가 삭제 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-115"><see langword="true" /> if the user is allowed to perform delete operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-116">보안 주체 개체는 코드를 실행 하는 사용자 및 속해 있는 역할의 보안 컨텍스트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-116">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanInsert : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanInsert : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanInsert principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanInsert(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ef767-117">사용자의 보안 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-117">The user's security context.</span></span></param>
        <summary><span data-ttu-id="ef767-118">지정된 사용자가 삽입 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-118">Gets a value that indicates whether the specified user is allowed to perform insert operations.</span></span></summary>
        <returns><span data-ttu-id="ef767-119">사용자가 삽입 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-119"><see langword="true" /> if the user is allowed to perform insert operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-120">보안 주체 개체는 코드를 실행 하는 사용자 및 속해 있는 역할의 보안 컨텍스트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-120">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanRead : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanRead principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanRead(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ef767-121">사용자의 보안 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-121">The user's security context.</span></span></param>
        <summary><span data-ttu-id="ef767-122">지정된 사용자가 읽기 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-122">Gets a value that indicates whether the specified user is allowed to perform read operations.</span></span></summary>
        <returns><span data-ttu-id="ef767-123">사용자가 읽기 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-123"><see langword="true" /> if the user is allowed to perform read operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-124">보안 주체 개체는 코드를 실행 하는 사용자 및 속해 있는 역할의 보안 컨텍스트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-124">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanUpdate : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanUpdate : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanUpdate principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanUpdate(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ef767-125">사용자의 보안 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-125">The user's security context.</span></span></param>
        <summary><span data-ttu-id="ef767-126">지정된 사용자가 업데이트 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-126">Gets a value that indicates whether the specified user is allowed to perform update operations.</span></span></summary>
        <returns><span data-ttu-id="ef767-127">사용자가 업데이트 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-127"><see langword="true" /> if the user is allowed to perform update operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-128">보안 주체 개체는 코드를 실행 하는 사용자 및 속해 있는 역할의 보안 컨텍스트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-128">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-129">테이블에 대한 열 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-129">Gets the column collection for the table.</span></span></summary>
        <value><span data-ttu-id="ef767-130">테이블에 대한 열을 포함하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-130">A collection that contains the columns for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef767-131">다음 예제에서는 <xref:System.Web.DynamicData.MetaTable.Columns%2A> 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-131">The following example shows how to use the <xref:System.Web.DynamicData.MetaTable.Columns%2A> property.</span></span> <span data-ttu-id="ef767-132">예제에서는 동적 데이터 페이지 템플릿은 있는 AdventureWorksLT 데이터베이스의 ProductDescription 테이블에 대 한 사용자 지정 표시를 제공 \DynamicData\CustomPages\ProductDescriptions 폴더에 복사 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-132">In the example, the Dynamic Data page templates have been copied to the \DynamicData\CustomPages\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database.</span></span> <span data-ttu-id="ef767-133">Insert.aspx 파일의 태그를 추가 하려면 변경 되는 `OnDataBound` 라는 이벤트 처리기 `DetailsView1_DataBound`합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-133">The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`.</span></span> <span data-ttu-id="ef767-134">이벤트 처리기에서는 <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> 메서드 메타 테이블을 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-134">In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table.</span></span> <span data-ttu-id="ef767-135"><xref:System.Web.DynamicData.MetaTable.Columns%2A> 속성은 테이블의 열 수를 표시 하려면 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-135">The <xref:System.Web.DynamicData.MetaTable.Columns%2A> property is used to display the number of columns in the table.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  
[!code-aspx-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaChildrenColumn ^ CreateChildrenColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn&#xA;override this.CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn" Usage="metaTable.CreateChildrenColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaChildrenColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="ef767-136">열 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-136">The column provider.</span></span></param>
        <summary><span data-ttu-id="ef767-137">새 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-137">Creates a new <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="ef767-138">새 자식 메타 열 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-138">The new child metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-139">파생된 형식을 만들려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-139">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaColumn CreateColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaColumn ^ CreateColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn&#xA;override this.CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.CreateColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="ef767-140">열 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-140">The column provider.</span></span></param>
        <summary><span data-ttu-id="ef767-141"><see cref="T:System.Web.DynamicData.MetaColumn" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-141">Creates a <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="ef767-142">새 메타 열 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-142">The new metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-143">파생된 형식을 만들려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-143">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public virtual object CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateContext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateContext();" />
      <MemberSignature Language="F#" Value="abstract member CreateContext : unit -&gt; obj&#xA;override this.CreateContext : unit -&gt; obj" Usage="metaTable.CreateContext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CreateContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-144">테이블에 대한 데이터 컨텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-144">Returns the data context for the table.</span></span></summary>
        <returns><span data-ttu-id="ef767-145">테이블에 대한 데이터 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-145">The data context for the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-146">데이터 컨텍스트를 호출 하 여 인스턴스화된 새 컨텍스트를에서 검색 되는 <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef767-146">The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ef767-147">자세한 내용은 참조는 <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-147">For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForeignKeyColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaForeignKeyColumn ^ CreateForeignKeyColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn&#xA;override this.CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn" Usage="metaTable.CreateForeignKeyColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaForeignKeyColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="ef767-148">열 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-148">The column provider.</span></span></param>
        <summary><span data-ttu-id="ef767-149">외래 키 메타데이터가 들어 있는 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-149">Creates an object that contains foreign-key metadata.</span></span></summary>
        <returns><span data-ttu-id="ef767-150">외래 키 메타데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-150">An object that contains foreign-key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-151">파생된 형식을 만들려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-151">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef767-152"><see cref="T:System.Web.DynamicData.MetaTable" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-152">Creates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.ComponentModel.ICustomTypeDescriptor typeDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (typeDescriptor As ICustomTypeDescriptor) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(System::ComponentModel::ICustomTypeDescriptor ^ typeDescriptor);" />
      <MemberSignature Language="F#" Value="static member CreateTable : System.ComponentModel.ICustomTypeDescriptor -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable typeDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeDescriptor"><span data-ttu-id="ef767-153">테이블 형식에 대한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-153">Information about the table type.</span></span></param>
        <summary><span data-ttu-id="ef767-154">지정된 테이블에 대한 메타데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-154">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="ef767-155">테이블 메타데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-155">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member CreateTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="ef767-156">메타데이터를 생성할 테이블 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-156">The table type for which to generate metadata.</span></span></param>
        <summary><span data-ttu-id="ef767-157">지정된 테이블에 대한 메타데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-157">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="ef767-158">테이블 메타데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-158">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public string DataContextPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataContextPropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextPropertyName : string" Usage="System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextPropertyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-159">테이블 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-159">Gets the name of the table.</span></span></summary>
        <value><span data-ttu-id="ef767-160">테이블의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-160">The name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-161">이름은 <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> 테이블에 속하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-161">The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextType">
      <MemberSignature Language="C#" Value="public Type DataContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataContextType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextType : Type" Usage="System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-162">테이블에 연결된 데이터 컨텍스트의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-162">Gets the type of the data context that is associated with the table.</span></span></summary>
        <value><span data-ttu-id="ef767-163">데이터 컨텍스트의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-163">The type of the data context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-164">자세한 내용은 참조는 <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-164">For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn DisplayColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ DisplayColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-165">이 테이블의 항목이 외래 키 관계에 있는 부모로 사용될 때 값을 표시하는 데 사용되는 열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-165">Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></summary>
        <value><span data-ttu-id="ef767-166">이 테이블의 항목이 외래 키 관계에 있는 부모로 사용될 때 값을 표시하는 데 사용되는 열입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-166">The column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-167">반환 되는 열이이 순서 대로 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-167">The column that is returned is selected in this order:</span></span>  
  
1.  <span data-ttu-id="ef767-168">사용 하 여 지정 된 열을 <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-168">The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.</span></span>  
  
2.  <span data-ttu-id="ef767-169">첫 번째 문자열 기본 키에 없는 열입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-169">The first string column that is not in the primary key.</span></span>  
  
3.  <span data-ttu-id="ef767-170">첫 번째 문자열 기본 키에 있는 열입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-170">The first string column that is in the primary key.</span></span>  
  
4.  <span data-ttu-id="ef767-171">기본 키에 있는 첫 번째 문자열이 아닌 열입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-171">The first non-string column that is in the primary key.</span></span>  
  
5.  <span data-ttu-id="ef767-172">첫 번째 열입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-172">The first column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-173">테이블의 이름을 사용자에게 친숙한 형식으로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-173">Gets the name of the table in a user-friendly format.</span></span></summary>
        <value><span data-ttu-id="ef767-174">사용자에게 친숙한 테이블 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-174">The string that represents the user-friendly name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-175">이 속성의 기본값은 값을 <xref:System.Web.DynamicData.MetaTable.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-175">The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property.</span></span> <span data-ttu-id="ef767-176">사용 하 여이 속성의 값을 사용자 지정할 수 있습니다는 <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-176">You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Type EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityType : Type" Usage="System.Web.DynamicData.MetaTable.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-177">테이블을 나타내는 엔터티 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-177">Gets the entity type that represents the table.</span></span></summary>
        <value><span data-ttu-id="ef767-178">엔터티를 나타내는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-178">The type that represents the entity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyColumnsNames">
      <MemberSignature Language="C#" Value="public string ForeignKeyColumnsNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForeignKeyColumnsNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKeyColumnsNames As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ForeignKeyColumnsNames { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeignKeyColumnsNames : string" Usage="System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.ForeignKeyColumnsNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-179">쉼표로 구분된 외래 키 이름 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-179">Gets a comma-separated list of foreign-key names.</span></span></summary>
        <value><span data-ttu-id="ef767-180">쉼표로 구분된 외래 키 이름 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-180">A comma-separated list of foreign-key names.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActionPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef767-181">지정된 행에 대한 동작 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-181">Gets the action path for the specified row.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-182">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-182">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-183">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-183">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string -&gt; string&#xA;override this.GetActionPath : string -&gt; string" Usage="metaTable.GetActionPath action" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="ef767-184">동작 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-184">The name of the action.</span></span></param>
        <summary><span data-ttu-id="ef767-185">현재 테이블 및 지정된 동작에 대한 동작 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-185">Returns the action path for the current table and the specified action.</span></span></summary>
        <returns><span data-ttu-id="ef767-186">지정된 동작에 대한 동작 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-186">The action path for the specified action.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef767-187">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-187">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-188">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-188">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="ef767-189">동작 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-189">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="ef767-190">기본 키를 구성하는 열 값 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-190">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="ef767-191">현재 테이블, 지정된 동작 및 지정된 기본 키에 대한 동작 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-191">Returns the action path for the current table, specified action, and specified primary key.</span></span></summary>
        <returns><span data-ttu-id="ef767-192">지정된 동작 및 기본 키에 대한 동작 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-192">The action path for the specified action and primary key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-193">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-193">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-194">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-194">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj -&gt; string&#xA;override this.GetActionPath : string * obj -&gt; string" Usage="metaTable.GetActionPath (action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="ef767-195">동작 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-195">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="ef767-196">동작 경로를 가져올 행입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-196">The row to get the action path for.</span></span></param>
        <summary><span data-ttu-id="ef767-197">동작 이름을 사용하여 지정된 행에 대한 동작 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-197">Returns the action path for the specified row by using the name of the action.</span></span></summary>
        <returns><span data-ttu-id="ef767-198">지정된 행에 대한 동작 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-198">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-199">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-199">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-200">동작 경로 쿼리 문자열 필터에 사용할 수 있는 기본 키 열 이름이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-200">The action path contains the primary-key column names, which can be used for query-string filters.</span></span>  
  
 <span data-ttu-id="ef767-201">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-201">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, routeValues As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string&#xA;override this.GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string" Usage="metaTable.GetActionPath (action, routeValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="ef767-202">동작 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-202">The name of the action.</span></span></param>
        <param name="routeValues"><span data-ttu-id="ef767-203">동작에 대한 경로 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-203">The list of routes for the action.</span></span></param>
        <summary><span data-ttu-id="ef767-204">현재 테이블 및 지정된 동작 및 경로에 대한 동작 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-204">Returns the action path for the current table and for the specified action and routes.</span></span></summary>
        <returns><span data-ttu-id="ef767-205">지정된 동작 및 경로에 대한 동작 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-205">The action path for the specified action and routes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-206">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-206">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-207">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-207">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object), path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="ef767-208">동작 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-208">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="ef767-209">기본 키를 구성하는 열 값 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-209">The list of column values that make up the primary key.</span></span></param>
        <param name="path"><span data-ttu-id="ef767-210">동작의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-210">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="ef767-211">지정된 기본 키 및 가상 경로를 기준으로 쿼리 문자열을 동작 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-211">Appends query strings to the action path, based on the specified primary key and virtual path.</span></span></summary>
        <returns><span data-ttu-id="ef767-212">쿼리 문자열 값이 추가된 지정된 기본 키 및 가상 경로에 대한 동작 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-212">The action path for the specified primary key and virtual path, with query-string values appended to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-213">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-213">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-214">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-214">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj * string -&gt; string&#xA;override this.GetActionPath : string * obj * string -&gt; string" Usage="metaTable.GetActionPath (action, row, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="ef767-215">동작 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-215">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="ef767-216">동작 경로에 대한 행을 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-216">An object that contains the row for the action path.</span></span></param>
        <param name="path"><span data-ttu-id="ef767-217">동작의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-217">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="ef767-218">동작의 이름 및 동작의 가상 경로를 사용하여 지정된 행에 대한 동작 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-218">Returns the action path for the specified row by using the name of the action and the virtual path of the action.</span></span></summary>
        <returns><span data-ttu-id="ef767-219">지정된 행에 대한 동작 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-219">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-220">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-220">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-221">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-221">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn GetColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaColumn GetColumn(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumn (columnName As String) As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaColumn ^ GetColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumn : string -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.GetColumn columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="ef767-222">메타데이터를 가져올 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-222">The name of the column to get metadata for.</span></span></param>
        <summary><span data-ttu-id="ef767-223">지정된 열에 대한 메타데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-223">Returns the metadata for the specified column.</span></span></summary>
        <returns><span data-ttu-id="ef767-224">열 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-224">The column metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValuesFromRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetColumnValuesFromRoute (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetColumnValuesFromRoute(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnValuesFromRoute (context As HttpContext) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetColumnValuesFromRoute(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetColumnValuesFromRoute : System.Web.HttpContext -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetColumnValuesFromRoute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ef767-225">지정된 웹 요청의 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-225">The context for the specified Web request.</span></span></param>
        <summary><span data-ttu-id="ef767-226">열 값의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-226">Gets the collection of column values.</span></span></summary>
        <returns><span data-ttu-id="ef767-227">열 값의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-227">The collection of column values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataKeyFromRoute">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.DataKey GetDataKeyFromRoute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataKeyFromRoute () As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataKey ^ GetDataKeyFromRoute();" />
      <MemberSignature Language="F#" Value="abstract member GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey&#xA;override this.GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey" Usage="metaTable.GetDataKeyFromRoute " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDataKeyFromRoute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-228">경로 값에서 엔터티의 기본 키를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-228">Retrieves the primary key of the entity from the route values.</span></span></summary>
        <returns><span data-ttu-id="ef767-229">값이 발견되면 엔터티의 기본 키 값이며, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-229">The primary-key values of the entities, if they are found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-230">경로 값을 요청 URL 쿼리 문자열에서 일반적으로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-230">The route values typically come from the request URL query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayString">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayString : obj -&gt; string&#xA;override this.GetDisplayString : obj -&gt; string" Usage="metaTable.GetDisplayString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDisplayString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="ef767-231">표시 문자열을 가져올 행입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-231">The row to get the display string for.</span></span></param>
        <summary><span data-ttu-id="ef767-232">행이 외래 키 관계에 사용될 때 행 인스턴스에 대한 표시 문자열로 사용할 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-232">Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.</span></span></summary>
        <returns><span data-ttu-id="ef767-233">행 인스턴스에 대한 표시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-233">The display name for an instance of a row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-234">행이 있는 경우 `null`, 빈 문자열이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-234">If the row is `null`, an empty string is returned.</span></span> <span data-ttu-id="ef767-235">엔터티 클래스의 재정의 포함 하는 경우는 <xref:System.Web.DynamicData.MetaTable.ToString%2A> 메서드를 재정의 된 <xref:System.Web.DynamicData.MetaTable.ToString%2A> 값이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-235">If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned.</span></span> <span data-ttu-id="ef767-236">메서드가 반환 하는 고, 그렇지 합니다 `ToString` 값의 표현을 <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> 지정된 된 행에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-236">Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetFilteredColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilteredColumns () As IEnumerable(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetFilteredColumns();" />
      <MemberSignature Language="F#" Value="abstract member GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetFilteredColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-237">필터링 가능한 열의 목록을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-237">Retrieves a list of columns that are filterable.</span></span></summary>
        <returns><span data-ttu-id="ef767-238">필터링 가능한 열의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-238">A list of columns that are filterable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-239">열을 사용 하 여 주석이 추가 된 경우 필터링 할 합니다 <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> 특성 및 `Enabled` 의 속성을 <xref:System.Web.Mvc.FilterAttribute> 열의 특성이로 설정 된 `true`.</span><span class="sxs-lookup"><span data-stu-id="ef767-239">A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyDictionary">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetPrimaryKeyDictionary (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetPrimaryKeyDictionary(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyDictionary (row As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetPrimaryKeyDictionary(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetPrimaryKeyDictionary row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyDictionary(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="ef767-240">행입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-240">A row.</span></span></param>
        <summary><span data-ttu-id="ef767-241">지정된 행에 대해 기본 키 이름 및 값의 사전을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-241">Retrieves a dictionary of primary-key names and values for the specified row.</span></span></summary>
        <returns><span data-ttu-id="ef767-242">기본 키 이름 및 값의 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-242">A dictionary of primary-key names and values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef767-243">다음 예제에서는 기본 키 사전을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-243">The following example shows how to create a primary-key dictionary.</span></span>  
  
```csharp  
private RouteValueDictionary GetRouteValues(MetaTable table, object row) {  
    RouteValueDictionary routeValues = GetRouteValues();  
    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  
        routeValues[pk.Key] = pk.Value;  
    }  
    return routeValues;  
}   
```  
  
```vb  
Private Function GetRouteValues(ByVal table As MetaTable, _  
        ByVal row As Object) As RouteValueDictionary   
    Dim routeValues As RouteValueDictionary = GetRouteValues()   
    For Each pk In table.GetPrimaryKeyDictionary(row)   
        routeValues(pk.Key) = pk.Value   
    Next   
    Return routeValues   
End Function   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrimaryKeyString">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef767-244">지정된 행에 대한 기본 키를 나타내는 값 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-244">Gets a list of values that represent the primary key for the specified row.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetPrimaryKeyString primaryKeyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryKeyValues"><span data-ttu-id="ef767-245">기본 키를 구성하는 열 값 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-245">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="ef767-246">지정된 행에 대한 기본 키를 나타내는 쉼표로 구분된 열 값 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-246">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="ef767-247">쉼표로 구분된 열 값 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-247">A comma-separated list of column values.</span></span> <span data-ttu-id="ef767-248">목록이 비어 있으면 빈 문자열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-248">If the list is empty, an empty string is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : obj -&gt; string&#xA;override this.GetPrimaryKeyString : obj -&gt; string" Usage="metaTable.GetPrimaryKeyString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="ef767-249">기본 키를 가져올 행입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-249">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="ef767-250">지정된 행에 대한 기본 키를 나타내는 쉼표로 구분된 열 값 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-250">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="ef767-251">행에 대한 기본 키를 나타내는 쉼표로 구분된 열 값 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-251">A comma-separated list of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPrimaryKeyValues (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;object&gt; GetPrimaryKeyValues(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyValues (row As Object) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPrimaryKeyValues(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;&#xA;override this.GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;" Usage="metaTable.GetPrimaryKeyValues row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyValues(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="ef767-252">기본 키를 가져올 행입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-252">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="ef767-253">지정된 행에 대한 기본 키를 나타내는 열 값 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-253">Returns a collection of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="ef767-254">행에 대한 기본 키를 나타내는 열 값 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-254">A collection of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetQuery">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef767-255">테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-255">Gets the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable GetQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQuery () As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery();" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : unit -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : unit -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-256">테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-256">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
        <returns><span data-ttu-id="ef767-257">엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-257">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : obj -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : obj -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ef767-258"><see cref="T:System.Web.DynamicData.MetaTable" /> 개체의 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-258">The context of the <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></param>
        <summary><span data-ttu-id="ef767-259">데이터 컨텍스트를 사용하여 테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-259">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table by using the data context.</span></span></summary>
        <returns><span data-ttu-id="ef767-260">데이터 컨텍스트의 테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-260">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table in the data context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-261">경우는 `context` 매개 변수가 `null`,이 메서드를 호출 하 여 새 컨텍스트를 만듭니다를 <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef767-261">If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns(valuetype System.Web.UI.WebControls.DataBoundControlMode mode, valuetype System.Web.DynamicData.ContainerType containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetScaffoldColumns(System::Web::UI::WebControls::DataBoundControlMode mode, System::Web::DynamicData::ContainerType containerType);" />
      <MemberSignature Language="F#" Value="abstract member GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetScaffoldColumns (mode, containerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="ef767-262">데이터 바인딩된 컨트롤 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-262">The data-bound control mode.</span></span></param>
        <param name="containerType"><span data-ttu-id="ef767-263">테이블을 개별 엔터티로 표시할지 또는 엔터티 목록의 일부로 표시할지를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-263">A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.</span></span></param>
        <summary><span data-ttu-id="ef767-264">스캐폴딩을 사용하여 표시할 열의 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-264">Returns a list of columns to display by using scaffolding.</span></span></summary>
        <returns><span data-ttu-id="ef767-265">스캐폴딩을 사용하여 표시할 열의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-265">A list of columns to display by using scaffolding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-266">이 메서드는 모든 열을 반환 된 <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> 속성이 `true` 예외:</span><span class="sxs-lookup"><span data-stu-id="ef767-266">This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:</span></span>  
  
-   <span data-ttu-id="ef767-267">열이 있는 열이 긴 문자열입니다 <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> 속성이 `true` 을 `containerType` 매개 변수는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-267">Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.</span></span>  
  
-   <span data-ttu-id="ef767-268">자식 열입니다 <xref:System.Web.UI.WebControls.DataBoundControlMode> 값으로 설정 되어 <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-268">Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="ef767-269">엔터티의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-269">The type of the entity.</span></span></param>
        <summary><span data-ttu-id="ef767-270">지정된 형식과 연결된 메타테이블을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-270">Retrieves the metatable that is associated with the specified type.</span></span></summary>
        <returns><span data-ttu-id="ef767-271">지정된 형식과 연결된 메타테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-271">The metatable that is associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-272">이 메서드는 <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-272">This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</span></span> <span data-ttu-id="ef767-273">하는 경우 <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> 반환 `false`, <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-273">If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef767-274">이 메서드가 호출한 <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> 메서드가 <see langword="false" />를 반환하였습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-274">The <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> method that was called by this method returned <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryKey">
      <MemberSignature Language="C#" Value="public bool HasPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrimaryKey : bool" Usage="System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.HasPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-275">테이블에 기본 키가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-275">Gets a value that indicates whether the table has a primary key.</span></span></summary>
        <value><span data-ttu-id="ef767-276">테이블에 기본 키가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-276"><see langword="true" /> if the table has a primary key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="metaTable.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-277">생성자가 호출될 때 사용하지 못할 수 있는 데이터를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-277">Initializes data that may not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-278">이 메서드를 호출 합니다 <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 의 각 열에 대 한 메서드는 <xref:System.Web.DynamicData.MetaTable> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="ef767-278">This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance.</span></span> <span data-ttu-id="ef767-279">이 메서드는 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-279">This method cannot be called directly.</span></span> <span data-ttu-id="ef767-280">초기화를 사용자 지정 하려면이 클래스에서 파생 하 재정의 <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef767-280">To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method.</span></span> <span data-ttu-id="ef767-281">이 메서드를 재정의 하는 경우 기본 컨트롤의 호출 `Initialize` 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef767-281">If you override this method, call the base control's `Initialize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef767-282">다음 예제에서는 재정의 하는 방법의 <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 초기화 프로세스를 사용자 지정 하기 위해 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef767-282">The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.</span></span>  
  
```csharp  
protected  override void Initialize() {  
    base.Initialize();  
    MyOverriddenInit();  
}  
```  
  
```vb  
Protected Overloads Overrides Sub Initialize()   
    MyBase.Initialize()   
    MyOverriddenInit()   
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-283">테이블이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-283">Gets a value that indicates whether the table is read-only.</span></span></summary>
        <value><span data-ttu-id="ef767-284">테이블이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-284"><see langword="true" /> if the table is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListActionPath">
      <MemberSignature Language="C#" Value="public string ListActionPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListActionPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListActionPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListActionPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListActionPath : string" Usage="System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-285">테이블에 대한 목록 동작의 동작 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-285">Gets the action path of the list action for the table.</span></span></summary>
        <value><span data-ttu-id="ef767-286">테이블에 대한 목록 동작의 동작 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-286">The action path of the list action for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-287">작업 경로 특정 엔터티에 대 한 작업에 대 한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-287">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="ef767-288">자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-288">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaTable.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-289">테이블이 속한 메타 모델을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-289">Gets the meta model that the table belongs to.</span></span></summary>
        <value><span data-ttu-id="ef767-290">테이블이 속한 메타 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-290">The meta model that the table belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-291">자세한 내용은 참조는 <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-291">For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.DynamicData.MetaTable.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-292">테이블의 고유 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-292">Gets the unique name of the table.</span></span></summary>
        <value><span data-ttu-id="ef767-293">테이블의 고유 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-293">The unique name of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyColumns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyColumns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ PrimaryKeyColumns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKeyColumns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-294">기본 키를 정의하는 열의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-294">Gets the collection of columns that define the primary key.</span></span></summary>
        <value><span data-ttu-id="ef767-295">기본 키 열을 포함하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-295">A collection that contains the primary-key columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::TableProvider ^ Provider { System::Web::DynamicData::ModelProviders::TableProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.DynamicData.ModelProviders.TableProvider" Usage="System.Web.DynamicData.MetaTable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-296">테이블의 공급자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-296">Gets the provider for the table.</span></span></summary>
        <value><span data-ttu-id="ef767-297">테이블의 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-297">The provider for the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMetadata();" />
      <MemberSignature Language="F#" Value="member this.ResetMetadata : unit -&gt; unit" Usage="metaTable.ResetMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-298">테이블에 대해 캐시된 메타데이터를 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-298">Resets the cached metadata for the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-299">캐시 된 테이블 메타 데이터를 데이터 모델 특성 및 기본 열에 대 한 메타 데이터에서 얻은 정보 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-299">The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns.</span></span> <span data-ttu-id="ef767-300">메타 데이터 캐시에는 모든 메타 데이터를 요청한 다음에 다시 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-300">The metadata cache is rebuilt the next time any metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public Type RootEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RootEntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootEntityType : Type" Usage="System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.RootEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-301">엔터티의 상속 계층 구조의 루트 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-301">Gets the root type of the entity's inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="ef767-302">엔터티의 상속 계층 구조의 루트 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-302">The root type of the entity's inheritance hierarchy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-303">형식 상속 계층 구조의 맨 위에 있는 되었거나 부모 형식이 없는 경우 엔터티 형식을 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-303">If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool" Usage="System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-304">테이블을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-304">Gets or sets a value that indicates whether the table should be displayed.</span></span></summary>
        <value><span data-ttu-id="ef767-305">테이블을 표시해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-305"><see langword="true" /> if the table should be displayed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn SortColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ SortColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-306">테이블의 정렬 기준이 되는 <see cref="T:System.Web.DynamicData.MetaColumn" /> 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-306">Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> value that the table is sorted by.</span></span></summary>
        <value><span data-ttu-id="ef767-307">테이블의 정렬 기준이 되는 열입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-307">The column that the table is sorted by.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public virtual bool SortDescending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortDescending" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SortDescending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescending : bool" Usage="System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.SortDescending</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef767-308">외래 키 관계에서 부모로 사용되는 항목을 내림차순으로 정렬할지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-308">Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.</span></span></summary>
        <value><span data-ttu-id="ef767-309">항목이 내림차순으로 정렬되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-309"><see langword="true" /> if entries are sorted in descending order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-310">사용 하 여 정렬 순서를 지정할 수 있습니다는 <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-310">You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="metaTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef767-311">테이블의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-311">Returns the name of the table.</span></span></summary>
        <returns><span data-ttu-id="ef767-312">테이블의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-312">The name of the table.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumn">
      <MemberSignature Language="C#" Value="public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetColumn(string columnName, [out] class System.Web.DynamicData.MetaColumn&amp; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumn (columnName As String, ByRef column As MetaColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetColumn(System::String ^ columnName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaColumn ^ % column);" />
      <MemberSignature Language="F#" Value="member this.TryGetColumn : string *  -&gt; bool" Usage="metaTable.TryGetColumn (columnName, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="ef767-313">찾을 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-313">The name of the column to find.</span></span></param>
        <param name="column"><span data-ttu-id="ef767-314">이 메서드가 반환되면 <paramref name="columnName" />에 대한 <see langword="MetaColumn" /> 개체를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-314">When this method returns, contains the <see langword="MetaColumn" /> object for <paramref name="columnName" />.</span></span> <span data-ttu-id="ef767-315">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-315">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="ef767-316">지정된 열을 찾을 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-316">Returns a value that indicates whether a specified column can be found.</span></span></summary>
        <returns><span data-ttu-id="ef767-317">지정된 열을 찾을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-317"><see langword="true" /> if the specified column can be found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef767-318">경우는 `columnName` 매개 변수는 null을 <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-318">If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="static member TryGetTable : Type *  -&gt; bool" Usage="System.Web.DynamicData.MetaTable.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="ef767-319">엔터티의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-319">The type of the entity.</span></span></param>
        <param name="table"><span data-ttu-id="ef767-320">이 메서드가 반환될 때 지정된 형식과 연결된 메타테이블을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-320">When this method returns, contains the metatable that is associated with the specified type.</span></span> <span data-ttu-id="ef767-321">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-321">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="ef767-322">지정된 형식 및 테이블과 연결된 메타테이블을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-322">Retrieves the metatable that is associated with the specified type and table.</span></span></summary>
        <returns><span data-ttu-id="ef767-323">지정된 형식 및 테이블과 연결된 메타테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-323">The metatable that is associated with the given specified and table.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef767-324"><paramref name="entityType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef767-324"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>