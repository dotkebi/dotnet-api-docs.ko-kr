<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6629feb94827f83ee1ad8afcadbb5136d479cf9e" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59744651" /></Metadata><TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type IFieldTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="10dc8-101">필드 템플릿을 만드는 개체로 구현되는 인터페이스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-101">Defines an interface implemented by objects that create field templates.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10dc8-102">이 클래스에 의해 구현 되어야 합니다 <xref:System.Web.DynamicData.FieldTemplateFactory> 필드 템플릿을 만들기 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-102">This class must be implemented by the <xref:System.Web.DynamicData.FieldTemplateFactory> class in order to create a field template.</span></span> <span data-ttu-id="10dc8-103">초기화 하는 메서드를 제공 하는이 인터페이스는 <xref:System.Web.DynamicData.FieldTemplateFactory> 필드 템플릿을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-103">This interface provides methods that initialize the <xref:System.Web.DynamicData.FieldTemplateFactory> and creates field templates.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="iFieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="10dc8-104">템플릿을 표시하는 데 사용할 데이터 열을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-104">Specifies the data column to use to display the field template.</span></span></param>
        <param name="mode"><span data-ttu-id="10dc8-105">필드 템플릿의 표시 모드를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-105">Specifies the display mode of the field template.</span></span></param>
        <param name="uiHint"><span data-ttu-id="10dc8-106">사용할 필드 템플릿을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-106">Specifies the field template to use.</span></span></param>
        <summary><span data-ttu-id="10dc8-107"><see cref="T:System.Web.DynamicData.MetaColumn" /> 클래스, <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> 클래스 및 <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> 속성을 사용하여 필드 템플릿의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-107">Creates an instance of a field template using the <see cref="T:System.Web.DynamicData.MetaColumn" /> class, the <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> class and <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> property.</span></span></summary>
        <returns><span data-ttu-id="10dc8-108">클래스에서 구현되는 경우 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 개체의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-108">An instance of a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> object when implemented in a class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10dc8-109">ASP.NET Dynamic Data 필드 서식 파일은 데이터 컨트롤을 데이터 모델의 데이터 형식에 매핑되는 ASP.NET 사용자 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-109">ASP.NET Dynamic Data field templates are ASP.NET user controls that map data controls to data types in a data model.</span></span> <span data-ttu-id="10dc8-110">필드 템플릿을에서 일반적으로 파생 <xref:System.Web.DynamicData.FieldTemplateUserControl>, 데이터 필드, 데이터 열 및 데이터 모델의 메타 데이터에 액세스할 수 있도록 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-110">Field templates generally derive from <xref:System.Web.DynamicData.FieldTemplateUserControl>, the class that enables access to data fields, data columns, and metadata in data models.</span></span> <span data-ttu-id="10dc8-111">동적 데이터 프로젝트 필드 템플릿 기본값을 제공 하지만 수정 하거나 사용자 지정 필드 템플릿을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-111">Dynamic Data projects provide default field templates, but you can modify them or create custom field templates.</span></span> <span data-ttu-id="10dc8-112">이 메서드는 데이터 열을 데이터 열의 모드를 기반으로 필드 템플릿에 만듭니다 구현 하는 경우 및 <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-112">When implemented, this method creates a field template based on the data column, the mode of the data column, and the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property.</span></span> <span data-ttu-id="10dc8-113">지정 된 `uiHint` 매개 변수 사용자 지정 템플릿을 사용 하 여 데이터를 렌더링 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="10dc8-113">You specify the `uiHint` parameter if you want to render data using a custom field template.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="iFieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model"><span data-ttu-id="10dc8-114">필드 템플릿이 사용하는 데이터 모델을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-114">Specifies the data model that the field template uses.</span></span></param>
        <summary><span data-ttu-id="10dc8-115">지정된 데이터 모델을 사용하여 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-115">Initializes a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> using the specified data model.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10dc8-116">ASP.NET Dynamic Data 필드 템플릿을 사용 하 여 개별 데이터 필드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-116">ASP.NET Dynamic Data uses field templates to display individual data fields.</span></span> <span data-ttu-id="10dc8-117">필드 템플릿은 일반적으로 데이터 모델의 데이터 형식 데이터 컨트롤에서 개별 필드에 매핑되는 사용자 컨트롤로 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-117">Field templates are typically implemented as user controls that map data types in a data model to individual fields in the data control.</span></span> <span data-ttu-id="10dc8-118">이 메서드는 <xref:System.Web.DynamicData.FieldTemplateFactory> 필드 템플릿을 필드 템플릿 데이터 모델을 사용 하 여 만드는 데 사용 되는 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="10dc8-118">This method initializes the <xref:System.Web.DynamicData.FieldTemplateFactory> class, which is used to create field templates using the data model the field template will use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>