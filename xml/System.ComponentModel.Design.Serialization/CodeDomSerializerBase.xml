<Type Name="CodeDomSerializerBase" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb85b113d915a438a33fd06b714a1d1d07ef5bf9" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56356629" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomSerializerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializerBase abstract" />
  <TypeSignature Language="F#" Value="type CodeDomSerializerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="64ddf-101"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 클래스에 대한 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-101">Provides a base class for <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-102"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> 간의 공유를 기본 클래스로 합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> 및 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-102">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class is used as a shared base between the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> and <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classes.</span></span> <span data-ttu-id="64ddf-103">공용 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> 클래스에서 파생 된 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-103">Public <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> classes derive from the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class.</span></span> <span data-ttu-id="64ddf-104">각 공용 클래스 자체 공용 API를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-104">Each public class defines its own public API.</span></span> <span data-ttu-id="64ddf-105"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> 클래스 없는 공용 API를 정의 하지만 다양 한 serialization 프로세스를 지원 하기 위해 사용할 수 있는 유틸리티 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-105">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class defines no public API, but does offer a multitude of utility methods that can be used to aid the serialization process.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  </Docs>
  <Members>
    <Member MemberName="DeserializeExpression">
      <MemberSignature Language="C#" Value="protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeExpression (manager As IDesignerSerializationManager, name As String, expression As CodeExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ name, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.DeserializeExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * System.CodeDom.CodeExpression -&gt; obj" Usage="codeDomSerializerBase.DeserializeExpression (manager, name, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-106">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="name"><span data-ttu-id="64ddf-107">식의 결과로 얻어지는 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-107">The name of the object that results from the expression.</span></span> <span data-ttu-id="64ddf-108">개체 이름을 지정할 필요가 없으면 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-108">Can be <see langword="null" /> if there is no need to name the object.</span></span></param>
        <param name="expression"><span data-ttu-id="64ddf-109">해석할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-109">The <see cref="T:System.CodeDom.CodeExpression" /> to interpret.</span></span></param>
        <summary><span data-ttu-id="64ddf-110">지정된 식을 메모리 내의 개체에 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-110">Deserializes the given expression into an in-memory object.</span></span></summary>
        <returns><span data-ttu-id="64ddf-111"><paramref name="expression" />을 해석하여 얻어지는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-111">An object resulting from interpretation of <paramref name="expression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-112">이 도우미 클래스를 파생 하는 메서드 식을 deserialize 하기 위해 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-112">This is a helper method that derived classes can call to deserialize an expression.</span></span> <span data-ttu-id="64ddf-113">문을 해석 하 고 지정 된 CodeDOM 식을 실행 하 여 deserialize 할는 `expression` 매개 변수 및 결과 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-113">It deserializes the statement by interpreting and executing the CodeDOM expression specified by the `expression` parameter, and then returns the results.</span></span> <span data-ttu-id="64ddf-114">개체를이 식의 결과로 생성 될 경우 지정 됩니다 지정 된 이름을 `name` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-114">If an object needs to be created as a result of this expression, it will be given the name specified by the `name` parameter.</span></span> <span data-ttu-id="64ddf-115">이름일 수 있습니다 `null` 이면 개체의 이름을 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-115">The name can be `null` if there is no need to name the object.</span></span> <span data-ttu-id="64ddf-116">다음 표에서 특정 식 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-116">The following table describes how specific expressions are handled.</span></span>  
  
|<span data-ttu-id="64ddf-117">식</span><span class="sxs-lookup"><span data-stu-id="64ddf-117">Expression</span></span>|<span data-ttu-id="64ddf-118">동작</span><span class="sxs-lookup"><span data-stu-id="64ddf-118">Behavior</span></span>|  
|----------------|--------------|  
|<xref:System.CodeDom.CodeThisReferenceExpression>|<span data-ttu-id="64ddf-119">이 식은 나타냅니다 `this` 또는 `Me`합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-119">This expression represents `this` or `Me`.</span></span> <span data-ttu-id="64ddf-120">이 식과 사용 하 여 연결 된 개체를 찾으려고 합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> 메서드 컨텍스트 스택에 표시 됩니다는 <xref:System.ComponentModel.Design.Serialization.RootContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-120">To locate the object that is associated with this expression, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> method will look in the context stack for a <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span> <span data-ttu-id="64ddf-121">이 개체 그래프 및 표시 하는 식의 루트 개체를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-121">This object contains the root object of the graph and the expression that represents it.</span></span> <span data-ttu-id="64ddf-122">개체가 있는 식과 일치 하는 경우 루트 개체가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-122">If the object is present and the expression matches, the root object will be returned.</span></span> <span data-ttu-id="64ddf-123">인스턴스를 찾을 수 없는 경우 오류가 보고 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-123">An error is reported if an instance cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeFieldReferenceExpression>|<span data-ttu-id="64ddf-124">필드 참조의 대상 루트 개체에 계산 되는 경우는 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> manager 매개 변수는 메서드 이름을 기반으로 개체 인스턴스를 검색 하 게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-124">If the target of the field reference evaluates to the root object, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the manager parameter will be used to retrieve the object instance based on name.</span></span> <span data-ttu-id="64ddf-125">그렇지 않으면 표준 리플렉션 요청한 필드를 찾을 대상 개체에 대해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-125">Otherwise, standard reflection is used against the target object to locate the requested field.</span></span> <span data-ttu-id="64ddf-126">필드를 찾을 수 없는 경우 오류가 보고 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-126">An error is reported if the field cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeVariableReferenceExpression>|<span data-ttu-id="64ddf-127">합니다 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> 메서드는 `manager` 매개 변수에 지정 된 변수 이름을 나타내는 인스턴스를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-127">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the `manager` parameter is used to locate the instance representing the given variable name.</span></span> <span data-ttu-id="64ddf-128">인스턴스를 찾을 수 없는 경우 오류가 보고 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-128">An error is reported if an instance cannot be located.</span></span>|  
  
 <span data-ttu-id="64ddf-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> 식을 더 이상 간소화할 수 없습니다 하거나 개체를 완전히 해결 될 때까지 식 해석 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> continues to interpret expressions until they are completely resolved to an object, or until it can no longer simplify the expression.</span></span> <span data-ttu-id="64ddf-130">이 예에서 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> 돌아갑니다는 <xref:System.CodeDom.CodeExpression> 가장 간소화 된 식을 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-130">In this case, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> will return a <xref:System.CodeDom.CodeExpression> that contains the most simplified expression.</span></span> <span data-ttu-id="64ddf-131">다음 식은 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-131">The following expressions are not supported:</span></span>  
  
-   <xref:System.CodeDom.CodeEventReferenceExpression>  
  
-   <xref:System.CodeDom.CodeMethodReferenceExpression>  
  
-   <xref:System.CodeDom.CodeDelegateCreateExpression>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-132">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-132">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeInstance">
      <MemberSignature Language="C#" Value="protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DeserializeInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type, object[] parameters, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ DeserializeInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type, cli::array &lt;System::Object ^&gt; ^ parameters, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj&#xA;override this.DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj" Usage="codeDomSerializerBase.DeserializeInstance (manager, type, parameters, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-133">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-133">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="type"><span data-ttu-id="64ddf-134">반환할 인스턴스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-134">The <see cref="T:System.Type" /> of the instance to return.</span></span></param>
        <param name="parameters"><span data-ttu-id="64ddf-135"><paramref name="type" />에 대한 생성자에 전달할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-135">The parameters to pass to the constructor for <paramref name="type" />.</span></span></param>
        <param name="name"><span data-ttu-id="64ddf-136">deserialize된 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-136">The name of the deserialized object.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="64ddf-137">이 개체를 디자인 컨테이너에 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-137"><see langword="true" /> to add this object to the design container; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="64ddf-138">개체에서는 영향을 줄 수 있도록 이에 대한 <see cref="T:System.ComponentModel.IComponent" />를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-138">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="64ddf-139">지정된 형식의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-139">Returns an instance of the given type.</span></span></summary>
        <returns><span data-ttu-id="64ddf-140"><paramref name="type" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-140">An instance of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-141"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> 메서드가 개체의 인스턴스를 역직렬화 하는 동안 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-141">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> method is invoked during deserialization to obtain an instance of an object.</span></span> <span data-ttu-id="64ddf-142">이 호출 되 면 요청 된 형식의 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-142">When this is called, an instance of the requested type should be returned.</span></span> <span data-ttu-id="64ddf-143">기본 구현을 호출 합니다 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> 메서드는 `manager` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-143">The default implementation invokes the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method of the `manager` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-144"><paramref name="manager" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-144"><paramref name="manager" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-145">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-145">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeserializePropertiesFromResources">
      <MemberSignature Language="C#" Value="protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializePropertiesFromResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializePropertiesFromResources (manager As IDesignerSerializationManager, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializePropertiesFromResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.DeserializePropertiesFromResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.DeserializePropertiesFromResources (manager, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-146">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-146">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-147">속성이 deserialize될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-147">The object from which the properties are to be deserialized.</span></span></param>
        <param name="filter"><span data-ttu-id="64ddf-148">Deserialize할 속성을 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-148">An <see cref="T:System.Attribute" /> array that filters which properties will be deserialized.</span></span></param>
        <summary><span data-ttu-id="64ddf-149">고정 문화권의 리소스 번들에서 특정 개체의 속성을 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-149">Deserializes properties on the given object from the invariant culture's resource bundle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-150"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> 메서드는 파생 클래스는 도우미 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-150">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="64ddf-151">지정된 된 개체의 속성을 찾고 하 고 고정 문화권의 리소스 번들 값을 로드 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-151">It looks for properties on the given object and attempts to load their values out of the invariant culture's resource bundle.</span></span> <span data-ttu-id="64ddf-152">이 소스 코드에 내보내지 않은 디자인 타임 속성을 처리 하려면 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-152">This is generally used to handle design-time properties that are not emitted into source code.</span></span> <span data-ttu-id="64ddf-153">고정 문화권에만 작동 하기 때문에 지역화 된 속성에 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-153">It should not be used for localized properties because it only operates on the invariant culture.</span></span>  
  
 <span data-ttu-id="64ddf-154">이 메서드는 모든 속성을 검사 합니다 `value` 으로 지정 된 특성과 일치 하는 매개 변수는 `filter` 매개 변수 및 리소스 이진 개체의 해당 속성에 대 한 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-154">This method inspects all of the properties of the `value` parameter that match the attributes specified by the `filter` parameter, and then checks for those properties in a resource binary object.</span></span> <span data-ttu-id="64ddf-155">디자인 타임 속성 등의 코드에 표현할 수 없는 속성을 역직렬화 하는 중에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-155">This is useful for deserializing properties that cannot be represented in code, such as design-time properties.</span></span>  
  
 <span data-ttu-id="64ddf-156">이 메서드는 디자이너 로더를 제공 해야는 <xref:System.ComponentModel.Design.IResourceService> 리소스를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-156">This method requires that a designer loader offers an <xref:System.ComponentModel.Design.IResourceService> to read resources.</span></span> <span data-ttu-id="64ddf-157">경우는 <xref:System.ComponentModel.Design.IResourceService> 제공을 <xref:System.Resources.ResXResourceReader> 고정 문화권에 대 한 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> 최종 컴파일된 코드에 포함 되지 않은 XML 리소스 (.resx) 파일의 메타 데이터 섹션에서 리소스를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-157">If the <xref:System.ComponentModel.Design.IResourceService> provides a <xref:System.Resources.ResXResourceReader> for the invariant culture, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> will read resources from the XML resource (.resx) file's metadata section, which is not included in final compiled code.</span></span> <span data-ttu-id="64ddf-158">이 서비스를 사용할 수 없는 경우 없는 리소스를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-158">If this service is not available, no resources will be read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-159">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-159">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatement">
      <MemberSignature Language="C#" Value="protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeStatement(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializeStatement (manager As IDesignerSerializationManager, statement As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializeStatement(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberSignature Language="F#" Value="member this.DeserializeStatement : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatement -&gt; unit" Usage="codeDomSerializerBase.DeserializeStatement (manager, statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-160">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-160">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statement"><span data-ttu-id="64ddf-161">deserialize할 <see cref="T:System.CodeDom.CodeStatement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-161">The <see cref="T:System.CodeDom.CodeStatement" /> to deserialize.</span></span></param>
        <summary><span data-ttu-id="64ddf-162">CodeDOM 문을 해석하고 실행하여 문을 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-162">Deserializes a statement by interpreting and executing a CodeDOM statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-163"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> 메서드는 파생 클래스는 도우미 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-163">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="64ddf-164">해석 된 `statement` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-164">It interprets the `statement` parameter.</span></span>  
  
 <span data-ttu-id="64ddf-165"><xref:System.CodeDom.CodeStatement> deserialize 되 고은 컨텍스트 스택에 밀어넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-165">The <xref:System.CodeDom.CodeStatement> being deserialized will be pushed on the context stack.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-166">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-166">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAttributesFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-167">serialization 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-167">The serialization manager.</span></span></param>
        <param name="type"><span data-ttu-id="64ddf-168">대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-168">The target type.</span></span></param>
        <summary><span data-ttu-id="64ddf-169">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-169">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="64ddf-170">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-170">A collection of attributes as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetAttributesHelper (manager As IDesignerSerializationManager, instance As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttributesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-171">serialization 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-171">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="64ddf-172">대상 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-172">An object of the target type.</span></span></param>
        <summary><span data-ttu-id="64ddf-173">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-173">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="64ddf-174">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-174">A collection of attributes as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.EventDescriptorCollection GetEventsHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetEventsHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEventsHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEventsHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-175">serialization 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-175">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="64ddf-176">대상 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-176">An object of the target type.</span></span></param>
        <param name="attributes"><span data-ttu-id="64ddf-177">대상 .NET Framework 버전에 전달할 특성 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-177">An array of attributes to pass to the target version of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="64ddf-178">프로젝트의 대상 .NET Framework 버전에서 정의된 이벤트의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-178">Gets a collection of events as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="64ddf-179">프로젝트의 대상 .NET Framework 버전에서 정의된 이벤트의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-179">A collection of events as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression GetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ GetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.GetExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-180">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-180">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-181">식을 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-181">The object for which to get an expression.</span></span></param>
        <summary><span data-ttu-id="64ddf-182">지정된 개체에 대해 식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-182">Returns an expression for the given object.</span></span></summary>
        <returns><span data-ttu-id="64ddf-183"><paramref name="value" />를 나타내는 <see cref="T:System.CodeDom.CodeExpression" />이거나, <paramref name="value" />에 대한 기존 식이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-183">A <see cref="T:System.CodeDom.CodeExpression" /> representing <paramref name="value" />, or <see langword="null" /> if there is no existing expression for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-184"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 메서드는 지정된 된 개체를 나타내는 식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-184">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method returns an expression representing the given object.</span></span> <span data-ttu-id="64ddf-185">반환할 수 있습니다 `null`나타내는 식이 없습니다.이 설정 되어 있다고는 개체를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-185">It can return `null`, indicating that no expression has been set that describes the object.</span></span> <span data-ttu-id="64ddf-186">세 가지 방법 중 하나에서 획득 한 식:</span><span class="sxs-lookup"><span data-stu-id="64ddf-186">Expressions are acquired in one of three ways:</span></span>  
  
-   <span data-ttu-id="64ddf-187">식에 대 한 이전 호출의 결과 수는 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-187">The expression could be the result of a prior call to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method.</span></span>  
  
-   <span data-ttu-id="64ddf-188">식에서 찾을 수 없습니다는 <xref:System.ComponentModel.Design.Serialization.RootContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-188">The expression could have been found in the <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span>  
  
-   <span data-ttu-id="64ddf-189">식을 통해 파생 될 수 <xref:System.ComponentModel.Design.IReferenceService>입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-189">The expression could be derived through <xref:System.ComponentModel.Design.IReferenceService>.</span></span>  
  
 <span data-ttu-id="64ddf-190">식을 통해 가져오려고 <xref:System.ComponentModel.Design.IReferenceService>, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 메서드는 지정된 된 개체의 이름에 대 한 참조를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-190">To derive expressions through <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method queries the reference service for a name for the given object.</span></span> <span data-ttu-id="64ddf-191">식 서비스를 유효한 이름을 반환 하는 경우 <xref:System.ComponentModel.Design.IReferenceService>, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 메서드 있는지를 확인는 "." 이름에서입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-191">If the expression service returns a valid name, <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method checks to see if there is a "." in the name.</span></span> <span data-ttu-id="64ddf-192">이 식 서비스를 찾았다는 의미이 개체는 읽기 전용 속성의 반환 값으로 다른 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-192">This indicates that the expression service found this object as the return value of a read-only property on another object.</span></span> <span data-ttu-id="64ddf-193">없는 경우는 ".", <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 참조 부분으로 분할 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-193">If there is a ".", <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will split the reference into parts.</span></span> <span data-ttu-id="64ddf-194">사용 하 여 평가할 이름이 왼쪽 부분을 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-194">The leftmost part is a name that will be evaluated with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method.</span></span> <span data-ttu-id="64ddf-195">각 후속 부분에 대 한 속성 참조 식이 빌드됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-195">For each subsequent part, a property reference expression will be built.</span></span> <span data-ttu-id="64ddf-196">그런 다음 최종 식 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-196">The final expression will then be returned.</span></span>  
  
 <span data-ttu-id="64ddf-197">개체를 설정 하는 식 없는 아니면 참조 서비스에서 개체를 찾을 수 없습니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 돌아갑니다 `null`, 개체에 대 한 기존 식이 없으면 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-197">If the object did not have an expression set, or if the object was not found in the reference service, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will return `null`, indicating there is no existing expression for the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-198"><paramref name="manager" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-198"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-199">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-199">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPropertiesHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetPropertiesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetPropertiesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-200">serialization 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-200">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="64ddf-201">대상 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-201">An object of the target type.</span></span></param>
        <param name="attributes"><span data-ttu-id="64ddf-202">대상 .NET Framework 버전에 전달할 특성 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-202">An array of attributes to pass to the target version of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="64ddf-203">프로젝트의 대상 .NET Framework 버전에서 정의된 속성의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-203">Gets a collection of properties as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="64ddf-204">프로젝트의 대상 .NET Framework 버전에서 정의된 속성의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-204">A collection of properties as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-205">serialization 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-205">The serialization manager.</span></span></param>
        <param name="type"><span data-ttu-id="64ddf-206">메타데이터를 사용할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-206">The type to use metadata from.</span></span></param>
        <summary><span data-ttu-id="64ddf-207">형식 메타데이터에서 생성된 리플렉션 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-207">Gets a reflection type generated from type metadata.</span></span></summary>
        <returns><span data-ttu-id="64ddf-208"><paramref name="type" />의 메타데이터에서 생성된 리플렉션 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-208">A reflection type generated from the metadata of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-209">반환 값 같음 됩니다 `type` 비 리플렉션 형식과 비교에 대 한 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-209">The return value will not be equal to `type` and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetReflectionTypeHelper (manager As IDesignerSerializationManager, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-210">serialization 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-210">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="64ddf-211">메타데이터를 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-211">The object to use metadata from.</span></span></param>
        <summary><span data-ttu-id="64ddf-212">개체 메타데이터에서 생성된 리플렉션 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-212">Gets a reflection type generated from object metadata.</span></span></summary>
        <returns><span data-ttu-id="64ddf-213"><paramref name="object" />의 메타데이터에서 생성된 리플렉션 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-213">A reflection type generated from the metadata of <paramref name="object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-214">반환 값 개체의 형식과 같습니다 되지 않으며 비 리플렉션 형식과 비교에 대 한 쓰일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-214">The return value will not be equal to the type of object and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="64ddf-215">지정된 개체 값이나 형식에 대한 serializer를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-215">Locates a serializer for the given object value or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, value As Object) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-216">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-216">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-217">검색할 serializer를 지정하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-217">The object specifying the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="64ddf-218">지정된 개체 값에 대한 serializer를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-218">Locates a serializer for the given object value.</span></span></summary>
        <returns><span data-ttu-id="64ddf-219"><paramref name="value" />에 알맞은 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-219">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-220"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> 메서드는 확장 된 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-220">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64ddf-221"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> 메서드는 개체 값 보다는 개체 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-221">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span> <span data-ttu-id="64ddf-222">외부 업체를 통해 특정 개체에 대 한 메타 데이터를 재정의 하는 경우 <xref:System.ComponentModel.TypeDescriptor>, 해당 메타 데이터 재정의에서 표시 되지 않기를 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> 만 형식을 사용 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-222">If an external party had overridden metadata for a specific object through <xref:System.ComponentModel.TypeDescriptor>, that metadata override would not be seen by the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method, which only takes a type.</span></span> <span data-ttu-id="64ddf-223"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> 메서드 값 및 값의 형식 메타 데이터를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-223">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method checks the metadata of the value and the value's type.</span></span> <span data-ttu-id="64ddf-224">둘 다를 경우 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> 값에 특성을 사용자 지정 디자이너 직렬 변환기가 있는지 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-224">If the two differ, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will look to see if there is a custom designer serializer attribute on the value.</span></span> <span data-ttu-id="64ddf-225">그렇다면 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> 사용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-225">If so, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will attempt to use it.</span></span> <span data-ttu-id="64ddf-226">그렇지 않은 경우에 지연 시킵니다 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-226">Otherwise, it will defer to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-227"><paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-227"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-228">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-228">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, valueType As Type) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ valueType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, valueType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="valueType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-229">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-229">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="valueType"><span data-ttu-id="64ddf-230">검색할 serializer를 지정하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-230">The <see cref="T:System.Type" /> specifying the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="64ddf-231">지정된 형식에 대한 serializer를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-231">Locates a serializer for the given type.</span></span></summary>
        <returns><span data-ttu-id="64ddf-232"><paramref name="valueType" />에 알맞은 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-232">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="valueType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-233"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> 메서드는 확장 된 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-233">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64ddf-234"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> 메서드는 개체 값 보다는 개체 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-234">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-235"><paramref name="manager" /> 또는 <paramref name="valueType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-235"><paramref name="manager" /> or <paramref name="valueType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-236">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-236">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTargetFrameworkProvider">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider(class System.IServiceProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTargetFrameworkProvider (provider As IServiceProvider, instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetTargetFrameworkProvider(IServiceProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetTargetFrameworkProvider : IServiceProvider * obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="64ddf-237">형식 설명 공급자 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-237">The type description provider service.</span></span></param>
        <param name="instance"><span data-ttu-id="64ddf-238"><paramref name="provider" />가 <see langword="null" />인 경우 형식 설명 공급자 서비스가 파생될 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-238">An object from which the type description provider service can be derived, if <paramref name="provider" /> is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="64ddf-239">형식 필터링에 사용하기 위해 대상 .NET Framework 버전을 인식하는 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-239">Gets a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that is aware of the target version of the .NET Framework, for use in type filtering.</span></span></summary>
        <returns><span data-ttu-id="64ddf-240">.NET Framework 인식 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-240">A .NET Framework-aware type description provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueName">
      <MemberSignature Language="C#" Value="protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetUniqueName(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUniqueName (manager As IDesignerSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetUniqueName(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetUniqueName : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; string" Usage="codeDomSerializerBase.GetUniqueName (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-241">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-241">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-242">이름을 검색할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-242">The object for which the name will be retrieved.</span></span></param>
        <summary><span data-ttu-id="64ddf-243">지정된 개체의 고유한 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-243">Returns a unique name for the given object.</span></span></summary>
        <returns><span data-ttu-id="64ddf-244"><paramref name="value" />에 대한 고유 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-244">A unique name for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-245"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> 메서드는 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-245">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> method calls the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> method.</span></span> <span data-ttu-id="64ddf-246">이 메서드가 반환 되지 않습니다는 이름, 한 다음 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> 사용 하 여 <xref:System.ComponentModel.Design.Serialization.INameCreationService> 개체에 대 한 유효한 이름을 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-246">If this method does not return a name, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> uses <xref:System.ComponentModel.Design.Serialization.INameCreationService> to fabricate a valid name for the object.</span></span> <span data-ttu-id="64ddf-247">서비스를 사용할 수 없는 경우 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> 이름을 고유 하 게 인덱스 번호를 사용 하 여 결합 된 약식 형식 이름을 기반으로 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-247">If the service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> will fabricate a name based on the short type name combined with an index number to make it unique.</span></span> <span data-ttu-id="64ddf-248">호출 하 여 결과 이름을 serialization 관리자를 사용 하 여 연결 된를 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> 메서드 전에 새 이름이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-248">The resulting name is associated with the serialization manager by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> method before the new name is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-249"><paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-249"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-250">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-250">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSerialized">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="64ddf-251">지정된 개체가 serialize되었는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-251">Returns a value indicating whether the given object has been serialized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-252">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-252">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-253">이전 serialization에 대해 테스트할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-253">The object to test for previous serialization.</span></span></param>
        <summary><span data-ttu-id="64ddf-254">지정된 개체가 serialize되었는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-254">Returns a value indicating whether the given object has been serialized.</span></span></summary>
        <returns><span data-ttu-id="64ddf-255"><paramref name="value" />가 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-255"><see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-256">에 대 한는 `value` 간주 되기 위해 매개 변수를 직렬화, `manager` 매개 변수 또는 다른 직렬 변환기를 호출 했어야 합니다를 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 간의 관계를 만드는 메서드를 `value` 및 참조 식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-256">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-257"><paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-257"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-258">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-258">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object, honorPreset As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool honorPreset);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value, honorPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="honorPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-259">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-259">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-260">이전 serialization에 대해 테스트할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-260">The object to test for previous serialization.</span></span></param>
        <param name="honorPreset"><span data-ttu-id="64ddf-261">미리 설정된 식을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-261"><see langword="true" /> to include preset expressions; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="64ddf-262">미리 설정된 식을 선택적으로 고려하여, 특정 개체가 serialize되었는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-262">Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</span></span></summary>
        <returns><span data-ttu-id="64ddf-263"><paramref name="value" />가 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-263"><see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-264">에 대 한는 `value` 간주 되기 위해 매개 변수를 직렬화, `manager` 매개 변수 또는 다른 직렬 변환기를 호출 했어야 합니다를 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 간의 관계를 만드는 메서드를 `value` 및 참조 식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-264">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-265"><paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-265"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-266">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-266">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeCreationExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeCreationExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, [out] bool&amp; isComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeCreationExpression (manager As IDesignerSerializationManager, value As Object, ByRef isComplete As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeCreationExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, [Runtime::InteropServices::Out] bool % isComplete);" />
      <MemberSignature Language="F#" Value="member this.SerializeCreationExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj *  -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeCreationExpression (manager, value, isComplete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isComplete" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-267">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-267">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-268">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-268">The object to serialize.</span></span></param>
        <param name="isComplete"><span data-ttu-id="64ddf-269"><paramref name="value" />가 완전히 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-269"><see langword="true" /> if <paramref name="value" /> was fully serialized; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="64ddf-270">지정된 개체의 생성을 나타내는 식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-270">Returns an expression representing the creation of the given object.</span></span></summary>
        <returns><span data-ttu-id="64ddf-271"><paramref name="value" />의 생성을 나타내는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-271">An expression representing the creation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-272">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> 메서드를 사용 하 여의 생성을 나타내는 식을 serialize 할 수 있습니다는 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-272">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> method can be used to serialize an expression that represents the creation of the `value` parameter.</span></span> <span data-ttu-id="64ddf-273">것이 인스턴스 설명자를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-273">It is aware of instance descriptors.</span></span>  
  
 <span data-ttu-id="64ddf-274">합니다 `isComplete` 매개 변수는 설정 `true` 식이 나타내는 개체를 완전히 구성 된 경우 또는 `false` serialization을 개체의 속성에서 수행 해야 하는 추가 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="64ddf-274">The `isComplete` parameter is set to `true` if the expression represents a fully configured object, or `false` if further serialization must be done on the object's properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-275"><paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-275"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-276">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-276">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvent">
      <MemberSignature Language="C#" Value="protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvent(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.EventDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvent (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, descriptor As EventDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvent(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::EventDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvent : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.EventDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeEvent (manager, statements, value, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-277">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-277">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="64ddf-278">이벤트가 serialize될 <see cref="T:System.CodeDom.CodeStatementCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-278">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-279"><paramref name="descriptor" />가 바인딩될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-279">The object to which <paramref name="descriptor" /> is bound.</span></span></param>
        <param name="descriptor"><span data-ttu-id="64ddf-280">Serialize할 이벤트를 지정하는 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-280">An <see cref="T:System.ComponentModel.EventDescriptor" /> specifying the event to serialize.</span></span></param>
        <summary><span data-ttu-id="64ddf-281">지정된 이벤트를 지정된 문 컬렉션에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-281">Serializes the given event into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-282">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 메서드는 클래스를 파생 하는 도우미 메서드를 단일 이벤트를 직렬화 하기 위해 호출할 수는 지정 된 <xref:System.CodeDom.CodeStatementCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-282">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method is a helper method that derived classes can call to serialize a single event into the given <xref:System.CodeDom.CodeStatementCollection>.</span></span> <span data-ttu-id="64ddf-283"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> serialization 관리자에 대 한 쿼리를 <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> 지정된 된 이벤트에 대 한 한 다음는 <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-283"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> queries the serialization manager for a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the given event, and then asks the <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> to serialize it.</span></span>  
  
 <span data-ttu-id="64ddf-284"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 배치는 `statements` 하 고 `descriptor` 에 매개 변수는 <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="64ddf-284"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> places the `statements` and `descriptor` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 <span data-ttu-id="64ddf-285"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 필요는 <xref:System.ComponentModel.Design.IEventBindingService> 이벤트 바인딩을 컴파일되지 않는 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-285"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> requires an <xref:System.ComponentModel.Design.IEventBindingService> to discover event bindings to methods that are not compiled.</span></span> <span data-ttu-id="64ddf-286">이 서비스가 없으면 컴파일되지 않은 메서드를 이벤트 바인딩 기록 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-286">If this service is not present, event bindings to non-compiled methods will not be written.</span></span> <span data-ttu-id="64ddf-287">컴파일된 메서드를 이벤트 바인딩 이벤트는 바인드되는 개체를 식으로 변환할 수 있으면 계속 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-287">Event bindings to compiled methods will still be serialized if the objects to which the events are bound can be converted into expressions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-288"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> 또는 <paramref name="descriptor" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-288"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException"><span data-ttu-id="64ddf-289"><see cref="T:System.ComponentModel.Design.IEventBindingService" />를 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="64ddf-289"><see cref="T:System.ComponentModel.Design.IEventBindingService" /> is not available.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.ComponentModel.Design.IEventBindingService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-290">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-290">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvents">
      <MemberSignature Language="C#" Value="protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, params Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvents(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvents (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, ParamArray filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvents(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, ... cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvents : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeEvents (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-291">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-291">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="64ddf-292">이벤트가 serialize될 <see cref="T:System.CodeDom.CodeStatementCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-292">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-293">이벤트가 serialize될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-293">The object on which events will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="64ddf-294">Serialize할 이벤트를 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-294">An <see cref="T:System.Attribute" /> array that filters which events will be serialized.</span></span></param>
        <summary><span data-ttu-id="64ddf-295">지정된 이벤트를 제공된 문 컬렉션에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-295">Serializes the specified events into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-296"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> 메서드는 파생 클래스는 도우미 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-296">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="64ddf-297">이벤트를 확인 합니다 `value` 일치 하는 매개 변수를 `filter` 매개 변수를 한 다음 호출을 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 각 이벤트에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-297">It looks at events on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method for each event.</span></span>  
  
 <span data-ttu-id="64ddf-298">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> 메서드 위치를 <xref:System.ComponentModel.InheritanceAttribute> 에 대 한 `value` 에 <xref:System.ComponentModel.Design.Serialization.ContextStack>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-298">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-299"><paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="statements" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-299"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-300">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-300">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperties(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperties (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperties(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperties : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeProperties (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-301">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-301">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="64ddf-302">속성이 serialize될 <see cref="T:System.CodeDom.CodeStatementCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-302">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the properties will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-303">속성이 serialize될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-303">The object on which the properties will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="64ddf-304">Serialize할 속성을 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-304">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span></span></param>
        <summary><span data-ttu-id="64ddf-305">지정된 개체의 속성을 제공된 문 컬렉션에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-305">Serializes the properties on the given object into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-306"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> 메서드는 파생 클래스는 도우미 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-306">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="64ddf-307">속성을 확인 합니다 `value` 일치 하는 매개 변수를 `filter` 매개 변수를 한 다음 호출는 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> 메서드가 각 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-307">It looks at properties on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method for each property.</span></span>  
  
 <span data-ttu-id="64ddf-308">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> 메서드 위치를 <xref:System.ComponentModel.InheritanceAttribute> 에 대 한 `value` 에 <xref:System.ComponentModel.Design.Serialization.ContextStack>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-308">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-309"><paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="statements" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-309"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-310">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-310">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializePropertiesToResources">
      <MemberSignature Language="C#" Value="protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializePropertiesToResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializePropertiesToResources (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializePropertiesToResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializePropertiesToResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializePropertiesToResources (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-311">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-311">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="64ddf-312">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-312">Not used.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-313">속성이 serialize될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-313">The object whose properties will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="64ddf-314">Serialize할 속성을 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-314">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span></span></param>
        <summary><span data-ttu-id="64ddf-315">지정된 개체의 속성을 고정 문화권의 리소스 번들에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-315">Serializes the properties on the given object into the invariant culture's resource bundle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-316"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> 메서드는 파생 클래스는 도우미 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-316">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="64ddf-317">속성을 확인 합니다 `value` 일치 하는 매개 변수는 `filter` 매개 변수를 한 다음 속성을 고정 문화권 리소스 번들으로 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-317">It looks at properties on the `value` parameter that match the `filter` parameter, and then it serializes the properties into the invariant culture resource bundle.</span></span> <span data-ttu-id="64ddf-318">리소스를 반환 하는 경우는 <xref:System.Resources.ResXResourceWriter>, 속성 값을 XML 리소스 (.resx) 파일의 메타 데이터 섹션에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-318">If the resource service returns a <xref:System.Resources.ResXResourceWriter>, the property values will be stored in the metadata section of the XML resource (.resx) file.</span></span> <span data-ttu-id="64ddf-319">`statements` 매개 변수가 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-319">The `statements` parameter is not used.</span></span>  
  
 <span data-ttu-id="64ddf-320">리소스로 직렬화 할 속성 이어야 합니다 (콘텐츠 속성이 아니라) 간편 하 고 해당 값을 직렬화 할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-320">To be serialized as a resource, a property must be simple (not a content property) and its value must be serializable.</span></span> <span data-ttu-id="64ddf-321">이 패턴을 준수 하지 않는 속성을 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-321">Properties that do not conform to this pattern will be skipped.</span></span>  
  
 <span data-ttu-id="64ddf-322"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> 필요는 <xref:System.ComponentModel.Design.IResourceService> 가져오려고는 <xref:System.Resources.ResourceWriter> 고정 문화권에 대 한 리소스를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-322"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the invariant culture.</span></span> <span data-ttu-id="64ddf-323">이 서비스를 사용할 수 없는 경우 리소스가 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-323">If this service is not available, no resources will be written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-324"><paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="statements" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-324"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <altmember cref="T:System.Resources.ResXResourceWriter" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-325">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-325">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperty">
      <MemberSignature Language="C#" Value="protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperty(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.PropertyDescriptor propertyToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperty (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, propertyToSerialize As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperty(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::PropertyDescriptor ^ propertyToSerialize);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperty : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeProperty (manager, statements, value, propertyToSerialize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyToSerialize" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-326">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-326">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="64ddf-327">속성이 serialize될 <see cref="T:System.CodeDom.CodeStatementCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-327">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the property will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-328">속성이 serialize될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-328">The object on which the property will be serialized.</span></span></param>
        <param name="propertyToSerialize"><span data-ttu-id="64ddf-329">serialize할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-329">The property to serialize.</span></span></param>
        <summary><span data-ttu-id="64ddf-330">지정된 개체의 속성을 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-330">Serializes a property on the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-331">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> 메서드에서 검색을 <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> 에 대 한는 `propertyToSerialize` 매개 변수 및 대리자를 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-331">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method retrieves a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the `propertyToSerialize` parameter and delegates to it.</span></span>  
  
 <span data-ttu-id="64ddf-332"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> 배치는 `statements` 하 고 `propertyToSerialize` 에 매개 변수는 <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="64ddf-332"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> places the `statements` and `propertyToSerialize` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-333"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> 또는 <paramref name="propertyToSerialize" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-333"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="propertyToSerialize" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-334">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-334">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResource">
      <MemberSignature Language="C#" Value="protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResource(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResource (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResource(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResource : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResource (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-335">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-335">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="resourceName"><span data-ttu-id="64ddf-336"><paramref name="value" />가 serialize될 리소스 번들의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-336">The name of the resource bundle into which <paramref name="value" /> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-337">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-337">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="64ddf-338">특정 리소스 이름을 사용하여 리소스 번들에 특정 개체를 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-338">Serializes the given object into a resource bundle using the given resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-339"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 메서드는 지정 된 이름으로 리소스 번들에 값을 serialize 하는 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-339">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method is a helper method that serializes a value to a resource bundle under the given name.</span></span> <span data-ttu-id="64ddf-340">Serialization 관리자의 검색 하 여 리소스에 기록 되는 문화권을 결정 하는 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> 컬렉션 속성에 대 한 호출 `ResourceCulture`합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-340">The culture that the resource is written to is determined by searching the serialization manager's <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> collection for a property called `ResourceCulture`.</span></span> <span data-ttu-id="64ddf-341">이 속성이 존재 하는 경우 리소스가 해당 문화권에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-341">If this property exists, resources will be written to that culture.</span></span> <span data-ttu-id="64ddf-342">그렇지 않으면 리소스 고정 문화권으로 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-342">Otherwise, resources will be written to the invariant culture.</span></span> <span data-ttu-id="64ddf-343">`value` 매개 변수를 직렬화 할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-343">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="64ddf-344"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 필요는 <xref:System.ComponentModel.Design.IResourceService> 가져오려고는 <xref:System.Resources.ResourceWriter> 올바른 문화권에 대 한 리소스를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-344"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="64ddf-345">이 서비스를 사용할 수 없는 경우 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 리소스를 나타내는 코드에서 이진 개체 대신 빌드됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-345">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="64ddf-346">
            <see langword="ResourceCulture" /> serialization 관리자를 통해 액세스 되는 읽기 / 쓰기 속성 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-346">
            <see langword="ResourceCulture" /> is a read-write property that is accessed through the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> collection.</span></span> <span data-ttu-id="64ddf-347"><see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> 단순히 읽고 쓰기는 문화권을 식별 하기 위해; 메서드는이 속성의 값을 변경 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-347">The <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> method never changes the value of this property; it merely reads it to identify the culture to which it will write.</span></span> <span data-ttu-id="64ddf-348">리소스 구문 분석 되 고 로드 하는 대로 속성을 역직렬화 하는 동안 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-348">The property is set during deserialization as resources are parsed and loaded.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-349">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-349">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResourceInvariant">
      <MemberSignature Language="C#" Value="protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResourceInvariant(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResourceInvariant (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResourceInvariant(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResourceInvariant : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResourceInvariant (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-350">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-350">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="resourceName"><span data-ttu-id="64ddf-351"><paramref name="value" />가 serialize될 리소스 번들의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-351">The name of the resource bundle into which <paramref name="value" /> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-352">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-352">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="64ddf-353">특정 리소스 이름을 사용하여 리소스 번들에 특정 개체를 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-353">Serializes the given object into a resource bundle using the given resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-354">리소스는 항상 고정 문화권에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-354">The resource is always written to the invariant culture.</span></span> <span data-ttu-id="64ddf-355">`value` 매개 변수를 직렬화 할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-355">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="64ddf-356"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> 메서드를 사용 하려면를 <xref:System.ComponentModel.Design.IResourceService> 가져오려고를 <xref:System.Resources.ResourceWriter> 올바른 문화권에 대 한 리소스를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-356">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> method requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="64ddf-357">이 서비스를 사용할 수 없는 경우 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 리소스를 나타내는 코드에서 이진 개체 대신 빌드됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-357">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-358">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-358">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-359">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-359">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-360">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-360">The object to serialize.</span></span> <span data-ttu-id="64ddf-361"><see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-361">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="64ddf-362">지정된 개체를 식에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-362">Serializes the given object into an expression.</span></span></summary>
        <returns><span data-ttu-id="64ddf-363"><paramref name="value" />를 serialize할 수 있으면 <see cref="T:System.CodeDom.CodeExpression" /> 개체이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-363">A <see cref="T:System.CodeDom.CodeExpression" /> object if <paramref name="value" /> can be serialized; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-364">`value` 매개 변수 수 `null`,이 경우 기본 식이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-364">The `value` parameter can be `null`, in which case a primitive expression will be returned.</span></span>  
  
 <span data-ttu-id="64ddf-365"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> 메서드 형식 직렬화에 대 한 다음 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-365">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method uses the following rules for serializing types:</span></span>  
  
1.  <span data-ttu-id="64ddf-366">먼저 호출 된 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 이미 개체에 대 한 식 작성 되었는지 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-366">It first calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method to see if an expression has already been created for the object.</span></span> <span data-ttu-id="64ddf-367">경우에 기존 식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-367">If so, it returns the existing expression.</span></span>  
  
2.  <span data-ttu-id="64ddf-368">그런 다음 개체의 직렬 변환기를 찾아 serialize 하도록 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-368">It then locates the object's serializer, and asks it to serialize.</span></span>  
  
3.  <span data-ttu-id="64ddf-369">개체의 직렬 변환기의 반환 값이 인지를 <xref:System.CodeDom.CodeExpression>, 식이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-369">If the return value of the object's serializer is a <xref:System.CodeDom.CodeExpression>, the expression is returned.</span></span>  
  
4.  <span data-ttu-id="64ddf-370">마지막으로 호출 하나 있도록 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> serializer 식을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-370">It makes one last call to <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> to see if the serializer added an expression.</span></span>  
  
5.  <span data-ttu-id="64ddf-371">마지막으로, 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-371">Finally, it returns `null`.</span></span>  
  
 <span data-ttu-id="64ddf-372">적절 한 serializer가 찾을 수 없는 식에 만들 수를 serialization 관리자를 통해 오류가 보고 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-372">If no expression could be created and no suitable serializer could be found, an error will be reported through the serialization manager.</span></span> <span data-ttu-id="64ddf-373">직렬 변환기를 찾을 수 있지만 식을 생성에 실패 한 경우 오류가 보고 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-373">No error will be reported if a serializer was found but it failed to produce an expression.</span></span> <span data-ttu-id="64ddf-374">이 경우에 serializer 하거나 이미 보고 된 오류 또는 개체를 serialize 하려고 시도 하지 않은 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-374">In this case, it is assumed that the serializer either already reported the error or it did not attempt to serialize the object.</span></span>  
  
 <span data-ttu-id="64ddf-375">Serializer는 문 또는 문의 컬렉션을 반환 하는 경우 해당 문은 삭제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-375">If the serializer returned a statement or a collection of statements, those statements will not be discarded.</span></span> <span data-ttu-id="64ddf-376">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> 메서드는 먼저 찾습니다는 <xref:System.ComponentModel.Design.Serialization.StatementContext> 컨텍스트에서 스택 및 문 컨텍스트 개체에 문을 추가 <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-376">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will first look for a <xref:System.ComponentModel.Design.Serialization.StatementContext> on the context stack and add statements to the statement context object's <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> property.</span></span> <span data-ttu-id="64ddf-377">문을 컨텍스트가 없는 경우는 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> 메서드 컨텍스트에 표시 됩니다는 <xref:System.CodeDom.CodeStatementCollection> 여기에 문을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-377">If there is no statement context, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will look in the context for a <xref:System.CodeDom.CodeStatementCollection> and add the statements there.</span></span> <span data-ttu-id="64ddf-378">장소가 없습니다 일 수를 문을 추가할 경우 오류가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-378">If no place can be found to add the statements, an error will be generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64ddf-379">호출 하지 않아야 합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> 메서드 내에서 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> 고유한 개체를 직렬화 할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-379">You should not call the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method within <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> when serializing your own object.</span></span> <span data-ttu-id="64ddf-380">대신 호출 해야 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-380">Instead, you should call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>.</span></span> <span data-ttu-id="64ddf-381">반환 하는 경우 `null`, 사용자 고유의 식 및 호출 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-381">If it returns `null`, create your own expression and call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</span></span> <span data-ttu-id="64ddf-382">프로그램 serialization의 나머지 부분을 사용 하 여 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-382">Then proceed with the rest of your serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-383"><paramref name="manager" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-383"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.StatementContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-384">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-384">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SerializeToResourceExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="64ddf-385">개체를 식에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-385">Serializes an object into an expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-386">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-386">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-387">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-387">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="64ddf-388">지정된 개체를 식에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-388">Serializes the given object into an expression.</span></span></summary>
        <returns><span data-ttu-id="64ddf-389"><paramref name="value" />를 serialize된 식으로 포함하는 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-389">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-390"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 리소스 식에 값을 serialize 하는 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-390">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method is a helper method that serializes a value to a resource expression.</span></span> <span data-ttu-id="64ddf-391">이 달리는 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 메서드 값을 이진 리소스를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-391">This is in contrast to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method, which writes a value to a resource binary object.</span></span> <span data-ttu-id="64ddf-392"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 이외에 한 번 더 및 리소스를 복구 하는 식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-392"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> goes one step further and returns an expression that can be used to recover the resource.</span></span> <span data-ttu-id="64ddf-393">예를 들어 반환 값일 수 있습니다 "rm. GetValue("SomeBitmap"); "입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-393">For example, the return value might be "rm.GetValue("SomeBitmap");".</span></span> <span data-ttu-id="64ddf-394">리소스의 이름에서 계산 되는 <xref:System.ComponentModel.Design.Serialization.ExpressionContext>이면 컨텍스트 스택에서 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-394">The name of the resource is calculated from the <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, if one can be found on the context stack.</span></span>  
  
 <span data-ttu-id="64ddf-395">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 메서드를 보여를 <xref:System.ComponentModel.Design.Serialization.ContextStack> 다음 개체:</span><span class="sxs-lookup"><span data-stu-id="64ddf-395">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will look on the <xref:System.ComponentModel.Design.Serialization.ContextStack> for the following objects:</span></span>  
  
-   <span data-ttu-id="64ddf-396"><xref:System.CodeDom.CodeStatementCollection> -문 하나를 선언 해야 하는 경우, 리소스 관리자를 추가할 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-396"><xref:System.CodeDom.CodeStatementCollection> - a collection of statements to add a resource manager to, if one needs to be declared.</span></span>  
  
-   <span data-ttu-id="64ddf-397"><xref:System.ComponentModel.Design.Serialization.RootContext> -리소스 관리자를 만드는 데 필요한 루트 식입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-397"><xref:System.ComponentModel.Design.Serialization.RootContext> - the root expression, which is needed to create a resource manager.</span></span>  
  
-   <span data-ttu-id="64ddf-398"><xref:System.ComponentModel.Design.Serialization.ExpressionContext> -확인에 대 한 resource manager 호출의 형식을 결정 하는 리소스에 대 한 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-398"><xref:System.ComponentModel.Design.Serialization.ExpressionContext> - used to fabricate a name for the resource and to decide what type of resource manager call to make.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-399"><paramref name="manager" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-399"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-400">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-400">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object, ensureInvariant As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool ensureInvariant);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value, ensureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ensureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-401">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-401">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-402">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-402">The object to serialize.</span></span></param>
        <param name="ensureInvariant"><span data-ttu-id="64ddf-403">고정 문화권에 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-403"><see langword="true" /> to serialize into the invariant culture; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="64ddf-404">지정된 개체를 고정 문화권에 알맞은 식에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-404">Serializes the given object into an expression appropriate for the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="64ddf-405"><paramref name="value" />를 serialize된 식으로 포함하는 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-405">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-406">경우는 `ensureInvariant` 매개 변수가 `true`의 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 메서드는 또한 씁니다 리소스 값을 고정 문화권의 리소스 파일로 경우 현재 `ResourceCulture` 고정 문화권 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-406">If the `ensureInvariant` parameter is `true`, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will also write the resource value into the invariant culture's resource file if the current `ResourceCulture` is not the invariant culture.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-407"><paramref name="manager" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-407"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-408">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-408">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="64ddf-409">개체를 식에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-409">Associates an object with an expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-410">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-410">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-411">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-411">The object to serialize.</span></span></param>
        <param name="expression"><span data-ttu-id="64ddf-412"><paramref name="value" />와 연결할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-412">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="64ddf-413">개체를 식에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-413">Associates an object with an expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-414"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 메서드는 연결 하는 도우미 메서드를 <xref:System.CodeDom.CodeExpression> 개체를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-414">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="64ddf-415">이런에서 식으로 연결 되지 않은 개체를 통해 액세스할 수는 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-415">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="64ddf-416"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 모든 serializer에서 액세스할 수 있도록 해당 식을 테이블 컨텍스트 스택에 추가 된 개체로 저장 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-416"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer's <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ddf-417"><paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="expression" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-417"><paramref name="manager" />, <paramref name="value" />, or <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-418">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-418">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression, bool isPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression, isPreset As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression, bool isPreset);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression * bool -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression, isPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="64ddf-419">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-419">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="64ddf-420">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-420">The object to serialize.</span></span></param>
        <param name="expression"><span data-ttu-id="64ddf-421"><paramref name="value" />와 연결할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-421">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</span></span></param>
        <param name="isPreset"><span data-ttu-id="64ddf-422">미리 설정된 식을 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-422"><see langword="true" /> to specify a preset expression; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="64ddf-423">선택적으로 사전 설정 식을 지정하여 개체와 식을 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-423">Associates an object with an expression, optionally specifying a preset expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ddf-424"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 메서드는 연결 하는 도우미 메서드를 <xref:System.CodeDom.CodeExpression> 개체를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="64ddf-424">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="64ddf-425">이런에서 식으로 연결 되지 않은 개체를 통해 액세스할 수는 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-425">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="64ddf-426">합니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 모든 serializer에서 액세스할 수 있도록 해당 식을 테이블 컨텍스트 스택에 추가 된 개체로 저장 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="64ddf-426">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer's <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="64ddf-427">동적 소스 코드 생성 및 컴파일</span><span class="sxs-lookup"><span data-stu-id="64ddf-427">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>