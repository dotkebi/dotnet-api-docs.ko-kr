<Type Name="ComponentSerializationService" FullName="System.ComponentModel.Design.Serialization.ComponentSerializationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d887794ed82fe891a14299c38e502fd83d56b649" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58734591" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComponentSerializationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentSerializationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComponentSerializationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentSerializationService abstract" />
  <TypeSignature Language="F#" Value="type ComponentSerializationService = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d40da-101">구성 요소 또는 serialize 가능한 개체의 집합을 serialization 저장소에 serialize하기 위한 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-101">Provides the base class for serializing a set of components or serializable objects into a serialization store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-102"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> 구성 요소 또는 직렬화 가능 개체 집합을 serialization 저장소에 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-102">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> serializes a set of components or serializable objects into a serialization store.</span></span> <span data-ttu-id="d40da-103">저장소는 나중에 다음 deserialize 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-103">The store can then be deserialized later.</span></span> <span data-ttu-id="d40da-104"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> 클래스와 달리 다른 serialization 체계에서 serialization 형식은 불투명 하 고 개체의 serialization을 부분에 대 한 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-104">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects.</span></span> <span data-ttu-id="d40da-105">예를 들어, 개체에 대해 선택한 속성만 serialize 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-105">For example, you can choose to serialize only selected properties for an object.</span></span>  
  
 <span data-ttu-id="d40da-106">이 클래스는 `abstract`합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-106">This class is `abstract`.</span></span> <span data-ttu-id="d40da-107">일반적으로 <xref:System.ComponentModel.Design.Serialization.DesignerLoader> 이 클래스의 구체적 구현을 제공 되며 서비스로 추가 해당 <xref:System.ComponentModel.Design.DesignSurface>합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-107">Typically, a <xref:System.ComponentModel.Design.Serialization.DesignerLoader> will provide a concrete implementation of this class and add it as a service to its <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="d40da-108">이 따라 개체에 가장 적합 한 형식으로 직렬화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-108">This allows objects to be serialized in the format best suited for them.</span></span>  
  
 <span data-ttu-id="d40da-109">합니다 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> 클래스를 대체 합니다 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> 후자 이전 버전과 호환성을 위해 유지는 되지만.NET Framework 버전 1.0에서에서 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-109">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> class replaces the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="d40da-110">상속 하는 경우는 <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> 클래스,이 클래스의 모든 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-110">When you inherit from the <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> class, you must override all the methods in this class.</span></span> <span data-ttu-id="d40da-111">이러한 메서드 중 일부를 해당 항목의;에 설명 된 대로 예외를 throw 하도록 설계 되었습니다. 작업의 일관성을 유지 하려면 다음이 지침에 따라 클래스 파생 된 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-111">Some of these methods were designed to throw exceptions, as documented in their corresponding topics; it is strongly recommended that derived classes follow these guidelines to maintain consistency of operation.</span></span> <span data-ttu-id="d40da-112">자세한 내용은 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d40da-112">For more information, see the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComponentSerializationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComponentSerializationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d40da-113"><see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <Member MemberName="CreateStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore CreateStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateStore () As SerializationStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ CreateStore();" />
      <MemberSignature Language="F#" Value="abstract member CreateStore : unit -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.CreateStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d40da-114">새 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-114">Creates a new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></summary>
        <returns><span data-ttu-id="d40da-115">새로 생성된 serialization 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-115">A new created serialization store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-116">동일한 serialization 저장소에 여러 개체를 serialize 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-116">Multiple objects can be serialized into the same serialization store.</span></span> <span data-ttu-id="d40da-117">호출할 수는 저장소를 사용 하 여 작업을 완료 하는 경우 해당 <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> 또는 <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d40da-117">When you are finished with the store, you can call its <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> or <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> method.</span></span> <span data-ttu-id="d40da-118">스트림으로 저장할 수 있습니다 또는 닫히면 deserialization에 대 한 serialization 저장소를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-118">Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.</span></span>  
  
 <span data-ttu-id="d40da-119">Serialization 저장소 그룹 개체의 serialization 상태를 생성 하는 다양 한 직렬화 메서드 중 하나에 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-119">The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d40da-120">지정한 저장소를 deserialize하여 개체 컬렉션을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-120">Deserializes the given store to produce a collection of objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-121">deserialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-121">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <summary><span data-ttu-id="d40da-122">지정한 저장소를 deserialize하여 개체 컬렉션을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-122">Deserializes the given store to produce a collection of objects.</span></span></summary>
        <returns><span data-ttu-id="d40da-123">저장된 상태에 따라 만들어진 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-123">A collection of objects created according to the stored state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-124">이 메서드를 역직렬화 `store` 그 안에 포함 된 개체의 컬렉션을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-124">This method deserializes `store` to produce a collection of objects contained within it.</span></span> <span data-ttu-id="d40da-125">개체는 serialize 된 동일한 순서로 deserialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-125">Objects are deserialized in the same order in which they were serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-126"><paramref name="store" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-126"><paramref name="store" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-127"><paramref name="store" />에 serialization 컨테이너에서 처리할 수 있는 형식의 데이터가 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-127"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore, container As IContainer) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-128">deserialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-128">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="d40da-129"><see cref="T:System.ComponentModel.IContainer" /> 개체가 추가될 <see cref="T:System.ComponentModel.IComponent" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-129">The <see cref="T:System.ComponentModel.IContainer" /> to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <summary><span data-ttu-id="d40da-130">특정 저장소를 deserialize하고 특정 <see cref="T:System.ComponentModel.IContainer" />를 deserialize된 <see cref="T:System.ComponentModel.IComponent" /> 개체로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-130">Deserializes the given store and populates the given <see cref="T:System.ComponentModel.IContainer" /> with deserialized <see cref="T:System.ComponentModel.IComponent" /> objects.</span></span></summary>
        <returns><span data-ttu-id="d40da-131">저장된 상태에 따라 만들어진 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-131">A collection of objects created according to the stored state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-132">이 메서드를 역직렬화 `store` 그 안에 포함 된 개체의 컬렉션을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-132">This method deserializes `store` to produce a collection of objects contained within it.</span></span> <span data-ttu-id="d40da-133">개체는 serialize 된 동일한 순서로 deserialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-133">Objects are deserialized in the same order in which they were serialized.</span></span>  
  
 <span data-ttu-id="d40da-134">구현 하는 개체를 만든 <xref:System.ComponentModel.IComponent> 추가할 `container`합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-134">Created objects that implement <xref:System.ComponentModel.IComponent> are added to `container`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-135"><paramref name="store" /> 또는 <paramref name="container" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-135"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-136"><paramref name="store" />에 serialization 컨테이너에서 처리할 수 있는 형식의 데이터가 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-136"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeserializeTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d40da-137">지정된 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 지정된 컨테이너에 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-137">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-138">deserialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-138">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="d40da-139"><see cref="T:System.ComponentModel.IComponent" /> 개체가 추가될 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-139">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <summary><span data-ttu-id="d40da-140">지정된 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 지정된 컨테이너에 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-140">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-141"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> deserialize 메서드 `store`, 있지만 새 개체를 생성 하는 대신 제공된 된 컨테이너에서 수행 되는 개체의 기존 집합에 데이터를 저장소에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-141">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="d40da-142">하지만 결과적으로, 호출자가 개체를 만들 수 미리 적절 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-142">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="d40da-143">개체의 상태를 deserialization 하는 경우 개체 이름이 기존 개체의 집합에 새 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-143">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="d40da-144">해당 개체도 구현 하는 경우 <xref:System.ComponentModel.IComponent>를 추가할 수는 `container`합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-144">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="d40da-145">이름 및 사용할 기존 개체에 대 한 순서로 serialization 저장소의 개체와 일치 하는 개체 컨테이너에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-145">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-146"><paramref name="store" /> 또는 <paramref name="container" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-146"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-147"><paramref name="store" />에 serialization 컨테이너에서 처리할 수 있는 형식의 데이터가 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-147"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-148">deserialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-148">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="d40da-149"><see cref="T:System.ComponentModel.IComponent" /> 개체가 추가될 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-149">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <param name="validateRecycledTypes"><span data-ttu-id="d40da-150">형식이 같은 개체에 적용되는 경우에만 deserialization이 작동하도록 하려면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-150"><see langword="true" /> to guarantee that the deserialization will only work if applied to an object of the same type.</span></span></param>
        <summary><span data-ttu-id="d40da-151">재생된 형식의 유효성을 선택적으로 검사하여 지정된 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 지정된 컨테이너에 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-151">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally validating recycled types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-152"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> deserialize 메서드 `store`, 있지만 새 개체를 생성 하는 대신 제공된 된 컨테이너에서 수행 되는 개체의 기존 집합에 데이터를 저장소에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-152">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="d40da-153">하지만 결과적으로, 호출자가 개체를 만들 수 미리 적절 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-153">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="d40da-154">개체의 상태를 deserialization 하는 경우 개체 이름이 기존 개체의 집합에 새 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-154">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="d40da-155">해당 개체도 구현 하는 경우 <xref:System.ComponentModel.IComponent>를 추가할 수는 `container`합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-155">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="d40da-156">이름 및 사용할 기존 개체에 대 한 순서로 serialization 저장소의 개체와 일치 하는 개체 컨테이너에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-156">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-157"><paramref name="store" /> 또는 <paramref name="container" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-157"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-158"><paramref name="store" />에 serialization 컨테이너에서 처리할 수 있는 형식의 데이터가 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-158"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean, applyDefaults As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes, applyDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
        <Parameter Name="applyDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-159">deserialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-159">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="d40da-160"><see cref="T:System.ComponentModel.IComponent" /> 개체가 추가될 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-160">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <param name="validateRecycledTypes"><span data-ttu-id="d40da-161">형식이 같은 개체에 적용되는 경우에만 deserialization이 작동하도록 하려면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-161"><see langword="true" /> to guarantee that the deserialization will only work if applied to an object of the same type.</span></span></param>
        <param name="applyDefaults"><span data-ttu-id="d40da-162">기본 속성 값을 적용하려면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-162"><see langword="true" /> to indicate that the default property values should be applied.</span></span></param>
        <summary><span data-ttu-id="d40da-163">선택적으로 기본 속성 값을 적용하여 특정 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 특정 컨테이너에 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-163">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally applying default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-164"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> deserialize 메서드 `store`, 있지만 새 개체를 생성 하는 대신 제공된 된 컨테이너에서 수행 되는 개체의 기존 집합에 데이터를 저장소에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-164">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="d40da-165">하지만 결과적으로, 호출자가 개체를 만들 수 미리 적절 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-165">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="d40da-166">개체의 상태를 deserialization 하는 경우 개체 이름이 기존 개체의 집합에 새 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-166">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="d40da-167">해당 개체도 구현 하는 경우 <xref:System.ComponentModel.IComponent>를 추가할 수는 `container`합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-167">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="d40da-168">이름 및 사용할 기존 개체에 대 한 순서로 serialization 저장소의 개체와 일치 하는 개체 컨테이너에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-168">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-169"><paramref name="store" /> 또는 <paramref name="container" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-169"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-170"><paramref name="store" />에 serialization 컨테이너에서 처리할 수 있는 형식의 데이터가 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-170"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore LoadStore(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ LoadStore(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member LoadStore : System.IO.Stream -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.LoadStore stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="d40da-171">저장소가 로드될 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-171">The <see cref="T:System.IO.Stream" /> from which the store will be loaded.</span></span></param>
        <summary><span data-ttu-id="d40da-172">스트림에서 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-172">Loads a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from a stream.</span></span></summary>
        <returns><span data-ttu-id="d40da-173">새 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-173">A new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-174">반환 된 저장소를 사용 하 여 중 하나에 전달 하 여 개체를 deserialize 하는 데는 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d40da-174">You can use the returned store to deserialize objects by passing it to one of the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-175"><paramref name="stream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-175"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-176"><paramref name="stream" />이 이전 <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" /> 호출에 의해 저장된 데이터를 포함하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-176"><paramref name="stream" /> does not contain data saved by a previous call to <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Serialize (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Serialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.Serialize (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-177"><paramref name="value" />의 상태가 작성될 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-177">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="value" /> will be written.</span></span></param>
        <param name="value"><span data-ttu-id="d40da-178">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-178">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="d40da-179">지정된 개체를 지정된 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />에 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-179">Serializes the given object to the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-180">이 메서드를 두 번 이상 호출 하 여 둘 이상의 개체를 serialize 하는 저장소를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-180">The store can be used to serialize more than one object by calling this method more than once.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-181"><paramref name="store" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-181"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-182"><paramref name="store" />가 닫혀 있거나 <paramref name="store" />가 지원되지 않는 serialization 저장소 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-182"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="d40da-183"><see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환하는 저장소를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-183">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
    <Member MemberName="SerializeAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeAbsolute (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.SerializeAbsolute (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-184"><paramref name="value" />의 상태가 serialize될 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-184">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="value" /> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="d40da-185">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-185">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="d40da-186">기본 속성 값을 설명하는 지정된 개체를 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-186">Serializes the given object, accounting for default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-187">표준 serialization을 통해 구현 되는 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> 메서드에서 구성 요소의 기본 상태에서 다른 값을 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-187">Standard serialization, as implemented through the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> method, only serializes values that differ from the component's default state.</span></span> <span data-ttu-id="d40da-188">이 가장 간단한 serialization 메커니즘을 제공 하지만 새로 만든된 개체를 역직렬화 하는 동안 사용할 수 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-188">This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization.</span></span> <span data-ttu-id="d40da-189">기존 개체를 사용 하는 경우 deserialize 된 결과 개체는 직렬화 된 개체의 원래 상태를 복제 하는 보장 되지 않습니다. 역직렬화 하는 동안 직렬화 하는 동안 기본 값을 포함 하는 속성을 기본값으로 다시 재설정 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-189">If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.</span></span>  
  
 <span data-ttu-id="d40da-190"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A> 메서드가 바로이 가기를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-190">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A> method does not use this shortcut.</span></span> <span data-ttu-id="d40da-191">Deserialization에는 기본 상태에 관계 없이 모든 개체의 속성을 복원할 수 있도록에 원본 개체의 모든 속성을 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-191">It serializes all properties of the source object so that deserialization can restore all the object's properties, regardless of default state.</span></span>  
  
 <span data-ttu-id="d40da-192">이 메서드는 컬렉션 내에서 구성 항목의 순서 변경 될 수 있으므로 컬렉션을 직렬화 하는 데 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-192">This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change.</span></span> <span data-ttu-id="d40da-193">이 경우에는 전체 컬렉션의 원래 상태를 복원 하는 가장 안전한 프로세스 원래 모든 속성 값을 가진 모든 항목을 덮어쓰게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-193">In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-194"><paramref name="store" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-194"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-195"><paramref name="store" />가 닫혀 있거나 <paramref name="store" />가 지원되지 않는 serialization 저장소 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-195"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="d40da-196"><see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환하는 저장소를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-196">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMember">
      <MemberSignature Language="C#" Value="public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMember(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMember (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMember(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMember : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMember (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-197"><paramref name="member" />의 상태가 serialize될 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-197">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="member" /> will be serialized.</span></span></param>
        <param name="owningObject"><span data-ttu-id="d40da-198"><paramref name="member" />가 연결된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-198">The object to which <paramref name="member" /> is attached.</span></span></param>
        <param name="member"><span data-ttu-id="d40da-199">serialize할 멤버를 지정하는 <see cref="T:System.ComponentModel.MemberDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-199">A <see cref="T:System.ComponentModel.MemberDescriptor" /> specifying the member to serialize.</span></span></param>
        <summary><span data-ttu-id="d40da-200">지정된 개체의 지정된 멤버를 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-200">Serializes the given member on the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-201"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A> 동일한 개체 serialization 저장소 내에서 serialize 된 멤버의 목록을 작성 하는 메서드가 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-201">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A> method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store.</span></span> <span data-ttu-id="d40da-202">일반적으로 멤버 속성 또는 이벤트가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-202">In general, the member should be a property or an event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-203"><paramref name="store" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-203"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-204"><paramref name="store" />가 닫혀 있거나 <paramref name="store" />가 지원되지 않는 serialization 저장소 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-204"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="d40da-205"><see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환하는 저장소를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-205">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMemberAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMemberAbsolute (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMemberAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMemberAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMemberAbsolute (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="d40da-206"><paramref name="member" />의 상태가 serialize될 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-206">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="member" /> will be serialized.</span></span></param>
        <param name="owningObject"><span data-ttu-id="d40da-207"><paramref name="member" />가 연결된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-207">The object to which <paramref name="member" /> is attached.</span></span></param>
        <param name="member"><span data-ttu-id="d40da-208">serialize할 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-208">The member to serialize.</span></span></param>
        <summary><span data-ttu-id="d40da-209">기본 속성 값을 설명하는 지정된 개체의 지정된 멤버를 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-209">Serializes the given member on the given object, accounting for the default property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d40da-210">합니다 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> 메서드를 serialize 합니다 `member` 에 `owningObject`경우에 `member` 기본 속성 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-210">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> method serializes the `member` on `owningObject`, even if `member` contains the default property value.</span></span>  
  
 <span data-ttu-id="d40da-211">일부 멤버에 대 한 기본값을 포함 하 고 멤버에 동일한 값을 설정 복원는 서로 다른 개념 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-211">Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts.</span></span> <span data-ttu-id="d40da-212">예를 들어 지역 값이 설정 된 경우 부모 개체에서 해당 값을 상속 하는 속성, 경우 속성 값을 다시 설정 되지 않을 수 있습니다 것은 바람직하지 합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-212">For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired.</span></span> <span data-ttu-id="d40da-213"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> 메서드는 계정에이 사용 하 고이 경우 속성의 상태가 지워집니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-213">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> method takes this into account and would clear the state of the property in this case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d40da-214"><paramref name="store" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-214"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d40da-215"><paramref name="store" />가 닫혀 있거나 <paramref name="store" />가 지원되지 않는 serialization 저장소 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="d40da-215"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="d40da-216"><see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환하는 저장소를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d40da-216">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
  </Members>
</Type>