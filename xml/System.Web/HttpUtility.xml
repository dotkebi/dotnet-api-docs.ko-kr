<Type Name="HttpUtility" FullName="System.Web.HttpUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e0fbe198c0e294b5ccebe4d1f8a4f586a50c5da" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57954814" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpUtility sealed" />
  <TypeSignature Language="F#" Value="type HttpUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.HttpUtility</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a13a7-101">웹 요청을 처리할 때 URL 인코딩 및 디코딩을 위한 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span> <span data-ttu-id="a13a7-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-103"><xref:System.Web.HttpUtility> 클래스에서 내부적으로 사용 되는 <xref:System.Web.HttpServerUtility> 클래스, 메서드 및 속성에 해당 내장 ASP.NET를 통해 노출 되 <xref:System.Web.HttpContext.Server%2A> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-103">The <xref:System.Web.HttpUtility> class is used internally by the <xref:System.Web.HttpServerUtility> class, whose methods and properties are exposed through the intrinsic ASP.NET <xref:System.Web.HttpContext.Server%2A> object.</span></span> <span data-ttu-id="a13a7-104">또한 합니다 <xref:System.Web.HttpUtility> 인코딩 및 디코딩에서 액세스할 수 있는 유틸리티 메서드를 포함 하는 클래스는 <xref:System.Web.HttpContext.Server%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-104">Additionally, the <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods that are not accessible from the <xref:System.Web.HttpContext.Server%2A>.</span></span>  
  
 <span data-ttu-id="a13a7-105">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-105">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a13a7-106">다음 코드 예제에서는 합니다 <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> 및 <xref:System.Web.HttpUtility.ParseQueryString%2A> 의 메서드는 <xref:System.Web.HttpUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-106">The following code example demonstrates the use of the <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> and <xref:System.Web.HttpUtility.ParseQueryString%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span>  
  
 [!code-aspx-csharp[HttpUtilityExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtilityExample/cs/httputilityexample.aspx#1)]
 [!code-aspx-vb[HttpUtilityExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtilityExample/vb/httputilityexample.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-107">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-107">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a13a7-108"><see cref="T:System.Web.HttpUtility" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-108">Initializes a new instance of the <see cref="T:System.Web.HttpUtility" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-109"><xref:System.Web.HttpUtility> 클래스 인코딩을 위한 메서드를 노출 하 고 Url 기반 문자열 디코딩 토큰 URL 및 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-109">The <xref:System.Web.HttpUtility> class exposes methods for encoding and decoding string based URLs, URL tokens, and paths.</span></span> <span data-ttu-id="a13a7-110">합니다 <xref:System.Web.HttpUtility> 에서 내부적으로 사용 되는 <xref:System.Web.HttpServerUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-110">The <xref:System.Web.HttpUtility> is used internally by the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlAttributeEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-111">적어도 문자열을 HTML 인코딩 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-111">Minimally converts a string into an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string HtmlAttributeEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlAttributeEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlAttributeEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlAttributeEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlAttributeEncode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlAttributeEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a13a7-112">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-112">The string to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-113">적어도 문자열 하나를 HTML로 인코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-113">Minimally converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-114">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-114">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-115"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 메서드는 HTML 특성 값에 대 한 적절 한 문자를 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-115">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method encodes characters appropriate for insertion into an HTML attribute value.</span></span>  
  
 <span data-ttu-id="a13a7-116">문자열 결과 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 큰따옴표로 묶인 특성에 대해서만 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-116">The string result from the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method should be used only for double-quoted attributes.</span></span> <span data-ttu-id="a13a7-117">사용 하는 경우 보안 문제가 발생할 수 있습니다는 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 작은따옴표로 묶인 특성을 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-117">Security issues might arise when using the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method with single-quoted attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-118">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-118">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static void HtmlAttributeEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlAttributeEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlAttributeEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlAttributeEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlAttributeEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a13a7-119">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-119">The string to encode</span></span></param>
        <param name="output"><span data-ttu-id="a13a7-120"><see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-120">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="a13a7-121">최소한 문자열을 HTML로 인코딩된 문자열로 변환하고 인코딩된 문자열을 <see cref="T:System.IO.TextWriter" /> 출력 스트림으로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-121">Minimally converts a string into an HTML-encoded string and sends the encoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-122"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 메서드 변환만 따옴표 ("), 앰퍼샌드 (&), 왼쪽 꺾쇠 괄호 (<)를 해당 문자 엔터티로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-122">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method converts only quotation marks ("), ampersands (&), and left angle brackets (<) to equivalent character entities.</span></span> <span data-ttu-id="a13a7-123">보다 훨씬 빠릅니다는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-123">It is considerably faster than the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span>  
  
 <span data-ttu-id="a13a7-124">문자열 결과 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 큰따옴표로 묶인 특성에 대해서만 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-124">The string result from the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method should be used only for double-quoted attributes.</span></span> <span data-ttu-id="a13a7-125">사용 하는 경우 보안 문제가 발생할 수 있습니다는 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 작은따옴표로 묶인 특성을 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-125">Security issues might arise when using the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method with single-quoted attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-126">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-126">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-127">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-127">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span>  
  
<span data-ttu-id="a13a7-128">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-128">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a13a7-129">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-129">The string to decode.</span></span></param>
        <summary><span data-ttu-id="a13a7-130">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-130">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-131">디코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-131">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-132">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-133">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-134">예를 들어 문자 텍스트 블록에 포함 하면 \< 및 >로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-134">For example, when embedded in a block of text, the characters \< and > are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="a13a7-135">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-135">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a13a7-136">다음 코드 예제는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 하 고 <xref:System.Web.HttpUtility.HtmlDecode%2A> 의 메서드를 <xref:System.Web.HttpUtility> 클래스.</span><span class="sxs-lookup"><span data-stu-id="a13a7-136">The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span> <span data-ttu-id="a13a7-137">사용 하 여 입력된 문자열을 인코딩할는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-137">The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span> <span data-ttu-id="a13a7-138">가져온 인코딩된 문자열은 사용 하 여 디코딩된 다음는 <xref:System.Web.HttpUtility.HtmlDecode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-138">The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.</span></span>  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a13a7-139">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-139">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="a13a7-140"><see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-140">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="a13a7-141">HTML 인코딩된 문자열을 디코딩된 문자열로 변환하여 디코딩된 문자열을 <see cref="T:System.IO.TextWriter" /> 출력 스트림에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-141">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-142">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-143">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-143">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-144">예를 들어 문자 텍스트 블록에 포함 하면 \< 및 >로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-144">For example, when embedded in a block of text, the characters \< and > are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="a13a7-145">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-145">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-146">문자열을 HTML 인코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-146">Converts a string into an HTML-encoded string.</span></span>  
  
<span data-ttu-id="a13a7-147">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-147">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : obj -&gt; string" Usage="System.Web.HttpUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a13a7-148">개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-148">An object.</span></span></param>
        <summary><span data-ttu-id="a13a7-149">개체의 문자열 표현을 HTML로 인코딩된 문자열로 변환하고 인코딩된 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-149">Converts an object's string representation into an HTML-encoded string, and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-150">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-150">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-151">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-151">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a13a7-152">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-152">The string to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-153">문자열을 HTML 인코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-153">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-154">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-154">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-155">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-155">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-156">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-156">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-157">예를 들어 문자 텍스트 블록에 포함 하면 \< 및 >로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-157">For example, when embedded in a block of text, the characters \< and > are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="a13a7-158">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-158">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a13a7-159">다음 코드 예제는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 하 고 <xref:System.Web.HttpUtility.HtmlDecode%2A> 의 메서드를 <xref:System.Web.HttpUtility> 클래스.</span><span class="sxs-lookup"><span data-stu-id="a13a7-159">The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span> <span data-ttu-id="a13a7-160">사용 하 여 입력된 문자열을 인코딩할는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-160">The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span> <span data-ttu-id="a13a7-161">가져온 인코딩된 문자열은 사용 하 여 디코딩된 다음는 <xref:System.Web.HttpUtility.HtmlDecode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-161">The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.</span></span>  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-162">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-162">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a13a7-163">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-163">The string to encode</span></span></param>
        <param name="output"><span data-ttu-id="a13a7-164"><see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-164">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="a13a7-165">문자열을 HTML 인코딩된 문자열로 변환하고 출력 스트림 <see cref="T:System.IO.TextWriter" />로 출력을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-165">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-166">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-166">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-167">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-167">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-168">예를 들어 문자 텍스트 블록에 포함 하면 \< 및 >로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-168">For example, when embedded in a block of text, the characters \< and >, are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="a13a7-169">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-169">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-170">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-170">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="JavaScriptStringEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-171">문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-171">Encodes a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-172">이 메서드는 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-172">This method encodes strings.</span></span> <span data-ttu-id="a13a7-173">작은따옴표와 큰따옴표를 포함 된 예를 들어 `\'` 및 `\"` 인코딩된 문자열에서입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-173">For instance, single quotation marks and double quotation marks are included as `\'` and `\"` in the encoded string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member JavaScriptStringEncode : string -&gt; string" Usage="System.Web.HttpUtility.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a13a7-174">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-174">A string to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-175">문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-175">Encodes a string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-176">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-176">An encoded string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value, bool addDoubleQuotes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value, bool addDoubleQuotes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String, addDoubleQuotes As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value, bool addDoubleQuotes);" />
      <MemberSignature Language="F#" Value="static member JavaScriptStringEncode : string * bool -&gt; string" Usage="System.Web.HttpUtility.JavaScriptStringEncode (value, addDoubleQuotes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="addDoubleQuotes" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a13a7-177">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-177">A string to encode.</span></span></param>
        <param name="addDoubleQuotes"><span data-ttu-id="a13a7-178">인코딩된 문자열을 큰따옴표로 묶을지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-178">A value that indicates whether double quotation marks will be included around the encoded string.</span></span></param>
        <summary><span data-ttu-id="a13a7-179">문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-179">Encodes a string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-180">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-180">An encoded string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseQueryString">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-181">쿼리 문자열을 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 구문 분석합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-181">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseQueryString (query As String) As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query);" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : string -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpUtility.ParseQueryString query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="a13a7-182">구문 분석할 쿼리 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-182">The query string to parse.</span></span></param>
        <summary><span data-ttu-id="a13a7-183"><see cref="T:System.Collections.Specialized.NameValueCollection" /> 인코딩을 사용하여 쿼리 문자열을 <see cref="P:System.Text.Encoding.UTF8" />으로 구문 분석합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-183">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" /> using <see cref="P:System.Text.Encoding.UTF8" /> encoding.</span></span></summary>
        <returns><span data-ttu-id="a13a7-184">쿼리 매개 변수와 값이 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-184">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of query parameters and values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-185">합니다 <xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드 <xref:System.Text.Encoding.UTF8%2A> 형식으로 반환 된 쿼리 문자열을 구문 분석 <xref:System.Collections.Specialized.NameValueCollection>, URL로 인코딩된 문자 디코딩 및 각 구분 쉼표를 사용 하 여 동일한 쿼리 문자열 매개 변수를 여러 번 단일 항목으로 나열 됩니다 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-185">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses <xref:System.Text.Encoding.UTF8%2A> format to parse the query string In the returned <xref:System.Collections.Specialized.NameValueCollection>, URL-encoded characters are decoded and multiple occurrences of the same query string parameter are listed as a single entry with a comma separating each value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a13a7-186"><xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드는 잠재적 보안 위협을 사용자 입력을 포함할 수 있는 쿼리 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-186">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses query strings that might contain user input, which is a potential security threat.</span></span> <span data-ttu-id="a13a7-187">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-187">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="a13a7-188">자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a13a7-188">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a13a7-189">다음 코드 예제에서는 <xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-189">The following code example demonstrates how to use the <xref:System.Web.HttpUtility.ParseQueryString%2A> method.</span></span> <span data-ttu-id="a13a7-190">쿼리 문자열 변수를 여러 번 반환 된 단일 항목으로 통합 됩니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-190">Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
 [!code-aspx-csharp[HttpUtility_ParseQueryString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_ParseQueryString/cs/httputility_parsequerystring.aspx#1)]
 [!code-aspx-vb[HttpUtility_ParseQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_ParseQueryString/vb/httputility_parsequerystring.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a13a7-191"><paramref name="query" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-191"><paramref name="query" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : string * System.Text.Encoding -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpUtility.ParseQueryString (query, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="a13a7-192">구문 분석할 쿼리 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-192">The query string to parse.</span></span></param>
        <param name="encoding"><span data-ttu-id="a13a7-193">사용할 <see cref="T:System.Text.Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-193">The <see cref="T:System.Text.Encoding" /> to use.</span></span></param>
        <summary><span data-ttu-id="a13a7-194">지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />을 사용하여 쿼리 문자열을 <see cref="T:System.Text.Encoding" />으로 구문 분석합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-194">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" /> using the specified <see cref="T:System.Text.Encoding" />.</span></span></summary>
        <returns><span data-ttu-id="a13a7-195">쿼리 매개 변수와 값이 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-195">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of query parameters and values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-196">반환 된 <xref:System.Collections.Specialized.NameValueCollection>, URL로 인코딩된 문자 디코딩 및 각 값을 구분 하는 쉼표를 사용 하 여 동일한 쿼리 문자열 매개 변수를 여러 번 단일 항목으로 나열 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-196">In the returned <xref:System.Collections.Specialized.NameValueCollection>, URL-encoded characters are decoded and multiple occurrences of the same query string parameter are listed as a single entry with a comma separating each value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a13a7-197"><xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드는 잠재적 보안 위협을 사용자 입력을 포함할 수 있는 쿼리 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-197">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses query strings that might contain user input, which is a potential security threat.</span></span> <span data-ttu-id="a13a7-198">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-198">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="a13a7-199">자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a13a7-199">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a13a7-200"><paramref name="query" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-200"><paramref name="query" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a13a7-201">또는</span><span class="sxs-lookup"><span data-stu-id="a13a7-201">-or-</span></span> 
 <span data-ttu-id="a13a7-202"><paramref name="encoding" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-202"><paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-203">URL 전송을 위해 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-203">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span>  
  
<span data-ttu-id="a13a7-204">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-204">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Web.HttpUtility.UrlDecode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-205">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-205">The string to decode.</span></span></param>
        <summary><span data-ttu-id="a13a7-206">URL 전송을 위해 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-206">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-207">디코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-207">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-208">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-208">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-209">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-209">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-210">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-210">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-211">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-211">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : byte[] * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (bytes, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-212">디코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-212">The array of bytes to decode.</span></span></param>
        <param name="e"><span data-ttu-id="a13a7-213">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-213">The <see cref="T:System.Text.Encoding" /> that specifies the decoding scheme.</span></span></param>
        <summary><span data-ttu-id="a13a7-214">지정된 디코딩 개체를 사용하여 URL로 인코딩된 바이트 배열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-214">Converts a URL-encoded byte array into a decoded string using the specified decoding object.</span></span></summary>
        <returns><span data-ttu-id="a13a7-215">디코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-215">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-216">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-216">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-217">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-217">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-218">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-218">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-219">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-219">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C#" Value="public static string UrlDecode (string s, System.Text.Encoding e);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string s, class System.Text.Encoding e) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (s As String, e As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ s, System::Text::Encoding ^ e);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (str, e)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (s, e)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-220">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-220">The string to decode.</span></span></param>
        <param name="s"><span data-ttu-id="a13a7-221">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-221">The string to decode.</span></span></param>
        <param name="e"><span data-ttu-id="a13a7-222">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-222">The <see cref="T:System.Text.Encoding" /> that specifies the decoding scheme.</span></span></param>
        <summary><span data-ttu-id="a13a7-223">지정된 인코딩 개체를 사용하여 URL 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-223">Converts a URL-encoded string into a decoded string, using the specified encoding object.</span></span></summary>
        <returns><span data-ttu-id="a13a7-224">디코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-224">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-225">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-225">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-226">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-226">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-227">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-227">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-228">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-228">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, int offset, int count, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, int32 offset, int32 count, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), offset As Integer, count As Integer, e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : byte[] * int * int * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (bytes, offset, count, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-229">디코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-229">The array of bytes to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="a13a7-230">디코딩할 바이트의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-230">The position in the byte to begin decoding.</span></span></param>
        <param name="count"><span data-ttu-id="a13a7-231">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-231">The number of bytes to decode.</span></span></param>
        <param name="e"><span data-ttu-id="a13a7-232">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-232">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding scheme.</span></span></param>
        <summary><span data-ttu-id="a13a7-233">지정된 인코딩 개체를 사용하여 URL로 인코딩된 바이트 배열을 배열의 지정된 위치부터 지정된 바이트 수만큼씩 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-233">Converts a URL-encoded byte array into a decoded string using the specified encoding object, starting at the specified position in the array, and continuing for the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-234">디코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-234">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-235">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-235">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-236">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-236">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-237">예를 들어, 블록 URL에 전송 될 텍스트의 문자를 포함 하는 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-237">For example, when embedded in a block of text to be transmitted in a URL the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-238">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-238">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a13a7-239"><paramref name="bytes" />가 <see langword="null" />이지만 <paramref name="count" />는 <see langword="0" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="a13a7-239"><paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a13a7-240"><paramref name="offset" />이 <see langword="0" />보다 작거나 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="a13a7-240"><paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span></span>  
  
<span data-ttu-id="a13a7-241">또는</span><span class="sxs-lookup"><span data-stu-id="a13a7-241">-or-</span></span> 
 <span data-ttu-id="a13a7-242"><paramref name="count" />가 <see langword="0" />보다 작거나 <paramref name="count" /> + <paramref name="offset" />이 <paramref name="bytes" /> 배열 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-242"><paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span></span></exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-243">URL 인코딩된 문자열 또는 바이트 배열을 디코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-243">Converts a URL-encoded string or byte array into a decoded array of bytes.</span></span>  
  
<span data-ttu-id="a13a7-244">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-244">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-245">디코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-245">The array of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a13a7-246">URL 인코딩된 바이트 배열을 디코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-246">Converts a URL-encoded array of bytes into a decoded array of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-247">디코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-247">A decoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-248">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-248">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-249">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-249">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-250">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-250">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-251">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-251">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-252">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-252">The string to decode.</span></span></param>
        <summary><span data-ttu-id="a13a7-253">URL 인코딩된 문자열을 디코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-253">Converts a URL-encoded string into a decoded array of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-254">디코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-254">A decoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-255">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-255">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-256">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-256">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-257">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-257">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-258">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-258">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : string * System.Text.Encoding -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes (str, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-259">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-259">The string to decode.</span></span></param>
        <param name="e"><span data-ttu-id="a13a7-260">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-260">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding scheme.</span></span></param>
        <summary><span data-ttu-id="a13a7-261">지정된 디코딩 개체를 사용하여 URL로 인코딩된 문자열을 디코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-261">Converts a URL-encoded string into a decoded array of bytes using the specified decoding object.</span></span></summary>
        <returns><span data-ttu-id="a13a7-262">디코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-262">A decoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-263">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-263">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-264">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-264">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-265">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-265">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-266">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-266">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-267">디코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-267">The array of bytes to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="a13a7-268">디코딩할 바이트 배열의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-268">The position in the byte array at which to begin decoding.</span></span></param>
        <param name="count"><span data-ttu-id="a13a7-269">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-269">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a13a7-270">배열의 지정된 위치부터 지정된 바이트 수만큼 URL 인코딩된 바이트 배열을 디코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-270">Converts a URL-encoded array of bytes into a decoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-271">디코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-271">A decoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-272">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-272">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-273">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-273">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-274">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-274">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-275">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-275">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a13a7-276"><paramref name="bytes" />가 <see langword="null" />이지만 <paramref name="count" />는 <see langword="0" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="a13a7-276"><paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a13a7-277"><paramref name="offset" />이 <see langword="0" />보다 작거나 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="a13a7-277"><paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span></span>  
  
<span data-ttu-id="a13a7-278">또는</span><span class="sxs-lookup"><span data-stu-id="a13a7-278">-or-</span></span> 
 <span data-ttu-id="a13a7-279"><paramref name="count" />가 <see langword="0" />보다 작거나 <paramref name="count" /> + <paramref name="offset" />이 <paramref name="bytes" /> 배열 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-279"><paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span></span></exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-280">URL 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-280">Encodes a URL string.</span></span> <span data-ttu-id="a13a7-281">이러한 메서드 오버로드는 쿼리 문자열 값을 포함하여 전체 URL을 인코딩하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-281">These method overloads can be used to encode the entire URL, including query-string values.</span></span>  
  
<span data-ttu-id="a13a7-282">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-282">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : byte[] -&gt; string" Usage="System.Web.HttpUtility.UrlEncode bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-283">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-283">The array of bytes to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-284">바이트 배열을 인코딩된 URL 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-284">Converts a byte array into an encoded URL string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-285">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-285">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-286"><xref:System.Web.HttpUtility.UrlEncode%2A> 메서드를 사용 하 여 쿼리 문자열 값을 포함 한 전체 URL을 인코딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-286">The <xref:System.Web.HttpUtility.UrlEncode%2A> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="a13a7-287">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-287">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-288">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-288">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-289">예를 들어, 문자 \< 및 > 포함 된 %3c 및 %3e로 인코딩됩니다 URL에 전송 될 텍스트의 블록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-289">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-290">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-290">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-291">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-291">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlEncode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-292">인코딩할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-292">The text to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-293">URL 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-293">Encodes a URL string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-294">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-294">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-295"><xref:System.Web.HttpUtility.UrlEncode%28System.String%29> 메서드를 사용 하 여 쿼리 문자열 값을 포함 한 전체 URL을 인코딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-295">The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="a13a7-296">공백 및 문장 부호 등의 문자 인코딩 없이 HTTP 스트림으로 전달 되는, 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-296">If characters such as blanks and punctuation are passed in an HTTP stream without encoding, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-297">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-297">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-298">예를 들어, 문자 \< 및 > 포함 된 %3c 및 %3e로 인코딩됩니다 URL에 전송 될 텍스트의 블록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-298">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-299">사용 하 여 사용 하는 URL을 인코딩할 수는 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드 또는 <xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-299">You can encode a URL using with the <xref:System.Web.HttpUtility.UrlEncode%2A> method or the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="a13a7-300">그러나 메서드는 다른 결과 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-300">However, the methods return different results.</span></span> <span data-ttu-id="a13a7-301"><xref:System.Web.HttpUtility.UrlEncode%2A> 메서드는 더하기 문자 (+)를 각 공백 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-301">The <xref:System.Web.HttpUtility.UrlEncode%2A> method converts each space character to a plus character (+).</span></span> <span data-ttu-id="a13a7-302"><xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드 "%20" 문자열에 16 진수 표기법의 공간을 나타내는 각 공백 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-302">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method converts each space character into the string "%20", which represents a space in hexadecimal notation.</span></span> <span data-ttu-id="a13a7-303">사용 된 <xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드는 플랫폼 또는 브라우저에 관계 없이 일관 된 디코딩된 URL을 보장 하기 위해 URL의 경로 부분을 인코딩할 때 디코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-303">Use the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method when you encode the path portion of a URL in order to guarantee a consistent decoded URL, regardless of which platform or browser performs the decoding.</span></span>  
  
 <span data-ttu-id="a13a7-304"><xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 메서드가 기본적으로 인코딩을 u t F-8을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-304">The <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method uses UTF-8 encoding by default.</span></span> <span data-ttu-id="a13a7-305">따라서 사용 하 여는 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드를 사용 하 여 동일한 결과 제공 합니다 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드와 지정 <xref:System.Text.Encoding.UTF8%2A> 두 번째 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-305">Therefore, using the <xref:System.Web.HttpUtility.UrlEncode%2A> method provides the same results as using the <xref:System.Web.HttpUtility.UrlEncode%2A> method and specifying <xref:System.Text.Encoding.UTF8%2A> as the second parameter.</span></span>  
  
 <span data-ttu-id="a13a7-306"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 편리 하 게 액세스 되는 <xref:System.Web.HttpUtility.UrlEncode%2A> ASP.NET 응용 프로그램에서 런타임에 메서드.</span><span class="sxs-lookup"><span data-stu-id="a13a7-306"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a13a7-307">내부적으로 <xref:System.Web.HttpServerUtility.UrlEncode%2A> 사용을 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-307">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode strings.</span></span>  
  
 <span data-ttu-id="a13a7-308">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-308">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-309">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-309">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : byte[] * int * int -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-310">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-310">The array of bytes to encode.</span></span></param>
        <param name="offset"><span data-ttu-id="a13a7-311">인코딩할 바이트 배열의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-311">The position in the byte array at which to begin encoding.</span></span></param>
        <param name="count"><span data-ttu-id="a13a7-312">인코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-312">The number of bytes to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-313">바이트 배열을 배열의 지정된 위치부터 지정된 바이트 수만큼씩 URL로 인코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-313">Converts a byte array into a URL-encoded string, starting at the specified position in the array and continuing for the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-314">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-314">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-315"><xref:System.Web.HttpUtility.UrlEncode%28System.String%29> 메서드를 사용 하 여 쿼리 문자열 값을 포함 한 전체 URL을 인코딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-315">The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="a13a7-316">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-316">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-317">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-317">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-318">예를 들어, 문자 \< 및 > 포함 된 %3c 및 %3e로 인코딩됩니다 URL에 전송 될 텍스트의 블록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-318">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-319">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-319">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-320">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-320">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C#" Value="public static string UrlEncode (string s, System.Text.Encoding Enc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string s, class System.Text.Encoding Enc) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (s As String, Enc As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ s, System::Text::Encoding ^ Enc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (str, e)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (s, Enc)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
        <Parameter Name="Enc" Type="System.Text.Encoding" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-321">인코딩할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-321">The text to encode.</span></span></param>
        <param name="s"><span data-ttu-id="a13a7-322">인코딩할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-322">The text to encode.</span></span></param>
        <param name="e"><span data-ttu-id="a13a7-323">인코딩 체계를 지정하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-323">The <see cref="T:System.Text.Encoding" /> object that specifies the encoding scheme.</span></span></param>
        <param name="Enc"><span data-ttu-id="a13a7-324">인코딩 체계를 지정하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-324">The <see cref="T:System.Text.Encoding" /> object that specifies the encoding scheme.</span></span></param>
        <summary><span data-ttu-id="a13a7-325">지정된 인코딩 개체를 사용하여 URL 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-325">Encodes a URL string using the specified encoding object.</span></span></summary>
        <returns><span data-ttu-id="a13a7-326">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-326">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-327">이 메서드 쿼리 문자열 값을 포함 한 전체 URL을 인코딩하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-327">This method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="a13a7-328">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-328">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-329">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-329">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-330">예를 들어, 문자 \< 및 > 포함 된 %3c 및 %3e로 인코딩됩니다 URL에 전송 될 텍스트의 블록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-330">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-331">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-331">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-332">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-332">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a13a7-333">문자열 또는 바이트 배열을 인코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-333">Converts a string or a byte array into an encoded array of bytes.</span></span>  
  
<span data-ttu-id="a13a7-334">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-334">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-335">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-335">The array of bytes to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-336">바이트 배열을 URL 인코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-336">Converts an array of bytes into a URL-encoded array of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-337">인코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-337">An encoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-338">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-338">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-339">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-339">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-340">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-340">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-341">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-341">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-342">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-342">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-343">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-343">The string to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-344">문자열을 URL 인코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-344">Converts a string into a URL-encoded array of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-345">인코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-345">An encoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-346">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-346">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-347">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-347">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-348">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-348">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-349">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-349">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-350">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-350">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : string * System.Text.Encoding -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes (str, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-351">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-351">The string to encode</span></span></param>
        <param name="e"><span data-ttu-id="a13a7-352">인코딩 체계를 지정하는 <see cref="T:System.Text.Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-352">The <see cref="T:System.Text.Encoding" /> that specifies the encoding scheme.</span></span></param>
        <summary><span data-ttu-id="a13a7-353">지정된 인코딩 개체를 사용하여 문자열을 URL로 인코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-353">Converts a string into a URL-encoded array of bytes using the specified encoding object.</span></span></summary>
        <returns><span data-ttu-id="a13a7-354">인코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-354">An encoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-355">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-355">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-356">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-356">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-357">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-357">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-358">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-358">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-359">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-359">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a13a7-360">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-360">The array of bytes to encode.</span></span></param>
        <param name="offset"><span data-ttu-id="a13a7-361">인코딩할 바이트 배열의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-361">The position in the byte array at which to begin encoding.</span></span></param>
        <param name="count"><span data-ttu-id="a13a7-362">인코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-362">The number of bytes to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-363">배열의 지정된 위치부터 지정된 바이트 수만큼 바이트 배열을 URL 인코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-363">Converts an array of bytes into a URL-encoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-364">인코딩된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-364">An encoded array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-365">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-365">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-366">URL 인코딩은 URL에 해당 하는 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-366">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-367">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-367">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="a13a7-368">웹 애플리케이션 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-368">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a13a7-369"><paramref name="bytes" />가 <see langword="null" />이지만 <paramref name="count" />는 <see langword="0" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="a13a7-369"><paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a13a7-370"><paramref name="offset" />이 <see langword="0" />보다 작거나 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="a13a7-370"><paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span></span>  
  
<span data-ttu-id="a13a7-371">또는</span><span class="sxs-lookup"><span data-stu-id="a13a7-371">-or-</span></span> 
 <span data-ttu-id="a13a7-372"><paramref name="count" />가 <see langword="0" />보다 작거나 <paramref name="count" /> + <paramref name="offset" />이 <paramref name="bytes" /> 배열 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-372"><paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span></span></exception>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-373">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-373">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicode">
      <MemberSignature Language="C#" Value="public static string UrlEncodeUnicode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncodeUnicode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncodeUnicode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeUnicode : string -&gt; string" Usage="System.Web.HttpUtility.UrlEncodeUnicode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncode(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-374">변환할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-374">The string to convert.</span></span></param>
        <summary><span data-ttu-id="a13a7-375">문자열을 유니코드 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-375">Converts a string into a Unicode string.</span></span></summary>
        <returns><span data-ttu-id="a13a7-376">%<paramref name="UnicodeValue" /> 표기법으로 나타낸 유니코드 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-376">A Unicode string in %<paramref name="UnicodeValue" /> notation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-377">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-377">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-378">URL 인코딩은 해당 하는 문자 엔터티로; URL에 잘못 된 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-378">URL encoding converts characters that are not valid in a URL to character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-379">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-379">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-380">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-380">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeUnicodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeUnicodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeUnicodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeUnicodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeUnicodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncodeToBytes(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-381">변환할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-381">The string to convert.</span></span></param>
        <summary><span data-ttu-id="a13a7-382">유니코드 문자열을 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-382">Converts a Unicode string into an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="a13a7-383">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-383">A byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a13a7-384">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-384">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="a13a7-385">URL 인코딩은 해당 하는 문자 엔터티로; URL에 잘못 된 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-385">URL encoding converts characters that are not valid in a URL to character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="a13a7-386">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-386">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="a13a7-387">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="a13a7-387">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string str);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string str) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlPathEncode(System.String)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (str As String) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ str);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string s);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string s) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (s As String) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ s);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlPathEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlPathEncode str" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlPathEncode(System.String)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member UrlPathEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlPathEncode s" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a13a7-388">인코딩할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-388">The text to encode.</span></span></param>
        <param name="s"><span data-ttu-id="a13a7-389">인코딩할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-389">The text to encode.</span></span></param>
        <summary><span data-ttu-id="a13a7-390">사용하지 마십시오. 브라우저 호환성을 위해서만 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-390">Do not use; intended only for browser compatibility.</span></span> <span data-ttu-id="a13a7-391"><see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />을 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="a13a7-391">Use <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="a13a7-392">인코딩된 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a13a7-392">The encoded text.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>