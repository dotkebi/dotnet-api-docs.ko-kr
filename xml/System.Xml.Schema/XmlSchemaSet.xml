<Type Name="XmlSchemaSet" FullName="System.Xml.Schema.XmlSchemaSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d653d8ea89c8f3d403be0112895e62ad6b796a71" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58707892" /></Metadata><TypeSignature Language="C#" Value="public class XmlSchemaSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaSet" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaSet" />
  <TypeSignature Language="F#" Value="type XmlSchemaSet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="94a41-101">XSD(XML 스키마 정의 언어) 스키마의 캐시를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-101">Contains a cache of XML Schema definition language (XSD) schemas.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   <span data-ttu-id="94a41-102">알 수 없거나 신뢰할 수 없는 출처 또는 위치에서 스키마를 사용 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="94a41-102">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="94a41-103">이렇게 하면 코드의 보안이 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-103">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="94a41-104">XML 스키마 (인라인 스키마 포함)는 서비스 거부 공격;에 기본적으로 취약 이러한 신뢰할 수 없는 시나리오에서 허용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-104">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="94a41-105">스키마 유효성 검사 오류 메시지 및 예외 콘텐츠 모델 또는 스키마 파일에 URI 경로 대 한 중요 한 정보를 노출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-105">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="94a41-106">신뢰할 수 없는 호출자에 게이 정보를 노출 하지 않도록 주의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-106">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="94a41-107">추가 보안 고려 사항 "보안 고려 사항" 섹션에 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-107">Additional security considerations are covered in the "Security Considerations" section.</span></span>  
  
 <span data-ttu-id="94a41-108"><xref:System.Xml.Schema.XmlSchemaSet> 캐시 또는 라이브러리 XML 스키마 정의 언어 (XSD) 스키마를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-108"><xref:System.Xml.Schema.XmlSchemaSet> is a cache or library where you can store XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="94a41-109"><xref:System.Xml.Schema.XmlSchemaSet>은 파일 또는 URL에서 스키마에 액세스하는 대신 메모리에 있는 스키마를 캐시하여 성능을 향상시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-109"><xref:System.Xml.Schema.XmlSchemaSet> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</span></span> <span data-ttu-id="94a41-110">각 스키마 네임 스페이스 URI로 식별 되 고 위치를 지정 된 스키마 집합에 추가 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-110">Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</span></span> <span data-ttu-id="94a41-111">사용할 합니다 <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType> 할당할 속성은 <xref:System.Xml.Schema.XmlSchemaSet> 개체 데이터 유효성 검사 XML 판독기를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-111">You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType> property to assign the <xref:System.Xml.Schema.XmlSchemaSet> object an XML reader should use for data validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="94a41-112">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="94a41-112">Security Considerations</span></span>  
  
-   <span data-ttu-id="94a41-113">알 수 없거나 신뢰할 수 없는 소스에서 스키마를 사용 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="94a41-113">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="94a41-114">이렇게 하면 코드의 보안이 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-114">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="94a41-115">외부 네임 스페이스 또는 위치 참조를 포함, 가져오기 및 redefine 요소의 스키마를 포함 하거나 가져오는 스키마의 기본 URI를 기준으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-115">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="94a41-116">예를 들어, 포함 하거나 가져오는 스키마의 기본 URI를 비어 있는 경우 또는 `null`, 외부 위치가 현재 디렉터리를 기준으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-116">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="94a41-117"><xref:System.Xml.XmlUrlResolver> 클래스는 외부 스키마를 해결 하려면 기본적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-117">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="94a41-118">포함, 가져오기의 해상도 사용 하지 않도록 설정 하 고 스키마의 요소를 다시 정의 설정 합니다 <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> 속성을 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-118">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="94a41-119">합니다 <xref:System.Xml.Schema.XmlSchemaSet> 클래스가 사용 하는 <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> 구문 분석 하 고 XML 스키마에서 정규식과 일치 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-119">The <xref:System.Xml.Schema.XmlSchemaSet> class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> class to parse and match regular expressions in an XML schema.</span></span> <span data-ttu-id="94a41-120">유효성 검사 XML 스키마에서 정규식 패턴 패싯의 CPU 사용량이 증가 될 수 있습니다 및 고가용성 시나리오에서 피해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-120">Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</span></span>  
  
-   <span data-ttu-id="94a41-121">사용 하 여 결과로 발생 하는 예외를 <xref:System.Xml.Schema.XmlSchemaSet> 클래스와 같이 <xref:System.Xml.Schema.XmlSchemaException> 클래스에는 신뢰할 수 없는 시나리오에서 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-121">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="94a41-122">예를 들어를 <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 의 속성을 <xref:System.Xml.Schema.XmlSchemaException> 예외를 발생 시킨 스키마 파일의 URI 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-122">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="94a41-123"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 속성 신뢰할 수 없는 시나리오에서 노출 되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-123">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="94a41-124">신뢰할 수 없는 시나리오에서 중요 한 정보가 노출 되지 않습니다 있도록 예외가 제대로 처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-124">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-125">다음 예제에서는 <xref:System.Xml.Schema.XmlSchemaSet>에 저장된 스키마를 사용하여 XML 파일의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-125">The following example validates an XML file using schemas stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-126">XML 파일의 네임스페이스 `urn:bookstore-schema`는 <xref:System.Xml.Schema.XmlSchemaSet>에서 유효성 검사에 사용할 스키마를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-126">The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span>  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="94a41-127">입력</span><span class="sxs-lookup"><span data-stu-id="94a41-127">Input</span></span>  
 <span data-ttu-id="94a41-128">이 샘플에서는 다음 두 입력 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-128">The sample uses the following two input files.</span></span>  
  
 <span data-ttu-id="94a41-129">**booksSchemaFail.xml:**</span><span class="sxs-lookup"><span data-stu-id="94a41-129">**booksSchemaFail.xml:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 <span data-ttu-id="94a41-130">**books.xsd:**</span><span class="sxs-lookup"><span data-stu-id="94a41-130">**books.xsd:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
## <a name="output"></a><span data-ttu-id="94a41-131">Output</span><span class="sxs-lookup"><span data-stu-id="94a41-131">Output</span></span>  
 <span data-ttu-id="94a41-132">유효성 검사 오류: 네임스페이스 'urn:bookstore-schema'의 요소 'book'이 잘못된 자식 요소 'author'를 가지고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-132">Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'.</span></span> <span data-ttu-id="94a41-133">'author' 대신 'title'이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-133">Expected 'title' in namespace 'urn:bookstore-schema'.</span></span>  
  
 <span data-ttu-id="94a41-134">유효성 검사 오류: 네임스페이스 'urn:bookstore-schema'의 요소 'author'가 잘못된 자식 요소 'name'을 가지고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-134">Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'.</span></span> <span data-ttu-id="94a41-135">'name' 대신 'first-name'이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-135">Expected 'first-name' in namespace 'urn:bookstore-schema'.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94a41-136"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-136">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94a41-137"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-137">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaSet : System.Xml.XmlNameTable -&gt; System.Xml.Schema.XmlSchemaSet" Usage="new System.Xml.Schema.XmlSchemaSet nameTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="94a41-138">사용할 <see cref="T:System.Xml.XmlNameTable" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-138">The <see cref="T:System.Xml.XmlNameTable" /> object to use.</span></span></param>
        <summary><span data-ttu-id="94a41-139">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-139">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-140">매개 변수로 전달된 <see cref="T:System.Xml.XmlNameTable" /> 개체가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-140">The <see cref="T:System.Xml.XmlNameTable" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94a41-141">지정된 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-141">Adds the given XML Schema definition language (XSD) schema to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="94a41-142"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-142">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to add to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="94a41-143">지정된 <see cref="T:System.Xml.Schema.XmlSchema" />를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-143">Adds the given <see cref="T:System.Xml.Schema.XmlSchema" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-144">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-144">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="94a41-145">스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-145">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="94a41-146">그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-146">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-147">경우는 <xref:System.Xml.Schema.XmlSchema> 개체가 이미 합니다 <xref:System.Xml.Schema.XmlSchemaSet>, <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드는 아무 작업도 수행 하지.</span><span class="sxs-lookup"><span data-stu-id="94a41-147">If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method does nothing.</span></span>  
  
 <span data-ttu-id="94a41-148">이 메서드의 기능은 동일 합니다는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-148">The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="94a41-149">스키마가 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-149">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-150">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-150">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchemaSet -&gt; unit" Usage="xmlSchemaSet.Add schemas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="94a41-151"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체</span><span class="sxs-lookup"><span data-stu-id="94a41-151">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></param>
        <summary><span data-ttu-id="94a41-152">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-152">Adds all the XML Schema definition language (XSD) schemas in the given <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-153">스키마를 추가할 수 있습니다는 <xref:System.Xml.Schema.XmlSchemaSet>, 성공적으로 전처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-153">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="94a41-154">전처리는 다음 기본 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-154">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="94a41-155">스키마는 W3C XML 스키마의 규칙에 따라 구조적 유효성을 검사 하지만 스키마는 완벽 하 게 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-155">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="94a41-156">내부 및 외부 스키마 구성 요소에 대 한 참조가 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-156">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="94a41-157">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-157">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-158">가져온된 스키마는 별도 추가 됩니다 <xref:System.Xml.Schema.XmlSchema> 개체 및 포함 된 스키마에 포함 하는 부분을 내용이 <xref:System.Xml.Schema.XmlSchema>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-158">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="94a41-159">경우는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 의 속성을 <xref:System.Xml.Schema.XmlSchemaSet> 추가 하려면 `true`의 모든 스키마를 <xref:System.Xml.Schema.XmlSchemaSet> 추가할에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>.</span><span class="sxs-lookup"><span data-stu-id="94a41-159">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-160">경우는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 의 속성을 <xref:System.Xml.Schema.XmlSchemaSet> 추가 하려면 `false`, 추가 되기 전에 추가 하는 각 스키마는 전처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-160">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added.</span></span> <span data-ttu-id="94a41-161">새로 추가 된 스키마 중 하나가 되 면 <xref:System.Xml.Schema.XmlSchemaSet> 전처리 실패 없는 스키마가 추가 됩니다; 대신는 <xref:System.Xml.Schema.XmlSchemaException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-161">If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown.</span></span> <span data-ttu-id="94a41-162">결과적으로, 다음 두 코드 예제에서는 같지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-162">As a result, the following two code example are not equivalent.</span></span>  
  
```vb  
' First example  
schemaSet.Add(schemaSet1)  
  
' Second example  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    schemaSet.Add(schema)  
  
Next  
```  
  
```csharp  
// First example  
schemaSet.Add(schemaSet1);  
  
// Second example  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    schemaSet.Add(schema);  
}  
```  
  
 <span data-ttu-id="94a41-163">이전 두 코드 예제에서는 같지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-163">The previous two code examples are not equivalent.</span></span> <span data-ttu-id="94a41-164">잘못 된 스키마가 있는 경우 첫 번째 예제에서는 `schemaSet1` 및 해당 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성이 `false`, 없습니다 스키마에 추가 됩니다 `schemaSet`합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-164">In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`.</span></span> <span data-ttu-id="94a41-165">두 번째 예제에서는 다양 한 스키마 추가할 수 있습니다 `schemaSet` 잘못 된 스키마가 발견 되 고 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-165">In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-166">다음 코드 예제에서는 추가 스키마를 보여 줍니다.는 <xref:System.Xml.Schema.XmlSchemaSet>를 추가 합니다 <xref:System.Xml.Schema.XmlSchemaSet> 새 <xref:System.Xml.Schema.XmlSchemaSet> 를 사용 하 여를 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-166">The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
```vb  
Dim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  
schemaSet2.Add(schemaSet1)  
```  
  
```csharp  
XmlSchemaSet schemaSet1 = new XmlSchemaSet();  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchemaSet schemaSet2 = new XmlSchemaSet();  
schemaSet2.Add(schemaSet1);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="94a41-167"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 스키마가 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-167">A schema in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-168">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-168">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, string schemaUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaUri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::String ^ schemaUri);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add (targetNamespace, schemaUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="94a41-169">스키마 <paramref name="targetNamespace" /> 속성이거나, 스키마에 지정된 <paramref name="targetNamespace" />를 사용하면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-169">The schema <paramref name="targetNamespace" /> property, or <see langword="null" /> to use the <paramref name="targetNamespace" /> specified in the schema.</span></span></param>
        <param name="schemaUri"><span data-ttu-id="94a41-170">로드할 스키마를 지정하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-170">The URL that specifies the schema to load.</span></span></param>
        <summary><span data-ttu-id="94a41-171">지정된 URL에 있는 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-171">Adds the XML Schema definition language (XSD) schema at the URL specified to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-172">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-172">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="94a41-173">스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-173">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="94a41-174">그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-174">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-175">스키마를 추가할 수 있습니다는 <xref:System.Xml.Schema.XmlSchemaSet>, 성공적으로 전처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-175">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="94a41-176">전처리는 다음 기본 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-176">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="94a41-177">스키마는 W3C XML 스키마의 규칙에 따라 구조적 유효성을 검사 하지만 스키마는 완벽 하 게 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-177">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="94a41-178">내부 및 외부 스키마 구성 요소에 대 한 참조가 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-178">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="94a41-179">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-179">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-180">가져온된 스키마는 별도 추가 됩니다 <xref:System.Xml.Schema.XmlSchema> 개체 및 포함 된 스키마에 포함 하는 부분을 내용이 <xref:System.Xml.Schema.XmlSchema>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-180">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="94a41-181">다음은 사용 하는 경우를 고려해 야 할 중요 한 정보는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-181">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="94a41-182">스키마를 추가 합니다 <xref:System.Xml.Schema.XmlSchemaSet> 동일한 대상 네임 스페이스 및 스키마 위치 URL 내에 이미 포함 하는 스키마로는 <xref:System.Xml.Schema.XmlSchemaSet> 원래 스키마 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-182">Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object.</span></span>  
  
-   <span data-ttu-id="94a41-183">에 새 스키마를 성공적으로 추가 되는 경우는 <xref:System.Xml.Schema.XmlSchemaSet>, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 의 속성을 <xref:System.Xml.Schema.XmlSchemaSet> 로 설정 되어 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-183">When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`.</span></span>  
  
-   <span data-ttu-id="94a41-184">XML 스키마에서 발생 한 모든 포함 또는 가져오기 요소는 확인 된 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-184">Any include or import elements encountered in an XML schema are resolved when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="94a41-185">확인 실패 등 스키마 유효성 검사 경고가 요소 결과 가져올 경우 <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> 에 대 한 지정 된는 <xref:System.Xml.Schema.XmlSchemaSet> 개체 이러한 경고가 보고 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-185">Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported.</span></span>  
  
-   <span data-ttu-id="94a41-186">에 이미 존재 하는 스키마와 동일한 대상 네임 스페이스를 사용 하 여 스키마를 <xref:System.Xml.Schema.XmlSchemaSet> 에 추가 되는 <xref:System.Xml.Schema.XmlSchemaSet>, 두 스키마가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-186">If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="94a41-187">사용 되지 않는 경우 다르게이 동작 <xref:System.Xml.Schema.XmlSchemaCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-187">This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object.</span></span>  
  
-   <span data-ttu-id="94a41-188"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드를 <xref:System.Xml.Schema.XmlSchemaSet> 매개 변수로 대상 네임 스페이스를 지정할 필요 없이 스키마에 정의 된 대상 네임 스페이스를 사용 하는 기능에 때를 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-188">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="94a41-189">지정 `null` 에 `targetNamespace` 의 매개 변수를 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드 지시를 <xref:System.Xml.Schema.XmlSchemaSet> 다음 코드 예제에 설명 된 대로 스키마에 정의 된 대상 네임 스페이스를 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-189">Specifying `null` in the `targetNamespace` parameter of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "books.xsd")  
  
Dim schema As XmlSchema  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
    schema.Write(Console.Out)  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "books.xsd");  
  
foreach(XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 <span data-ttu-id="94a41-190">위의 코드 예제의 `null` 로 지정 됩니다는 `targetNamespace` 매개 변수는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-190">In the code example above, `null` is specified as the `targetNamespace` parameter to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span> <span data-ttu-id="94a41-191">결과적으로 `targetNamespace` 정의 books.xml 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-191">As a result, the `targetNamespace` defined in the books.xml file is used.</span></span> <span data-ttu-id="94a41-192">이 예에서 호출의 결과 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드는 동일한 것 경우 http://www.contoso.com/books 로 지정 된 것을 `targetNamespace` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-192">In this case, the result of calling the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method would be identical if http://www.contoso.com/books had been specified as the `targetNamespace` parameter.</span></span>  
  
-   <span data-ttu-id="94a41-193">W3C XML 스키마 정의 된 대상 네임 스페이스를 사용 하 여 스키마에 포함 될 대상 네임 스페이스가 없는 스키마를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-193">W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</span></span> <span data-ttu-id="94a41-194">이 경우 정의 된 대상 네임 스페이스가 없는 스키마를 포함 하 여 스키마의 대상 네임 스페이스에 강제 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-194">In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</span></span> <span data-ttu-id="94a41-195">포함된 된 스키마는 해당 대상 네임 스페이스 정의 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-195">The included schema is treated as if it had that target namespace defined.</span></span> <span data-ttu-id="94a41-196">마찬가지로에 대상 네임 스페이스가 없는 스키마를 추가할 수 있습니다 합니다 <xref:System.Xml.Schema.XmlSchemaSet> 지정 된 대상 네임 스페이스로 강제로 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드를 다음 예에서 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-196">Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method, as illustrated in the following example.</span></span>  
  
```  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">  
    <xs:element name="A" type="xs:string" />  
</xs:schema>  
```  
  
 <span data-ttu-id="94a41-197">위의 스키마에 추가 되 면 합니다 <xref:System.Xml.Schema.XmlSchemaSet> 대상 네임 스페이스를 사용 하 여 http://www.contoso.com/new/targetnamespace (표시 된 대로 아래 코드에서), 대상 네임 스페이스는 스키마에 선언 된 것 처럼 처리 됩니다 것 `http://www.contoso.com/new/targetnamespace`입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-197">If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    Console.WriteLine(schema.TargetNamespace)     
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd");  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    Console.WriteLine(schema.TargetNamespace);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="94a41-198">다음 코드 예제에서는 추가 합니다 http://www.contoso.com/books.xsd 스키마의 대상 네임 스페이스를 사용 하 여 http://www.contoso.com/books 에 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-198">The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
```  
  
 <span data-ttu-id="94a41-199">이 예제에서는 `books.xsd` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-199">The example uses the `books.xsd` file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="94a41-200">스키마가 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-200">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-201">매개 변수로 전달된 URL이 <see langword="null" />이거나 <see cref="F:System.String.Empty" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-201">The URL passed as a parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, class System.Xml.XmlReader schemaDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaDocument As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::Xml::XmlReader ^ schemaDocument);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add (targetNamespace, schemaDocument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="94a41-202">스키마 <paramref name="targetNamespace" /> 속성이거나, 스키마에 지정된 <paramref name="targetNamespace" />를 사용하면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-202">The schema <paramref name="targetNamespace" /> property, or <see langword="null" /> to use the <paramref name="targetNamespace" /> specified in the schema.</span></span></param>
        <param name="schemaDocument"><span data-ttu-id="94a41-203"><see cref="T:System.Xml.XmlReader" /> 개체</span><span class="sxs-lookup"><span data-stu-id="94a41-203">The <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="94a41-204"><see cref="T:System.Xml.XmlReader" />에 포함된 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-204">Adds the XML Schema definition language (XSD) schema contained in the <see cref="T:System.Xml.XmlReader" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-205">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-205">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="94a41-206">스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-206">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="94a41-207">그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-207">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-208">스키마를 추가할 수 있습니다는 <xref:System.Xml.Schema.XmlSchemaSet>, 성공적으로 전처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-208">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="94a41-209">전처리는 다음 기본 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-209">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="94a41-210">스키마는 W3C XML 스키마의 규칙에 따라 구조적 유효성을 검사 하지만 스키마는 완벽 하 게 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-210">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="94a41-211">내부 및 외부 스키마 구성 요소에 대 한 참조가 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-211">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="94a41-212">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-212">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-213">가져온된 스키마는 별도 추가 됩니다 <xref:System.Xml.Schema.XmlSchema> 개체 및 포함 된 스키마에 포함 하는 부분을 내용이 <xref:System.Xml.Schema.XmlSchema>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-213">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="94a41-214">다음은 사용 하는 경우를 고려해 야 할 중요 한 정보는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-214">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="94a41-215">성공적으로 가져오거나에 포함 된 스키마가 포함 된 스키마를 검색 합니다 <xref:System.Xml.XmlReader> 에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-215">Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
-   <span data-ttu-id="94a41-216">경우는 <xref:System.Xml.XmlReader> 루트 요소에 배치 되지 않은 <xref:System.Xml.Schema.XmlSchemaException> 현재 항목 요소가 아닌 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-216">If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element.</span></span> <span data-ttu-id="94a41-217">현재 항목이 `xs:schema` 요소가, 스키마 문서를 읽기는 <xref:System.Xml.Schema.XmlSchemaSet>이 고, 그렇지 않으면는 <xref:System.Xml.Schema.XmlSchemaException> 스키마에 유효 하지 않으므로 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-217">If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid.</span></span>  
  
-   <span data-ttu-id="94a41-218">경우는 <xref:System.Xml.XmlReader> 위치가 시퀀스의 첫 번째 노드만 XML 노드 시퀀스에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-218">If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</span></span>  
  
-   <span data-ttu-id="94a41-219">스키마에서 생성 된 경우는 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 메서드 호출의 값을 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 인라인 스키마 처리 W3C XML 스키마 문서에 적용 되지 않았으므로 속성이 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-219">If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</span></span>  
  
-   <span data-ttu-id="94a41-220">합니다 <xref:System.Xml.XmlResolver> 의 속성을 <xref:System.Xml.XmlReader> 의 네임 스페이스 또는 스키마 위치에 대 한 참조가 include 및 import 요소를 해결 하는 데 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-220">The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements.</span></span> <span data-ttu-id="94a41-221">대신를 <xref:System.Xml.XmlResolver> 의 속성을 <xref:System.Xml.Schema.XmlSchemaSet> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-221">Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used.</span></span>  
  
-   <span data-ttu-id="94a41-222"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드를 <xref:System.Xml.Schema.XmlSchemaSet> 매개 변수로 대상 네임 스페이스를 지정할 필요 없이 스키마에 정의 된 대상 네임 스페이스를 사용 하는 기능에 때를 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-222">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="94a41-223">지정 `null` 또는 <xref:System.String.Empty?displayProperty=nameWithType> 에 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 지시 하는 메서드는 <xref:System.Xml.Schema.XmlSchemaSet> 스키마에 정의 된 대상 네임 스페이스를 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-223">Specifying `null` or <xref:System.String.Empty?displayProperty=nameWithType> to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema.</span></span> <span data-ttu-id="94a41-224">이 동작의 예 참조는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-224">For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 <span data-ttu-id="94a41-225">이 메서드의 나머지 기능은 동일 합니다는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-225">The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-226">다음 코드 예제에 포함 된 books.xsd 스키마를 추가 합니다 <xref:System.Xml.XmlTextReader> 의 대상 네임 스페이스를 사용 하 여 http://www.contoso.com/books 에 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-226">The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", New XmlTextReader("books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", new XmlTextReader("books.xsd");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="94a41-227">스키마가 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-227">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-228">매개 변수로 전달된 <see cref="T:System.Xml.XmlReader" /> 개체가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-228">The <see cref="T:System.Xml.XmlReader" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompilationSettings">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationSettings As XmlSchemaCompilationSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCompilationSettings ^ CompilationSettings { System::Xml::Schema::XmlSchemaCompilationSettings ^ get(); void set(System::Xml::Schema::XmlSchemaCompilationSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompilationSettings : System.Xml.Schema.XmlSchemaCompilationSettings with get, set" Usage="System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCompilationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-229"><see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />의 <see cref="T:System.Xml.Schema.XmlSchemaSet" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-229">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="94a41-230"><see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />에 대한 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-230">The <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="94a41-231">기본값은 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-231">The default is an <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> instance with the <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> property set to <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-232">합니다 <xref:System.Xml.Schema.XmlSchemaCompilationSettings> Attribution UPA (Unique Particle) 유효성 검사 옵션을 지정 하는 클래스는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-232">The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-233">UPA 유효성 검사를 사용 하도록 설정 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-233">For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compile();" />
      <MemberSignature Language="F#" Value="member this.Compile : unit -&gt; unit" Usage="xmlSchemaSet.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94a41-234"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가된 XSD(XML 스키마 정의 언어) 스키마를 하나의 논리 스키마로 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-234">Compiles the XML Schema definition language (XSD) schemas added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into one logical schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-235">이 메서드는 유효성 검사가 필요한 경우 자동으로 호출 됩니다 및 <xref:System.Xml.Schema.XmlSchemaSet> 이전에 컴파일되지 않았습니다-예를 들어 경우는 <xref:System.Xml.Schema.XmlSchemaSet> 는 입력으로 만드는 데는 <xref:System.Xml.XmlReader> 개체를 <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> 속성의는 <xref:System.Xml.XmlReaderSettings> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-235">This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled - for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="94a41-236">경우는 <xref:System.Xml.Schema.XmlSchemaSet> 는 이미 컴파일된 상태에서는이 메서드가 컴파일되지 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-236">If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas.</span></span> <span data-ttu-id="94a41-237">이 메서드가 성공적으로 실행 하는 경우는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-237">If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="94a41-238">이전에 컴파일된 스키마는 <xref:System.Xml.Schema.XmlSchemaSet> 컴파일되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-238">Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled.</span></span> <span data-ttu-id="94a41-239">그러나 사용 하 여 컴파일된 스키마는 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> 메서드는 <xref:System.Xml.Schema.XmlSchema> 다시 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-239">However, schemas that were compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94a41-240">호출 해야 합니다 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 스키마 (또는 해당 포함/import)에 추가한 후 변경한 경우 메서드는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-240">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-241"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 메서드는 W3C XML 스키마의 규칙에 따라 구조적 유효성에 대 한 스키마를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-241">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="94a41-242">그러나 전체 유효성 검사를 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-242">However, it will not perform a full validation check.</span></span> <span data-ttu-id="94a41-243">내부 및 외부 스키마 구성 요소에 대 한 참조도 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-243">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="94a41-244">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-244">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-245">가져온된 스키마는 별도 추가 됩니다 <xref:System.Xml.Schema.XmlSchema> 개체를 포함 하는 동안 스키마를 포함 하는 부분 내용이 <xref:System.Xml.Schema.XmlSchema>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-245">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="94a41-246">다시 처리에 대 한 호출에 성공 하면는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성이 false로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-246">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="94a41-247"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 스키마에 대해 유효성을 검사하고 컴파일하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-247">An error occurred when validating and compiling the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94a41-248">XSD(XML 스키마 정의 언어) 스키마가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-248">Indicates whether an XML Schema definition language (XSD) schema is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (targetNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ targetNamespace);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="xmlSchemaSet.Contains targetNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="94a41-249">스키마 <paramref name="targetNamespace" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-249">The schema <paramref name="targetNamespace" /> property.</span></span></param>
        <summary><span data-ttu-id="94a41-250">지정된 대상 네임스페이스 URI가 있는 XSD(XML 스키마 정의 언어) 스키마가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-250">Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-251">지정된 대상 네임스페이스 URI가 있는 스키마가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-251"><see langword="true" /> if a schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-252">에 직접 추가 되는 스키마를 <xref:System.Xml.Schema.XmlSchemaSet> 감지한는 <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> 방법으로, 예를 들어 가져온된 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-252">Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> method; for example, imported schemas.</span></span> <span data-ttu-id="94a41-253">결과적으로 경우에 대 한 스키마를 http://www.contoso.com/retail 네임 스페이스에 대 한 스키마를 가져오는 합니다 http://www.contoso.com/books 네임 스페이스에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>를 호출 <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> 사용 하 여 `http://www.contoso.com/books` 매개 변수로 반환 합니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-253">As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> with `http://www.contoso.com/books` as a parameter, it returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Xml.Schema.XmlSchema -&gt; bool" Usage="xmlSchemaSet.Contains schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="94a41-254"><see cref="T:System.Xml.Schema.XmlSchema" /> 개체</span><span class="sxs-lookup"><span data-stu-id="94a41-254">The <see cref="T:System.Xml.Schema.XmlSchema" /> object.</span></span></param>
        <summary><span data-ttu-id="94a41-255">지정된 XSD(XML 스키마 정의 언어) <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-255">Indicates whether the specified XML Schema definition language (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-256"><see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-256"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-257">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-257">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] schemas, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (schemas As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ schemas, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.Schema.XmlSchema[] * int -&gt; unit" Usage="xmlSchemaSet.CopyTo (schemas, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="94a41-258">개체를 복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-258">The array to copy the objects to.</span></span></param>
        <param name="index"><span data-ttu-id="94a41-259">복사를 시작할 배열 내의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-259">The index in the array where copying will begin.</span></span></param>
        <summary><span data-ttu-id="94a41-260">지정된 인덱스부터 시작하여 <see cref="T:System.Xml.Schema.XmlSchema" />의 모든 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체를 지정된 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-260">Copies all the <see cref="T:System.Xml.Schema.XmlSchema" /> objects from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the given array, starting at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a41-261">다음 예제에서는 모든 복사 합니다 <xref:System.Xml.Schema.XmlSchema> 개체를 <xref:System.Xml.Schema.XmlSchemaSet> 배열의 <xref:System.Xml.Schema.XmlSchema> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-261">The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemas(schemaSet.Count) As XmlSchema  
schemaSet.CopyTo(schemas, 0)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchema[] schemas = new XmlSchema[schemaSet.Count];  
schemaSet.CopyTo(schemas, 0);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-262"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 논리 XSD(XML 스키마 정의 언어) 스키마의 개수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-262">Gets the number of logical XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="94a41-263"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 논리 스키마의 개수입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-263">The number of logical schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-264">두 개의 스키마 네임 스페이스에 대 한 경우 `http://www.contoso.com` 에 <xref:System.Xml.Schema.XmlSchemaSet>, <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> 속성은 스키마 유효성 검사를 위해 단일 논리 스키마로 처리 됩니다 때문에 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-264">If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</span></span> <span data-ttu-id="94a41-265">그러나 경우 네임 스페이스에 대 한 스키마 `http://www.contoso.com/retail` 에 대 한 스키마를 가져올 합니다 `http://www.contoso.com/books` 네임 스페이스의 값을 <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> 속성은 2 일 수.</span><span class="sxs-lookup"><span data-stu-id="94a41-265">However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would be 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAttributes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalAttributes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAttributes : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-266"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 특성을 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-266">Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="94a41-267">전역 특성의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-267">The collection of global attributes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalElements">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalElements As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalElements { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalElements : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-268"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 요소를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-268">Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="94a41-269">전역 요소의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-269">The collection of global elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalTypes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalTypes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalTypes : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-270"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 단순 및 복합 형식을 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-270">Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="94a41-271">전역 단순 및 복합 형식의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-271">The collection of global simple and complex types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-272">합니다 <xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A> 속성은 항상 나타내는 형식을 반환 합니다 `xs:anyType` 복합 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-272">The <xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A> property always returns a type that represents the `xs:anyType` complex type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompiled : bool" Usage="System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-273"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 XSD(XML 스키마 정의 언어) 스키마가 컴파일되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-273">Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled.</span></span></summary>
        <value><span data-ttu-id="94a41-274"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 스키마를 마지막으로 추가하거나 제거한 후 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 스키마가 컴파일되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-274"><see langword="true" /> if the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled since the last time a schema was added or removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-275"><xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>에 있는 동안 스키마를 편집해도 <xref:System.Xml.Schema.XmlSchemaSet> 속성에는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-275">The <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-276"><xref:System.Xml.Schema.XmlSchemaSet>에서 개별 스키마를 업데이트한 내용은 추적되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-276">Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked.</span></span> <span data-ttu-id="94a41-277">결과적으로 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>에 포함된 스키마 중 하나를 변경해도 `true`에서 스키마를 추가하거나 제거하지 않으면 <xref:System.Xml.Schema.XmlSchemaSet> 속성은 <xref:System.Xml.Schema.XmlSchemaSet>일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-277">As a result, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-278">예는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성 참조는 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-278">For an example of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Compile" />
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-279">새 XSD(XML 스키마 정의 언어) 스키마를 로드할 때 <see cref="T:System.Xml.XmlNameTable" />에서 사용하는 기본 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-279">Gets the default <see cref="T:System.Xml.XmlNameTable" /> used by the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> when loading new XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="94a41-280">원자화된 문자열 개체의 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-280">A table of atomized string objects.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Remove(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Remove(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Remove schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="94a41-281"><see cref="T:System.Xml.Schema.XmlSchema" />에서 제거할 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-281">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="94a41-282">지정된 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-282">Removes the specified XML Schema definition language (XSD) schema from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-283"><see cref="T:System.Xml.Schema.XmlSchema" />에서 제거된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체이거나, 해당 스키마가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-283">The <see cref="T:System.Xml.Schema.XmlSchema" /> object removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> or <see langword="null" /> if the schema was not found in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-284">스키마를 제거 합니다 <xref:System.Xml.Schema.XmlSchemaSet> 설정 합니다 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-284">Removing a schema from the <xref:System.Xml.Schema.XmlSchemaSet> sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-285">다음 예제에서는 여러 스키마를 추가 하는 방법을 보여 줍니다는 <xref:System.Xml.Schema.XmlSchemaSet>를 사용 하 여 스키마 중 하나를 제거 하는 다음을 <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-285">The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.Remove(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.Remove(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="94a41-286">올바른 스키마가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-286">The schema is not a valid schema.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-287">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-287">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRecursive">
      <MemberSignature Language="C#" Value="public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveRecursive(class System.Xml.Schema.XmlSchema schemaToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRecursive (schemaToRemove As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveRecursive(System::Xml::Schema::XmlSchema ^ schemaToRemove);" />
      <MemberSignature Language="F#" Value="member this.RemoveRecursive : System.Xml.Schema.XmlSchema -&gt; bool" Usage="xmlSchemaSet.RemoveRecursive schemaToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaToRemove" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schemaToRemove"><span data-ttu-id="94a41-288"><see cref="T:System.Xml.Schema.XmlSchema" />에서 제거할 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-288">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="94a41-289">지정된 XSD(XML 스키마 정의 언어) 스키마와 해당 스키마에 가져온 모든 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-289">Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-290"><see cref="T:System.Xml.Schema.XmlSchema" /> 개체와 해당 개체에 가져온 모든 항목이 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-290"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object and all its imports were successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-291"><xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 메서드는 지정된 된 스키마와에서 가져온 모든 스키마 제거는 <xref:System.Xml.Schema.XmlSchemaSet>스키마 나 가져온된 스키마에 종속성이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-291">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas.</span></span> <span data-ttu-id="94a41-292">스키마 나 가져온된 스키마에 대 한 종속성이 있는지를 <xref:System.Xml.Schema.XmlSchemaSet>, 아무 것도 제거 하 고 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-292">If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> returns `false`.</span></span> <span data-ttu-id="94a41-293">하는 경우 `false` 이 반환 됩니다 및 <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> 는 정의 된 종속성을 설명 하는 이벤트 처리기에 경고가 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-293">If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies.</span></span>  
  
 <span data-ttu-id="94a41-294">지정된 된 스키마 다른 스키마를 가져오고 지정된 된 스키마가 이전에 제거 하는 경우는 <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> 메서드를 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 메서드는 가져온된 스키마를 제거 하지 않습니다 하 고 반환 됩니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-294">If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method will not remove the imported schemas and will return `false`.</span></span> <span data-ttu-id="94a41-295">예를 들어 경우 `parentSchema` 가져옵니다 `childSchema1` 하 고 `childSchema2` 를 다음 코드로 제거 됩니다 `parentSchema`에 가져오지 않는 `childSchema1` 및 `childSchema2` 스키마:</span><span class="sxs-lookup"><span data-stu-id="94a41-295">For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.Remove(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="94a41-296">다음 코드를 제거 합니다 `parentSchema` 와 가져온된 스키마:</span><span class="sxs-lookup"><span data-stu-id="94a41-296">The following code will remove the `parentSchema` and the imported schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="94a41-297">합니다 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 메서드는 상태에 영향을 주지는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-297">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-298">다음 코드 예제에서는 여러 스키마를 추가 하는 방법을 보여 줍니다는 <xref:System.Xml.Schema.XmlSchemaSet>를 사용 하 여 가져온 모든 스키마 및 스키마 중 하나를 제거 합니다 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-298">The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.RemoveRecursive(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.RemoveRecursive(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-299">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-299">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reprocess">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Reprocess(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reprocess (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Reprocess(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Reprocess : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Reprocess schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="94a41-300">다시 처리할 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-300">The schema to reprocess.</span></span></param>
        <summary><span data-ttu-id="94a41-301"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 이미 있는 XSD(XML 스키마 정의 언어) 스키마를 다시 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-301">Reprocesses an XML Schema definition language (XSD) schema that already exists in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-302">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-302">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is a valid schema.</span></span> <span data-ttu-id="94a41-303">스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-303">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="94a41-304">그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-304">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-305">스키마에서 수행 된 모든 전처리 단계가 수행 스키마를 다시 처리 하면는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-305">Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="94a41-306">경우에 대 한 호출 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 성공 합니다 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성이 `false`.</span><span class="sxs-lookup"><span data-stu-id="94a41-306">If the call to <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="94a41-307">스키마 후 다시 처리 메서드를 사용할 수는 <xref:System.Xml.Schema.XmlSchemaSet> 이 수정 된 후의 <xref:System.Xml.Schema.XmlSchemaSet> 컴파일을 수행한 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-307">The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94a41-308">호출 해야 합니다 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 스키마 (또는 해당 포함/import)에 추가한 후 변경한 경우 메서드는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-308">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-309"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 메서드는 W3C XML 스키마의 규칙에 따라 구조적 유효성에 대 한 스키마를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-309">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="94a41-310">그러나 전체 유효성 검사를 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-310">However, it will not perform a full validation check.</span></span> <span data-ttu-id="94a41-311">내부 및 외부 스키마 구성 요소에 대 한 참조도 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-311">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="94a41-312">성공적으로 검색 된 모든 가져오거나 포함 된 스키마에 추가 됩니다는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-312">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-313">가져온된 스키마는 별도 추가 됩니다 <xref:System.Xml.Schema.XmlSchema> 개체를 포함 하는 동안 스키마를 포함 하는 부분 내용이 <xref:System.Xml.Schema.XmlSchema>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-313">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="94a41-314">다시 처리에 대 한 호출에 성공 하면는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성이 false로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-314">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-315">다음 예제에 추가할 스키마를 다시 처리는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-315">The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="94a41-316">후를 <xref:System.Xml.Schema.XmlSchemaSet> 를 사용 하 여 컴파일된를 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> 메서드와에 추가 된 스키마를 <xref:System.Xml.Schema.XmlSchemaSet> 수정 되는 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성으로 설정 됩니다 `true`되더라도에서 스키마를 <xref:System.Xml.Schema.XmlSchemaSet> 수정 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-316">After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified.</span></span> <span data-ttu-id="94a41-317">호출을 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 메서드 수행 된 모든 전처리가 수행 합니다 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 메서드 집합과 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 속성을 `false`.</span><span class="sxs-lookup"><span data-stu-id="94a41-317">Calling the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
Dim schema As XmlSchema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
  
Dim element As XmlSchemaElement = New XmlSchemaElement()  
schema.Items.Add(element)  
element.Name = "book"  
element.SchemaTypeName = New XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")  
  
schemaSet.Reprocess(schema)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
XmlSchema schema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
  
XmlSchemaElement element = new XmlSchemaElement();  
schema.Items.Add(element);  
element.Name = "book";  
element.SchemaTypeName = new XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema");  
  
schemaSet.Reprocess(schema);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="94a41-318">스키마가 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-318">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94a41-319">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-319">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94a41-320">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 아직 없는 경우</span><span class="sxs-lookup"><span data-stu-id="94a41-320">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter does not already exist in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schemas">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94a41-321"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-321">Returns a collection of XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas();" />
      <MemberSignature Language="F#" Value="member this.Schemas : unit -&gt; System.Collections.ICollection" Usage="xmlSchemaSet.Schemas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94a41-322"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-322">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="94a41-323"><see cref="T:System.Collections.ICollection" />에 추가된 모든 스키마를 포함하는 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-323">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="94a41-324"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가된 스키마가 없으면 빈 <see cref="T:System.Collections.ICollection" /> 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-324">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-325">이 메서드를 간접적으로 추가 된 스키마를 반환 합니다.는 <xref:System.Xml.Schema.XmlSchemaSet> 가져온 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-325">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94a41-326">합니다 <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> 메서드는 해당 하는 합니다 <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> 메서드의 사용 되지 않는 <xref:System.Xml.Schema.XmlSchemaCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-326">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-327">다음 예제에서는 모든 스키마를 반복 하는 방법을 보여 줍니다는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-327">The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas (targetNamespace As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas(System::String ^ targetNamespace);" />
      <MemberSignature Language="F#" Value="member this.Schemas : string -&gt; System.Collections.ICollection" Usage="xmlSchemaSet.Schemas targetNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="94a41-328">스키마 <paramref name="targetNamespace" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-328">The schema <paramref name="targetNamespace" /> property.</span></span></param>
        <summary><span data-ttu-id="94a41-329"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 지정된 네임스페이스에 속하는 모든 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-329">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span></summary>
        <returns><span data-ttu-id="94a41-330"><see cref="T:System.Collections.ICollection" />에 추가되고 지정된 네임스페이스에 속하는 모든 스키마가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-330">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span> <span data-ttu-id="94a41-331"><see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가된 스키마가 없으면 빈 <see cref="T:System.Collections.ICollection" /> 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-331">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-332">경우는 `targetNamespace` 매개 변수가 `null` 또는 <xref:System.String.Empty>, 네임 스페이스가 없는 모든 스키마가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-332">If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned.</span></span>  
  
 <span data-ttu-id="94a41-333">이 메서드를 간접적으로 추가 된 스키마를 반환 합니다.는 <xref:System.Xml.Schema.XmlSchemaSet> 가져온 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-333">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94a41-334">합니다 <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> 메서드는 해당 하는 합니다 <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> 메서드의 사용 되지 않는 <xref:System.Xml.Schema.XmlSchemaCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-334">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-335">다음 예제에서는 모든 스키마를 반복 하는 방법을 보여 줍니다 합니다 http://www.contoso.com/books 네임 스페이스는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-335">The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-336">XSD(XML 스키마 정의 언어) 스키마 유효성 검사 오류에 대한 정보를 받을 이벤트 처리기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-336">Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-337">스키마 유효성 검사 오류에 대 한 정보를 받기 위해 이벤트 처리기를 설정 때 합니다 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 또는 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> 의 메서드는 <xref:System.Xml.Schema.XmlSchemaSet> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-337">Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.</span></span>  
  
 <span data-ttu-id="94a41-338">이벤트 처리기를 정의 하지 않은 경우는 <xref:System.Xml.Schema.XmlSchemaException> 유효성 검사 오류가 throw 됩니다 여기서 합니다 <xref:System.Xml.Schema.XmlSeverityType> 는 <xref:System.Xml.Schema.XmlSeverityType.Error>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-338">If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType.Error>.</span></span> <span data-ttu-id="94a41-339">사용 하 여 유효성 검사 오류에 대 한 예외가 throw 되지 않습니다는 <xref:System.Xml.Schema.XmlSeverityType> 의 <xref:System.Xml.Schema.XmlSeverityType.Warning>합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-339">Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType.Warning>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a41-340">다음 코드 예제는 <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> 스키마에 대해 XML 문서의 유효성을 검사할 때 오류 및 경고를 캡처해야 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-340">The following code example illustrates adding a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> to capture errors and warnings when validating an XML document against a schema.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="94a41-341">이 예제에서는 입력으로 books.xml 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-341">The example uses the books.xml file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="94a41-342">이 예제에서는 입력으로 books.xsd 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-342">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a41-343">스키마의 include 및 import 요소에서 참조하는 네임스페이스 또는 위치를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-343">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></summary>
        <value><span data-ttu-id="94a41-344">스키마의 include 및 import 요소에서 참조하는 네임스페이스 또는 위치를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-344">The <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a41-345">합니다 <xref:System.Xml.XmlResolver> 의 <xref:System.Xml.Schema.XmlSchemaSet> include 및 스키마의 요소를 사용 하 여 스키마가 추가 되 든 가져올 네임 스페이스 또는 위치 참조를 확인 하는 데 사용 되는 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 또는 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94a41-345">The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="94a41-346">외부 네임 스페이스 또는 위치 참조를 포함, 가져오기 및 redefine 요소의 스키마를 포함 하거나 가져오는 스키마의 기본 URI를 기준으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-346">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="94a41-347">예를 들어, 포함 하거나 가져오는 스키마의 기본 URI를 비어 있는 경우 또는 `null`, 외부 위치가 현재 디렉터리를 기준으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-347">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="94a41-348"><xref:System.Xml.XmlUrlResolver> 클래스는 외부 스키마를 해결 하려면 기본적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-348">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="94a41-349">포함, 가져오기의 해상도 사용 하지 않도록 설정 하 고 스키마의 요소를 다시 정의 설정 합니다 <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A> 속성을 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="94a41-349">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>