<Type Name="XmlSchemaValidationFlags" FullName="System.Xml.Schema.XmlSchemaValidationFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3af9b06097103fed89f66bc06845e31a4ff016d4" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58727944" /></Metadata><TypeSignature Language="C#" Value="public enum XmlSchemaValidationFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSchemaValidationFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidationFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlSchemaValidationFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlSchemaValidationFlags" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidationFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e939e-101"><see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 및 <see cref="T:System.Xml.XmlReader" /> 클래스에서 사용하는 스키마 유효성 검사 옵션을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-101">Specifies schema validation options used by the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> and <see cref="T:System.Xml.XmlReader" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e939e-102">다음은 사용 하는 경우를 고려해 야 할 사항 <xref:System.Xml.Schema.XmlSchemaValidationFlags> 값을 <xref:System.Xml.XmlReader>입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-102">The following are notes to consider when using <xref:System.Xml.Schema.XmlSchemaValidationFlags> values with the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="e939e-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags> 스키마 유효성 검사에 사용 되는 유효성 검사 옵션을 정의 하는 값 <xref:System.Xml.XmlReader> 스키마에 대해 XML 유효성 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema.</span></span> <span data-ttu-id="e939e-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags> 유효성을 검사 하는 것에 대 한 값 <xref:System.Xml.XmlReader> 를 사용 하 여 지정 된 된 <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property.</span></span>  
  
 <span data-ttu-id="e939e-105">다음은 AllowXmlAttributes 값을 사용 하는 경우를 고려해 야 할 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-105">The following are notes to consider when using the AllowXmlAttributes value.</span></span>  
  
1.  <span data-ttu-id="e939e-106">경우 스키마는 Xml 네임 스페이스를 가져오지 않는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-106">When a schema doesn't import the Xml namespace.</span></span>  
  
    1.  <span data-ttu-id="e939e-107">AllowXmlAttributes로 설정 된 경우 `true` (기본값) 및 Xml 특성을 포함 하는 인스턴스 문서, 유효성 검사 엔진은 기본 Xml 네임 스페이스 스키마 스냅숏을 로드 하 고 유효성 검사에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-107">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation.</span></span> <span data-ttu-id="e939e-108">기본 스키마에서 인스턴스 문서에서 사용 되는 Xml 특성이 없으면 문서가 유효 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-108">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="e939e-109">AllowXmlAttributes로 설정 된 경우 `false` Xml 특성을 포함 하는 인스턴스 문서를 유효성 검사 엔진이 오류를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-109">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error.</span></span>  
  
2.  <span data-ttu-id="e939e-110">때 스키마 위치 없이 Xml 네임 스페이스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-110">When a schema imports the Xml namespace without a location.</span></span>  
  
    1.  <span data-ttu-id="e939e-111">AllowXmlAttributes로 설정 된 경우 `true` (기본값) 및 Xml 특성을 포함 하는 인스턴스 문서, 유효성 검사 엔진은 유효성 검사에 대 한 기본 Xml 네임 스페이스를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-111">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation.</span></span> <span data-ttu-id="e939e-112">기본 스키마에서 인스턴스 문서에서 사용 되는 Xml 특성이 없으면 문서가 유효 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-112">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="e939e-113">AllowXmlAttributes로 설정 된 경우 `false` 와 인스턴스 문서에 Xml 특성이 허용 되지 않는 명시적으로 스키마에서 유효성 검사 엔진이 오류를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-113">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="e939e-114">AllowXmlAttributes로 설정 된 경우 `false` 인스턴스 문서에 명시적으로 허용 되는 스키마 유효성 검사 엔진은 유효성을 검사 특성을 동일한 방식으로 기본 Xml을 사용 하 여 다른 특성의 유효성을 검사 하는 Xml 특성 및 네임 스페이스 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-114">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.</span></span>  
  
3.  <span data-ttu-id="e939e-115">때 스키마를 사용자 지정 schemaLocation 사용한 사용자 지정 Xml 네임 스페이스 스키마를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-115">When a schema imports a custom Xml namespace schema with a custom schemaLocation.</span></span>  
  
    1.  <span data-ttu-id="e939e-116">AllowXmlAttributes로 설정 된 경우 `true` (기본값) 및 Xml 특성을 포함 하는 인스턴스 문서, 유효성 검사 엔진은 유효성 검사에 대 한 사용자 지정 Xml 네임 스페이스 스키마를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-116">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation.</span></span> <span data-ttu-id="e939e-117">지정된 된 스키마에서 인스턴스 문서에서 사용 되는 Xml 특성이 없으면 문서가 유효 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-117">If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="e939e-118">AllowXmlAttributes로 설정 된 경우 `false` 와 인스턴스 문서에 Xml 특성이 허용 되지 않는 명시적으로 스키마에서 유효성 검사 엔진이 오류를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-118">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="e939e-119">AllowXmlAttributes로 설정 된 경우 `false` 인스턴스 문서에 명시적으로 허용 되는 스키마 유효성 검사 엔진은 유효성을 검사 특성을 동일한 방식으로 지정 된 Xml을 사용 하 여 다른 특성의 유효성을 검사 하는 Xml 특성 및 네임 스페이스 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-119">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.</span></span>  
  
4.  <span data-ttu-id="e939e-120">스키마에서 xml을 정의 하는 경우: \* 사용을 사용 하 여 특성 = "required"입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-120">When a schema defines an xml:\* attribute with use="required".</span></span>  
  
    1.  <span data-ttu-id="e939e-121">AllowXmlAttributes로 설정 된 경우 적용 됩니다 `true` 고 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-121">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="e939e-122">필수 xml: \* 특성이 다른 특성으로 처리할지 및 지정된 된 Xml 네임 스페이스 스키마를 사용 하 여 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-122">Required xml:\* attributes should be treated as other attributes and validated using the specified Xml namespace schema.</span></span>  
  
5.  <span data-ttu-id="e939e-123">스키마에서 xml을 정의 하는 경우: \* 사용을 사용 하 여 특성 = "prohibited"입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-123">When a schema defines an xml:\* attribute with use="prohibited".</span></span>  
  
    1.  <span data-ttu-id="e939e-124">AllowXmlAttributes로 설정 된 경우 적용 됩니다 `true` 고 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-124">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="e939e-125">Xml 인스턴스 문서에 포함 된 경우: \* 특성을 명시적으로 금지 된 스키마에서 유효성 검사 엔진이 오류를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-125">If an instance document contains xml:\* attributes that are explicitly prohibited by the schema, the validation engine will report an error.</span></span>  
  
6.  <span data-ttu-id="e939e-126">면을 스키마 특성 와일드 카드를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-126">When a schema specifies an attribute wildcard.</span></span>  
  
    1.  <span data-ttu-id="e939e-127">유효성 검사 엔진에 Xml 네임 스페이스 스키마를 사용할지를 인스턴스 문서에 Xml 특성이 포함 된 스키마 processContents 생략 하거나 "strict"로 설정 된 특성 와일드 카드를 지정 하는 경우는 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-127">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to "strict", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="e939e-128">Xml 네임 스페이스 스키마가 지정 하지 않으면 하는 경우 유효성 검사 엔진은 다음과 같이 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-128">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    2.  <span data-ttu-id="e939e-129">AllowXmlAttributes로 설정 된 경우 `true`, 유효성 검사 엔진 기본 Xml 네임 스페이스를 사용 하 여 유효성 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-129">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    3.  <span data-ttu-id="e939e-130">AllowXmlAttributes로 설정 된 경우 `false`, 유효성 검사 엔진이 오류를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-130">If AllowXmlAttributes is set to `false`, the validation engine will report an error.</span></span>  
  
    4.  <span data-ttu-id="e939e-131">Xml 특성을 포함 하는 인스턴스 문서 스키마 "건너뛰지"로 설정 하는 processContents 특성 와일드 카드 지정을 하는 경우 유효성 검사 엔진에서 특성 유효성 검사를 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-131">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "skip", the validation engine will skip attribute validation.</span></span>  
  
    5.  <span data-ttu-id="e939e-132">유효성 검사 엔진에 Xml 네임 스페이스 스키마를 사용할지를 인스턴스 문서에 Xml 특성이 포함 된 경우 스키마 "lax"로 설정 하는 processContents 특성 와일드 카드 지정을 <xref:System.Xml.Schema.XmlSchemaSet>입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-132">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "lax", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="e939e-133">Xml 네임 스페이스 스키마가 지정 하지 않으면 하는 경우 유효성 검사 엔진은 다음과 같이 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-133">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    6.  <span data-ttu-id="e939e-134">AllowXmlAttributes로 설정 된 경우 `true`, 유효성 검사 엔진 기본 Xml 네임 스페이스를 사용 하 여 유효성 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-134">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    7.  <span data-ttu-id="e939e-135">AllowXmlAttributes로 설정 된 경우 `false`, 특성 유효성 검사를 수행 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-135">If AllowXmlAttributes is set to `false`, attribute validation will not be performed.</span></span>  
  
7.  <span data-ttu-id="e939e-136">단순 형식 유효성 검사 하는 경우</span><span class="sxs-lookup"><span data-stu-id="e939e-136">When validating simple types.</span></span>  
  
    1.  <span data-ttu-id="e939e-137">AllowXmlAttributes로 설정 되 면 `true` (기본값), 단순 유형의 요소에서 Xml 특성 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-137">When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e939e-138">예는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes> 클래스는 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스.</span><span class="sxs-lookup"><span data-stu-id="e939e-138">For an example of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes> class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
  </Docs>
  <Members>
    <Member MemberName="AllowXmlAttributes">
      <MemberSignature Language="C#" Value="AllowXmlAttributes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberSignature Language="VB.NET" Value="AllowXmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="AllowXmlAttributes" />
      <MemberSignature Language="F#" Value="AllowXmlAttributes = 16" Usage="System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e939e-139">스키마에 정의되지 않은 xml:\* 특성도 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-139">Allow xml:\* attributes even if they are not defined in the schema.</span></span> <span data-ttu-id="e939e-140">해당 데이터 형식을 기반으로 이러한 특성의 유효성이 검사됩니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-140">The attributes will be validated based on their data type.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e939e-141">Identity 제약 조건, 인라인 스키마 및 스키마 위치 힌트를 처리하지 않고 스키마 유효성 검사 경고를 보고하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-141">Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdentityConstraints">
      <MemberSignature Language="C#" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberSignature Language="VB.NET" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="C++ CLI" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="F#" Value="ProcessIdentityConstraints = 8" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e939e-142">유효성 검사 중 발생한 프로세스 ID 제약 조건(<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>)입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-142">Process identity constraints (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) encountered during validation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessInlineSchema">
      <MemberSignature Language="C#" Value="ProcessInlineSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberSignature Language="VB.NET" Value="ProcessInlineSchema" />
      <MemberSignature Language="C++ CLI" Value="ProcessInlineSchema" />
      <MemberSignature Language="F#" Value="ProcessInlineSchema = 1" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e939e-143">유효성 검사를 수행하는 동안 발견되는 인라인 스키마를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-143">Process inline schemas encountered during validation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessSchemaLocation">
      <MemberSignature Language="C#" Value="ProcessSchemaLocation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberSignature Language="VB.NET" Value="ProcessSchemaLocation" />
      <MemberSignature Language="C++ CLI" Value="ProcessSchemaLocation" />
      <MemberSignature Language="F#" Value="ProcessSchemaLocation = 2" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e939e-144">유효성 검사 중 발생한 프로세스 스키마 위치 힌트(<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>)입니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-144">Process schema location hints (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) encountered during validation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReportValidationWarnings">
      <MemberSignature Language="C#" Value="ReportValidationWarnings" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberSignature Language="VB.NET" Value="ReportValidationWarnings" />
      <MemberSignature Language="C++ CLI" Value="ReportValidationWarnings" />
      <MemberSignature Language="F#" Value="ReportValidationWarnings = 4" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e939e-145">유효성 검사를 수행하는 동안 발생하는 스키마 유효성 검사 경고를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="e939e-145">Report schema validation warnings encountered during validation.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>