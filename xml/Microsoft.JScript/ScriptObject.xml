<Type Name="ScriptObject" FullName="Microsoft.JScript.ScriptObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4056b68a9fa4ddd3637fba221535d729de6c0b95" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57954570" /></Metadata><TypeSignature Language="C#" Value="public abstract class ScriptObject : System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ScriptObject extends System.Object implements class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ScriptObject&#xA;Implements IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptObject abstract : System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type ScriptObject = class&#xA;    interface IReflect" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="34c55-101">모든 JScript 클래스를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-101">Supports all JScript classes.</span></span> <span data-ttu-id="34c55-102">모든 JScript 클래스 중에서 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-102">This is the ultimate base class of all JScript classes.</span></span> <span data-ttu-id="34c55-103">이 클래스는 개체 및 함수 범주에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-103">This class belongs to the objects and functions category.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.JSObject" />
  </Docs>
  <Members>
    <Member MemberName="engine">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.VsaEngine engine;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.JScript.Vsa.VsaEngine engine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.ScriptObject.engine" />
      <MemberSignature Language="VB.NET" Value="Public engine As VsaEngine " />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::JScript::Vsa::VsaEngine ^ engine;" />
      <MemberSignature Language="F#" Value="val mutable engine : Microsoft.JScript.Vsa.VsaEngine" Usage="Microsoft.JScript.ScriptObject.engine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.VsaEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34c55-104">스크립팅 엔진에 대한 참조를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-104">Stores a reference to the scripting engine.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo&#xA;override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="scriptObject.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-105">가져올 필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-105">The name of the field to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="34c55-106">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-106">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-107">지정된 이름을 가진 필드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-107">Gets a field that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="34c55-108">지정된 <paramref name="name" />을 가진 필드이거나 스크립트 개체에 이 필드가 없는 경우 null입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-108">A field that has the specified <paramref name="name" />, or null if the script object does not contain the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]&#xA;override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="scriptObject.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="34c55-109">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-109">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-110">현재 스크립트 개체의 모든 필드에 해당하는 <see cref="T:System.Reflection.FieldInfo" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-110">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current script object.</span></span></summary>
        <returns><span data-ttu-id="34c55-111">현재 스크립트 개체의 모든 필드가 포함된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-111">An array of objects that contains all fields of the current script object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="scriptObject.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-112">검색할 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-112">The name of the member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="34c55-113">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-113">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-114">파생 클래스에서 재정의된 경우 지정된 이름과 일치하는 모든 멤버에 해당하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-114">When overridden in a derived class, gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="34c55-115"><paramref name="name" /> 인수와 일치하는 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-115">An array of objects that match the <paramref name="name" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="scriptObject.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="34c55-116">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-116">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-117">파생 클래스에서 재정의된 경우 현재 스크립트 개체의 모든 멤버에 해당하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-117">When overridden in a derived class, gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the current script object.</span></span></summary>
        <returns><span data-ttu-id="34c55-118">현재 스크립트 개체의 모든 멤버가 포함된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-118">An array of objects that contains all members of the current script object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="34c55-119">지정된 이름을 가진 메서드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-119">Gets a method that has a specified name.</span></span></summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo&#xA;override this.GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="scriptObject.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-120">가져올 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-120">The name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="34c55-121">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-121">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-122">지정된 이름을 가진 메서드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-122">Gets a method that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="34c55-123">지정된 <paramref name="name" />을 가진 메서드이거나 스크립트 개체에 이 메서드가 없는 경우 null입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-123">A method that has the specified <paramref name="name" />, or null if the script object does not contain the method.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo&#xA;override this.GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="scriptObject.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-124">검색할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-124">The name of the method to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="34c55-125">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-125">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <param name="binder"><span data-ttu-id="34c55-126">실제 인수 형식에서 정식 인수 형식으로의 형식 변환을 수행하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-126">An object that performs type conversion from actual argument type to formal argument type.</span></span></param>
        <param name="types"><span data-ttu-id="34c55-127">일치하는 메서드를 찾는 데 사용할 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-127">The parameter types that are used to locate a matching method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="34c55-128">형식이 수정된 매개 변수 시그니처로 작업하기 위해 바인딩을 사용하는 매개 변수 한정자의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-128">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="34c55-129">지정된 선택 조건을 사용하여 지정된 이름을 가진 메서드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-129">Gets a method that has the specified name by using the specified selection criteria.</span></span></summary>
        <returns><span data-ttu-id="34c55-130">지정된 <paramref name="name" />을 가진 메서드이거나 스크립트 개체에 이 메서드가 없는 경우 null입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-130">A method that has the specified <paramref name="name" />, or null if the script object does not contain the method.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]&#xA;override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="scriptObject.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="34c55-131">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-132">현재 스크립트 개체의 모든 메서드에 해당하는 <see cref="T:System.Reflection.MethodInfo" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-132">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the current script object.</span></span></summary>
        <returns><span data-ttu-id="34c55-133">현재 스크립트 개체의 모든 메서드가 포함된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-133">An array of objects that contains all methods of the current script object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ScriptObject GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ScriptObject GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As ScriptObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ScriptObject ^ GetParent();" />
      <MemberSignature Language="F#" Value="member this.GetParent : unit -&gt; Microsoft.JScript.ScriptObject" Usage="scriptObject.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="34c55-134">부모 개체에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-134">Gets a reference to the parent object.</span></span></summary>
        <returns><span data-ttu-id="34c55-135">부모 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-135">A reference to the parent object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34c55-136">부모는 스크립트 개체는를 구현 하지 않는 자체 메서드나 속성에 대 한 요청을 위임 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-136">The parent is the object to which the script object delegates requests for properties or methods that it does not implement itself.</span></span> <span data-ttu-id="34c55-137">만들 때 예를 들어를 <xref:Microsoft.JScript.NumberObject> 를 사용 하 여는 <xref:Microsoft.JScript.NumberConstructor>, 부모가 <xref:Microsoft.JScript.NumberPrototype>합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-137">For example, when you create a <xref:Microsoft.JScript.NumberObject> by using a <xref:Microsoft.JScript.NumberConstructor>, the parent is a <xref:Microsoft.JScript.NumberPrototype>.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]&#xA;override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="scriptObject.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="34c55-138">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-138">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-139">현재 스크립트 개체의 모든 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-139">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the current script object.</span></span></summary>
        <returns><span data-ttu-id="34c55-140">현재 스크립트 개체의 모든 속성이 포함된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-140">An array of objects that contains all properties of the current script object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="34c55-141">지정된 이름을 가진 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-141">Gets a property that has a specified name.</span></span></summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo&#xA;override this.GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="scriptObject.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-142">가져올 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-142">The name of the property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="34c55-143">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-143">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="34c55-144">지정된 이름을 가진 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-144">Gets a property that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="34c55-145">지정된 <paramref name="name" />을 가진 속성이거나 스크립트 개체에 이 속성이 없는 경우 null입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-145">A property that has the specified <paramref name="name" />, or null if the script object does not contain the property.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo&#xA;override this.GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="scriptObject.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-146">검색할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-146">The name of the property to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="34c55-147">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-147">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <param name="binder"><span data-ttu-id="34c55-148">실제 인수 형식에서 정식 인수 형식으로의 형식 변환을 수행하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-148">An object that performs type conversion from actual argument type to formal argument type.</span></span></param>
        <param name="returnType"><span data-ttu-id="34c55-149">속성이 가져야 하는 반환 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-149">The type of the return value that the property must have.</span></span></param>
        <param name="types"><span data-ttu-id="34c55-150">검색 중인 속성의 인덱스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-150">The index types of the property being searched for.</span></span> <span data-ttu-id="34c55-151">클래스에 대한 인덱서와 같은 인덱스 속성에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-151">Used for index properties, such as the indexer for a class.</span></span></param>
        <param name="modifiers"><span data-ttu-id="34c55-152">형식이 수정된 매개 변수 시그니처로 작업하기 위해 바인딩을 사용하는 매개 변수 한정자의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-152">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="34c55-153">지정된 선택 조건을 사용하여 지정된 이름을 가진 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-153">Gets a property that has the specified name by using the specified selection criteria.</span></span></summary>
        <returns><span data-ttu-id="34c55-154">지정된 <paramref name="name" />을 가진 속성이거나 스크립트 개체에 이 속성이 없는 경우 null입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-154">A property that has the specified <paramref name="name" />, or null if the script object does not contain the property.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public virtual object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo locale, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo locale, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ locale, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj&#xA;override this.InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="scriptObject.InvokeMember (name, invokeAttr, binder, target, args, modifiers, locale, namedParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="locale" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-155">호출할 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-155">The name of the member to invoke.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="34c55-156">리플렉션을 통해 멤버를 검색하는 방법을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-156">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <param name="binder"><span data-ttu-id="34c55-157">실제 인수 형식에서 정식 인수 형식으로의 형식 변환을 수행하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-157">An object that performs type conversion from actual argument type to formal argument type.</span></span></param>
        <param name="target"><span data-ttu-id="34c55-158">멤버를 호출할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-158">The object on which to invoke the member.</span></span> <span data-ttu-id="34c55-159">이는 현재 스크립트 개체여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-159">This must be the current script object.</span></span></param>
        <param name="args"><span data-ttu-id="34c55-160">호출되는 멤버에 대한 매개 변수의 개수, 순서 및 형식이 포함된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-160">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="34c55-161">매개 변수가 없는 경우 이 배열은 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-161">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="34c55-162">args 매개 변수와 길이가 같은 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-162">An array that has the same length as the args parameter.</span></span> <span data-ttu-id="34c55-163">메타데이터에서 호출된 멤버의 인수 특성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-163">It represents the invoked member's argument attributes in the metadata.</span></span></param>
        <param name="locale"><span data-ttu-id="34c55-164">특정 문화권 또는 로캘에 대한 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-164">Provides information about a specific culture or locale.</span></span> <span data-ttu-id="34c55-165">숫자, 날짜 및 문자열의 형식을 올바르게 지정하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-165">Used to format numbers, dates, and strings correctly.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="34c55-166">매개 변수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-166">An array of parameters.</span></span></param>
        <summary><span data-ttu-id="34c55-167">지정된 멤버를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-167">Invokes the specified member.</span></span></summary>
        <returns><span data-ttu-id="34c55-168">멤버 호출의 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-168">The return value of the call to the member.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="34c55-169">스크립트 개체의 멤버를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-169">Gets or sets a member of the script object.</span></span></summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[double index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(float64)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Double) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[double] { System::Object ^ get(double index); void set(double index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(double) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="34c55-170">멤버의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-170">The index of the member.</span></span></param>
        <summary><span data-ttu-id="34c55-171">지정된 <see cref="T:System.Double" /> 인덱스 값으로 지정되는 스크립트 개체의 멤버를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-171">Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Double" /> index value.</span></span></summary>
        <value><span data-ttu-id="34c55-172"><paramref name="index" />에 있는 멤버의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-172">The value of the member that is at <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="34c55-173">멤버의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-173">The index of the member.</span></span></param>
        <summary><span data-ttu-id="34c55-174">지정된 <see cref="T:System.Int32" /> 인덱스 값으로 지정되는 스크립트 개체의 멤버를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-174">Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Int32" /> index value.</span></span></summary>
        <value><span data-ttu-id="34c55-175"><paramref name="index" />에 있는 멤버의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-175">The value of the member that is at <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[params object[] pars] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object[])" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(ParamArray pars As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[cli::array &lt;System::Object ^&gt; ^] { System::Object ^ get(... cli::array &lt;System::Object ^&gt; ^ pars); void set(... cli::array &lt;System::Object ^&gt; ^ pars, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj[]) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pars" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pars"><span data-ttu-id="34c55-176">멤버의 이름 또는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-176">The name or index of the member.</span></span></param>
        <summary><span data-ttu-id="34c55-177">지정된 이름, <see cref="T:System.Double" /> 인덱스 값 또는 <see cref="T:System.Int32" /> 인덱스 값으로 지정되는 스크립트 개체의 멤버를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-177">Gets or sets a member of the script object that is designated by the specified name, <see cref="T:System.Double" /> index value, or <see cref="T:System.Int32" /> index value.</span></span></summary>
        <value><span data-ttu-id="34c55-178"><paramref name="pars" />에 지정된 멤버의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-178">The value of the member that is specified in <paramref name="pars" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34c55-179">경우는 `pars` 배열에 요소가 둘 이상에서 마지막 요소는이 속성에 대 한 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-179">If the `pars` array has more than one element, the last element is the argument for this property.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="34c55-180">멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-180">The name of the member.</span></span></param>
        <summary><span data-ttu-id="34c55-181">지정된 이름으로 지정되는 스크립트 개체의 멤버를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-181">Gets or sets a member of the script object that is designated by the specified name.</span></span></summary>
        <value><span data-ttu-id="34c55-182"><paramref name="name" />이라는 멤버의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-182">The value of the member that is named <paramref name="name" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="parent">
      <MemberSignature Language="C#" Value="protected Microsoft.JScript.ScriptObject parent;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.JScript.ScriptObject parent" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.ScriptObject.parent" />
      <MemberSignature Language="VB.NET" Value="Protected parent As ScriptObject " />
      <MemberSignature Language="C++ CLI" Value="protected: Microsoft::JScript::ScriptObject ^ parent;" />
      <MemberSignature Language="F#" Value="val mutable parent : Microsoft.JScript.ScriptObject" Usage="Microsoft.JScript.ScriptObject.parent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34c55-183">부모 개체에 대한 참조를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-183">Stores a reference to the parent object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34c55-184">부모는 스크립트 개체는를 구현 하지 않는 자체 메서드나 속성에 대 한 요청을 위임 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-184">The parent is the object to which the script object delegates requests for properties or methods that it does not implement itself.</span></span> <span data-ttu-id="34c55-185">만들 때 예를 들어를 <xref:Microsoft.JScript.NumberObject> 를 사용 하 여는 <xref:Microsoft.JScript.NumberConstructor>, 부모가 <xref:Microsoft.JScript.NumberPrototype>합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-185">For example, when you create a <xref:Microsoft.JScript.NumberObject> by using a <xref:Microsoft.JScript.NumberConstructor>, the parent is a <xref:Microsoft.JScript.NumberPrototype>.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public virtual Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="Microsoft.JScript.ScriptObject.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34c55-186">스크립트 개체의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-186">Gets the type of the script object.</span></span></summary>
        <value><span data-ttu-id="34c55-187">스크립트 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-187">The type of the script object.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WrapMembers">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="34c55-188">*wrapped* 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-188">Creates *wrapped* objects.</span></span> <span data-ttu-id="34c55-189">래핑된 각 개체에는 하나의 멤버(필드, 속성 또는 메서드)에 대한 정보와 함께 멤버가 정의되어 있는 인스턴스화된 개체의 복사본이 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-189">Each wrapped object contains the information for one member (field, property, or method), together with a copy of the instantiated object that the member is defined on.</span></span> <span data-ttu-id="34c55-190">이렇게 하면 멤버가 들어 있지 않은 다른 개체에서도 멤버를 저장한 다음 해당 값을 고유한 값인 것처럼 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-190">This enables other objects that do not contain the member to store it and then return its value as if it were their own.</span></span></summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WrapMembers">
      <MemberSignature Language="C#" Value="protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo member, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Reflection.MemberInfo[] WrapMembers(class System.Reflection.MemberInfo member, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WrapMembers (member As MemberInfo, obj As Object) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ WrapMembers(System::Reflection::MemberInfo ^ member, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member WrapMembers : System.Reflection.MemberInfo * obj -&gt; System.Reflection.MemberInfo[]" Usage="Microsoft.JScript.ScriptObject.WrapMembers (member, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="34c55-191">래핑할 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-191">The member to wrap.</span></span></param>
        <param name="obj"><span data-ttu-id="34c55-192"><paramref name="member" />가 정의된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-192">The object that <paramref name="member" /> is defined on.</span></span></param>
        <summary><span data-ttu-id="34c55-193">지정된 개체와 함께 지정된 멤버를 포함하는 래핑된 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-193">Creates a wrapped object that contains the specified member together with the specified object.</span></span></summary>
        <returns><span data-ttu-id="34c55-194">멤버 정보 및 <paramref name="obj" />를 포함하는 래핑된 개체가 있는 요소가 하나인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-194">A one-element array that has a wrapped object that contains the member information and <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34c55-195">이 메서드를 저장 한 다음 자신의 것 처럼 해당 값을 반환할 멤버를 포함 하지 않는 다른 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-195">This method enables other objects that do not contain the member to store it and then return its value as if it were their own.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="WrapMembers">
      <MemberSignature Language="C#" Value="protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Reflection.MemberInfo[] WrapMembers(class System.Reflection.MemberInfo[] members, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WrapMembers (members As MemberInfo(), obj As Object) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ WrapMembers(cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member WrapMembers : System.Reflection.MemberInfo[] * obj -&gt; System.Reflection.MemberInfo[]" Usage="Microsoft.JScript.ScriptObject.WrapMembers (members, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="members"><span data-ttu-id="34c55-196">래핑할 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-196">The members to wrap.</span></span></param>
        <param name="obj"><span data-ttu-id="34c55-197"><paramref name="members" />가 정의된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-197">The object that <paramref name="members" /> are defined on.</span></span></param>
        <summary><span data-ttu-id="34c55-198">지정된 개체와 함께 지정된 멤버를 포함하는 래핑된 개체의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-198">Creates an array of wrapped objects that contain the specified members together with the specified object.</span></span></summary>
        <returns><span data-ttu-id="34c55-199">각각 멤버 정보와 <paramref name="obj" />의 복사본을 포함하는 래핑된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-199">An array of wrapped objects, each of which contains member information and a copy of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34c55-200">이 메서드를 저장 한 다음 값을 반환 하는 자신의 것 처럼 이러한 멤버를 포함 하지 않는 다른 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-200">This method enables other objects that do not contain these members to store them and then return their values as if they were their own.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="WrapMembers">
      <MemberSignature Language="C#" Value="protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj, Microsoft.JScript.SimpleHashtable cache);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Reflection.MemberInfo[] WrapMembers(class System.Reflection.MemberInfo[] members, object obj, class Microsoft.JScript.SimpleHashtable cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WrapMembers (members As MemberInfo(), obj As Object, cache As SimpleHashtable) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ WrapMembers(cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members, System::Object ^ obj, Microsoft::JScript::SimpleHashtable ^ cache);" />
      <MemberSignature Language="F#" Value="static member WrapMembers : System.Reflection.MemberInfo[] * obj * Microsoft.JScript.SimpleHashtable -&gt; System.Reflection.MemberInfo[]" Usage="Microsoft.JScript.ScriptObject.WrapMembers (members, obj, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="cache" Type="Microsoft.JScript.SimpleHashtable" />
      </Parameters>
      <Docs>
        <param name="members"><span data-ttu-id="34c55-201">래핑할 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-201">The members to wrap.</span></span></param>
        <param name="obj"><span data-ttu-id="34c55-202"><paramref name="members" />가 정의된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-202">The object that <paramref name="members" /> are defined on.</span></span></param>
        <param name="cache"><span data-ttu-id="34c55-203">래핑된 개체를 위한 임시 데이터 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-203">Temporary data storage for the wrapped objects.</span></span></param>
        <summary><span data-ttu-id="34c55-204">지정된 데이터 저장소에 결과를 캐시하면서 지정된 개체와 함께 지정된 멤버를 포함하는 래핑된 개체의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-204">Creates an array of wrapped objects that contain the specified members together with the specified object, caching the results in the specified data storage.</span></span></summary>
        <returns><span data-ttu-id="34c55-205">각각 멤버 정보와 <paramref name="obj" />의 복사본을 포함하는 래핑된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-205">An array of wrapped objects, each of which contains member information and a copy of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34c55-206">이 메서드를 저장 한 다음 값을 반환 하는 자신의 것 처럼 이러한 멤버를 포함 하지 않는 다른 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="34c55-206">This method enables other objects that do not contain these members to store them and then return their values as if they were their own.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
  </Members>
</Type>