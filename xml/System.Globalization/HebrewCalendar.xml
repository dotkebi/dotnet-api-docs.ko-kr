<Type Name="HebrewCalendar" FullName="System.Globalization.HebrewCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d461144f84a82a2262fab018b667d6ebf9d2006" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57920978" /></Metadata><TypeSignature Language="C#" Value="public class HebrewCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HebrewCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.HebrewCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class HebrewCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class HebrewCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type HebrewCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="76a43-101">히브리어 달력을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-101">Represents the Hebrew calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-102">히브리어 달력 두 연대를 인식합니다. B.C.E.</span><span class="sxs-lookup"><span data-stu-id="76a43-102">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="76a43-103">중세 시대) (이전 오전</span><span class="sxs-lookup"><span data-stu-id="76a43-103">(before the common era) and A.M.</span></span> <span data-ttu-id="76a43-104">(라틴 문자 "전 세계의 year"를 의미 합니다. "Anno Mundi").</span><span class="sxs-lookup"><span data-stu-id="76a43-104">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="76a43-105">이 구현의 <xref:System.Globalization.HebrewCalendar> 현재 연대 (오전) 및 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의) 클래스를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-105">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.) and the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76a43-106">사용에 관한 정보를 <xref:System.Globalization.HebrewCalendar> 클래스와 다른 달력.NET Framework의 클래스를 참조 하십시오 [달력 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-106">For information about using the <xref:System.Globalization.HebrewCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="76a43-107">19 년 주기로 19, 3, 6, 8 일, 11, 14th로 균등 하 게 나눌 수 있는 1 년으로 끝나는, 17 일, 년에서 19 년에는 윤년.</span><span class="sxs-lookup"><span data-stu-id="76a43-107">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="76a43-108">평년 353 유대교 휴일의 배치에 따라 355 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-108">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="76a43-109">윤년 383 385 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-109">A leap year can have from 383 to 385 days.</span></span>  
  
 <span data-ttu-id="76a43-110">히브리어 달력 평년 및 윤년 13 개월 12 개월에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-110">The Hebrew calendar has 12 months during common years and 13 months during leap years:</span></span>  
  
|<span data-ttu-id="76a43-111">GetMonth 값 (일반적인 년)</span><span class="sxs-lookup"><span data-stu-id="76a43-111">GetMonth value (common year)</span></span>|<span data-ttu-id="76a43-112">GetMonth 값 (윤년)</span><span class="sxs-lookup"><span data-stu-id="76a43-112">GetMonth value (leap year)</span></span>|<span data-ttu-id="76a43-113">월</span><span class="sxs-lookup"><span data-stu-id="76a43-113">Month</span></span>|<span data-ttu-id="76a43-114">일반적인 년간 일</span><span class="sxs-lookup"><span data-stu-id="76a43-114">Days in common years</span></span>|<span data-ttu-id="76a43-115">윤년의 날짜</span><span class="sxs-lookup"><span data-stu-id="76a43-115">Days in leap years</span></span>|  
|------------------------------------|----------------------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="76a43-116">1</span><span class="sxs-lookup"><span data-stu-id="76a43-116">1</span></span>|<span data-ttu-id="76a43-117">1</span><span class="sxs-lookup"><span data-stu-id="76a43-117">1</span></span>|<span data-ttu-id="76a43-118">תשרי (티쉬리)</span><span class="sxs-lookup"><span data-stu-id="76a43-118">תשרי (Tishrei)</span></span>|<span data-ttu-id="76a43-119">30</span><span class="sxs-lookup"><span data-stu-id="76a43-119">30</span></span>|<span data-ttu-id="76a43-120">30</span><span class="sxs-lookup"><span data-stu-id="76a43-120">30</span></span>|  
|<span data-ttu-id="76a43-121">2</span><span class="sxs-lookup"><span data-stu-id="76a43-121">2</span></span>|<span data-ttu-id="76a43-122">2</span><span class="sxs-lookup"><span data-stu-id="76a43-122">2</span></span>|<span data-ttu-id="76a43-123">חשון (헤 쉬 반의)</span><span class="sxs-lookup"><span data-stu-id="76a43-123">חשון (Cheshvan)</span></span>|<span data-ttu-id="76a43-124">29/30</span><span class="sxs-lookup"><span data-stu-id="76a43-124">29/30</span></span>|<span data-ttu-id="76a43-125">29/30</span><span class="sxs-lookup"><span data-stu-id="76a43-125">29/30</span></span>|  
|<span data-ttu-id="76a43-126">3</span><span class="sxs-lookup"><span data-stu-id="76a43-126">3</span></span>|<span data-ttu-id="76a43-127">3</span><span class="sxs-lookup"><span data-stu-id="76a43-127">3</span></span>|<span data-ttu-id="76a43-128">כסלו (Kislev)</span><span class="sxs-lookup"><span data-stu-id="76a43-128">כסלו (Kislev)</span></span>|<span data-ttu-id="76a43-129">29/30</span><span class="sxs-lookup"><span data-stu-id="76a43-129">29/30</span></span>|<span data-ttu-id="76a43-130">29/30</span><span class="sxs-lookup"><span data-stu-id="76a43-130">29/30</span></span>|  
|<span data-ttu-id="76a43-131">4</span><span class="sxs-lookup"><span data-stu-id="76a43-131">4</span></span>|<span data-ttu-id="76a43-132">4</span><span class="sxs-lookup"><span data-stu-id="76a43-132">4</span></span>|<span data-ttu-id="76a43-133">טבת (테 벳)</span><span class="sxs-lookup"><span data-stu-id="76a43-133">טבת (Tevet)</span></span>|<span data-ttu-id="76a43-134">29</span><span class="sxs-lookup"><span data-stu-id="76a43-134">29</span></span>|<span data-ttu-id="76a43-135">29</span><span class="sxs-lookup"><span data-stu-id="76a43-135">29</span></span>|  
|<span data-ttu-id="76a43-136">5</span><span class="sxs-lookup"><span data-stu-id="76a43-136">5</span></span>|<span data-ttu-id="76a43-137">5</span><span class="sxs-lookup"><span data-stu-id="76a43-137">5</span></span>|<span data-ttu-id="76a43-138">שבט (Shevat)</span><span class="sxs-lookup"><span data-stu-id="76a43-138">שבט (Shevat)</span></span>|<span data-ttu-id="76a43-139">30</span><span class="sxs-lookup"><span data-stu-id="76a43-139">30</span></span>|<span data-ttu-id="76a43-140">30</span><span class="sxs-lookup"><span data-stu-id="76a43-140">30</span></span>|  
|<span data-ttu-id="76a43-141">6</span><span class="sxs-lookup"><span data-stu-id="76a43-141">6</span></span>|-|<span data-ttu-id="76a43-142">אדר (아 달)</span><span class="sxs-lookup"><span data-stu-id="76a43-142">אדר (Adar)</span></span>|<span data-ttu-id="76a43-143">29</span><span class="sxs-lookup"><span data-stu-id="76a43-143">29</span></span>|-|  
|-|<span data-ttu-id="76a43-144">6</span><span class="sxs-lookup"><span data-stu-id="76a43-144">6</span></span>|<span data-ttu-id="76a43-145">אדר א (아 달 Alef)</span><span class="sxs-lookup"><span data-stu-id="76a43-145">אדר א (Adar Alef)</span></span>|-|<span data-ttu-id="76a43-146">30</span><span class="sxs-lookup"><span data-stu-id="76a43-146">30</span></span>|  
|-|<span data-ttu-id="76a43-147">7</span><span class="sxs-lookup"><span data-stu-id="76a43-147">7</span></span>|<span data-ttu-id="76a43-148">אדר ב (아 달 베이 트)</span><span class="sxs-lookup"><span data-stu-id="76a43-148">אדר ב (Adar Beit)</span></span>|-|<span data-ttu-id="76a43-149">29</span><span class="sxs-lookup"><span data-stu-id="76a43-149">29</span></span>|  
|<span data-ttu-id="76a43-150">7</span><span class="sxs-lookup"><span data-stu-id="76a43-150">7</span></span>|<span data-ttu-id="76a43-151">8</span><span class="sxs-lookup"><span data-stu-id="76a43-151">8</span></span>|<span data-ttu-id="76a43-152">ניסן (Nissan)</span><span class="sxs-lookup"><span data-stu-id="76a43-152">ניסן (Nissan)</span></span>|<span data-ttu-id="76a43-153">30</span><span class="sxs-lookup"><span data-stu-id="76a43-153">30</span></span>|<span data-ttu-id="76a43-154">30</span><span class="sxs-lookup"><span data-stu-id="76a43-154">30</span></span>|  
|<span data-ttu-id="76a43-155">8</span><span class="sxs-lookup"><span data-stu-id="76a43-155">8</span></span>|<span data-ttu-id="76a43-156">9</span><span class="sxs-lookup"><span data-stu-id="76a43-156">9</span></span>|<span data-ttu-id="76a43-157">אייר (Iyar)</span><span class="sxs-lookup"><span data-stu-id="76a43-157">אייר (Iyar)</span></span>|<span data-ttu-id="76a43-158">29</span><span class="sxs-lookup"><span data-stu-id="76a43-158">29</span></span>|<span data-ttu-id="76a43-159">29</span><span class="sxs-lookup"><span data-stu-id="76a43-159">29</span></span>|  
|<span data-ttu-id="76a43-160">9</span><span class="sxs-lookup"><span data-stu-id="76a43-160">9</span></span>|<span data-ttu-id="76a43-161">10</span><span class="sxs-lookup"><span data-stu-id="76a43-161">10</span></span>|<span data-ttu-id="76a43-162">סיון (Sivan)</span><span class="sxs-lookup"><span data-stu-id="76a43-162">סיון (Sivan)</span></span>|<span data-ttu-id="76a43-163">30</span><span class="sxs-lookup"><span data-stu-id="76a43-163">30</span></span>|<span data-ttu-id="76a43-164">30</span><span class="sxs-lookup"><span data-stu-id="76a43-164">30</span></span>|  
|<span data-ttu-id="76a43-165">10</span><span class="sxs-lookup"><span data-stu-id="76a43-165">10</span></span>|<span data-ttu-id="76a43-166">11</span><span class="sxs-lookup"><span data-stu-id="76a43-166">11</span></span>|<span data-ttu-id="76a43-167">תמוז (Tamuz)</span><span class="sxs-lookup"><span data-stu-id="76a43-167">תמוז (Tamuz)</span></span>|<span data-ttu-id="76a43-168">29</span><span class="sxs-lookup"><span data-stu-id="76a43-168">29</span></span>|<span data-ttu-id="76a43-169">29</span><span class="sxs-lookup"><span data-stu-id="76a43-169">29</span></span>|  
|<span data-ttu-id="76a43-170">11</span><span class="sxs-lookup"><span data-stu-id="76a43-170">11</span></span>|<span data-ttu-id="76a43-171">12</span><span class="sxs-lookup"><span data-stu-id="76a43-171">12</span></span>|<span data-ttu-id="76a43-172">אב (Av)</span><span class="sxs-lookup"><span data-stu-id="76a43-172">אב (Av)</span></span>|<span data-ttu-id="76a43-173">30</span><span class="sxs-lookup"><span data-stu-id="76a43-173">30</span></span>|<span data-ttu-id="76a43-174">30</span><span class="sxs-lookup"><span data-stu-id="76a43-174">30</span></span>|  
|<span data-ttu-id="76a43-175">12</span><span class="sxs-lookup"><span data-stu-id="76a43-175">12</span></span>|<span data-ttu-id="76a43-176">13</span><span class="sxs-lookup"><span data-stu-id="76a43-176">13</span></span>|<span data-ttu-id="76a43-177">אלול (의)</span><span class="sxs-lookup"><span data-stu-id="76a43-177">אלול (Elul)</span></span>|<span data-ttu-id="76a43-178">29</span><span class="sxs-lookup"><span data-stu-id="76a43-178">29</span></span>|<span data-ttu-id="76a43-179">29</span><span class="sxs-lookup"><span data-stu-id="76a43-179">29</span></span>|  
  
 <span data-ttu-id="76a43-180">헤 쉬 반의 반과 요일 유대교 휴일의 배치에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-180">The days in Cheshvan and Kislev vary depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="76a43-181">윤년을 아 달 바뀝니다로 30 일 및 아 달 베이 트 29 일까 지.</span><span class="sxs-lookup"><span data-stu-id="76a43-181">During leap years, Adar is replaced by Adar Alef with 30 days and Adar Beit with 29 days.</span></span> <span data-ttu-id="76a43-182">아 달 Alef 윤 월 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-182">Adar Alef is considered the leap month.</span></span> <span data-ttu-id="76a43-183">아 달 Alef 및 모든 베이 트 아 달의에서 날짜는 마지막 날짜 윤 일; 즉, 합니다 <xref:System.Globalization.HebrewCalendar.IsLeapDay%2A> 메서드가 반환 되는 `true` 이 요즘에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-183">The last day of Adar Alef and all the days in Adar Beit are considered leap days; that is, the <xref:System.Globalization.HebrewCalendar.IsLeapDay%2A> method returns `true` for these days.</span></span>  
  
 <span data-ttu-id="76a43-184">A.d. 2001 년 1 월 1 일</span><span class="sxs-lookup"><span data-stu-id="76a43-184">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="76a43-185">일반 달력의 연도 벳 월 6 일에 해당 하는 오전 5761</span><span class="sxs-lookup"><span data-stu-id="76a43-185">in the Gregorian calendar is equivalent to the sixth day of Tevet in the year 5761 A.M.</span></span> <span data-ttu-id="76a43-186">히브리식 달력입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-186">in the Hebrew calendar.</span></span>  
  
 <span data-ttu-id="76a43-187">각 <xref:System.Globalization.CultureInfo> 달력의 집합을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-187">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="76a43-188">합니다 <xref:System.Globalization.CultureInfo.Calendar%2A> 문화권에 대 한 기본 일정을 반환 하는 속성 및 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 속성은 문화권에서 지원 되는 모든 달력을 포함 하는 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-188">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="76a43-189">사용 하는 달력을 변경 하려면를 <xref:System.Globalization.CultureInfo>, 응용 프로그램 설정 해야 합니다 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성을 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 새 <xref:System.Globalization.Calendar>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-189">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-190">지 원하는 날짜 범위를 포함 하는 파일을 만드는 다음 예제는 <xref:System.Globalization.HebrewCalendar> 클래스 및 5772 연도의 각 월의 일 수를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-190">The following example creates a file that contains the date ranges supported by the <xref:System.Globalization.HebrewCalendar> class, and displays the number of days in each month of the year 5772.</span></span>  
  
 [!code-csharp[System.Globalization.HebrewCalendar.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.hebrewcalendar.class/cs/example1.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.hebrewcalendar.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="76a43-191">이 예제에서는 인스턴스화합니다를 <xref:System.Globalization.HebrewCalendar> 개체 및 히브리어 (이스라엘)의 현재 달력이 있도록 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-191">The example instantiates a <xref:System.Globalization.HebrewCalendar> object and makes it the current calendar of a Hebrew (Israel) <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="76a43-192">히브리어 (이스라엘) 현재 스레드 문화권을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-192">It then makes Hebrew (Israel) the current thread culture.</span></span> <span data-ttu-id="76a43-193">이렇게 하면 공용 언어 런타임에서 모든 날짜 및 시간 히브리식 달력 기준으로 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-193">This causes the common language runtime to interpret all dates and times in relation to the Hebrew calendar.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="76a43-194">달력 작업</span><span class="sxs-lookup"><span data-stu-id="76a43-194">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="76a43-195">예제: Calendar Week Range 유틸리티</span><span class="sxs-lookup"><span data-stu-id="76a43-195">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HebrewCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HebrewCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76a43-196"><see cref="T:System.Globalization.HebrewCalendar" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-196">Initializes a new instance of the <see cref="T:System.Globalization.HebrewCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="hebrewCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-197"><paramref name="months" />를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-197">The <see cref="T:System.DateTime" /> to which to add <paramref name="months" />.</span></span></param>
        <param name="months"><span data-ttu-id="76a43-198">더할 월 수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-198">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="76a43-199">지정된 <see cref="T:System.DateTime" />에서 지정된 월 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-199">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="76a43-200">지정된 <see cref="T:System.DateTime" />에 지정된 월 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-200">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-201">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-201">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="76a43-202">결과의 일 부분 <xref:System.DateTime> 결과 일 결과 결과 연도 월에 유효한 날짜가 아닌 경우 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-202">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="76a43-203">결과 결과 연도 월의 마지막 유효 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-203">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="76a43-204">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-204">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="76a43-205">이 구현은 현재 연대만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-205">This implementation supports only the current era.</span></span> <span data-ttu-id="76a43-206">따라서 <xref:System.ArgumentException> 결과인 연도 지정 된 연대를 벗어나는 경우 throw 됩니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-206">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="76a43-207">결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-207">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="76a43-208">예를 들어, 지정된 된 월이 Av 30 일인 경우 지정 된 날짜가 값과 해당 월의 30 일의 `months` 매개 변수는 5, 결과 연도 하나 이상 지정된 된 연도, 월 일인 이며 결과 일 t 그 30 일인 테 벳의 마지막 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-208">For example, if the specified month is Av, which has 30 days, the specified day is the 30th day of that month, and the value of the `months` parameter is 5, the resulting year is one more than the specified year, the resulting month is Tevet, and the resulting day is the 29th day, which is the last day in Tevet.</span></span>  
  
 <span data-ttu-id="76a43-209">경우의 값을 `months` 매개 변수는 음수 이면 결과 <xref:System.DateTime> 지정 된 것 보다 이전 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-209">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="76a43-210">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-210">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76a43-211">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-211">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="76a43-212">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-212">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="76a43-213">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-213">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-214"><paramref name="months" />가 -120,000보다 작거나 120,000보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-214"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="hebrewCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-215"><paramref name="years" />를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-215">The <see cref="T:System.DateTime" /> to which to add <paramref name="years" />.</span></span></param>
        <param name="years"><span data-ttu-id="76a43-216">더할 연도 수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-216">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="76a43-217">지정된 <see cref="T:System.DateTime" />에서 지정된 연도 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-217">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="76a43-218">지정된 <see cref="T:System.DateTime" />에 지정된 연도 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-218">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-219">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-219">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="76a43-220">결과의 일 부분 <xref:System.DateTime> 결과 일 결과 결과 연도 월에 유효한 날짜가 아닌 경우 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-220">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="76a43-221">결과 결과 연도 월의 마지막 유효 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-221">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="76a43-222">예를 들어, 헤 쉬 반의 유대교 휴일의 배치에 따라 29 일 또는 30 일에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-222">For example, Cheshvan can have 29 or 30 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="76a43-223">헤 쉬 반의는 현재 연도에서 30 일 동안와 다음 연도 29 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-223">Suppose that Cheshvan has 30 days in the current year and 29 in the following year.</span></span> <span data-ttu-id="76a43-224">지정된 된 날짜 값과 현재 연도의 반의 30 일 경우 `years` 이 1 이면 결과 날짜에는 다음 연도 반의 29 일 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-224">If the specified date is the 30th day of Cheshvan in the current year and the value of `years` is 1, the resulting date will be the 29th day of Cheshvan in the following year.</span></span>  
  
 <span data-ttu-id="76a43-225">결과의 월 부분 <xref:System.DateTime> 결과 월 유효 결과 연도 월 없는 경우 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-225">The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year.</span></span> <span data-ttu-id="76a43-226">결과 연도에 유효한 지난달으로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-226">It is changed to the last valid month in the resulting year.</span></span> <span data-ttu-id="76a43-227">예를 들어 경우 월을 `time` 윤년의 경우 13 번째 월 및 값 매개 변수는 `years` 이 1 이면 결과의 월 <xref:System.DateTime> 은 비-윤년 인 다음 연도의 12 월.</span><span class="sxs-lookup"><span data-stu-id="76a43-227">For example, if the month in the `time` parameter is the 13th month of a leap year and the value of `years` is 1, the month in the resulting <xref:System.DateTime> is the 12th month of the following year, which is a non-leap year.</span></span> <span data-ttu-id="76a43-228">월 부분 변경 되지 않는 경우에 여전히 참조 다른 달 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-228">Note that even when the month part does not change, it might still refer to a different month.</span></span> <span data-ttu-id="76a43-229">예를 들어 아 달 트는 윤 년 7 월 있지만 Nissan 7 번째 달에 공통 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-229">For example, Adar Beit is the 7th month in leap years, but Nissan is the 7th month in common years.</span></span>  
  
 <span data-ttu-id="76a43-230">이 구현은 현재 연대만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-230">This implementation supports only the current era.</span></span> <span data-ttu-id="76a43-231">따라서 <xref:System.ArgumentException> 결과인 연도 지정 된 연대를 벗어나는 경우 throw 됩니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-231">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="76a43-232">결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-232">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="76a43-233">하는 경우 `years` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-233">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="76a43-234">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-234">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76a43-235">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-235">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="76a43-236">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-236">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="76a43-237">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-237">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.HebrewCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76a43-238">현재 달력이 양력인지, 음력인지 또는 두 가지를 조합한 것인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-238">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="76a43-239">항상 <see cref="F:System.Globalization.CalendarAlgorithmType.LunisolarCalendar" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-239">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.LunisolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76a43-240">다음 예제에서는 리플렉션을 사용 하 여 각각 인스턴스화하 <xref:System.Globalization.Calendar> 형식이.NET Framework에서 찾은 값을 표시는 <xref:System.Globalization.Calendar.AlgorithmType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-240">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.HebrewCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76a43-241"><see cref="T:System.Globalization.HebrewCalendar" />에 있는 연대의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-241">Gets the list of eras in the <see cref="T:System.Globalization.HebrewCalendar" />.</span></span></summary>
        <value><span data-ttu-id="76a43-242"><see cref="T:System.Globalization.HebrewCalendar" /> 형식에 있는 연대를 나타내는 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-242">An array of integers that represents the eras in the <see cref="T:System.Globalization.HebrewCalendar" /> type.</span></span> <span data-ttu-id="76a43-243">반환 값은 항상 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />와 동일한 하나의 요소가 들어 있는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-243">The return value is always an array containing one element equal to <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-244">히브리어 달력 두 연대를 인식합니다. B.C.E.</span><span class="sxs-lookup"><span data-stu-id="76a43-244">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="76a43-245">중세 시대) (이전 오전</span><span class="sxs-lookup"><span data-stu-id="76a43-245">(before the common era) and A.M.</span></span> <span data-ttu-id="76a43-246">(라틴 문자 "전 세계의 year"를 의미 합니다. "Anno Mundi").</span><span class="sxs-lookup"><span data-stu-id="76a43-246">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="76a43-247">이 구현 된 <xref:System.Globalization.HebrewCalendar> 클래스 현재 연대 (오전)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-247">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.).</span></span> <span data-ttu-id="76a43-248">이 속성에는 항상 하나의 요소만 있는 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-248">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="hebrewCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-249">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-249">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="76a43-250">지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-250">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="76a43-251">지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 나타내는 1에서 30 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-251">An integer from 1 to 30 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76a43-252">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-252">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="hebrewCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-253">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-253">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="76a43-254">지정된 <see cref="T:System.DateTime" />의 요일을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-254">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="76a43-255">지정된 <see cref="T:System.DayOfWeek" />의 요일을 나타내는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-255">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-256"><xref:System.DayOfWeek> 값은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-256">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="76a43-257">DayOfWeek 값</span><span class="sxs-lookup"><span data-stu-id="76a43-257">DayOfWeek value</span></span>|<span data-ttu-id="76a43-258">Day of Week</span><span class="sxs-lookup"><span data-stu-id="76a43-258">Day of Week</span></span>|  
|---------------------|-----------------|  
|<span data-ttu-id="76a43-259">일요일</span><span class="sxs-lookup"><span data-stu-id="76a43-259">Sunday</span></span>|<span data-ttu-id="76a43-260">יום ראשון (Yom Rishon)</span><span class="sxs-lookup"><span data-stu-id="76a43-260">יום ראשון (Yom Rishon)</span></span>|  
|<span data-ttu-id="76a43-261">Monday</span><span class="sxs-lookup"><span data-stu-id="76a43-261">Monday</span></span>|<span data-ttu-id="76a43-262">יום שני (Yom Sheni)</span><span class="sxs-lookup"><span data-stu-id="76a43-262">יום שני (Yom Sheni)</span></span>|  
|<span data-ttu-id="76a43-263">화요일</span><span class="sxs-lookup"><span data-stu-id="76a43-263">Tuesday</span></span>|<span data-ttu-id="76a43-264">יום שלישי (Yom Shlishi)</span><span class="sxs-lookup"><span data-stu-id="76a43-264">יום שלישי (Yom Shlishi)</span></span>|  
|<span data-ttu-id="76a43-265">수요일</span><span class="sxs-lookup"><span data-stu-id="76a43-265">Wednesday</span></span>|<span data-ttu-id="76a43-266">יום רביעי (Yom Reviee)</span><span class="sxs-lookup"><span data-stu-id="76a43-266">יום רביעי (Yom Reviee)</span></span>|  
|<span data-ttu-id="76a43-267">목요일</span><span class="sxs-lookup"><span data-stu-id="76a43-267">Thursday</span></span>|<span data-ttu-id="76a43-268">יום חמישי (Yom Chamishi)</span><span class="sxs-lookup"><span data-stu-id="76a43-268">יום חמישי (Yom Chamishi)</span></span>|  
|<span data-ttu-id="76a43-269">금요일</span><span class="sxs-lookup"><span data-stu-id="76a43-269">Friday</span></span>|<span data-ttu-id="76a43-270">יום שישי (Yom Shishi)</span><span class="sxs-lookup"><span data-stu-id="76a43-270">יום שישי (Yom Shishi)</span></span>|  
|<span data-ttu-id="76a43-271">토요일</span><span class="sxs-lookup"><span data-stu-id="76a43-271">Saturday</span></span>|<span data-ttu-id="76a43-272">שבת (Shabat)</span><span class="sxs-lookup"><span data-stu-id="76a43-272">שבת (Shabat)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="76a43-273">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-273">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="hebrewCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-274">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-274">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="76a43-275">지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-275">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="76a43-276">지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 나타내는 1부터 385까지의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-276">An integer from 1 to 385 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-277">연간 일자 연도의 첫 번째 날부터의 일 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-277">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="76a43-278">예를 들어 <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> 첫 번째 월의 첫날 1을 반환 하 고 <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> 해당 연도의 총 기간 (일) 반환 하는 지난 달의 마지막 날에 대 한 동일한 값으로 반환 되는 <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-278">For example, <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>.</span></span>  
  
 <span data-ttu-id="76a43-279">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-279">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-280">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-280">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-281"><paramref name="time" />이 그레고리오력에서 1583년 9월 17일보다 이전이거나 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-281"><paramref name="time" /> is earlier than September 17, 1583 in the Gregorian calendar, or greater than <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />.</span></span></exception>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="hebrewCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-282">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-282">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="76a43-283">월을 나타내는 1에서 13 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-283">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-284">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-284">An integer that represents the era.</span></span> <span data-ttu-id="76a43-285"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="Calendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-285">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="Calendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-286">지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-286">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="76a43-287">지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-287">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-288">예를 들어,이 메서드가 반환 29 또는 30 기념일이 대 한 유대교 휴일의 배치에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-288">For example, this method returns 29 or 30 for Cheshvan, depending on the placement of Jewish holidays.</span></span>  
  
 <span data-ttu-id="76a43-289">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-289">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-290">다음 코드 예제에서는 호출 `GetDaysInMonth` 각 5 년에는 각 연대에서 두 번째 달에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-290">The following code example calls `GetDaysInMonth` for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/CPP/hebrewcalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/CS/hebrewcalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/VB/hebrewcalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-291"><paramref name="year" />, <paramref name="month" /> 또는 <paramref name="era" />가 현재 <see cref="T:System.Globalization.HebrewCalendar" /> 개체에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-291"><paramref name="year" />, <paramref name="month" />, or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="hebrewCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-292">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-292">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-293">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-293">An integer that represents the era.</span></span> <span data-ttu-id="76a43-294"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-294">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-295">지정된 연대에 있는 지정된 연도의 날짜 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-295">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="76a43-296">지정된 연대에 있는 지정된 연도의 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-296">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-297">부터 385 유대교 휴일의 배치에 따라 및 인지에 따라 383 또는 355 353에서이 메서드는 정수를 반환 하는 예를 들어 `year` 윤년 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-297">For example, this method returns an integer from 353 to 355 or from 383 to 385, depending on the placement of Jewish holidays and depending on whether `year` is a leap year.</span></span>  
  
 <span data-ttu-id="76a43-298">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-298">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-299">다음 코드 예제에서는 호출 `GetDaysInYear` 각 연대에서 5 년 동안.</span><span class="sxs-lookup"><span data-stu-id="76a43-299">The following code example calls `GetDaysInYear` for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/CPP/hebrewcalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/CS/hebrewcalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/VB/hebrewcalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-300"><paramref name="year" /> 또는 <paramref name="era" />가 현재 <see cref="T:System.Globalization.HebrewCalendar" /> 개체에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-300"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="hebrewCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-301">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-301">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="76a43-302">지정된 <see cref="T:System.DateTime" />의 연대를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-302">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="76a43-303">지정된 <see cref="T:System.DateTime" />의 연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-303">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="76a43-304">반환 값은 항상 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-304">The return value is always <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-305">히브리어 달력 두 연대를 인식합니다. B.C.E.</span><span class="sxs-lookup"><span data-stu-id="76a43-305">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="76a43-306">중세 시대) (이전 오전</span><span class="sxs-lookup"><span data-stu-id="76a43-306">(before the common era) and A.M.</span></span> <span data-ttu-id="76a43-307">(라틴 문자 "전 세계의 year"를 의미 합니다. "Anno Mundi").</span><span class="sxs-lookup"><span data-stu-id="76a43-307">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="76a43-308">이 구현 된 <xref:System.Globalization.HebrewCalendar> 현재 연대 (오전) 및 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 클래스를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-308">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.) and only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-309">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-309">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="hebrewCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-310">연도입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-310">A year.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-311">연대입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-311">An era.</span></span> <span data-ttu-id="76a43-312"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-312">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-313">지정한 연도 및 연대의 윤월을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-313">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="76a43-314">지정한 연도와 연대에서 윤월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-314">A positive integer that indicates the leap month in the specified year and era.</span></span> <span data-ttu-id="76a43-315">반환 값은 <paramref name="year" /> 및 <paramref name="era" /> 매개 변수가 윤년을 지정하면 7이고, 해당 연도가 윤년이 아니면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-315">The return value is 7 if the <paramref name="year" /> and <paramref name="era" /> parameters specify a leap year, or 0 if the year is not a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-316">윤 월 개념을 지 원하는 달력에서 윤 월에는 특정 월 또는 연도의 특정 월 후 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-316">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="76a43-317">예를 들어를 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 메서드 1과 지정 된 날짜와 연관 된 달을 나타내는 13 사이의 숫자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-317">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="76a43-318">아홉 번째 및 여덟 번째 연도, 월 사이의 윤 월 이면는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 메서드 여덟 번째 달에, 월, 9 및 10 아홉 번째 달에 8을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-318">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-319"><paramref name="era" />이 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-319"><paramref name="era" /> is not <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span>  
  
<span data-ttu-id="76a43-320">또는</span><span class="sxs-lookup"><span data-stu-id="76a43-320">-or-</span></span> 
 <span data-ttu-id="76a43-321"><paramref name="year" />가 히브리식 달력의 연도 5343보다 작거나 히브리식 달력의 연도 5999보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-321"><paramref name="year" /> is less than the Hebrew calendar year 5343 or greater than the Hebrew calendar year 5999.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="hebrewCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-322">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-322">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="76a43-323">지정된 <see cref="T:System.DateTime" />의 월을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-323">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="76a43-324">지정된 <see cref="T:System.DateTime" />의 월을 나타내는 1에서 13 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-324">An integer from 1 to 13 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76a43-325">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-325">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-326"><paramref name="time" />가 <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" />보다 작거나 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-326"><paramref name="time" /> is less than <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> or greater than <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />.</span></span></exception>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="hebrewCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-327">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-327">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-328">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-328">An integer that represents the era.</span></span> <span data-ttu-id="76a43-329"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-329">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-330">지정된 연대에 있는 지정된 연도의 월 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-330">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="76a43-331">지정된 연대에 있는 지정된 연도의 월 수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-331">The number of months in the specified year in the specified era.</span></span> <span data-ttu-id="76a43-332">반환 값은 평년의 경우 12이고 윤년의 경우 13입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-332">The return value is either 12 in a common year, or 13 in a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-333">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-333">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-334">다음 코드 예제에서는 호출 `GetMonthsInYear` 각 연대에서 5 년 동안.</span><span class="sxs-lookup"><span data-stu-id="76a43-334">The following code example calls `GetMonthsInYear` for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/CPP/hebrewcalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/CS/hebrewcalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/VB/hebrewcalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-335"><paramref name="year" /> 또는 <paramref name="era" />가 현재 <see cref="T:System.Globalization.HebrewCalendar" /> 개체에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-335"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="hebrewCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="76a43-336">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-336">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="76a43-337">지정된 <see cref="T:System.DateTime" /> 값의 연도를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-337">Returns the year in the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="76a43-338">지정된 <see cref="T:System.DateTime" /> 값의 연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-338">An integer that represents the year in the specified <see cref="T:System.DateTime" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-339">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-339">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-340">여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 히브리식 달력을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-340">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-341"><paramref name="time" />이 현재 <see cref="T:System.Globalization.HebrewCalendar" /> 개체에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-341"><paramref name="time" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="HebrewEra">
      <MemberSignature Language="C#" Value="public static readonly int HebrewEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HebrewEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.HebrewCalendar.HebrewEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HebrewEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HebrewEra;" />
      <MemberSignature Language="F#" Value=" staticval mutable HebrewEra : int" Usage="System.Globalization.HebrewCalendar.HebrewEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76a43-342">현재 연대를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-342">Represents the current era.</span></span> <span data-ttu-id="76a43-343">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-343">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-344">이 필드의 값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-344">The value of this field is 1.</span></span>  
  
 <span data-ttu-id="76a43-345">히브리어 달력 두 연대를 인식합니다. B.C.E.</span><span class="sxs-lookup"><span data-stu-id="76a43-345">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="76a43-346">중세 시대) (이전 오전</span><span class="sxs-lookup"><span data-stu-id="76a43-346">(before the common era) and A.M.</span></span> <span data-ttu-id="76a43-347">(라틴 문자 "전 세계의 year"를 의미 합니다. "Anno Mundi").</span><span class="sxs-lookup"><span data-stu-id="76a43-347">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="76a43-348">이 구현 된 <xref:System.Globalization.HebrewCalendar> 클래스 현재 연대 (오전)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-348">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="hebrewCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-349">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-349">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="76a43-350">월을 나타내는 1에서 13 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-350">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="76a43-351">일을 나타내는 1에서 30 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-351">An integer from 1 to 30 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-352">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-352">An integer that represents the era.</span></span> <span data-ttu-id="76a43-353"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-353">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-354">지정된 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-354">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><span data-ttu-id="76a43-355">지정된 날짜가 윤일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-355"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-356">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-356">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="76a43-357">19 년 주기로 19, 3, 6, 8 일, 11, 14th로 균등 하 게 나눌 수 있는 1 년으로 끝나는, 17 일, 년에서 19 년에는 윤년.</span><span class="sxs-lookup"><span data-stu-id="76a43-357">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="76a43-358">평년 353 유대교 휴일의 배치에 따라 355 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-358">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="76a43-359">윤년 383 385 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-359">A leap year can have from 383 to 385 days.</span></span>  
  
 <span data-ttu-id="76a43-360">윤 일은 윤년 에서만에서 발생 하는 일입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-360">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="76a43-361">히브리어 달력에서 어제 아 달 Alef 및 모든 베이 트 아 달의에서 날짜는 윤 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-361">In the Hebrew calendar, the last day of Adar Alef and all the days in Adar Beit are considered leap days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-362">다음 코드 예제에서는 호출 `IsLeapDay` 5 년 동안 각 연대에서 두 번째 달 (2 월)의 마지막 날에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-362">The following code example calls `IsLeapDay` for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/CPP/hebrewcalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/CS/hebrewcalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/VB/hebrewcalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-363"><paramref name="year" />, <paramref name="month" />, <paramref name="day" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-363"><paramref name="year" />, <paramref name="month" />, <paramref name="day" />, or <paramref name="era" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="hebrewCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-364">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-364">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="76a43-365">월을 나타내는 1에서 13 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-365">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-366">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-366">An integer that represents the era.</span></span> <span data-ttu-id="76a43-367"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-367">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-368">지정된 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-368">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="76a43-369">지정된 월이 윤월이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-369"><see langword="true" /> if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-370">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-370">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="76a43-371">19 년 주기로 19, 3, 6, 8 일, 11, 14th로 균등 하 게 나눌 수 있는 1 년으로 끝나는, 17 일, 년에서 19 년에는 윤년.</span><span class="sxs-lookup"><span data-stu-id="76a43-371">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="76a43-372">평년 353 유대교 휴일의 배치에 따라 355 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-372">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="76a43-373">윤년 383 385 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-373">A leap year can have from 383 to 385 days.</span></span>  
  
 <span data-ttu-id="76a43-374">윤 월은 윤년 에서만에서 발생 하는 한 달 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-374">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="76a43-375">히브리어 달력을 아 달 트는 윤 월입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-375">In the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-376">다음 코드 예제에서는 호출 `IsLeapMonth` 현재 연대에 있는 5 년의 모든 월에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-376">The following code example calls `IsLeapMonth` for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/CPP/hebrewcalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/CS/hebrewcalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/VB/hebrewcalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-377"><paramref name="year" />, <paramref name="month" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-377"><paramref name="year" />, <paramref name="month" />, or <paramref name="era" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="hebrewCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-378">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-378">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-379">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-379">An integer that represents the era.</span></span> <span data-ttu-id="76a43-380"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-380">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-381">지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-381">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="76a43-382">지정된 연도가 윤년이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-382"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-383">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-383">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="76a43-384">19 년 주기로 19, 3, 6, 8 일, 11, 14th로 균등 하 게 나눌 수 있는 1 년으로 끝나는, 17 일, 년에서 19 년에는 윤년.</span><span class="sxs-lookup"><span data-stu-id="76a43-384">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="76a43-385">평년 353 유대교 휴일의 배치에 따라 355 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-385">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="76a43-386">윤년 383 385 일 사이에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-386">A leap year can have from 383 to 385 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-387">다음 코드 예제에서는 호출 `IsLeapYear` 각 연대에서 5 년 동안.</span><span class="sxs-lookup"><span data-stu-id="76a43-387">The following code example calls `IsLeapYear` for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/CPP/hebrewcalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/CS/hebrewcalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/VB/hebrewcalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-388"><paramref name="year" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-388"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.HebrewCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76a43-389"><see cref="T:System.Globalization.HebrewCalendar" /> 형식에서 지원하는 마지막 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-389">Gets the latest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type.</span></span></summary>
        <value><span data-ttu-id="76a43-390">최신 날짜와 시간에서 지 원하는 <see cref="T:System.Globalization.HebrewCalendar" /> 년 9 월 29, 2239 기가 끝나는 순간에 해당 하는 형식</span><span class="sxs-lookup"><span data-stu-id="76a43-390">The latest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type, which is equivalent to the last moment of September, 29, 2239 C.E.</span></span> <span data-ttu-id="76a43-391">에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-391">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76a43-392">다음 코드 예제에서는 최 솟 값 및 달력의 최대값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-392">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CPP/hebrewcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CS/hebrewcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/VB/hebrewcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.HebrewCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76a43-393"><see cref="T:System.Globalization.HebrewCalendar" /> 형식에서 지원하는 시작 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-393">Gets the earliest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type.</span></span></summary>
        <value><span data-ttu-id="76a43-394">시작 날짜와 시간을 지는 <see cref="T:System.Globalization.HebrewCalendar" /> 월 기 1583 년 1 기는 순간에 해당 하는 형식</span><span class="sxs-lookup"><span data-stu-id="76a43-394">The earliest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type, which is equivalent to the first moment of January, 1, 1583 C.E.</span></span> <span data-ttu-id="76a43-395">에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-395">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-396">Microsoft Visual Basic에서 지 원하는 최소 날짜에 지정된 된 시간으로 하루 중 시간을 나타내는 <xref:System.DateTime> 종류입니다. 서 기 0001 년 1 월 1 일은</span><span class="sxs-lookup"><span data-stu-id="76a43-396">Microsoft Visual Basic represents time of day as the specified time on the minimum date supported by the <xref:System.DateTime> type, which is January 1, 0001 C.E.</span></span> <span data-ttu-id="76a43-397">그러나는 <xref:System.Globalization.HebrewCalendar> 형식은 최소 날짜를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-397">However, the <xref:System.Globalization.HebrewCalendar> type does not support that minimum date.</span></span> <span data-ttu-id="76a43-398">따라서 현재 달력을 사용 하 여 하루 중 시간 형식을 지정 하는 메서드를 호출 하는 경우 형식 지정자를 지정 하지 않으면 ISO 8601 정렬 가능한 ("s") 서식 사용 날짜/시간 기본 일반 ("G") 날짜/시간 패턴 대신 패턴 형식 지정자 형식 지정자입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-398">Consequently, if you call a method to format the time of day using the current calendar but you do not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier.</span></span> <span data-ttu-id="76a43-399">자세한 내용은 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-399">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76a43-400">다음 코드 예제에서는 최 솟 값 및 달력의 최대값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-400">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CPP/hebrewcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CS/hebrewcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/VB/hebrewcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="hebrewCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-401">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-401">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="76a43-402">월을 나타내는 1에서 13 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-402">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="76a43-403">일을 나타내는 1에서 30 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-403">An integer from 1 to 30 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="76a43-404">시간을 나타내는 0에서 23 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-404">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="76a43-405">분을 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-405">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="76a43-406">초를 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-406">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="76a43-407">밀리초를 나타내는 0에서 999 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-407">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="76a43-408">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-408">An integer that represents the era.</span></span> <span data-ttu-id="76a43-409"><see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 또는 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-409">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="76a43-410">지정된 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-410">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="76a43-411">현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-411">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-412"><xref:System.Globalization.HebrewCalendar.ToDateTime%2A> 방법은 현재 달력의 날짜를 양력 날짜를 변환할 수 있습니다 때문에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-412">The <xref:System.Globalization.HebrewCalendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="76a43-413">양력 날짜 이후에 사용할 수, 예를 들어, 특정 달력의 동일한 날짜를 만들거나 다른 달력의 날짜를 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-413">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  
  
 <span data-ttu-id="76a43-414">이 구현의 <xref:System.Globalization.HebrewCalendar> 클래스 히브리어 연도 5343: 5999 (1583를 2239 그레고리오력의)만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-414">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-415"><paramref name="year" />, <paramref name="month" />, <paramref name="day" /> 또는 <paramref name="era" />가 현재 <see cref="T:System.Globalization.HebrewCalendar" /> 개체에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-415"><paramref name="year" />, <paramref name="month" />, <paramref name="day" /> or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span>  
  
<span data-ttu-id="76a43-416">또는</span><span class="sxs-lookup"><span data-stu-id="76a43-416">-or-</span></span> 
 <span data-ttu-id="76a43-417"><paramref name="hour" />가 0보다 작거나 23보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-417"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="76a43-418">또는</span><span class="sxs-lookup"><span data-stu-id="76a43-418">-or-</span></span> 
 <span data-ttu-id="76a43-419"><paramref name="minute" />가 0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-419"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="76a43-420">또는</span><span class="sxs-lookup"><span data-stu-id="76a43-420">-or-</span></span> 
 <span data-ttu-id="76a43-421"><paramref name="second" />가 0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-421"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="76a43-422">또는</span><span class="sxs-lookup"><span data-stu-id="76a43-422">-or-</span></span> 
 <span data-ttu-id="76a43-423"><paramref name="millisecond" />가 0보다 작거나 999보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-423"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="hebrewCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="76a43-424">0부터 99까지의 두 자릿수 연도 또는 5343부터 5999까지의 네 자릿수 히브리식 달력 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-424">A 2-digit year from 0 through 99, or a 4-digit Hebrew calendar year from 5343 through 5999.</span></span></param>
        <summary><span data-ttu-id="76a43-425"><see cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" /> 속성으로 해당 세기를 확인하여 지정된 연도를 네 자릿수 연도로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-425">Converts the specified year to a 4-digit year by using the <see cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="76a43-426"><paramref name="year" /> 매개 변수가 두 자릿수 연도이면 반환 값은 이에 해당하는 네 자릿수 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-426">If the <paramref name="year" /> parameter is a 2-digit year, the return value is the corresponding 4-digit year.</span></span> <span data-ttu-id="76a43-427"><paramref name="year" /> 매개 변수가 네 자릿수 연도이면 <paramref name="year" /> 매개 변수가 변경되지 않은 채 그대로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-427">If the <paramref name="year" /> parameter is a 4-digit year, the return value is the unchanged <paramref name="year" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-428"><xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 메서드를 `year` 매개 변수는 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 속성 및 연도 4 자리 연도를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-428">The <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> method uses the `year` parameter, the <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> property, and a year to calculate a 4-digit year.</span></span> <span data-ttu-id="76a43-429">세기를 검색 하 여 확인 된 `year` 100 년 범위의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-429">The century is determined by finding the sole occurrence of the `year` parameter within that 100-year range.</span></span> <span data-ttu-id="76a43-430">예를 들어 경우 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 설정할지 5729 100 년 범위의 5630에서 5729 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-430">For example, if <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> is set to 5729, the 100-year range is from 5630 to 5729.</span></span> <span data-ttu-id="76a43-431">따라서 값이 30 값은 29 5729로 해석 됩니다 5630과로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-431">Therefore, a value of 30 is interpreted as 5630, while a value of 29 is interpreted as 5729.</span></span>  
  
 <span data-ttu-id="76a43-432">경우는 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 속성에 특수 값 99는 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 메서드는 지역 설정을 무시 하 고 언어 옵션 제어판의 및 값을 반환 합니다는 `year` 변경 되지 않은 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-432">If the <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> property has the special value 99, the <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> method ignores the settings in the regional and language options in Control Panel and returns the value of the `year` parameter unchanged.</span></span>  
  
 <span data-ttu-id="76a43-433"><xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 두 자리 연도 또는 4 자리 연도 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-433"><xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="76a43-434">두 자리 연도 값 (100 미만)를 전달 하면이 값에 따라 4 자리 값을 변환할 메서드는 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 해당 세기를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-434">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="76a43-435">지원 되는 일정 범위 내에 있는 네 자리 연도 값을 제공 하는 응용 프로그램 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>, 메서드는 실제 입력된 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-435">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="76a43-436">메서드를 지원 되는 달력 범위를 벗어난 네 자릿수 값을 제공 하는 응용 프로그램 또는 음수 값을 제공 하는 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-436">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-437"><paramref name="year" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-437"><paramref name="year" /> is less than 0.</span></span>  
  
<span data-ttu-id="76a43-438">또는</span><span class="sxs-lookup"><span data-stu-id="76a43-438">-or-</span></span> 
 <span data-ttu-id="76a43-439"><paramref name="year" />가 <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" />보다 작거나 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-439"><paramref name="year" /> is less than <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> or greater than <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />.</span></span></exception>
        <altmember cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76a43-440">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-440">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="76a43-441">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-441">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76a43-442"><xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 속성을 사용 하면 2 자리 연도 4 자리 연도 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-442">The <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="76a43-443">예를 들어이 속성은 5729, 100 년 범위의 경우 5630에서 5729 합니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-443">For example, if this property is set to 5729, the 100-year range is from 5630 to 5729.</span></span> <span data-ttu-id="76a43-444">따라서 2 자리 값은 29 5729로 해석 됩니다 5630과 30 2 자리 값을 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-444">Therefore, a 2-digit value of 30 is interpreted as 5630, while a 2-digit value of 29 is interpreted as 5729.</span></span>  
  
 <span data-ttu-id="76a43-445">이 속성의 초기 값은 제어판의 국가 및 언어 옵션 영역에서 설정에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-445">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="76a43-446">응용 프로그램의 수명 동안 초기 시스템 설정을 변경 하는 경우는 <xref:System.Globalization.HebrewCalendar> 클래스 변경을 자동으로 검색 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-446">If the initial system setting changes during the life of your application the <xref:System.Globalization.HebrewCalendar> class does not automatically detect the change.</span></span>  
  
 <span data-ttu-id="76a43-447">특수 값 99를 설정 하면은 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 시스템 설정을 무시 하 고 지정된 된 연도 반환 하는 메서드는 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-447">The special value 99 causes the <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> method to ignore the system settings and return the specified year unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="76a43-448">현재 <see cref="T:System.Globalization.HebrewCalendar" /> 개체가 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="76a43-448">The current <see cref="T:System.Globalization.HebrewCalendar" /> object is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76a43-449">set 작업에서 히브리식 달력 연도 값이 5343보다 작지만 99는 아니거나, 5999보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="76a43-449">In a set operation, the Hebrew calendar year value is less than 5343 but is not 99, or the year value is greater than 5999.</span></span></exception>
        <altmember cref="M:System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>