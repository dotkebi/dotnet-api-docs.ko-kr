<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b14c05fa3b04e87be556ceae0c81393904787040" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57955753" /></Metadata><TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <TypeSignature Language="F#" Value="type CharUnicodeInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fe1fd-101">유니코드 문자에 대한 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-101">Retrieves information about a Unicode character.</span></span> <span data-ttu-id="fe1fd-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-103">합니다 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123) 유니코드 문자 범주 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-103">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="fe1fd-104">예를 들어 문자는 대문자, 소문자, 십진수, 문자 번호, 단락 구분 기호, 수학 기호 또는 통화 기호도 분류할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="fe1fd-105">응용 프로그램이 구문 분석 또는 정규식을 사용 하 여 부분 문자열을 추출 하는 등의 문자열 기반 작업을 관리 하기 위해 문자 범주를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="fe1fd-106"><xref:System.Globalization.UnicodeCategory> 열거형은 가능한 문자 범주를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="fe1fd-107">사용할 합니다 <xref:System.Globalization.CharUnicodeInfo> 가져오려고 클래스는 <xref:System.Globalization.UnicodeCategory> 특정 문자에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="fe1fd-108"><xref:System.Globalization.CharUnicodeInfo> 클래스 다음 유니코드 문자 값을 반환 하는 메서드를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="fe1fd-109">문자나 서로게이트 쌍이 속해 있는 특정 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="fe1fd-110">반환 된 값의 구성원임을 <xref:System.Globalization.UnicodeCategory> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="fe1fd-111">숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-111">Numeric value.</span></span> <span data-ttu-id="fe1fd-112">숫자, 분수, 아래 첨자, 위 첨자, 로마 숫자, 통화 분자, 원된 숫자 및 스크립트의 특정 숫자를 포함 하 여에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="fe1fd-113">숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-113">Digit value.</span></span> <span data-ttu-id="fe1fd-114">번호 매기기 시스템에서 정수를 나타내는 다른 숫자 문자를 사용 하 여 결합 될 수 있는 숫자에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="fe1fd-115">10 진수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-115">Decimal digit value.</span></span> <span data-ttu-id="fe1fd-116">10 진수 (밑수 10) 시스템의 소수 자릿수를 나타내는 문자에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="fe1fd-117">10 진수 이면 0부터 9까지 10 개의 숫자 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="fe1fd-118">이러한 문자는의 멤버는 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="fe1fd-119">또한는 <xref:System.Globalization.CharUnicodeInfo> 클래스는 다양 한 문자 분류를 사용 하는 메서드와 다른.NET Framework 형식에서 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="fe1fd-120">여기에는 다음이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-120">These include:</span></span>  
  
-   <span data-ttu-id="fe1fd-121"><xref:System.Globalization.StringInfo> 문자열의 단일 문자 대신 텍스트 요소를 사용 하 여 작동 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="fe1fd-122">오버 로드는 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 문자나 서로게이트 쌍이 속한 범주를 결정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="fe1fd-123">합니다 [문자 클래스](~/docs/standard/base-types/character-classes-in-regular-expressions.md) 인식 <xref:System.Text.RegularExpressions.Regex>,.NET Framework의 정규식 엔진입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="fe1fd-124">응용 프로그램에서이 클래스를 사용 하는 경우 유지 염두에서 다음 프로그래밍 사용 시 고려 사항은 <xref:System.Char> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="fe1fd-125">형식을 사용 하려면 어려울 수 있습니다 및 문자열은 일반적으로 언어 콘텐츠를 나타내기 위한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="fe1fd-126"><xref:System.Char> 개체는 단일 문자 항상 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="fe1fd-127">하지만 <xref:System.Char> 형식은 단일 16 비트 값을 나타내며, 두 개 이상의 utf-16 코드 단위의 일부 문자 (예: 문자 소 클러스터 및 서로게이트 쌍)으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="fe1fd-128">자세한 내용은의 "개체 및 유니코드 문자 Char" 참조를 <xref:System.String> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="fe1fd-129">"Character" 개념이 유연한 이기도합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="fe1fd-130">문자는 문자 모양으로 생각할 종종 있지만 많은 문자 모양 여러 코드 포인트에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="fe1fd-131">예를 들어, ä 수 있습니다 2로 나타낼 코드 포인트 ("a" + 결합 diaeresis 인 + 0308,), 또는 단일 코드 포인트 ("ä" 또는 U + 00A4).</span><span class="sxs-lookup"><span data-stu-id="fe1fd-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="fe1fd-132">일부 언어에는 여러 문자, 문자 및 언어적 내용 표현에 혼동을 일으킬 수 있는 여러 코드 포인트를 필요로 하는 문자 모양에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="fe1fd-133">예를 들어 있습니다 (U + 03B0, 그리스어 소문자 웁실론 dialytika와 tonos) ΰ 이지만 해당 하는 대문자 문자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="fe1fd-134">이러한 값을 대문자로 원래 값을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-135">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="fe1fd-136">인식 된 문자 및 특정 범주가 속한 유니코드 표준에서 정의 되 고 유니코드 표준의 버전 간에 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-136">Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another.</span></span> <span data-ttu-id="fe1fd-137">특정 버전의.NET Framework의 문자 분류의 유니코드 표준.NET Framework 실행 되는 기본 운영 체제에 관계 없이 단일 버전을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-137">Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running.</span></span> <span data-ttu-id="fe1fd-138">다음 표에서 이후.NET Framework의 버전을 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 문자를 분류 하는 데는 유니코드 표준의 버전 및 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-138">The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="fe1fd-139">.NET Framework 버전</span><span class="sxs-lookup"><span data-stu-id="fe1fd-139">.NET Framework version</span></span> 
 </term><description> <span data-ttu-id="fe1fd-140">유니코드 표준 버전</span><span class="sxs-lookup"><span data-stu-id="fe1fd-140">Version of the Unicode Standard</span></span> 
 </description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
  
 </term><description> <span data-ttu-id="fe1fd-141">[유니코드 표준, 버전 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="fe1fd-141">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]  
  
 </term><description> <span data-ttu-id="fe1fd-142">[유니코드 표준, 버전 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="fe1fd-142">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]  
  
 </term><description> <span data-ttu-id="fe1fd-143">[유니코드 표준, 버전 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="fe1fd-143">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]  
  
 </term><description> <span data-ttu-id="fe1fd-144">[유니코드 표준, 버전 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="fe1fd-144">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]  
  
 </term><description> <span data-ttu-id="fe1fd-145">[유니코드 표준, 버전 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="fe1fd-145">[The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]  
  
 </term><description> <span data-ttu-id="fe1fd-146">[유니코드 표준, 버전 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="fe1fd-146">[The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]  
  
 </term><description> <span data-ttu-id="fe1fd-147">[유니코드 표준 버전 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="fe1fd-147">[The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  
  
 </span></span></description></item></list>  

 <span data-ttu-id="fe1fd-148">유니코드 표준의 각 버전에는 이전 버전 이후 유니코드 문자 데이터베이스 변경 내용에 대 한 정보가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-148">Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version.</span></span> <span data-ttu-id="fe1fd-149">유니코드 문자 데이터베이스에서 사용 되는 <see cref="T:System.Globalization.CharUnicodeInfo" /> 문자를 분류 하는 것에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-149">The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</span></span></para></block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe1fd-150">숫자 형식의 유니코드 문자에 대한 10진 자릿수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-150">Gets the decimal digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="fe1fd-151">10진 자릿수 값을 가져올 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-151">The Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="fe1fd-152">지정된 숫자 문자의 10진 자릿수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-152">Gets the decimal digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-153">지정된 숫자 문자의 10진 자릿수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-153">The decimal digit value of the specified numeric character.</span></span>  
  
<span data-ttu-id="fe1fd-154">또는</span><span class="sxs-lookup"><span data-stu-id="fe1fd-154">-or-</span></span> 
<span data-ttu-id="fe1fd-155">지정된 문자가 10진 자릿수가 아니면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-155">-1, if the specified character is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-156">이 메서드는 해당 정수 값으로 10 진수를 나타내는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-156">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="fe1fd-157">10 진수에는 문자는 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 10 자리 0부터 9까지 시스템 번호는 10 진수 (밑수 10) 중 하나를 나타낼 수 있는 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-157">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="fe1fd-158">-U + 1049 (U + 0030 (숫자 0) (숫자 9), U + 0039 U + 0660 (아랍어-인도어 식 소수 자릿수 0)부터 U + 0669 (아랍어-인도어 식 숫자가 9), U + 07 C (NKO 숫자 0) 0 ~ U + 07C 9 (NKO 숫자 9) 및 U + 1040 (미얀마 어 숫자 0)와 같은 문자가 포함 됩니다. 미얀마 어 숫자 9)입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-158">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="fe1fd-159">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-159">For more information about Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-160">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-160">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fe1fd-161">10진 자릿수 값을 가져올 유니코드 문자가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-161">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span></span></param>
        <param name="index"><span data-ttu-id="fe1fd-162">10진 자릿수 값을 가져올 유니코드 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-162">The index of the Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="fe1fd-163">지정된 문자열의 지정된 인덱스에 있는 숫자 문자의 10진 자릿수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-163">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-164">지정된 문자열의 지정된 인덱스에 있는 숫자 문자의 10진 자릿수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-164">The decimal digit value of the numeric character at the specified index of the specified string.</span></span>  
  
<span data-ttu-id="fe1fd-165">또는</span><span class="sxs-lookup"><span data-stu-id="fe1fd-165">-or-</span></span> 
<span data-ttu-id="fe1fd-166">지정된 문자열의 지정된 인덱스에 있는 문자가 10진 자릿수가 아니면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-166">-1, if the character at the specified index of the specified string is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-167">이 메서드는 해당 정수 값으로 10 진수를 나타내는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-167">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="fe1fd-168">10 진수에는 문자는 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 10 자리 0부터 9까지 시스템 번호는 10 진수 (밑수 10) 중 하나를 나타낼 수 있는 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-168">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="fe1fd-169">-U + 1049 (U + 0030 (숫자 0) (숫자 9), U + 0039 U + 0660 (아랍어-인도어 식 소수 자릿수 0)부터 U + 0669 (아랍어-인도어 식 숫자가 9), U + 07 C (NKO 숫자 0) 0 ~ U + 07C 9 (NKO 숫자 9) 및 U + 1040 (미얀마 어 숫자 0)와 같은 문자가 포함 됩니다. 미얀마 어 숫자 9)입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-169">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="fe1fd-170">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-170">For more information about Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-171">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-171">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fe1fd-172"><paramref name="s" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-172"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fe1fd-173"><paramref name="index" />가 <paramref name="s" />의 올바른 인덱스 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fe1fd-173"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe1fd-174">숫자 형식의 유니코드 문자에 대한 자릿수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-174">Gets the digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="fe1fd-175">자릿수 값을 가져올 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-175">The Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="fe1fd-176">지정된 숫자 문자의 자릿수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-176">Gets the digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-177">지정된 숫자 문자의 자릿수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-177">The digit value of the specified numeric character.</span></span>  
  
<span data-ttu-id="fe1fd-178">또는</span><span class="sxs-lookup"><span data-stu-id="fe1fd-178">-or-</span></span> 
<span data-ttu-id="fe1fd-179">지정된 문자가 자릿수가 아니면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-179">-1, if the specified character is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-180">숫자 값은 숫자로 사용할 수 있는 숫자에만 적용 되는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-180">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="fe1fd-181">숫자는 숫자 문자 번호 매기기 시스템에서 정수를 나타내는 다른 숫자와 결합할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-181">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="fe1fd-182">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-182">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-183">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-183">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fe1fd-184">자릿수 값을 가져올 유니코드 문자가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-184">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span></span></param>
        <param name="index"><span data-ttu-id="fe1fd-185">자릿수 값을 가져올 유니코드 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-185">The index of the Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="fe1fd-186">지정된 문자열의 지정된 인덱스에 있는 숫자 문자의 자릿수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-186">Gets the digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-187">지정된 문자열의 지정된 인덱스에 있는 숫자 문자의 자릿수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-187">The digit value of the numeric character at the specified index of the specified string.</span></span>  
  
<span data-ttu-id="fe1fd-188">또는</span><span class="sxs-lookup"><span data-stu-id="fe1fd-188">-or-</span></span> 
<span data-ttu-id="fe1fd-189">지정된 문자열의 지정된 인덱스에 있는 문자가 자릿수가 아니면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-189">-1, if the character at the specified index of the specified string is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-190">숫자 값은 숫자로 사용할 수 있는 숫자에만 적용 되는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-190">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="fe1fd-191">숫자는 숫자 문자 번호 매기기 시스템에서 정수를 나타내는 다른 숫자와 결합할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-191">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="fe1fd-192">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-192">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-193">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-193">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fe1fd-194"><paramref name="s" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-194"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fe1fd-195"><paramref name="index" />가 <paramref name="s" />의 올바른 인덱스 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fe1fd-195"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe1fd-196">유니코드 문자와 연결된 숫자 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-196">Gets the numeric value associated with a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="fe1fd-197">숫자 값을 가져올 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-197">The Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="fe1fd-198">지정된 문자와 연결된 숫자 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-198">Gets the numeric value associated with the specified character.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-199">지정된 문자와 연결된 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-199">The numeric value associated with the specified character.</span></span>  
  
<span data-ttu-id="fe1fd-200">또는</span><span class="sxs-lookup"><span data-stu-id="fe1fd-200">-or-</span></span> 
<span data-ttu-id="fe1fd-201">지정된 문자가 숫자 문자가 아니면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-201">-1, if the specified character is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-202">숫자 값은 숫자, 분수, 아래 첨자, 위 첨자, 로마 숫자, 통화 분자, 원된 숫자 및 스크립트의 특정 숫자를 포함 하는 경우에 적용 되는 유니코드 문자 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-202">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="fe1fd-203">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-203">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="fe1fd-204">합니다 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> 가정 메서드 `ch` 단일 언어 문자에 해당 하며 문자가 10 진수 숫자로 변환할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-204">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="fe1fd-205">그러나 유니코드 표준의 일부 숫자 두 인용 부호로 표시 되는 <xref:System.Char> 서로게이트 쌍을 형성 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-205">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="fe1fd-206">예를 들어, U + 10107 ~ U + 10133 코드 포인트 번호 지정 시스템 Aegean 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-206">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="fe1fd-207">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드 AEGEAN 숫자 1을 나타내는 문자열을 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-207">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="fe1fd-208">예제에서 출력으로는 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> 상위 서로게이트 또는 하위 서로게이트 문자의이 전달 되는 경우 메서드는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-208">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-209">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-209">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fe1fd-210">숫자 값을 가져올 유니코드 문자가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-210">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span></span></param>
        <param name="index"><span data-ttu-id="fe1fd-211">숫자 값을 가져올 유니코드 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-211">The index of the Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="fe1fd-212">지정된 문자열의 지정된 인덱스에 있는 문자와 연결된 숫자 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-212">Gets the numeric value associated with the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-213">지정된 문자열의 지정된 인덱스에 있는 문자와 연결된 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-213">The numeric value associated with the character at the specified index of the specified string.</span></span>  
  
<span data-ttu-id="fe1fd-214">또는</span><span class="sxs-lookup"><span data-stu-id="fe1fd-214">-or-</span></span> 
<span data-ttu-id="fe1fd-215">지정된 문자열의 지정된 인덱스에 있는 문자가 숫자 문자가 아니면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-215">-1, if the character at the specified index of the specified string is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-216">숫자 값은 숫자, 분수, 아래 첨자, 위 첨자, 로마 숫자, 통화 분자, 원된 숫자 및 스크립트의 특정 숫자를 포함 하는 경우에 적용 되는 유니코드 문자 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-216">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="fe1fd-217">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-217">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="fe1fd-218">경우는 <xref:System.Char> 위치에 있는 개체 `index` 유효한 서로게이트 쌍의 첫 번째 문자가 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> 메서드 있는지 여부를 확인 서로게이트 쌍으로 숫자 구성,이 경우 숫자 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-218">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="fe1fd-219">예를 들어, U + 10107 ~ U + 10133 코드 포인트 번호 지정 시스템 Aegean 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-219">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="fe1fd-220">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드 Aegean 각 숫자를 나타내는 문자열을 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-220">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="fe1fd-221">예제에서 출력으로는 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> 메서드 Aegean 숫자의 high surrogate 전달 되는 경우 올바른 숫자 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-221">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="fe1fd-222">그러나 low surrogate를 전달한 경우에 격리에서 low surrogate를 고려 하 고-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-222">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-223">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-223">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fe1fd-224"><paramref name="s" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-224"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fe1fd-225"><paramref name="index" />가 <paramref name="s" />의 올바른 인덱스 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fe1fd-225"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe1fd-226">유니코드 문자의 유니코드 범주를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-226">Gets the Unicode category of a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="fe1fd-227">유니코드 범주를 가져올 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-227">The Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="fe1fd-228">지정된 문자의 유니코드 범주를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-228">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-229">지정된 문자의 범주를 나타내는 <see cref="T:System.Globalization.UnicodeCategory" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-229">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-230">유니코드 문자를 범주로 나뉩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-230">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="fe1fd-231">문자 범주에는 해당 속성 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-231">A character's category is one of its properties.</span></span> <span data-ttu-id="fe1fd-232">예를 들어, 대문자, 소문자, 십진수, 문자 번호, 커넥터 문장 부호, 수학 기호 또는 통화 기호 문자를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-232">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="fe1fd-233"><xref:System.Globalization.UnicodeCategory> 클래스에는 유니코드 문자 범주를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-233">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="fe1fd-234">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-234">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="fe1fd-235">합니다 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> 가정 메서드 `ch` 단일 언어 문자에 해당 하 고 해당 범주를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-235">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="fe1fd-236">즉, 서로게이트 쌍을 반환 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> 서로게이트 속한 범주를 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-236">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="fe1fd-237">예를 들어 Ugaritic 알파벳 U + 1039F에 U + 10380 코드 포인트를 차지합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-237">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="fe1fd-238">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드를 인스턴스화하는 Ugaritic 알파벳의 첫 번째 문자는 UGARITIC 문자 ALPA (U + 10380)을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-238">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="fe1fd-239">예제에서 출력으로는 <xref:System.Char.IsNumber%28System.Char%29> 메서드가 반환 되는 `false` 경우 상위 서로게이트 또는 하위 서로게이트 문자의이 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-239">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="fe1fd-240"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 반환 하지 않는 경우도 동일 <xref:System.Globalization.UnicodeCategory> 값을 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드 매개 변수로 특정 문자를 전달 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-240">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="fe1fd-241"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 유니코드 표준의 현재 버전을 반영 하도록 디자인 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-241">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="fe1fd-242">반면 하지만 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 일반적으로 현재 버전의 유니코드 표준 반영, 표준의 이전 버전을 기반으로 하는 문자의 범주를 반환할 수 있습니다 또는 다른 범주를 현재 표준-에서 반환할 수 있습니다 이전 버전과 호환성을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-242">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-243">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-243">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (codePoint As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(int codePoint);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="codePoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fe1fd-244">유니코드 범주를 가져올 유니코드 문자가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-244">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span></span></param>
        <param name="index"><span data-ttu-id="fe1fd-245">유니코드 범주를 가져올 유니코드 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-245">The index of the Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="fe1fd-246">지정된 문자열의 지정된 인덱스에 있는 문자의 유니코드 범주를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-246">Gets the Unicode category of the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="fe1fd-247">지정된 문자열의 지정된 인덱스에 있는 문자의 범주를 나타내는 <see cref="T:System.Globalization.UnicodeCategory" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-247">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1fd-248">유니코드 문자를 범주로 나뉩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-248">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="fe1fd-249">문자 범주에는 해당 속성 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-249">A character's category is one of its properties.</span></span> <span data-ttu-id="fe1fd-250">예를 들어, 대문자, 소문자, 십진수, 문자 번호, 커넥터 문장 부호, 수학 기호 또는 통화 기호 문자를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-250">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="fe1fd-251"><xref:System.Globalization.UnicodeCategory> 클래스에는 유니코드 문자 범주를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-251">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="fe1fd-252">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-252">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="fe1fd-253">경우는 <xref:System.Char> 위치에 있는 개체 `index` 유효한 서로게이트 쌍의 첫 번째 문자가 합니다 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> 메서드가 반환 하는 대신 서로게이트 쌍의 유니코드 범주를 반환 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-253">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe1fd-254">예를 들어 Ugaritic 알파벳 U + 1039F에 U + 10380 코드 포인트를 차지합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-254">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="fe1fd-255">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드를 인스턴스화하는 Ugaritic 알파벳의 첫 번째 문자는 UGARITIC 문자 ALPA (U + 10380)을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-255">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="fe1fd-256">예제에서 출력으로는 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> 메서드가 반환 되는 <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> 하면 서로게이트 쌍으로 간주 된다는 나타내는이 문자의 high surrogate 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-256">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="fe1fd-257">그러나 low surrogate를 전달한 경우에 격리에서 low surrogate를 고려 하 고 반환 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-257">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="fe1fd-258">유의 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드 반환 하지 않는 경우도 동일 <xref:System.Globalization.UnicodeCategory> 값을 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드 매개 변수로 특정 문자를 전달 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-258">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="fe1fd-259"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 유니코드 표준의 현재 버전을 반영 하도록 디자인 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-259">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="fe1fd-260">반면 하지만 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 일반적으로 현재 버전의 유니코드 표준 반영, 표준의 이전 버전을 기반으로 하는 문자의 범주를 반환할 수 있습니다 또는 다른 범주를 현재 표준-에서 반환할 수 있습니다 이전 버전과 호환성을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-260">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1fd-261">다음 코드 예제에서는 다양 한 문자에 대 한 각 메서드에 의해 반환 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-261">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fe1fd-262"><paramref name="s" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1fd-262"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fe1fd-263"><paramref name="index" />가 <paramref name="s" />의 올바른 인덱스 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fe1fd-263"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>