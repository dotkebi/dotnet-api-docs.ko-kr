<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b73d01361540a37172567c5a8014d6d8ae5fb5eb" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56399375" /></Metadata><TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type CompareInfo = class&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="021f5-101">문화권 구분 문자열 비교를 위한 메서드 집합을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-101">Implements a set of methods for culture-sensitive string comparisons.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-102">데이터 비교 및 정렬에 대 한 규칙에는 문화권 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-102">Conventions for comparing and sorting data vary from culture to culture.</span></span> <span data-ttu-id="021f5-103">예를 들어, 정렬 순서 음성 또는 문자의 시각적 표현을 기반 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-103">For example, sort order may be based on phonetics or on the visual representation of characters.</span></span> <span data-ttu-id="021f5-104">동아시아 언어에서는 표의 문자의 부수와 획에 따라 문자가 정렬됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-104">In East Asian languages, characters are sorted by the stroke and radical of ideographs.</span></span> <span data-ttu-id="021f5-105">언어와 문화권이 알파벳에 사용하는 순서에 따라 정렬 순서가 달라지기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-105">Sorting also depends on the order languages and cultures use for the alphabet.</span></span> <span data-ttu-id="021f5-106">예를 들어 덴마크어 알파벳의 "Æ" 문자는 "Z" 다음에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-106">For example, the Danish language has an "Æ" character that it sorts after "Z" in the alphabet.</span></span> <span data-ttu-id="021f5-107">또한 대/소문자 구분 또는 대/소문자를 비교 될 수 있습니다 및 대/소문자 규칙 문화권도 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-107">In addition, comparisons may be case-sensitive or case-insensitive, and casing rules may also differ by culture.</span></span> <span data-ttu-id="021f5-108"><xref:System.Globalization.CompareInfo> 클래스는이 문화권 구분 문자열 비교 데이터를 유지 관리 하 고 문화권 구분 문자열 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-108">The <xref:System.Globalization.CompareInfo> class is responsible for maintaining this culture-sensitive string comparison data and for performing culture-sensitive string operations.</span></span>  
  
 <span data-ttu-id="021f5-109">인스턴스화할 필요가 없습니다 일반적으로 <xref:System.Globalization.CompareInfo> 하나 모든 비-서 수 문자열 비교 작업에 의해 암시적으로 사용 되기 때문에 직접 개체에 대 한 호출을 포함 하 여는 <xref:System.String.Compare%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="021f5-109">Typically, you do not have to instantiate a <xref:System.Globalization.CompareInfo> object directly, because one is used implicitly by all non-ordinal string comparison operations, including calls to the <xref:System.String.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="021f5-110">그러나 검색 하려는 경우는 <xref:System.Globalization.CompareInfo> 개체를 이러한 방법 중 하나로 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-110">However, if you do want to retrieve a <xref:System.Globalization.CompareInfo> object, you can do it in one of these ways:</span></span>  
  
-   <span data-ttu-id="021f5-111">값을 검색 하는 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 특정 문화권에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-111">By retrieving the value of the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property for a particular culture.</span></span>  
  
-   <span data-ttu-id="021f5-112">정적 호출 하 여 <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> 메서드는 문화권 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-112">By calling the static <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> method with a culture name.</span></span> <span data-ttu-id="021f5-113">이렇게 하면 런타임에 바인딩된 액세스에 대 한는 <xref:System.Globalization.CompareInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-113">This allows for late-bound access to a <xref:System.Globalization.CompareInfo> object.</span></span>  
  
## <a name="ignored-search-values"></a><span data-ttu-id="021f5-114">검색 값 무시</span><span class="sxs-lookup"><span data-stu-id="021f5-114">Ignored search values</span></span>  
 <span data-ttu-id="021f5-115">문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-115">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-116">비교와 같은 메서드와 <xref:System.Globalization.CompareInfo.IndexOf%2A> 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 문화권 구분 비교를 수행할 때와 같은 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-116">Comparison methods such as <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> do not consider such characters when they perform a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-117">무시할 수 있는 문자는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-117">Ignorable characters include:</span></span>  
  
-   <span data-ttu-id="021f5-118"><xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="021f5-118"><xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="021f5-119">문화권 구분 비교 메서드를 검색 중인 문자열의 시작 부분 (인덱스 0)에 빈 문자열을 항상 찾이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-119">Culture-sensitive comparison methods will always find an empty string at the beginning (index zero) of the string being searched.</span></span>  
  
-   <span data-ttu-id="021f5-120">특히, 비교 옵션으로 인해 작업에서 간주 되지 않는 코드 포인트를 사용 하 여 구성 된 문자열 또는 문자를 <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> 및 <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> 기호와 공백 없는 결합에서 검색을 생성 하는 옵션 문자는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-120">A character or string consisting of characters with code points that are not considered in the operation because of comparison options, In particular, the  <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> options produce searches in which symbols and nonspacing combining characters are ignored.</span></span>  
  
-   <span data-ttu-id="021f5-121">언어적 의미가 없는 코드 포인트를 사용 하 여 사용 되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-121">A string with code points that have no linguistic significance.</span></span> <span data-ttu-id="021f5-122">예를 들어, 하이픈이 (U + 00AD)는 항상 문화권 구분 문자열 비교에서 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-122">For example, a soft hyphen (U+00AD) is always ignored in a culture-sensitive string comparison.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="021f5-123">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="021f5-123">Security considerations</span></span>  
 <span data-ttu-id="021f5-124">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-124">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent, regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-125">형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-125">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-126">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-126">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-127">다음 예제와 방법을 <xref:System.Globalization.CompareInfo> 연관 된 개체는 <xref:System.Globalization.CultureInfo> 문자열 비교 하는 개체에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-127">The following example shows how the <xref:System.Globalization.CompareInfo> object associated with a <xref:System.Globalization.CultureInfo> object affects string comparison.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  

 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/en-us/download/details.aspx?id=10921"><span data-ttu-id="021f5-128">정렬 가중치 테이블에 대 한 Windows 운영 체제</span><span class="sxs-lookup"><span data-stu-id="021f5-128">Sorting Weight Tables for Windows operating systems</span></span></related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt"><span data-ttu-id="021f5-129">Linux 및 macOS 용 기본 유니코드 데이터 정렬 Elemeent 테이블</span><span class="sxs-lookup"><span data-stu-id="021f5-129">Default Unicode Collation Elemeent Table, for Linux and macOS</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-130">두 문자열을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-130">Compares two strings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int&#xA;override this.Compare : string * string -&gt; int" Usage="compareInfo.Compare (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="021f5-131">비교할 첫째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-131">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="021f5-132">비교할 둘째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-132">The second string to compare.</span></span></param>
        <summary><span data-ttu-id="021f5-133">두 문자열을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-133">Compares two strings.</span></span></summary>
        <returns><span data-ttu-id="021f5-134">두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-134">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="021f5-135">값</span><span class="sxs-lookup"><span data-stu-id="021f5-135">Value</span></span> 
 </term><description> <span data-ttu-id="021f5-136">조건</span><span class="sxs-lookup"><span data-stu-id="021f5-136">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="021f5-137">0</span><span class="sxs-lookup"><span data-stu-id="021f5-137">zero</span></span> 
 </term><description> <span data-ttu-id="021f5-138">두 문자열이 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-138">The two strings are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-139">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="021f5-139">less than zero</span></span> 
 </term><description><span data-ttu-id="021f5-140"><paramref name="string1" />가 <paramref name="string2" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-140"><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-141">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="021f5-141">greater than zero</span></span> 
 </term><description><span data-ttu-id="021f5-142"><paramref name="string1" />가 <paramref name="string2" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-142"><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-143">기본적으로 비교를 사용 하 여 수행 <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-143">By default, the comparison is performed by using <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="021f5-144">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-144">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-145">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-145">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-146">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-146">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-147">다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="021f5-147">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="021f5-148"><xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-148"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="021f5-149"><xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-149"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="021f5-150"><xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="021f5-150"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 <span data-ttu-id="021f5-151">다음 예제에서는 <xref:System.Globalization.CompareInfo.Compare%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-151">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-152">문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-152">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-153"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> 메서드 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-153">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-154">예를 들어 "ani-잘못 되었습니다." (사용자 지정 하이픈, 또는 U + 00AD 사용)를 사용 하 여 "animal"의 문화권 구분 비교를 두 문자열은 다음 예와 같이 해당 있음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-154">For instance, a culture-sensitive comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent, as the following example shows.</span></span>  
  
<span data-ttu-id="021f5-155">[! 코드 vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="021f5-155">[!code-vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]</span></span> 
<span data-ttu-id="021f5-156">문자열 비교에서 무시할 수 있는 문자를 인식 하도록 호출 합니다 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드와의 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-156">To recognize ignorable characters in a string comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, string2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="021f5-157">비교할 첫째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-157">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="021f5-158">비교할 둘째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-158">The second string to compare.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-159"><paramref name="string1" />과 <paramref name="string2" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-159">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="021f5-160"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-160"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="021f5-161">지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 두 문자열을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-161">Compares two strings using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-162">두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-162">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="021f5-163">값</span><span class="sxs-lookup"><span data-stu-id="021f5-163">Value</span></span> 
 </term><description> <span data-ttu-id="021f5-164">조건</span><span class="sxs-lookup"><span data-stu-id="021f5-164">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="021f5-165">0</span><span class="sxs-lookup"><span data-stu-id="021f5-165">zero</span></span> 
 </term><description> <span data-ttu-id="021f5-166">두 문자열이 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-166">The two strings are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-167">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="021f5-167">less than zero</span></span> 
 </term><description><span data-ttu-id="021f5-168"><paramref name="string1" />가 <paramref name="string2" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-168"><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-169">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="021f5-169">greater than zero</span></span> 
 </term><description><span data-ttu-id="021f5-170"><paramref name="string1" />가 <paramref name="string2" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-170"><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-171">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-171">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-172">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-172">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-173">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-173">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-174">다른을 사용 하 여 두 문자열을 비교 하는 다음 예제에서는 <xref:System.Globalization.CompareOptions> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-174">The following example compares two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]  
  
 <span data-ttu-id="021f5-175">다음 예제에서는 <xref:System.Globalization.CompareInfo.Compare%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-175">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-176"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-176"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-177">문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-177">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-178"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-178">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-179">비교에서 무시할 수 있는 문자를 인식 하도록 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 나 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-179">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int -&gt; int&#xA;override this.Compare : string * int * string * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="021f5-180">비교할 첫째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-180">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="021f5-181">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-181">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="021f5-182">비교할 둘째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-182">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="021f5-183">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-183">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <summary><span data-ttu-id="021f5-184">한 문자열의 끝 영역을 다른 문자열의 끝 영역과 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-184">Compares the end section of a string with the end section of another string.</span></span></summary>
        <returns><span data-ttu-id="021f5-185">두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-185">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="021f5-186">값</span><span class="sxs-lookup"><span data-stu-id="021f5-186">Value</span></span> 
 </term><description> <span data-ttu-id="021f5-187">조건</span><span class="sxs-lookup"><span data-stu-id="021f5-187">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="021f5-188">0</span><span class="sxs-lookup"><span data-stu-id="021f5-188">zero</span></span> 
 </term><description> <span data-ttu-id="021f5-189">두 문자열이 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-189">The two strings are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-190">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="021f5-190">less than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-191">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-191">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-192">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="021f5-192">greater than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-193">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-193">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-194">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-194">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-195">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-195">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-196">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-196">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-197">다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="021f5-197">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="021f5-198"><xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-198"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="021f5-199"><xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-199"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="021f5-200"><xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="021f5-200"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-201"><paramref name="offset1" /> 또는 <paramref name="offset2" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-201"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-202">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-202">-or-</span></span> 
 <span data-ttu-id="021f5-203"><paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-203"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
<span data-ttu-id="021f5-204">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-204">-or-</span></span> 
 <span data-ttu-id="021f5-205"><paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-205"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-206">문자 집합에는 무시할 수 있는 문자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-206">Character sets include ignorable characters.</span></span> <span data-ttu-id="021f5-207"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> 메서드 언어 또는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-207">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-208">비교에서 무시할 수 있는 문자를 인식 하도록 호출 합니다 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드 값을 제공 하 고 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-208">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="021f5-209">비교할 첫째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-209">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="021f5-210">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-210">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="021f5-211">비교할 둘째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-211">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="021f5-212">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-212">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-213"><paramref name="string1" />과 <paramref name="string2" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-213">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="021f5-214"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-214"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="021f5-215">지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 한 문자열의 끝 영역을 다른 문자열의 시작 영역과 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-215">Compares the end section of a string with the end section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-216">두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-216">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="021f5-217">값</span><span class="sxs-lookup"><span data-stu-id="021f5-217">Value</span></span> 
 </term><description> <span data-ttu-id="021f5-218">조건</span><span class="sxs-lookup"><span data-stu-id="021f5-218">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="021f5-219">0</span><span class="sxs-lookup"><span data-stu-id="021f5-219">zero</span></span> 
 </term><description> <span data-ttu-id="021f5-220">두 문자열이 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-220">The two strings are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-221">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="021f5-221">less than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-222">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-222">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-223">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="021f5-223">greater than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-224">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-224">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-225">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-225">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-226">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-226">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-227">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-227">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-228">다음 예제에서는 다른을 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareOptions> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-228">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-229"><paramref name="offset1" /> 또는 <paramref name="offset2" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-229"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-230">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-230">-or-</span></span> 
 <span data-ttu-id="021f5-231"><paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-231"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
<span data-ttu-id="021f5-232">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-232">-or-</span></span> 
 <span data-ttu-id="021f5-233"><paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-233"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-234"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-234"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-235">문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-235">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-236"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-236">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method does not consider such characters when performing a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-237">비교에서 무시할 수 있는 문자를 인식 하도록 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 나 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-237">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int -&gt; int&#xA;override this.Compare : string * int * int * string * int * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="021f5-238">비교할 첫째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-238">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="021f5-239">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-239">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="021f5-240">비교할 <paramref name="string1" />의 연속된 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-240">The number of consecutive characters in <paramref name="string1" /> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="021f5-241">비교할 둘째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-241">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="021f5-242">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-242">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="021f5-243">비교할 <paramref name="string2" />의 연속된 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-243">The number of consecutive characters in <paramref name="string2" /> to compare.</span></span></param>
        <summary><span data-ttu-id="021f5-244">한 문자열의 특정 영역을 다른 문자열의 특정 영역과 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-244">Compares a section of one string with a section of another string.</span></span></summary>
        <returns><span data-ttu-id="021f5-245">두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-245">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="021f5-246">값</span><span class="sxs-lookup"><span data-stu-id="021f5-246">Value</span></span> 
 </term><description> <span data-ttu-id="021f5-247">조건</span><span class="sxs-lookup"><span data-stu-id="021f5-247">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="021f5-248">0</span><span class="sxs-lookup"><span data-stu-id="021f5-248">zero</span></span> 
 </term><description> <span data-ttu-id="021f5-249">두 문자열이 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-249">The two strings are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-250">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="021f5-250">less than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-251">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-251">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-252">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="021f5-252">greater than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-253">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-253">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-254">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-254">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-255">형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-255">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-256">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-256">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-257">다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="021f5-257">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="021f5-258"><xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-258"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="021f5-259"><xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-259"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="021f5-260"><xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="021f5-260"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-261"><paramref name="offset1" />, <paramref name="length1" />, <paramref name="offset2" /> 또는 <paramref name="length2" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-261"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-262">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-262">-or-</span></span> 
 <span data-ttu-id="021f5-263"><paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-263"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
<span data-ttu-id="021f5-264">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-264">-or-</span></span> 
 <span data-ttu-id="021f5-265"><paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-265"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>  
  
<span data-ttu-id="021f5-266">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-266">-or-</span></span> 
 <span data-ttu-id="021f5-267"><paramref name="length1" />가 <paramref name="offset1" />에서 <paramref name="string1" /> 끝 사이의 문자 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-267"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>  
  
<span data-ttu-id="021f5-268">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-268">-or-</span></span> 
 <span data-ttu-id="021f5-269"><paramref name="length2" />가 <paramref name="offset2" />에서 <paramref name="string2" /> 끝 사이의 문자 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-269"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-270">문자 집합에는 무시할 수 있는 문자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-270">Character sets include ignorable characters.</span></span> <span data-ttu-id="021f5-271"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> 메서드 언어 또는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-271">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-272">비교에서 무시할 수 있는 문자를 인식 하도록 호출 합니다 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드 값을 제공 하 고 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-272">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="021f5-273">비교할 첫째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-273">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="021f5-274">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-274">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="021f5-275">비교할 <paramref name="string1" />의 연속된 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-275">The number of consecutive characters in <paramref name="string1" /> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="021f5-276">비교할 둘째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-276">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="021f5-277">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-277">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="021f5-278">비교할 <paramref name="string2" />의 연속된 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-278">The number of consecutive characters in <paramref name="string2" /> to compare.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-279"><paramref name="string1" />과 <paramref name="string2" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-279">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="021f5-280"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-280"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="021f5-281">지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 한 문자열의 특정 영역을 다른 문자열의 특정 영역과 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-281">Compares a section of one string with a section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-282">두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-282">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="021f5-283">값</span><span class="sxs-lookup"><span data-stu-id="021f5-283">Value</span></span> 
 </term><description> <span data-ttu-id="021f5-284">조건</span><span class="sxs-lookup"><span data-stu-id="021f5-284">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="021f5-285">0</span><span class="sxs-lookup"><span data-stu-id="021f5-285">zero</span></span> 
 </term><description> <span data-ttu-id="021f5-286">두 문자열이 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-286">The two strings are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-287">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="021f5-287">less than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-288">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-288">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="021f5-289">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="021f5-289">greater than zero</span></span> 
 </term><description> <span data-ttu-id="021f5-290">지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-290">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-291">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-291">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-292">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-292">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-293">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-293">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-294">다음 예제에서는 다른을 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareOptions> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-294">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-295"><paramref name="offset1" />, <paramref name="length1" />, <paramref name="offset2" /> 또는 <paramref name="length2" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-295"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-296">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-296">-or-</span></span> 
 <span data-ttu-id="021f5-297"><paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-297"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
<span data-ttu-id="021f5-298">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-298">-or-</span></span> 
 <span data-ttu-id="021f5-299"><paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-299"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>  
  
<span data-ttu-id="021f5-300">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-300">-or-</span></span> 
 <span data-ttu-id="021f5-301"><paramref name="length1" />가 <paramref name="offset1" />에서 <paramref name="string1" /> 끝 사이의 문자 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-301"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>  
  
<span data-ttu-id="021f5-302">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-302">-or-</span></span> 
 <span data-ttu-id="021f5-303"><paramref name="length2" />가 <paramref name="offset2" />에서 <paramref name="string2" /> 끝 사이의 문자 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-303"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-304"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-304"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-305">문자 집합에는 무시할 수 있는 문자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-305">Character sets include ignorable characters.</span></span> <span data-ttu-id="021f5-306"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-306">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method does not consider these characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-307">비교에서 무시할 수 있는 문자를 인식 하도록 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 나 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-307">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compareInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="021f5-308">현재 <see cref="T:System.Globalization.CompareInfo" />와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-308">The object to compare with the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></param>
        <summary><span data-ttu-id="021f5-309">지정한 개체와 현재 <see cref="T:System.Globalization.CompareInfo" /> 개체가 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-309">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="021f5-310">지정한 개체가 현재 <see cref="T:System.Globalization.CompareInfo" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-310"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-311">두 개의 <xref:System.Globalization.CompareInfo> 개체가 같은지 경우 해당 <xref:System.Globalization.CompareInfo.LCID%2A> 및 <xref:System.Globalization.CompareInfo.Name%2A> 속성이 같으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-311">Two <xref:System.Globalization.CompareInfo> objects are equal if their <xref:System.Globalization.CompareInfo.LCID%2A> and <xref:System.Globalization.CompareInfo.Name%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="021f5-312">이 메서드는 <xref:System.Object.Equals%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-312">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="021f5-313">보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-313">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-314">새 <see cref="T:System.Globalization.CompareInfo" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-314">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="021f5-315">문화권 식별자를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-315">An integer representing the culture identifier.</span></span></param>
        <summary><span data-ttu-id="021f5-316">지정된 식별자가 있는 문화권과 연결된 새 <see cref="T:System.Globalization.CompareInfo" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-316">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified identifier.</span></span></summary>
        <returns><span data-ttu-id="021f5-317">지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-317">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="021f5-318">다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="021f5-318">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="021f5-319"><xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-319"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="021f5-320"><xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-320"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="021f5-321"><xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="021f5-321"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="021f5-322">문화권 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-322">A string representing the culture name.</span></span></param>
        <summary><span data-ttu-id="021f5-323">지정된 이름이 있는 문화권과 연결된 새 <see cref="T:System.Globalization.CompareInfo" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-323">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified name.</span></span></summary>
        <returns><span data-ttu-id="021f5-324">지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-324">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="021f5-325">다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="021f5-325">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="021f5-326"><xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-326"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="021f5-327"><xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체</span><span class="sxs-lookup"><span data-stu-id="021f5-327"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="021f5-328"><xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="021f5-328"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-329"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-329"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-330"><paramref name="name" />이 잘못된 문화권 이름인 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-330"><paramref name="name" /> is an invalid culture name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (culture, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="021f5-331">문화권 식별자를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-331">An integer representing the culture identifier.</span></span></param>
        <param name="assembly"><span data-ttu-id="021f5-332">사용할 문자열 비교 메서드가 들어 있는 <see cref="T:System.Reflection.Assembly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-332">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="021f5-333">지정된 문화권과 연결되어 있고 지정된 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-333">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="021f5-334">지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-334">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="021f5-335">이 메서드의 동작은 예측할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-335">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="021f5-336">어셈블리를 입력 하지 않는이 메서드의 버전을 사용 하도록 애플리케이션에 대 한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-336">It is recommended for your application to use a version of this method that does not take an assembly input.</span></span>  
  
 <span data-ttu-id="021f5-337">합니다 `assembly` 와 동일한 형식 매개 변수 이어야 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-337">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-338"><paramref name="assembly" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-338"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-339"><paramref name="assembly" />가 잘못된 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-339"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (name, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="021f5-340">문화권 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-340">A string representing the culture name.</span></span></param>
        <param name="assembly"><span data-ttu-id="021f5-341">사용할 문자열 비교 메서드가 들어 있는 <see cref="T:System.Reflection.Assembly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-341">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="021f5-342">지정된 문화권과 연결되어 있고 지정된 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-342">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="021f5-343">지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-343">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="021f5-344">이 메서드의 동작은 예측할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-344">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="021f5-345">어셈블리를 입력 하지 않는이 메서드의 버전을 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-345">We recommend that you use a version of this method that does not take an assembly input.</span></span>  
  
 <span data-ttu-id="021f5-346">합니다 `assembly` 와 동일한 형식 매개 변수 이어야 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-346">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-347"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-347"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-348">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-348">-or-</span></span> 
 <span data-ttu-id="021f5-349"><paramref name="assembly" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-349"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-350"><paramref name="name" />이 잘못된 문화권 이름인 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-350"><paramref name="name" /> is an invalid culture name.</span></span>  
  
<span data-ttu-id="021f5-351">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-351">-or-</span></span> 
 <span data-ttu-id="021f5-352"><paramref name="assembly" />가 잘못된 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-352"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-353">이 <see cref="T:System.Globalization.CompareInfo" /> 인스턴스 또는 특정 문자열에 대한 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-353">Returns a hash code either for this <see cref="T:System.Globalization.CompareInfo" /> instance or for a particular string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compareInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="021f5-354">해시 알고리즘 및 해시 테이블 같은 데이터 구조의 현재 <see cref="T:System.Globalization.CompareInfo" />에 대한 해시 함수의 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-354">Serves as a hash function for the current <see cref="T:System.Globalization.CompareInfo" /> for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="021f5-355">현재 <see cref="T:System.Globalization.CompareInfo" />의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-355">A hash code for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-356">이 메서드는 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-356">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="021f5-357">이 메서드는 <xref:System.Globalization.CompareInfo.Equals%2A> 메서드에 따라 동일한 두 개체에 대해 같은 해시 코드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-357">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.CompareInfo.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (ReadOnlySpan&lt;char&gt; source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.ReadOnlySpan{System.Char},System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (source As ReadOnlySpan(Of Char), options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(ReadOnlySpan&lt;char&gt; source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : ReadOnlySpan&lt;char&gt; * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-358">해시 코드가 반환될 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-358">The string whose hash code is to be returned.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-359">문자열을 비교하는 방법을 결정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-359">A value that determines how strings are compared.</span></span></param>
        <summary><span data-ttu-id="021f5-360">지정된 비교 옵션 기반의 문자열에 대한 해시 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-360">Gets the hash code for a string based on specified comparison options.</span></span></summary>
        <returns><span data-ttu-id="021f5-361">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-361">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-362">동작 <xref:System.Globalization.CompareInfo.GetHashCode%2A> 다른 또는 하나의.NET Framework 플랫폼에서 다른 공용 언어 런타임의 버전에서 변경 될 수 있는 해당 구현에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-362">The behavior of <xref:System.Globalization.CompareInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET Framework platform to another.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="021f5-363">두 string 개체 같으면는 <xref:System.Globalization.CompareInfo.GetHashCode%2A> 메서드 같은 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-363">If two string objects are equal, the <xref:System.Globalization.CompareInfo.GetHashCode%2A> method returns identical values.</span></span> <span data-ttu-id="021f5-364">그러나 각 고유한 문자열 값에 대 한 고유 해시 코드 값 하지입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-364">However, there is not a unique hash code value for each unique string value.</span></span> <span data-ttu-id="021f5-365">다른 문자열에는 같은 해시 코드를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-365">Different strings can return the same hash code.</span></span>  
>   
>  <span data-ttu-id="021f5-366">자체 해시 코드를 안정적인 것으로 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-366">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="021f5-367">동일한 문자열에 대 한 해시 코드를 단일 버전의.NET Framework에 대 한 플랫폼 (예: 32 비트 및 64 비트) 및.NET Framework의 버전 간에 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-367">Hash codes for identical strings can differ across versions of the .NET Framework and across platforms (such as 32-bit and 64-bit) for a single version of the .NET Framework.</span></span> <span data-ttu-id="021f5-368">일부 경우에도 애플리케이션 도메인 별로 다릅니다 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-368">In some cases, they can even differ by application domain.</span></span>  
>   
>  <span data-ttu-id="021f5-369">결과적으로 코드 생성 된 애플리케이션 도메인 외부에서 사용 되지 않아야 하는 해시 컬렉션의 키 필드를 사용 하지 않아야 및 유지 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-369">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-370"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-370"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-371">문자열에 대한 <see cref="T:System.Globalization.SortKey" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-371">Gets a <see cref="T:System.Globalization.SortKey" /> object for a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-372"><see cref="T:System.Globalization.SortKey" /> 개체를 가져올 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-372">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <summary><span data-ttu-id="021f5-373">지정된 문자열의 정렬 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-373">Gets the sort key for the specified string.</span></span></summary>
        <returns><span data-ttu-id="021f5-374">지정된 문자열의 정렬 키가 들어 있는 <see cref="T:System.Globalization.SortKey" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-374">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-375">문자열의 각 문자에는 여러 범주의 정렬 가중치가, 스크립트, 사전순, 대/소문자를 포함 하 여 및 분음 부호 가중치 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-375">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="021f5-376">정렬 키는 특정 문자열에 대 한 이러한 가중치의 리포지토리입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-376">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="021f5-377">예를 들어 정렬 키의 대/소문자 가중치 문자열 뒤에 알파벳 가중치 문자열을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-377">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="021f5-378">합니다 <xref:System.Globalization.CompareInfo.GetSortKey%2A> 메서드는 Windows API 메서드로 `LCMapString` LCMAP_SORTKEY 플래그를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-378">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-379"><see cref="T:System.Globalization.SortKey" /> 개체를 가져올 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-379">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-380">정렬 키가 계산되는 방법을 정의하는 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 열거형 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-380">A bitwise combination of one or more of the following enumeration values that define how the sort key is calculated: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="021f5-381">지정된 <see cref="T:System.Globalization.SortKey" /> 값을 사용하여 지정된 문자열의 <see cref="T:System.Globalization.CompareOptions" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-381">Gets a <see cref="T:System.Globalization.SortKey" /> object for the specified string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-382">지정된 문자열의 정렬 키가 들어 있는 <see cref="T:System.Globalization.SortKey" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-382">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-383">문자열의 각 문자에는 여러 범주의 정렬 가중치가, 스크립트, 사전순, 대/소문자를 포함 하 여 및 분음 부호 가중치 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-383">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="021f5-384">정렬 키는 특정 문자열에 대 한 이러한 가중치의 리포지토리입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-384">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="021f5-385">예를 들어 정렬 키의 대/소문자 가중치 문자열 뒤에 알파벳 가중치 문자열을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-385">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="021f5-386">합니다 <xref:System.Globalization.CompareInfo.GetSortKey%2A> 메서드는 Windows API 메서드로 `LCMapString` LCMAP_SORTKEY 플래그를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-386">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-387"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-387"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-388">문자열 전체나 일부에서 맨 처음 검색된 값의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-388">Returns the zero-based index of the first occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char -&gt; int&#xA;override this.IndexOf : string * char -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-389">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-389">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-390"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-390">The character to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="021f5-391">전체 소스 문자열에서 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-391">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="021f5-392"><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-392">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-393"><paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-393">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-394">이 메서드는 문자열의 끝에 문자열의 시작 부분에서 소스 문자열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-394">This method searches the source string from the beginning of the string to the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-395">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-395">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-396">경우 `value` 미리 구성 된 유니코드 문자를 나타내는, 합자 "→"와 같은 (U + 00 C 6), 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 동일 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-396">If `value` represents a precomposed Unicode character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-397">서 수 (문화권) 검색을 수행 하려면 형식 매개 변수가 같으면 유니코드 코드 포인트를 호출 해야 오버 로드는만 문자 같은 다른 문자 것으로 간주 됩니다 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-397">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode code points are the same, you should call an overload that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="021f5-398">와 달리 <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, 문화권 구분 비교를 수행 하는 오버 로드는 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자는 서 수 비교를 수행 하 고 문화권 구분 비교를 수행 하는 문자열을 검색 하는 오버 로드에 대 한 검색 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="021f5-398">Unlike <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, which performs a culture-sensitive comparison, overloads of the <xref:System.String.IndexOf%2A?displayProperty=nameWithType> method that search for a character perform an ordinal comparison and overloads that search for a string perform a culture-sensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-399">형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-399">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-400">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-400">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-401">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-401">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-402"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-402"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-403">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-403">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-404">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-404">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-405">이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-405">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="021f5-406">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 메서드는 두 문자열에서 하이픈 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-406">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="021f5-407">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-407">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-408">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 일치 항목을 발견 했다는 것을 나타내려면 0 (영) 문자열의 시작 부분</span><span class="sxs-lookup"><span data-stu-id="021f5-408">In both cases, because the soft hyphen is an ignorable character, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>  
  
<span data-ttu-id="021f5-409">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="021f5-409">[!code-csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</span></span></para></block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string -&gt; int&#xA;override this.IndexOf : string * string -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-410">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-410">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-411"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-411">The string to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="021f5-412">전체 소스 문자열에서 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-412">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="021f5-413"><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-413">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-414"><paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-414">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-415">앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 소스 문자열 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-415">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-416">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-416">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-417">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-417">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-418">서 수 (문화권) 검색을 수행 하려면, 유니코드 값을 비교 하는 위치 하나를 사용 해야 형식의 매개 변수가 있는 오버 로드 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-418">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should use one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-419">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-419">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-420">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-420">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-421">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-421">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-422"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-422"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-423">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-423">-or-</span></span> 
 <span data-ttu-id="021f5-424"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-424"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-425">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-425">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-426">문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-426">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-427">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-427">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="021f5-428">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-428">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="021f5-429">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-429">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-430">각각의 경우에서 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 결과 동일 사용자 지정 하이픈의 포함 되지 않았던 것 처럼 <paramref name="value" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-430">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="021f5-431">하이픈이을 검색할 때 메서드는 문자열의 시작 부분에서 일치 항목을 발견 했다는 것을 나타내려면 0 (영)을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-431">When searching for a soft hyphen only, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>  
  
<span data-ttu-id="021f5-432">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="021f5-432">[!code-csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-433">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-433">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-434"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-434">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-435">문자열을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-435">A value that defines how the strings should be compared.</span></span> <span data-ttu-id="021f5-436"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-436"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-437">전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-437">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-438"><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-438">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-439"><paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-439">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-440">앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 소스 문자열 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-440">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-441"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-441">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-442">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-442">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-443">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-443">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-444">경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-444">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="021f5-445">문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-445">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="021f5-446">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-446">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-447">형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-447">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-448">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-448">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-449">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-449">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-450"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-450"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-451"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-451"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-452">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-452">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-453">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-453">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-454">이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-454">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="021f5-455">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 두 문자열의 하이픈이 (U + 00AD)에 대 한 검색 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-455">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="021f5-456">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-456">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-457">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색을 0을 반환 합니다 (영) 일치 하는 항목이 발견 했다는 것을 나타내려면 문자열의 시작 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-457">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span> <span data-ttu-id="021f5-458">그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-458">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-459">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="021f5-459">[!code-csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int -&gt; int&#xA;override this.IndexOf : string * char * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-460">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-460">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-461"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-461">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-462">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-462">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="021f5-463">소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-463">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="021f5-464"><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-464">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-465"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-465">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-466">소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-466">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-467">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-467">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-468">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-468">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-469">유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-469">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="021f5-470">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-470">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-471">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-471">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-472">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-472">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-473">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-473">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-474">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-474">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-475"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-475"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-476"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-476"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-477">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-477">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-478">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-478">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-479">이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-479">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="021f5-480">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-480">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="021f5-481">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-481">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-482">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-482">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>  
  
<span data-ttu-id="021f5-483">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="021f5-483">[!code-csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-484">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-484">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-485"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-485">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-486"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-486">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-487"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-487"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-488">전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-488">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-489"><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-489">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-490"><paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-490">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-491">앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 소스 문자열 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-491">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-492"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-492">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-493">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-493">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-494">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-494">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-495">하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-495">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-496">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-496">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-497">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-497">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-498">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-498">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-499"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-499"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-500">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-500">-or-</span></span> 
 <span data-ttu-id="021f5-501"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-501"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-502"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-502"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-503">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-503">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-504">문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-504">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-505">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-505">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="021f5-506">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-506">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="021f5-507">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-507">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-508">사용자 지정 하이픈을 무시할 수 있는 문자 이기 때문에 문화권 구분 검색을 사용자 지정 하이픈 검색 문자열에 포함 되지 않은 경우 반환 된 값과 같아야를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-508">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="021f5-509">그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-509">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-510">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</span><span class="sxs-lookup"><span data-stu-id="021f5-510">[!code-csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int -&gt; int&#xA;override this.IndexOf : string * string * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-511">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-511">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-512"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-512">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-513">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-513">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="021f5-514">소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-514">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="021f5-515"><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-515">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-516"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-516">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-517">소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-517">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-518">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-518">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-519">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-519">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-520">유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-520">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-521">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-521">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-522">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-522">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-523">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-523">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-524">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-524">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-525"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-525"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-526">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-526">-or-</span></span> 
 <span data-ttu-id="021f5-527"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-527"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-528"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-528"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-529">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-529">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-530">문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-530">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-531">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-531">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="021f5-532">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 메서드는 두 문자열의 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-532">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in two strings.</span></span> <span data-ttu-id="021f5-533">문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-533">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="021f5-534">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드 문자열 "m"의 인덱스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-534">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string.</span></span> <span data-ttu-id="021f5-535">"m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-535">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
<span data-ttu-id="021f5-536">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</span><span class="sxs-lookup"><span data-stu-id="021f5-536">[!code-csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [!code-vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-537">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-537">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-538"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-538">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-539">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-539">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-540"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-540">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-541"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-541"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-542">소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-542">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-543"><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-543">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-544"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-544">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-545">소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-545">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-546"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-546">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-547">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-547">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-548">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-548">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-549">경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-549">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="021f5-550">문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-550">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="021f5-551">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-551">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-552">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-552">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-553">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-553">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-554">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-554">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-555">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-555">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-556"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-556"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-557"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-557"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-558"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-558"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-559">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-559">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-560">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-560">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-561">이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />는 검색 먼저 시작 문자 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-561">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, the character position at which the search first began.</span></span> <span data-ttu-id="021f5-562">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-562">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="021f5-563">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-563">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-564">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색에는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-564">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="021f5-565">그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-565">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-566">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</span><span class="sxs-lookup"><span data-stu-id="021f5-566">[!code-csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int -&gt; int&#xA;override this.IndexOf : string * char * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-567">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-567">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-568"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-568">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-569">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-569">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-570">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-570">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="021f5-571">소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-571">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="021f5-572"><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-572">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-573"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-573">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-574">소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-574">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="021f5-575">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-575">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-576">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-576">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-577">유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-577">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="021f5-578">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-578">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-579">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-579">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-580">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-580">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-581">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-581">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-582"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-582"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-583"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-583"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-584">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-584">-or-</span></span> 
 <span data-ttu-id="021f5-585"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-585"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-586">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-586">-or-</span></span> 
 <span data-ttu-id="021f5-587"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-587"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-588">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-588">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-589">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-589">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-590">이 경우는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 되는 검색 먼저 시작 문자 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-590">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="021f5-591">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-591">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="021f5-592">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-592">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-593">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-593">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>  
  
<span data-ttu-id="021f5-594">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</span><span class="sxs-lookup"><span data-stu-id="021f5-594">[!code-csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-595">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-595">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-596"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-596">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-597">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-597">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-598"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-598">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-599"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-599"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-600">소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-600">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-601"><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-601">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-602"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-602">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-603">소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-603">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="021f5-604"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-604">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-605">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-605">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-606">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-606">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-607">하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-607">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-608">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-608">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-609">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-609">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-610">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-610">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-611">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-611">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-612"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-612"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-613">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-613">-or-</span></span> 
 <span data-ttu-id="021f5-614"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-614"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-615"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-615"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-616"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-616"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-617">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-617">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-618">문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-618">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-619">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-619">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="021f5-620">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 "m"가 포함 된 두 문자열의 세 번째 문자 위치부터 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-620">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting with the third character position in two strings.</span></span> <span data-ttu-id="021f5-621">문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-621">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="021f5-622">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-622">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-623">"m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-623">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="021f5-624">메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-624">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="021f5-625">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</span><span class="sxs-lookup"><span data-stu-id="021f5-625">[!code-csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int -&gt; int&#xA;override this.IndexOf : string * string * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-626">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-626">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-627"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-627">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-628">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-628">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-629">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-629">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="021f5-630">소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-630">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="021f5-631"><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-631">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-632"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-632">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-633">소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-633">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="021f5-634">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-634">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-635">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-635">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-636">유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-636">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-637">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-637">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-638">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-638">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-639">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-639">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-640"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-640"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-641">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-641">-or-</span></span> 
 <span data-ttu-id="021f5-642"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-642"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-643"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-643"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-644">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-644">-or-</span></span> 
 <span data-ttu-id="021f5-645"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-645"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-646">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-646">-or-</span></span> 
 <span data-ttu-id="021f5-647"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-647"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-648">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-648">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-649">문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-649">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-650">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-650">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="021f5-651">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 두 문자열의 여섯 번째 문자 위치부터 세 번째에서 시작 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-651">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="021f5-652">문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-652">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="021f5-653">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-653">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-654">"m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-654">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
<span data-ttu-id="021f5-655">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</span><span class="sxs-lookup"><span data-stu-id="021f5-655">[!code-csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-656">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-656">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-657"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-657">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-658">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-658">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-659">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-659">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-660"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-660">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-661"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-661"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-662">소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-662">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-663"><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-663">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-664"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-664">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-665">소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-665">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="021f5-666"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-666">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-667">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-667">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-668">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-668">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-669">경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-669">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="021f5-670">문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-670">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="021f5-671">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-671">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-672">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-672">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-673">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-673">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-674">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-674">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-675"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-675"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-676"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-676"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-677">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-677">-or-</span></span> 
 <span data-ttu-id="021f5-678"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-678"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-679">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-679">-or-</span></span> 
 <span data-ttu-id="021f5-680"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-680"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-681"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-681"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-682">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-682">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-683">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-683">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-684">이 경우는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 되는 검색 먼저 시작 문자 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-684">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="021f5-685">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-685">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="021f5-686">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-686">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-687">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색에는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-687">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="021f5-688">그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-688">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-689">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</span><span class="sxs-lookup"><span data-stu-id="021f5-689">[!code-csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-690">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-690">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-691"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-691">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-692">검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-692">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-693">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-693">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-694"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-694">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-695"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-695"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-696">소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-696">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-697"><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-697">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-698"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-698">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-699">소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-699">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="021f5-700"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-700">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-701">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-701">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-702">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-702">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-703">하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-703">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-704">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-704">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-705">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-705">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-706">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-706">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-707"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-707"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-708">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-708">-or-</span></span> 
 <span data-ttu-id="021f5-709"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-709"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-710"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-710"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-711">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-711">-or-</span></span> 
 <span data-ttu-id="021f5-712"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-712"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-713">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-713">-or-</span></span> 
 <span data-ttu-id="021f5-714"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-714"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-715"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-715"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-716">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-716">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-717">문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-717">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-718">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-718">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="021f5-719">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 여섯 번째 문자 위치부터 세 번째에서 시작 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-719">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="021f5-720">문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-720">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="021f5-721">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-721">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-722">그러나 서 수 비교를 수행할 때 부분만에서 찾은 첫 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-722">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="021f5-723">참고 첫 번째 문자열 뒤에 "m" 사용자 지정 하이픈을 포함 하는 메서드를 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 있지만 문화권 구분 비교를 수행 하는 경우 대신 "m"의 인덱스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-723">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-724">메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-724">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="021f5-725">[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</span><span class="sxs-lookup"><span data-stu-id="021f5-725">[!code-csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [!code-vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-726">문자열이 지정된 접두사로 시작하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-726">Determines whether a string starts with a specific prefix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string -&gt; bool&#xA;override this.IsPrefix : string * string -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-727">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-727">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="021f5-728"><paramref name="source" />의 시작 영역과 비교할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-728">The string to compare with the beginning of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="021f5-729">지정된 소스 문자열이 지정된 접두사로 시작하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-729">Determines whether the specified source string starts with the specified prefix.</span></span></summary>
        <returns><span data-ttu-id="021f5-730"><paramref name="prefix" />의 길이가 <paramref name="source" />로 시작하는 <paramref name="source" /> 및 <paramref name="prefix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-730"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-731">모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `prefix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-731">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-732">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-732">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-733">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-733">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-734">다음 예제에서는 접두사 또는 접미사 다른 문자열의 문자열 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-734">The following example determines whether a string is the prefix or suffix of another string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-735"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-735"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-736">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-736">-or-</span></span> 
 <span data-ttu-id="021f5-737"><paramref name="prefix" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-737"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-738">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-738">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="021f5-739"><paramref name="source" />의 시작 영역과 비교할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-739">The string to compare with the beginning of <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-740"><paramref name="source" />과 <paramref name="prefix" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-740">A value that defines how <paramref name="source" /> and <paramref name="prefix" /> should be compared.</span></span> <span data-ttu-id="021f5-741"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-741"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-742">지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 소스 문자열이 지정된 접두사로 시작하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-742">Determines whether the specified source string starts with the specified prefix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-743"><paramref name="prefix" />의 길이가 <paramref name="source" />로 시작하는 <paramref name="source" /> 및 <paramref name="prefix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-743"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-744">모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `prefix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-744">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>  
  
 <span data-ttu-id="021f5-745"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-745">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-746">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-746">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-747">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-747">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-748">다음 예제에서는 접두사 또는 접미사를 사용 하 여 다른 문자열의 문자열 인지를 확인 <xref:System.Globalization.CompareOptions>합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-748">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-749"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-749"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-750">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-750">-or-</span></span> 
 <span data-ttu-id="021f5-751"><paramref name="prefix" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-751"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-752"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-752"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-753">지정된 유니코드 문자 또는 문자열이 정렬 가능한지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-753">Indicates whether a specified Unicode character or string is sortable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberSignature Language="F#" Value="static member IsSortable : char -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="021f5-754">유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-754">A Unicode character.</span></span></param>
        <summary><span data-ttu-id="021f5-755">지정된 유니코드 문자가 정렬 가능한지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-755">Indicates whether a specified Unicode character is sortable.</span></span></summary>
        <returns><span data-ttu-id="021f5-756"><paramref name="ch" /> 매개 변수가 정렬 가능하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-756"><see langword="true" /> if the <paramref name="ch" /> parameter is sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-757">합니다 `ch` 매개 변수는 내부에 정의 된 유니코드 문자인 경우에 정렬 가능한 <xref:System.Globalization.CompareInfo> 정렬 테이블을 클래스 및 사설 또는 쌍을 이루지 않는 높음 또는 낮음 서로게이트 문자가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-757">The `ch` parameter is sortable if it is a Unicode character that is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsSortable : string -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="021f5-758">0개 이상의 유니코드 문자로 구성된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-758">A string of zero or more Unicode characters.</span></span></param>
        <summary><span data-ttu-id="021f5-759">지정된 유니코드 문자열이 정렬 가능한지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-759">Indicates whether a specified Unicode string is sortable.</span></span></summary>
        <returns><span data-ttu-id="021f5-760"><paramref name="str" /> 매개 변수가 빈 문자열("")이 아니고 <paramref name="str" />의 모든 유니코드 문자가 정렬 가능하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-760"><see langword="true" /> if the <paramref name="str" /> parameter is not an empty string ("") and all the Unicode characters in <paramref name="str" /> are sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-761">각 유니코드 문자를 `str` 매개 변수 하나 표시 됩니다 또는 자세한 u t F-16으로 인코딩된 <xref:System.Char> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-761">Each Unicode character in the `str` parameter is represented by one or more UTF-16 encoded <xref:System.Char> objects.</span></span> <span data-ttu-id="021f5-762">합니다 `str` 매개 변수는 각 유니코드 문자는 내부에 정의 된 경우에 정렬 가능한 <xref:System.Globalization.CompareInfo> 정렬 테이블을 클래스 및 사설 또는 쌍을 이루지 않는 높음 또는 낮음 서로게이트 문자가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-762">The `str` parameter is sortable if each Unicode character is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-763"><paramref name="str" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-763"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-764">문자열이 지정된 접미사로 끝나는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-764">Determines whether a string ends with a specific suffix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string -&gt; bool&#xA;override this.IsSuffix : string * string -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-765">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-765">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="021f5-766"><paramref name="source" />의 끝 영역과 비교할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-766">The string to compare with the end of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="021f5-767">지정된 소스 문자열이 지정된 접미사로 끝나는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-767">Determines whether the specified source string ends with the specified suffix.</span></span></summary>
        <returns><span data-ttu-id="021f5-768"><paramref name="suffix" />의 길이가 <paramref name="source" />로 끝나는 <paramref name="source" /> 및 <paramref name="suffix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-768"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-769">모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `suffix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-769">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-770">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-770">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-771">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-771">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-772">다음 예제에서는 접두사 또는 접미사 다른 문자열의 문자열 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-772">The following example determines whether a string is the prefix or suffix of another string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-773"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-773"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-774">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-774">-or-</span></span> 
 <span data-ttu-id="021f5-775"><paramref name="suffix" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-775"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-776">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-776">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="021f5-777"><paramref name="source" />의 끝 영역과 비교할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-777">The string to compare with the end of <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-778"><paramref name="source" />과 <paramref name="suffix" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-778">A value that defines how <paramref name="source" /> and <paramref name="suffix" /> should be compared.</span></span> <span data-ttu-id="021f5-779"><paramref name="options" />는 자체적으로 사용하는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-779"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" /> used by itself, or the bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-780">지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 소스 문자열이 지정된 접미사로 끝나는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-780">Determines whether the specified source string ends with the specified suffix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-781"><paramref name="suffix" />의 길이가 <paramref name="source" />로 끝나는 <paramref name="source" /> 및 <paramref name="suffix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-781"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-782">모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `suffix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-782">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>  
  
 <span data-ttu-id="021f5-783"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-783">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-784">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-784">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-785">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-785">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-786">다음 예제에서는 접두사 또는 접미사를 사용 하 여 다른 문자열의 문자열 인지를 확인 <xref:System.Globalization.CompareOptions>합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-786">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-787"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-787"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-788">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-788">-or-</span></span> 
 <span data-ttu-id="021f5-789"><paramref name="suffix" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-789"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-790"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-790"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="021f5-791">문자열 전체나 일부에서 마지막에 나오는 값의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-791">Returns the zero-based index of the last occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char -&gt; int&#xA;override this.LastIndexOf : string * char -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-792">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-792">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-793"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-793">The character to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="021f5-794">전체 소스 문자열에서 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-794">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="021f5-795"><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-795">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-796">역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-796">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-797">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-797">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-798">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-798">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-799">유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-799">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="021f5-800">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-800">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-801">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-801">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-802">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-802">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-803">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-803">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-804"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-804"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-805">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-805">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-806">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-806">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-807">이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 메서드는 마지막 인덱스 위치를 항상 반환 <paramref name="source" /> 일치 항목은 끝에 있음을 나타내기 위해 <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-807">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method always returns the last index position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="021f5-808">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 메서드는 두 문자열에서 하이픈 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-808">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="021f5-809">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-809">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-810">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드 문자열의 끝에서 일치 항목을 발견 했다는 것을 나타내려면 문자열의 마지막 인덱스 위치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-810">In both cases, because the soft hyphen is an ignorable character, the method returns the last index position in the string to indicate that it has found a match at the end of the string.</span></span>  
  
<span data-ttu-id="021f5-811">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="021f5-811">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string -&gt; int&#xA;override this.LastIndexOf : string * string -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-812">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-812">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-813"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-813">The string to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="021f5-814">전체 소스 문자열에서 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-814">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="021f5-815"><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-815">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-816">역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-816">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-817">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-817">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-818">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-818">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-819">유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-819">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-820">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-820">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-821">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-821">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-822">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-822">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-823"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-823"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-824">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-824">-or-</span></span> 
 <span data-ttu-id="021f5-825"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-825"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-826">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-826">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-827">문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-827">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-828">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 메서드는 항상 반환 <paramref name="source" />합니다.<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="021f5-828">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="021f5-829">-마지막 인덱스 위치를 나타내는 1, <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-829">- 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="021f5-830">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-830">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="021f5-831">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-831">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-832">각각의 경우에서 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 결과 동일 사용자 지정 하이픈의 포함 되지 않았던 것 처럼 <paramref name="value" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-832">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="021f5-833">하이픈이을 검색할 때 메서드 6 및 5를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-833">When searching for a soft hyphen only, the method returns 6 and 5.</span></span> <span data-ttu-id="021f5-834">이러한 값의 두 문자열의 마지막 문자 인덱스에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-834">These values correspond to the index of the last character in the two strings.</span></span>  
  
<span data-ttu-id="021f5-835">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="021f5-835">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-836">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-836">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-837"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-837">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-838"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-838">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-839"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-839"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-840">전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-840">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-841"><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-841">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-842">역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-842">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-843"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-843">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-844">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-844">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-845">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-845">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-846">경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-846">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="021f5-847">문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-847">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="021f5-848">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-848">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-849">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-849">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-850">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-850">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-851">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-851">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-852"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-852"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-853"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-853"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-854">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-854">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-855">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-855">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-856">이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 메서드는 마지막 문자 위치를 항상 반환 <paramref name="source" /> 일치 항목은 끝에 있음을 나타내기 위해 <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-856">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns the last character position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="021f5-857">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 두 문자열의 하이픈이 (U + 00AD)에 대 한 검색 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-857">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="021f5-858">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-858">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-859">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색을 원본 문자열의 마지막 인덱스 위치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-859">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the last index position in the source string.</span></span> <span data-ttu-id="021f5-860">반면, 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-860">In contrast, an ordinal search successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-861">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="021f5-861">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int -&gt; int&#xA;override this.LastIndexOf : string * char * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-862">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-862">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-863"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-863">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-864">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-864">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="021f5-865">소스 문자열 중 처음부터 지정된 인덱스까지의 영역에서 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-865">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="021f5-866"><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-866">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-867"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-867">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-868">원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-868">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-869">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-869">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-870">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-870">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-871">유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-871">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="021f5-872">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-872">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-873">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-873">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-874">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-874">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-875">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-875">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-876">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-876">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-877"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-877"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-878"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-878"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-879">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-879">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-880">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-880">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-881">이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-881">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="021f5-882">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-882">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="021f5-883">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-883">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-884">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "m", 값의 인덱스 위치의 <paramref name="startIndex" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-884">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>  
  
<span data-ttu-id="021f5-885">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="021f5-885">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-886">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-886">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-887"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-887">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-888"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-888">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-889"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-889"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-890">전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-890">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-891"><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-891">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-892">역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-892">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-893"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-893">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-894">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-894">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-895">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-895">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-896">하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-896">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-897">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-897">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-898">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-898">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-899">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-899">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-900"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-900"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-901">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-901">-or-</span></span> 
 <span data-ttu-id="021f5-902"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-902"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-903"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-903"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-904">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-904">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-905">문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-905">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-906">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="source" />합니다.<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="021f5-906">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="021f5-907">-마지막 인덱스 위치를 나타내는 1, <paramref name="source" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-907">- 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="021f5-908">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-908">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="021f5-909">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-909">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-910">사용자 지정 하이픈을 무시할 수 있는 문자 이기 때문에 문화권 구분 검색을 사용자 지정 하이픈 검색 문자열에 포함 되지 않은 경우 반환 된 값과 같아야를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-910">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="021f5-911">그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-911">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-912">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</span><span class="sxs-lookup"><span data-stu-id="021f5-912">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int -&gt; int&#xA;override this.LastIndexOf : string * string * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-913">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-913">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-914"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-914">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-915">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-915">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="021f5-916">소스 문자열 중 처음부터 지정된 인덱스까지의 영역에서 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-916">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="021f5-917"><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-917">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-918"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-918">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-919">원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-919">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-920">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-920">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-921">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-921">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-922">유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-922">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-923">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-923">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-924">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-924">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-925">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-925">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-926">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-926">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-927"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-927"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-928">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-928">-or-</span></span> 
 <span data-ttu-id="021f5-929"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-929"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-930"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-930"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-931">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-931">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-932">문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-932">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-933">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-933">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="021f5-934">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 메서드 (U + 00AD) 하이픈을 포함 하 고 앞 또는 마지막 "m" 문자열에 포함 하는 부분 문자열을 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-934">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method is used to find a substring that includes a soft hyphen (U+00AD) and that precedes or includes the final "m" in a string.</span></span> <span data-ttu-id="021f5-935">검색 문자열에 사용자 지정 하이픈은 무시 되므로 사용자 지정 하이픈으로 구성 된 부분 문자열을 찾기 위해 호출 하는 반면 사용자 지정 하이픈 및 "m"으로 구성 하는 부분 문자열에서 "m"의 위치를 반환 하 고 "n" 반환 검색할 메서드를 호출 합니다  "n"의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-935">Because the soft hyphen in the search string is ignored, calling the method to find a substring that consists of the soft hyphen and "m" returns the position of the "m" in the string, whereas calling it to find a substring that consists of the soft hyphen and "n" returns the position of the "n".</span></span> <span data-ttu-id="021f5-936">검색 문자열에만 사용자 지정 하이픈이 포함 하는 경우 메서드는 "m"의 값을 나타내는의 인덱스를 반환 하는 <paramref name="startIndex" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-936">When the search string contains only the soft hyphen, the method returns the index of the "m", which represents the value of <paramref name="startIndex" />.</span></span>  
  
<span data-ttu-id="021f5-937">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</span><span class="sxs-lookup"><span data-stu-id="021f5-937">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-938">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-938">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-939"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-939">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-940">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-940">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-941"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-941">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-942"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-942"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-943">소스 문자열 중 문자열의 시작 부분부터 지정된 인덱스까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-943">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-944"><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-944">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-945"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-945">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-946">원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-946">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-947"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-947">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-948">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-948">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-949">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-949">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-950">경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-950">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="021f5-951">문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-951">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="021f5-952">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-952">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-953">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-953">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-954">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-954">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-955">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-955">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-956">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-956">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-957"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-957"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-958"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-958"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-959"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-959"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-960">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-960">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-961">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-961">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-962">이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-962">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="021f5-963">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-963">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="021f5-964">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-964">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-965">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색 "m"의 인덱스 위치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-965">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m".</span></span> <span data-ttu-id="021f5-966">그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-966">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-967">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</span><span class="sxs-lookup"><span data-stu-id="021f5-967">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int -&gt; int&#xA;override this.LastIndexOf : string * char * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-968">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-968">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-969"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-969">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-970">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-970">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-971">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-971">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="021f5-972">소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-972">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="021f5-973"><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-973">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-974"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-974">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-975">원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-975">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="021f5-976">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-976">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-977">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-977">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-978">유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-978">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="021f5-979">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-979">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-980">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-980">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-981">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-981">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-982">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-982">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-983"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-983"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-984"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-984"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-985">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-985">-or-</span></span> 
 <span data-ttu-id="021f5-986"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-986"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-987">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-987">-or-</span></span> 
 <span data-ttu-id="021f5-988"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-988"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-989">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-989">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-990">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-990">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-991">이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-991">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="021f5-992">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-992">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="021f5-993">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-993">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-994">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "m", 값의 인덱스 위치의 <paramref name="startIndex" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-994">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>  
  
<span data-ttu-id="021f5-995">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</span><span class="sxs-lookup"><span data-stu-id="021f5-995">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-996">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-996">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-997"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-997">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-998">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-998">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-999"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-999">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-1000"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1000"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-1001">소스 문자열 중 문자열의 시작 부분부터 지정된 인덱스까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1001">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-1002"><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1002">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-1003"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1003">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1004">원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1004">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="021f5-1005"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1005">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-1006">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1006">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-1007">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1007">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-1008">하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1008">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-1009">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1009">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-1010">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1010">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-1011">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1011">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="021f5-1012">사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1012">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-1013"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1013"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-1014">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1014">-or-</span></span> 
 <span data-ttu-id="021f5-1015"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1015"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-1016"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1016"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-1017"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-1017"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-1018">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1018">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-1019">문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1019">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-1020">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1020">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="021f5-1021">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 "m", 두 문자열의 마지막 "m"부터 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1021">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m", starting with the final "m" in two strings.</span></span> <span data-ttu-id="021f5-1022">문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1022">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="021f5-1023">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1023">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-1024">"m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1024">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="021f5-1025">메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1025">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="021f5-1026">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</span><span class="sxs-lookup"><span data-stu-id="021f5-1026">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int -&gt; int&#xA;override this.LastIndexOf : string * string * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-1027">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1027">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-1028"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1028">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-1029">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1029">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-1030">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1030">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="021f5-1031">소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1031">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="021f5-1032"><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1032">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="021f5-1033"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1033">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1034">원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1034">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="021f5-1035">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1035">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-1036">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1036">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-1037">유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1037">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-1038">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1038">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-1039">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1039">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-1040">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1040">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-1041"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1041"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-1042">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1042">-or-</span></span> 
 <span data-ttu-id="021f5-1043"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1043"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-1044"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1044"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-1045">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1045">-or-</span></span> 
 <span data-ttu-id="021f5-1046"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-1046"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-1047">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1047">-or-</span></span> 
 <span data-ttu-id="021f5-1048"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1048"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-1049">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1049">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-1050">문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1050">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-1051">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1051">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="021f5-1052">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 두 문자열의 마지막 "m" 앞에 있는 3 개의 문자 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1052">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in the three characters that precede the final "m" of two strings.</span></span> <span data-ttu-id="021f5-1053">문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1053">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="021f5-1054">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1054">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-1055">"m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1055">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
<span data-ttu-id="021f5-1056">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</span><span class="sxs-lookup"><span data-stu-id="021f5-1056">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-1057">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1057">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-1058"><paramref name="source" />에서 찾을 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1058">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-1059">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1059">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-1060">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1060">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-1061"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1061">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-1062"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1062"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-1063">소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1063">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-1064"><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1064">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-1065"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1065">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1066">원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1066">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="021f5-1067"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1067">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-1068">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1068">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-1069">문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1069">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-1070">경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1070">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="021f5-1071">문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1071">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="021f5-1072">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1072">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-1073">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1073">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-1074">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1074">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-1075">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1075">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-1076"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1076"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-1077"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1077"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-1078">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1078">-or-</span></span> 
 <span data-ttu-id="021f5-1079"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-1079"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-1080">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1080">-or-</span></span> 
 <span data-ttu-id="021f5-1081"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1081"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-1082"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-1082"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-1083">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1083">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-1084">문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1084">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-1085">이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1085">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="021f5-1086">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1086">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="021f5-1087">문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1087">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="021f5-1088">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색 인덱스의 위치를 반환 "m", 값의 <paramref name="startIndex" />합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1088">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span> <span data-ttu-id="021f5-1089">그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1089">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="021f5-1090">[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</span><span class="sxs-lookup"><span data-stu-id="021f5-1090">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="021f5-1091">검색할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1091">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="021f5-1092"><paramref name="source" />에서 찾을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1092">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="021f5-1093">역방향 검색의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1093">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="021f5-1094">검색할 섹션에 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1094">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="021f5-1095"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1095">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="021f5-1096"><paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1096"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="021f5-1097">소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1097">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="021f5-1098"><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1098">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="021f5-1099"><paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1099">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1100">원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1100">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="021f5-1101"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1101">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="021f5-1102">하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1102">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="021f5-1103">미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1103">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="021f5-1104">하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1104">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="021f5-1105">가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1105">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="021f5-1106">일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1106">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-1107">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1107">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="021f5-1108"><paramref name="source" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1108"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="021f5-1109">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1109">-or-</span></span> 
 <span data-ttu-id="021f5-1110"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1110"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="021f5-1111"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1111"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
<span data-ttu-id="021f5-1112">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1112">-or-</span></span> 
 <span data-ttu-id="021f5-1113"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-1113"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="021f5-1114">또는</span><span class="sxs-lookup"><span data-stu-id="021f5-1114">-or-</span></span> 
 <span data-ttu-id="021f5-1115"><paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1115"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="021f5-1116"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="021f5-1116"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-1117">문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1117">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="021f5-1118">문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1118">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="021f5-1119">하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1119">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="021f5-1120">다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 모든 "m"을 뒤 하이픈이 (U + 00AD)의 위치 하지만 최종 "m" 앞의 첫 번째 문자 위치를 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1120">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in all but the first character position before the final "m" in two strings.</span></span> <span data-ttu-id="021f5-1121">문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1121">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="021f5-1122">두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1122">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-1123">그러나 서 수 비교를 수행할 때 부분만에서 찾은 첫 번째 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1123">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="021f5-1124">참고 첫 번째 문자열 뒤에 "m" 사용자 지정 하이픈을 포함 하는 메서드를 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 있지만 문화권 구분 비교를 수행 하는 경우 대신 "m"의 인덱스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1124">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="021f5-1125">메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1125">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="021f5-1126">[! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</span><span class="sxs-lookup"><span data-stu-id="021f5-1126">[!code-vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CompareInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="021f5-1127">현재 <see cref="T:System.Globalization.CompareInfo" />에 대한 올바른 형태의 문화권 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1127">Gets the properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></summary>
        <value><span data-ttu-id="021f5-1128">현재 <see cref="T:System.Globalization.CompareInfo" />에 대한 올바른 형태의 문화권 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1128">The properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="021f5-1129">다음 예제는 <xref:System.Globalization.CompareInfo.LCID%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1129">The following example demonstrates the <xref:System.Globalization.CompareInfo.LCID%2A> property.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CompareInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="021f5-1130">이 <see cref="T:System.Globalization.CompareInfo" /> 개체에서 정렬 작업에 사용하는 문화권의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1130">Gets the name of the culture used for sorting operations by this <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="021f5-1131">문화권의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1131">The name of a culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1132">합니다 <xref:System.Globalization.CompareInfo.Name%2A> 고 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 속성 다른 값을 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1132">The <xref:System.Globalization.CompareInfo.Name%2A> and <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> properties can have different values.</span></span> <span data-ttu-id="021f5-1133">예를 들어는 <xref:System.Globalization.CompareInfo.LCID%2A> 속성 값이 16 진수 0x10407 독일어 전화 번호부에 나타나는 것 처럼 이름을 정렬 하는 대체 정렬 문화권을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1133">For example, an <xref:System.Globalization.CompareInfo.LCID%2A> property value of hexadecimal 0x10407 identifies an alternate sort culture that sorts names as they might appear in a German telephone book.</span></span> <span data-ttu-id="021f5-1134"><xref:System.Globalization.CompareInfo.Name%2A> 반면 속성에 "de-de_phoneb"의 값을 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 관련된 독일어 (독일) 문화권의 속성을 "DE-DE" 값이 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1134">The <xref:System.Globalization.CompareInfo.Name%2A> property has a value of "de-de_phoneb", whereas the <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> property of the associated German (Germany) culture has a value of "de-DE".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="021f5-1135">다음 예제에서는-FR 및 JA-JP 문화권을 사용 하 여 세 개의 문자열을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1135">The following example compares three strings using the fr-FR and ja-JP cultures.</span></span> <span data-ttu-id="021f5-1136"><xref:System.Globalization.CultureInfo.Name%2A> 속성 각 문화권의 이름을 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1136">The <xref:System.Globalization.CultureInfo.Name%2A> property is used to display the name of each culture.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="021f5-1137">콜백을 시작한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1137">The object that initiated the callback.</span></span></param>
        <summary><span data-ttu-id="021f5-1138">전체 개체 그래프가 deserialize될 때 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1138">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1139">이 멤버는 명시적 인터페이스 멤버 구현을 사용할 수 있는 경우에만 현재 <xref:System.Globalization.CompareInfo> 개체가로 캐스팅을 <xref:System.Runtime.Serialization.IDeserializationCallback> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1139">This member is an explicit interface member implementation that can be used only when the current <xref:System.Globalization.CompareInfo> object is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.</span></span> <span data-ttu-id="021f5-1140">자세한 내용은 <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="021f5-1140">For more information, see the <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compareInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="021f5-1141">현재 <see cref="T:System.Globalization.CompareInfo" /> 개체를 나타내는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1141">Returns a string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="021f5-1142">현재 <see cref="T:System.Globalization.CompareInfo" /> 개체를 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1142">A string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1143">이 메서드를 재정의 합니다 <xref:System.Object.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="021f5-1143">This method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="021f5-1144">클래스 이름 및 인스턴스 값으로 이루어진 문자열을 반환 <xref:System.Globalization.CompareInfo.Name%2A> 속성인 하이픈으로 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1144">It returns a string that consists of the class name and the value of the instance <xref:System.Globalization.CompareInfo.Name%2A> property, separated by a hyphen.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="021f5-1145">.NET Framework 4를 사용 하 여 시작 합니다 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드를 클래스 이름 뒤에 공백, 하이픈, 공백, 및의 값을 반환 합니다 <see cref="P:System.Globalization.CompareInfo.Name" /> 속성.</span><span class="sxs-lookup"><span data-stu-id="021f5-1145">Staring with the .NET Framework 4, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.Name" /> property.</span></span> <span data-ttu-id="021f5-1146">예를 들어를 <see cref="T:System.Globalization.CompareInfo" /> EN-US 문화권을 나타내는 개체를 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드 "CompareInfo-EN-US"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1146">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - en-US".</span></span> <span data-ttu-id="021f5-1147">이전 버전의.NET Framework에서는 클래스 이름 뒤에 공백, 하이픈, 공백, 및의 값을 반환 합니다 <see cref="P:System.Globalization.CompareInfo.LCID" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1147">In previous versions of the .NET Framework, it returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.LCID" /> property.</span></span> <span data-ttu-id="021f5-1148">예를 들어를 <see cref="T:System.Globalization.CompareInfo" /> EN-US 문화권을 나타내는 개체를 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드 "CompareInfo-1033"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1148">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - 1033".</span></span></para></block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : System.Globalization.SortVersion" Usage="System.Globalization.CompareInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="021f5-1149">문자열을 비교하고 정렬하는 데 사용되는 유니코드 버전에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1149">Gets information about the version of Unicode used for comparing and sorting strings.</span></span></summary>
        <value><span data-ttu-id="021f5-1150">문자열을 비교하고 정렬하는 데 사용되는 유니코드 버전에 대한 정보를 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1150">An object that contains information about the Unicode version used for comparing and sorting strings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="021f5-1151">개별 문자의 가중치 및 특정 문자열의 비교 하거나 정렬 하는 방법은.NET Framework의 특정 버전을 구현 하는 유니코드 사양의 버전에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1151">The weight of individual characters, and therefore the way in which particular strings are compared or ordered, depends on the version of the Unicode specification that a particular version of the .NET Framework implements.</span></span> <span data-ttu-id="021f5-1152">에 [!INCLUDE[net_v45](~/includes/net-v45-md.md)],이에 따라 달라 집니다 호스트 운영 체제에 다음 표와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1152">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], this also depends on the host operating system, as the following table shows.</span></span> <span data-ttu-id="021f5-1153">지원되는 유니코드 버전 목록은 문자 비교 및 정렬에만 적용되며 범주에 따른 유니코드 문자의 분류에는 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1153">Note that this list of supported Unicode versions applies to character comparison and sorting only; it does not apply to classification of Unicode characters by category.</span></span>  
  
|<span data-ttu-id="021f5-1154">.NET Framework 버전</span><span class="sxs-lookup"><span data-stu-id="021f5-1154">.NET Framework version</span></span>|<span data-ttu-id="021f5-1155">운영 체제</span><span class="sxs-lookup"><span data-stu-id="021f5-1155">Operating system</span></span>|<span data-ttu-id="021f5-1156">유니코드 버전</span><span class="sxs-lookup"><span data-stu-id="021f5-1156">Unicode version</span></span>|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|<span data-ttu-id="021f5-1157">모든 운영 체제</span><span class="sxs-lookup"><span data-stu-id="021f5-1157">All operating systems</span></span>|<span data-ttu-id="021f5-1158">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="021f5-1158">Unicode 5.0</span></span>|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="021f5-1159">이상 버전</span><span class="sxs-lookup"><span data-stu-id="021f5-1159">and later versions</span></span>|[!INCLUDE[win7](~/includes/win7-md.md)]|<span data-ttu-id="021f5-1160">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="021f5-1160">Unicode 5.0</span></span>|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="021f5-1161">이상 버전</span><span class="sxs-lookup"><span data-stu-id="021f5-1161">and later versions</span></span>|[!INCLUDE[win8](~/includes/win8-md.md)] <span data-ttu-id="021f5-1162">및 이후 Windows 운영 체제 버전</span><span class="sxs-lookup"><span data-stu-id="021f5-1162">and later Windows operating system versions</span></span>|<span data-ttu-id="021f5-1163">유니코드 6.3</span><span class="sxs-lookup"><span data-stu-id="021f5-1163">Unicode 6.3</span></span>|  
  
 <span data-ttu-id="021f5-1164">합니다 <xref:System.Globalization.SortVersion> 에서 반환 된 개체는 <xref:System.Globalization.CompareInfo.Version%2A> 속성 문자열을 비교 하는 데 정확한 유니코드 버전을 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1164">The <xref:System.Globalization.SortVersion> object returned by the <xref:System.Globalization.CompareInfo.Version%2A> property doesn't identify the precise Unicode version used to compare strings.</span></span> <span data-ttu-id="021f5-1165">두 개를 비교 하는 경우에 유용 <xref:System.Globalization.SortVersion> 사용 하는지 확인 하려면 이러한 동일한 유니코드 버전 및 문화권 문자열을 비교 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1165">It is useful only when comparing two <xref:System.Globalization.SortVersion> objects to determine whether they use the same Unicode version and culture to compare strings.</span></span> <span data-ttu-id="021f5-1166">자세한 내용 및 예제에 대 한 참조를 <xref:System.Globalization.SortVersion> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="021f5-1166">For more information and an example, see the <xref:System.Globalization.SortVersion> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>