<Type Name="Calendar" FullName="System.Globalization.Calendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5466debc4be57e754b42a75ff704271e2ab461b" /><Meta Name="ms.sourcegitcommit" Value="6089a30c0522e6f43256523e82e94b2ccedfb55b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/04/2019" /><Meta Name="ms.locfileid" Value="59015746" /></Metadata><TypeSignature Language="C#" Value="public abstract class Calendar : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Calendar extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Calendar&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar abstract : ICloneable" />
  <TypeSignature Language="F#" Value="type Calendar = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3ecea-101">사업부의 시간(예: 주, 월, 년)을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-101">Represents time in divisions, such as weeks, months, and years.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-102">일정, 주, 월 및 연도 같은 단위로 시간을 분할 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-102">A calendar divides time into units, such as weeks, months, and years.</span></span> <span data-ttu-id="3ecea-103">수, 길이 및 시작 부분에는 각 달력의 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-103">The number, length, and start of the divisions vary in each calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ecea-104">.NET의 달력 클래스를 사용 하는 방법에 대 한 내용은 [달력을 사용 하 여 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-104">For information about using the calendar classes in .NET, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="3ecea-105">언제 든 지 특정 달력을 사용 하는 숫자 값의 집합으로 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-105">Any moment in time can be represented as a set of numeric values using a particular calendar.</span></span> <span data-ttu-id="3ecea-106">춘에서 발생 하는 예를 들어 (1999 년 3, 20, 8, 46, 0, 0.0) 양력, 1999 년 3 월 20, 기</span><span class="sxs-lookup"><span data-stu-id="3ecea-106">For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E.</span></span> <span data-ttu-id="3ecea-107">8:46:00:0.0에서.</span><span class="sxs-lookup"><span data-stu-id="3ecea-107">at 8:46:00:0.0.</span></span> <span data-ttu-id="3ecea-108">구현의 <xref:System.Globalization.Calendar> 비슷한 일련의 숫자 값을 특정 달력의 범위에서 날짜를 매핑할 수 있습니다 하 고 <xref:System.DateTime> 이러한 일련의 숫자 값에서 정보를 사용 하 여 텍스트 표현에 매핑할 수 있습니다 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.DateTimeFormatInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-108">An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>.</span></span> <span data-ttu-id="3ecea-109">텍스트 표현 수 예를 들어 "46 오전 8 년 3 월 20 1999 AD" EN-US 문화권의 문화권 구분 또는 문화권 구분 예를 들어, "1999-03-20T08:46:00" ISO 8601 형식에서입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-109">The textual representation can be culture-sensitive, for example, "8:46 AM March 20th 1999 AD" for the en-US culture, or culture-insensitive, for example, "1999-03-20T08:46:00" in ISO 8601 format.</span></span>  
  
 <span data-ttu-id="3ecea-110"><xref:System.Globalization.Calendar> 구현 하나 이상의 연대를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-110">A <xref:System.Globalization.Calendar> implementation can define one or more eras.</span></span> <span data-ttu-id="3ecea-111"><xref:System.Globalization.Calendar> 정수로 열거 연대를 식별 하는 클래스는 현재 연대 (<xref:System.Globalization.Calendar.CurrentEra>) 값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-111">The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="3ecea-112">하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일)</span><span class="sxs-lookup"><span data-stu-id="3ecea-112">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="3ecea-113">각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-113">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="3ecea-114">일관성을 위해 각 간격 (예: 첫 달)의 첫 번째 단위 값 1이 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-114">For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.</span></span>  
  
 <span data-ttu-id="3ecea-115">합니다 <xref:System.Globalization> 다음을 포함 하는 네임 스페이스 <xref:System.Globalization.Calendar> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-115">The <xref:System.Globalization> namespace includes the following <xref:System.Globalization.Calendar> implementations:</span></span>  
  
-   <xref:System.Globalization.ChineseLunisolarCalendar>  
  
-   <xref:System.Globalization.EastAsianLunisolarCalendar>  
  
-   <xref:System.Globalization.GregorianCalendar>  
  
-   <xref:System.Globalization.HebrewCalendar>  
  
-   <xref:System.Globalization.HijriCalendar>  
  
-   <xref:System.Globalization.JapaneseCalendar>  
  
-   <xref:System.Globalization.JapaneseLunisolarCalendar>  
  
-   <xref:System.Globalization.JulianCalendar>  
  
-   <xref:System.Globalization.KoreanCalendar>  
  
-   <xref:System.Globalization.KoreanLunisolarCalendar>  
  
-   <xref:System.Globalization.PersianCalendar>  
  
-   <xref:System.Globalization.TaiwanCalendar>  
  
-   <xref:System.Globalization.TaiwanLunisolarCalendar>  
  
-   <xref:System.Globalization.ThaiBuddhistCalendar>  
  
-   <xref:System.Globalization.UmAlQuraCalendar>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-116">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-116">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
    <altmember cref="T:System.Globalization.ChineseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.EastAsianLunisolarCalendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="T:System.Globalization.HebrewCalendar" />
    <altmember cref="T:System.Globalization.HijriCalendar" />
    <altmember cref="T:System.Globalization.JapaneseCalendar" />
    <altmember cref="T:System.Globalization.JapaneseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.JulianCalendar" />
    <altmember cref="T:System.Globalization.KoreanCalendar" />
    <altmember cref="T:System.Globalization.KoreanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.PersianCalendar" />
    <altmember cref="T:System.Globalization.TaiwanCalendar" />
    <altmember cref="T:System.Globalization.TaiwanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.ThaiBuddhistCalendar" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="3ecea-117">달력 작업</span><span class="sxs-lookup"><span data-stu-id="3ecea-117">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="3ecea-118">예제: Calendar Week Range 유틸리티</span><span class="sxs-lookup"><span data-stu-id="3ecea-118">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ecea-119"><see cref="T:System.Globalization.Calendar" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-119">Initializes a new instance of the <see cref="T:System.Globalization.Calendar" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-120">다음 예제에서는 멤버를 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-120">The following example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="3ecea-121">에 [!INCLUDE[net_portable](~/includes/net-portable-md.md)], <see cref="T:System.Globalization.Calendar" /> 클래스 생성자를 사용할 수 있고 클래스에서 파생 된 <see cref="T:System.Globalization.Calendar" /> public이 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-121">In the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], the <see cref="T:System.Globalization.Calendar" /> class constructor is unavailable, and classes derived from <see cref="T:System.Globalization.Calendar" /> are not public.</span></span> <span data-ttu-id="3ecea-122">검색 해야 하는 일반 달력 개체와 같은 특정 유형의 일정을 원하는 경우는 <see cref="P:System.Globalization.CultureInfo.Calendar" /> 또는 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 속성인 또는 <see cref="P:System.Globalization.CultureInfo.OptionalCalendars" /> 속성 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-122">If you want a calendar of a specific type, such as a Gregorian calendar object, you have to retrieve it from the <see cref="P:System.Globalization.CultureInfo.Calendar" /> or <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property, or from the <see cref="P:System.Globalization.CultureInfo.OptionalCalendars" /> property array.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public virtual DateTime AddDays (DateTime time, int days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddDays(valuetype System.DateTime time, int32 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDays (time As DateTime, days As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddDays(DateTime time, int days);" />
      <MemberSignature Language="F#" Value="abstract member AddDays : DateTime * int -&gt; DateTime&#xA;override this.AddDays : DateTime * int -&gt; DateTime" Usage="calendar.AddDays (time, days)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="days" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-123">날짜를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-123">The <see cref="T:System.DateTime" /> to which to add days.</span></span></param>
        <param name="days"><span data-ttu-id="3ecea-124">더할 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-124">The number of days to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-125">지정된 <see cref="T:System.DateTime" />에서 지정된 날짜 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-125">Returns a <see cref="T:System.DateTime" /> that is the specified number of days away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-126">지정된 <see cref="T:System.DateTime" />에 지정된 날짜 수를 더한 결과로 만들어진 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-126">The <see cref="T:System.DateTime" /> that results from adding the specified number of days to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-127">`days` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-127">The `days` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-128">하는 경우 `days` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-128">If `days` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-129">결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-129">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-130">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-130">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-131">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-131">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-132">결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-132">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-133">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-133">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-134">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-134">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-135">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-135">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-136">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-136">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="days" /> <span data-ttu-id="3ecea-137">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-137">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public virtual DateTime AddHours (DateTime time, int hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddHours(valuetype System.DateTime time, int32 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddHours (time As DateTime, hours As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddHours(DateTime time, int hours);" />
      <MemberSignature Language="F#" Value="abstract member AddHours : DateTime * int -&gt; DateTime&#xA;override this.AddHours : DateTime * int -&gt; DateTime" Usage="calendar.AddHours (time, hours)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="hours" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-138">시간을 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-138">The <see cref="T:System.DateTime" /> to which to add hours.</span></span></param>
        <param name="hours"><span data-ttu-id="3ecea-139">더할 시간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-139">The number of hours to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-140">지정된 <see cref="T:System.DateTime" />에서 지정된 시간 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-140">Returns a <see cref="T:System.DateTime" /> that is the specified number of hours away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-141">지정된 <see cref="T:System.DateTime" />에 지정된 시간 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-141">The <see cref="T:System.DateTime" /> that results from adding the specified number of hours to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-142">`hours` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-142">The `hours` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-143">하는 경우 `hours` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-143">If `hours` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-144">결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-144">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-145">결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-145">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-146">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-146">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-147">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-147">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-148">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-148">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-149">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-149">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]
 [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-150">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-150">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-151">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-151">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hours" /> <span data-ttu-id="3ecea-152">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-152">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMilliseconds (DateTime time, double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMilliseconds(valuetype System.DateTime time, float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMilliseconds (time As DateTime, milliseconds As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMilliseconds(DateTime time, double milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member AddMilliseconds : DateTime * double -&gt; DateTime&#xA;override this.AddMilliseconds : DateTime * double -&gt; DateTime" Usage="calendar.AddMilliseconds (time, milliseconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-153">밀리초를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-153">The <see cref="T:System.DateTime" /> to add milliseconds to.</span></span></param>
        <param name="milliseconds"><span data-ttu-id="3ecea-154">더할 밀리초 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-154">The number of milliseconds to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-155">지정된 <see cref="T:System.DateTime" />에서 지정된 밀리초 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-155">Returns a <see cref="T:System.DateTime" /> that is the specified number of milliseconds away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-156">지정된 <see cref="T:System.DateTime" />에 지정된 밀리초 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-156">The <see cref="T:System.DateTime" /> that results from adding the specified number of milliseconds to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-157">합니다 `milliseconds` 값은 가장 가까운 정수로 반올림 추가 되기 전에 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-157">The `milliseconds` value is rounded to the nearest integer before it is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-158">하는 경우 `milliseconds` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-158">If `milliseconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-159">결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-159">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-160">결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-160">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-161">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-161">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-162">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-162">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-163">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-163">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-164">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-164">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]
 [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-165">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-165">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-166">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-166">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="milliseconds" /> <span data-ttu-id="3ecea-167">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-167">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMinutes (DateTime time, int minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMinutes(valuetype System.DateTime time, int32 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMinutes (time As DateTime, minutes As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMinutes(DateTime time, int minutes);" />
      <MemberSignature Language="F#" Value="abstract member AddMinutes : DateTime * int -&gt; DateTime&#xA;override this.AddMinutes : DateTime * int -&gt; DateTime" Usage="calendar.AddMinutes (time, minutes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="minutes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-168">분을 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-168">The <see cref="T:System.DateTime" /> to which to add minutes.</span></span></param>
        <param name="minutes"><span data-ttu-id="3ecea-169">더할 분 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-169">The number of minutes to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-170">지정된 <see cref="T:System.DateTime" />에서 지정된 분 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-170">Returns a <see cref="T:System.DateTime" /> that is the specified number of minutes away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-171">지정된 <see cref="T:System.DateTime" />에 지정된 분 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-171">The <see cref="T:System.DateTime" /> that results from adding the specified number of minutes to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-172">`minutes` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-172">The `minutes` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-173">하는 경우 `minutes` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-173">If `minutes` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-174">결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-174">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-175">결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-175">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-176">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-176">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-177">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-177">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-178">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-178">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-179">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-179">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]
 [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-180">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-180">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-181">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-181">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minutes" /> <span data-ttu-id="3ecea-182">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-182">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public abstract DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="abstract member AddMonths : DateTime * int -&gt; DateTime" Usage="calendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-183">월을 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-183">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="3ecea-184">더할 월 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-184">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-185">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />에서 지정된 월 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-185">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-186">지정된 <see cref="T:System.DateTime" />에 지정된 월 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-186">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-187">`months` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-187">The `months` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-188">하는 경우 `months` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-188">If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-189">결과의 일 부분 <xref:System.DateTime> 결과 일 결과 결과 연도 월에 유효한 날짜가 아닌 경우 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-189">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3ecea-190">결과 결과 연도 월의 마지막 유효 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-190">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3ecea-191">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-191">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-192">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-192">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-193">결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-193">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-194">예를 들어, 현재 달력에는 네 번째 월은 30 일 및 10 월 31 일에 12 개월입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-194">For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days.</span></span> <span data-ttu-id="3ecea-195">지정 된 일 그 달의 31 번째 날과 값이 지정된 된 월 10 월 이면는 `months` 매개 변수가 6 이면 결과 연도가 결과 일은 1-32이 고 지정된 된 연도, 월은 4 월 일, 월의 마지막 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-195">If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.</span></span>  
  
 <span data-ttu-id="3ecea-196">경우의 값을 `months` 매개 변수는 음수 이면 결과 <xref:System.DateTime> 지정 된 것 보다 이전 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-196">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-197">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-197">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-198">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-198">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-199">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-199">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-200">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-200">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="months" /> <span data-ttu-id="3ecea-201">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-201">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddSeconds (DateTime time, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddSeconds(valuetype System.DateTime time, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddSeconds (time As DateTime, seconds As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddSeconds(DateTime time, int seconds);" />
      <MemberSignature Language="F#" Value="abstract member AddSeconds : DateTime * int -&gt; DateTime&#xA;override this.AddSeconds : DateTime * int -&gt; DateTime" Usage="calendar.AddSeconds (time, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-202">초를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-202">The <see cref="T:System.DateTime" /> to which to add seconds.</span></span></param>
        <param name="seconds"><span data-ttu-id="3ecea-203">더할 초 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-203">The number of seconds to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-204">지정된 <see cref="T:System.DateTime" />에서 지정된 초 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-204">Returns a <see cref="T:System.DateTime" /> that is the specified number of seconds away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-205">지정된 <see cref="T:System.DateTime" />에 지정된 초 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-205">The <see cref="T:System.DateTime" /> that results from adding the specified number of seconds to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-206">`seconds` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-206">The `seconds` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-207">하는 경우 `seconds` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-207">If `seconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-208">결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-208">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-209">결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-209">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-210">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-210">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-211">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-211">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-212">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-212">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-213">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-213">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]
 [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-214">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-214">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-215">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-215">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="seconds" /> <span data-ttu-id="3ecea-216">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-216">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddWeeks">
      <MemberSignature Language="C#" Value="public virtual DateTime AddWeeks (DateTime time, int weeks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddWeeks(valuetype System.DateTime time, int32 weeks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddWeeks (time As DateTime, weeks As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddWeeks(DateTime time, int weeks);" />
      <MemberSignature Language="F#" Value="abstract member AddWeeks : DateTime * int -&gt; DateTime&#xA;override this.AddWeeks : DateTime * int -&gt; DateTime" Usage="calendar.AddWeeks (time, weeks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="weeks" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-217">주를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-217">The <see cref="T:System.DateTime" /> to which to add weeks.</span></span></param>
        <param name="weeks"><span data-ttu-id="3ecea-218">더할 주 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-218">The number of weeks to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-219">지정된 <see cref="T:System.DateTime" />에서 지정된 주 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-219">Returns a <see cref="T:System.DateTime" /> that is the specified number of weeks away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-220">지정된 <see cref="T:System.DateTime" />에 지정된 주 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-220">The <see cref="T:System.DateTime" /> that results from adding the specified number of weeks to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-221">`weeks` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-221">The `weeks` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-222">하는 경우 `weeks` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-222">If `weeks` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-223">결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-223">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-224">결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-224">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-225">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-225">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-226">결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-226">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-227">파생 된 모든.NET 클래스에는 <xref:System.Globalization.Calendar> 클래스 일주일에 7 일로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-227">In all .NET classes derived from the <xref:System.Globalization.Calendar> class, a week is defined as seven days.</span></span>  
  
 <span data-ttu-id="3ecea-228">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-228">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-229">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-229">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]
 [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-230">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-230">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-231">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-231">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="weeks" /> <span data-ttu-id="3ecea-232">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-232">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public abstract DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="abstract member AddYears : DateTime * int -&gt; DateTime" Usage="calendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-233">연도를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-233">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="3ecea-234">더할 연도 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-234">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="3ecea-235">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />에서 지정된 연도 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-235">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-236">지정된 <see cref="T:System.DateTime" />에 지정된 연도 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-236">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-237">`years` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-237">The `years` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-238">하는 경우 `years` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-238">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-239">결과의 일 부분 <xref:System.DateTime> 결과 일 결과 결과 연도 월에 유효한 날짜가 아닌 경우 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-239">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3ecea-240">결과 결과 연도 월의 마지막 유효 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-240">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3ecea-241">결과의 월 부분 <xref:System.DateTime> 결과 월 유효 결과 연도 월 없는 경우 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-241">The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year.</span></span> <span data-ttu-id="3ecea-242">결과 연도에 유효한 지난달으로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-242">It is changed to the last valid month in the resulting year.</span></span> <span data-ttu-id="3ecea-243">결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-243">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3ecea-244">결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-244">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-245">예를 들어, 그레고리오 력 년 2 월에 28 일 제외 하 고 있는 윤년 29 일까 지 면 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-245">For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days.</span></span> <span data-ttu-id="3ecea-246">지정된 된 날짜 값과 윤년의 2 월 29 일 경우 `years` 이 1 이면 결과 날짜가 다음 년에서 2 월 28 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-246">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="3ecea-247">하는 경우 `years` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-247">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3ecea-248">합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-248">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ecea-249">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-249">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-250">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-250">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ecea-251">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-251">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="years" /> <span data-ttu-id="3ecea-252">지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-252">is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.Calendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-253">현재 달력이 양력인지, 음력인지 또는 두 가지를 조합한 것인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-253">Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="3ecea-254"><see cref="T:System.Globalization.CalendarAlgorithmType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-254">One of the <see cref="T:System.Globalization.CalendarAlgorithmType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-255">다음 예제에서는 리플렉션을 사용 하 여 각각 인스턴스화하 <xref:System.Globalization.Calendar> 형식이.NET에서 찾은 값을 표시는 <xref:System.Globalization.Calendar.AlgorithmType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-255">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in .NET and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="calendar.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ecea-256">현재 <see cref="T:System.Globalization.Calendar" /> 개체의 복사본인 새 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-256">Creates a new object that is a copy of the current <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <returns><span data-ttu-id="3ecea-257">현재 <see cref="T:System.Object" /> 개체의 멤버 수준 복제본인 <see cref="T:System.Globalization.Calendar" />의 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-257">A new instance of <see cref="T:System.Object" /> that is the memberwise clone of the current <see cref="T:System.Globalization.Calendar" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-258">새 멤버 수준 복제본이 읽기 전용 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-258">The new memberwise clone is not read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEra">
      <MemberSignature Language="C#" Value="public const int CurrentEra = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CurrentEra = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.Calendar.CurrentEra" />
      <MemberSignature Language="VB.NET" Value="Public Const CurrentEra As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int CurrentEra = 0;" />
      <MemberSignature Language="F#" Value="val mutable CurrentEra : int" Usage="System.Globalization.Calendar.CurrentEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-259">현재 달력의 현재 연대를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-259">Represents the current era of the current calendar.</span></span> <span data-ttu-id="3ecea-260">이 필드의 값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-260">The value of this field is 0.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-261">합니다 <xref:System.Globalization.Calendar.CurrentEra> 필드에서 현재 연대의 인덱스를 나타내는 <xref:System.Globalization.Calendar.Eras%2A> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-261">The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array.</span></span> <span data-ttu-id="3ecea-262">연대 (이전 연대를 현재 연대)에서 역방향 시간 순서로 정렬 되므로,이 필드는 상수 값이 0입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-262">Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.Calendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected virtual int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-263"><see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 속성에서 지정한 연도 이전 연도의 일 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-263">Gets the number of days in the year that precedes the year that is specified by the <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> property.</span></span></summary>
        <value><span data-ttu-id="3ecea-264"><see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />에서 지정한 연도 이전 연도의 일 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-264">The number of days in the year that precedes the year specified by <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-265">이 속성에는 365의 상수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-265">This property returns a constant value of 365.</span></span> <span data-ttu-id="3ecea-266">속성 값에서 파생 된 클래스에서 재정의 될 수 있다는 점에 유의 합니다 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-266">Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public abstract int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.Calendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-267">파생 클래스에 재정의될 때 현재 달력의 연대 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-267">When overridden in a derived class, gets the list of eras in the current calendar.</span></span></summary>
        <value><span data-ttu-id="3ecea-268">현재 달력의 연대를 나타내는 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-268">An array of integers that represents the eras in the current calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-269">배열의 첫 번째 요소로 현재 연대 및 가장 오래 된 연대가 배열의 마지막 요소를 사용 하 여 역방향 시간 순서로 연대 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-269">The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array.</span></span> <span data-ttu-id="3ecea-270">예를 들어, 현재 연대를 값 <xref:System.Globalization.JapaneseCalendar> 는 4, 배열의 첫 번째 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-270">For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array.</span></span> <span data-ttu-id="3ecea-271">만 <xref:System.Globalization.JapaneseCalendar> 하며 <xref:System.Globalization.JapaneseLunisolarCalendar> 클래스는 여러 연대를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-271">Only the <xref:System.Globalization.JapaneseCalendar> and the <xref:System.Globalization.JapaneseLunisolarCalendar> classes support multiple eras.</span></span>
  
[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

<span data-ttu-id="3ecea-272">합니다 <xref:System.Globalization.JapaneseCalendar> 및 <xref:System.Globalization.JapaneseLunisolarCalendar> 클래스는 여러 연대를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-272">The <xref:System.Globalization.JapaneseCalendar> and <xref:System.Globalization.JapaneseLunisolarCalendar> classes support multiple eras.</span></span> <span data-ttu-id="3ecea-273">반면, 대부분의 달력 구현에서는 단일 연대를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-273">Most calendar implementations, on the other hand, support a single era.</span></span>
 
## Examples  
 <span data-ttu-id="3ecea-274">다음 예제에서는에 포함 된 값을 표시 <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> 헤이세이 연대 (1989 2019) 현재 연대를가 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="3ecea-274">The following example displays the values contained in <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> when the Heisei era (1989-2019) was the current era.</span></span>   
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfMonth : DateTime -&gt; int" Usage="calendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-275">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-275">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-276">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-276">When overridden in a derived class, returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-277"><paramref name="time" /> 매개 변수의 일(월 기준)을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-277">A positive integer that represents the day of the month in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-278">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-278">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public abstract DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="calendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-279">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-279">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-280">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 요일을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-280">When overridden in a derived class, returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-281"><paramref name="time" /> 매개 변수의 요일을 나타내는 <see cref="T:System.DayOfWeek" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-281">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-282"><xref:System.DayOfWeek> 값은 일요일, 월요일, 화요일, 수요일, 목요일, 금요일, 토요일.</span><span class="sxs-lookup"><span data-stu-id="3ecea-282">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-283">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-283">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfYear : DateTime -&gt; int" Usage="calendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-284">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-284">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-285">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-285">When overridden in a derived class, returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-286"><paramref name="time" /> 매개 변수의 일(연도 기준)을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-286">A positive integer that represents the day of the year in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-287">연간 일자 연도의 첫 번째 날부터의 일 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-287">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="3ecea-288">예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> 1, 1 월 1 일 반환 및 <xref:System.Globalization.Calendar.GetDayOfYear%2A> 12 월 31 일 365 평년 366 윤년에서에 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-288">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-289">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-289">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-290">파생 클래스에 재정의될 때 지정된 월의 일 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-290">When overridden in a derived class, returns the number of days in the specified month.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int -&gt; int&#xA;override this.GetDaysInMonth : int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-291">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-291">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-292">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-292">A positive integer that represents the month.</span></span></param>
        <summary><span data-ttu-id="3ecea-293">현재 연대의 지정된 연도 및 월에 있는 일 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-293">Returns the number of days in the specified month and year of the current era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-294">현재 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-294">The number of days in the specified month in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-295">예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> 2 월 평년 윤년에서 29에서 28를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-295">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-296">다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-296">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-297">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-297">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-298">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-298">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-299">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-299">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-300">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-300">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-301">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-301">A positive integer that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-302">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-302">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="3ecea-303">파생 클래스에 재정의될 때 지정된 월, 연도 및 연대의 일 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-303">When overridden in a derived class, returns the number of days in the specified month, year, and era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-304">지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-304">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-305">예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> 2 월 평년 윤년에서 29에서 28를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-305">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-306">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-306">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-307">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-307">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-308">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-308">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-309">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-309">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="3ecea-310">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-310">is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ecea-311">파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-311">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="3ecea-312">지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-312">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-313">파생 클래스에 재정의될 때 지정된 연도의 일 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-313">When overridden in a derived class, returns the number of days in the specified year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int -&gt; int&#xA;override this.GetDaysInYear : int -&gt; int" Usage="calendar.GetDaysInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-314">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-314">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="3ecea-315">현재 연대의 지정된 연도에 있는 일 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-315">Returns the number of days in the specified year of the current era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-316">현재 연대의 지정된 연도에 있는 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-316">The number of days in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-317">예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> 365 평년 366 윤년에 대 한 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-317">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-318">다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-318">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-319">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-319">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int * int -&gt; int" Usage="calendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-320">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-320">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-321">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-321">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="3ecea-322">파생 클래스에 재정의될 때 지정된 연도 및 연대의 일 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-322">When overridden in a derived class, returns the number of days in the specified year and era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-323">지정된 연대에 있는 지정된 연도의 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-323">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-324">예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> 365 평년 366 윤년에 대 한 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-324">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-325">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-325">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-326">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-326">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="3ecea-327">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-327">is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ecea-328">파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-328">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="3ecea-329">지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-329">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public abstract int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetEra : DateTime -&gt; int" Usage="calendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-330">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-330">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-331">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 연대를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-331">When overridden in a derived class, returns the era of the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-332"><paramref name="time" />의 연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-332">An integer that represents the era of <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks

<span data-ttu-id="3ecea-333">만 <xref:System.Globalization.JapaneseCalendar> 하며 <xref:System.Globalization.JapaneseLunisolarCalendar> 클래스는 여러 연대를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-333">Only the <xref:System.Globalization.JapaneseCalendar> and the <xref:System.Globalization.JapaneseLunisolarCalendar> classes support multiple eras.</span></span>

## Examples  
 <span data-ttu-id="3ecea-334">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-334">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetHour">
      <MemberSignature Language="C#" Value="public virtual int GetHour (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHour(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHour (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHour(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetHour : DateTime -&gt; int&#xA;override this.GetHour : DateTime -&gt; int" Usage="calendar.GetHour time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-335">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-335">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-336">지정된 <see cref="T:System.DateTime" />의 시간 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-336">Returns the hours value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-337"><paramref name="time" />의 시간을 나타내는 0에서 23 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-337">An integer from 0 to 23 that represents the hour in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-338">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-338">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Hour" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLeapMonth">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-339">지정된 연도나 연도 및 연대의 윤월을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-339">Calculates the leap month for a specified year, or year and era.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int -&gt; int&#xA;override this.GetLeapMonth : int -&gt; int" Usage="calendar.GetLeapMonth year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-340">연도입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-340">A year.</span></span></param>
        <summary><span data-ttu-id="3ecea-341">지정된 연도의 윤월을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-341">Calculates the leap month for a specified year.</span></span></summary>
        <returns><span data-ttu-id="3ecea-342">지정된 연도의 윤월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-342">A positive integer that indicates the leap month in the specified year.</span></span>  
  
<span data-ttu-id="3ecea-343">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-343">-or-</span></span> 
<span data-ttu-id="3ecea-344">이 달력이 윤월을 지원하지 않거나 <paramref name="year" /> 매개 변수가 윤년을 나타내지 않는 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-344">Zero if this calendar does not support a leap month or if the <paramref name="year" /> parameter does not represent a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-345">윤 월 개념을 지 원하는 달력에서 윤 월에는 특정 월 또는 연도의 특정 월 후 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-345">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="3ecea-346">예를 들어를 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 1과 지정 된 날짜와 연관 된 달을 나타내는 13 사이의 숫자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-346">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="3ecea-347">아홉 번째 및 여덟 번째 연도, 월 사이의 윤 월 이면는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 여덟 번째 달에, 월, 9 및 10 아홉 번째 달에 8을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-347">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int * int -&gt; int&#xA;override this.GetLeapMonth : int * int -&gt; int" Usage="calendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-348">연도입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-348">A year.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-349">연대입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-349">An era.</span></span></param>
        <summary><span data-ttu-id="3ecea-350">지정한 연도 및 연대의 윤월을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-350">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-351">지정한 연도와 연대에서 윤월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-351">A positive integer that indicates the leap month in the specified year and era.</span></span>  
  
<span data-ttu-id="3ecea-352">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-352">-or-</span></span> 
<span data-ttu-id="3ecea-353">이 달력이 윤월을 지원하지 않거나 <paramref name="year" /> 및 <paramref name="era" /> 매개 변수가 윤년을 지정하지 않는 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-353">Zero if this calendar does not support a leap month or if the <paramref name="year" /> and <paramref name="era" /> parameters do not specify a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-354">윤 월 개념을 지 원하는 달력에서 윤 월에는 특정 월 또는 연도의 특정 월 후 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-354">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="3ecea-355">예를 들어를 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 1과 지정 된 날짜와 연관 된 달을 나타내는 13 사이의 숫자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-355">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="3ecea-356">아홉 번째 및 여덟 번째 연도, 월 사이의 윤 월 이면는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 여덟 번째 달에, 월, 9 및 10 아홉 번째 달에 8을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-356">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMilliseconds">
      <MemberSignature Language="C#" Value="public virtual double GetMilliseconds (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetMilliseconds(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMilliseconds (time As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double GetMilliseconds(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMilliseconds : DateTime -&gt; double&#xA;override this.GetMilliseconds : DateTime -&gt; double" Usage="calendar.GetMilliseconds time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-357">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-357">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-358">지정된 <see cref="T:System.DateTime" />의 밀리초 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-358">Returns the milliseconds value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-359"><paramref name="time" /> 매개 변수의 밀리초를 나타내는 0부터 999까지의 배정밀도 부동 소수점 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-359">A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-360">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-360">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Millisecond" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinute">
      <MemberSignature Language="C#" Value="public virtual int GetMinute (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMinute(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMinute (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMinute(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMinute : DateTime -&gt; int&#xA;override this.GetMinute : DateTime -&gt; int" Usage="calendar.GetMinute time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-361">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-361">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-362">지정된 <see cref="T:System.DateTime" />의 분 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-362">Returns the minutes value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-363"><paramref name="time" />의 분을 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-363">An integer from 0 to 59 that represents the minutes in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-364">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-364">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Minute" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public abstract int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMonth : DateTime -&gt; int" Usage="calendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-365">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-365">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-366">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 월을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-366">When overridden in a derived class, returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-367"><paramref name="time" />의 월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-367">A positive integer that represents the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-368">예를 들어 <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> 티쉬리 1을 반환에 대 한 및 <xref:System.Globalization.Calendar.GetMonth%2A> 의 평년 윤년에서 13에서 12를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-368">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> for Tishrei returns 1, and <xref:System.Globalization.Calendar.GetMonth%2A> for Elul returns 12 in a common year or 13 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-369">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-369">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMonthsInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-370">파생 클래스에 재정의될 때 지정된 연도의 월 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-370">When overridden in a derived class, returns the number of months in the specified year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public virtual int GetMonthsInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonthsInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMonthsInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int -&gt; int&#xA;override this.GetMonthsInYear : int -&gt; int" Usage="calendar.GetMonthsInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-371">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-371">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="3ecea-372">현재 연대에 있는 지정된 연도의 월 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-372">Returns the number of months in the specified year in the current era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-373">현재 연대에 있는 지정된 연도의 월 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-373">The number of months in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-374">예를 들어 <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> 평년 윤년에 대 한 13에 대 한 12를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-374">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-375">다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-375">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-376">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-376">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public abstract int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int * int -&gt; int" Usage="calendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-377">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-377">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-378">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-378">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="3ecea-379">파생 클래스에 재정의될 때 지정된 연대에 있는 지정된 연도의 월 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-379">When overridden in a derived class, returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-380">지정된 연대에 있는 지정된 연도의 월 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-380">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-381">예를 들어 <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> 평년 윤년에 대 한 13에 대 한 12를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-381">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-382">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-382">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-383">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-383">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="3ecea-384">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-384">is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ecea-385">파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-385">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="3ecea-386">지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-386">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecond">
      <MemberSignature Language="C#" Value="public virtual int GetSecond (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSecond(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecond (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSecond(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetSecond : DateTime -&gt; int&#xA;override this.GetSecond : DateTime -&gt; int" Usage="calendar.GetSecond time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-387">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-387">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-388">지정된 <see cref="T:System.DateTime" />의 초 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-388">Returns the seconds value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-389"><paramref name="time" />의 초를 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-389">An integer from 0 to 59 that represents the seconds in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-390">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-390">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Second" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public virtual int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="abstract member GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int&#xA;override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="calendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-391">날짜 및 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-391">A date and time value.</span></span></param>
        <param name="rule"><span data-ttu-id="3ecea-392">주를 정의하는 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-392">An enumeration value that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="3ecea-393">주의 첫째 요일을 정의하는 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-393">An enumeration value that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="3ecea-394">지정된 <see cref="T:System.DateTime" /> 값의 날짜가 포함된 주(연도 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-394">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="3ecea-395"><paramref name="time" /> 매개 변수의 날짜가 포함된 주(연도 기준)를 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-395">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-396">설정 하 여 연도의 주 번호를 확인 하려면이 메서드를 사용할 수 있습니다 `time` 연도의 마지막 날입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-396">This method can be used to determine the number of weeks in the year by setting `time` to the last day of the year.</span></span>  
  
 <span data-ttu-id="3ecea-397">합니다 <xref:System.Globalization.DateTimeFormatInfo> 나타난 달력을 사용 하는 특정 문화권에 대 한 개체를 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 속성에 사용할 수 있는 다음 문화권 관련 값을 포함 합니다 `rule` 및 `firstDayOfWeek` 매개 변수:</span><span class="sxs-lookup"><span data-stu-id="3ecea-397">The <xref:System.Globalization.DateTimeFormatInfo> object for a particular culture that uses the calendar indicated by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property includes the following culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters:</span></span>  
  
-   <span data-ttu-id="3ecea-398"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType> 속성이 기본 요일에 대해 사용할 수 있는 첫 번째 날을 포함 합니다 `firstDayOfWeek` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-398">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType> property contains the default first day of the week that can be used for the `firstDayOfWeek` parameter.</span></span>  
  
-   <span data-ttu-id="3ecea-399">합니다 <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType> 속성에 사용할 수 있는 기본 달력 주 규칙을 포함 합니다 `rule` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-399">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType> property contains the default calendar week rule that can be used for the `rule` parameter.</span></span>  
  
 <span data-ttu-id="3ecea-400">다음 예에서는 현재 문화권의 <xref:System.Globalization.DateTimeFormatInfo> 2011 년 1 월 1 일 그레고리오 력으로 해당 연도의 첫째 주에는 확인 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-400">The following example uses the current culture's <xref:System.Globalization.DateTimeFormatInfo> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]  
  
 <span data-ttu-id="3ecea-401">일부 달력에 대 한 호출에 대 한는 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 메서드가 throw를 <xref:System.ArgumentOutOfRangeException> 의 특정 조합에 대 한 `rule` 및 `firstDayOfWeek` 경우에도 값 `time` 일정에 의해 반환 된 날짜 보다 크면 <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="3ecea-401">For some calendars, a call to the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method throws an <xref:System.ArgumentOutOfRangeException> for particular combinations of `rule` and `firstDayOfWeek` values even if `time` is greater than the date returned by that calendar's <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> property.</span></span> <span data-ttu-id="3ecea-402">다음 표에서 영향을 받는 달력, 특정 `rule` 값 및 가장 오래 된 지원 되는 범위의 `time` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-402">The following table lists the affected calendars, the specific `rule` values, and the range of the earliest supported `time` values.</span></span> <span data-ttu-id="3ecea-403">특정 최소 <xref:System.DateTime> 의 값에 따라 값을 `firstDayOfWeek` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-403">The specific minimum <xref:System.DateTime> value depends on the value of the `firstDayOfWeek` parameter.</span></span>  
  
|<span data-ttu-id="3ecea-404">일정</span><span class="sxs-lookup"><span data-stu-id="3ecea-404">Calendar</span></span>|<span data-ttu-id="3ecea-405">CalendarWeekRule 값</span><span class="sxs-lookup"><span data-stu-id="3ecea-405">CalendarWeekRule value</span></span>|<span data-ttu-id="3ecea-406">양력 날짜 (M/dd/yyyy)</span><span class="sxs-lookup"><span data-stu-id="3ecea-406">Gregorian date (M/dd/yyyy)</span></span>|<span data-ttu-id="3ecea-407">(M/dd/yyyy) 달력의 날짜</span><span class="sxs-lookup"><span data-stu-id="3ecea-407">Date in calendar (M/dd/yyyy)</span></span>|  
|--------------|----------------------------|------------------------------------|--------------------------------------|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-408">1901/2/19부터 1901/25/2</span><span class="sxs-lookup"><span data-stu-id="3ecea-408">2/19/1901 to 2/25/1901</span></span>|<span data-ttu-id="3ecea-409">1901/1/7을 1901 년 1/1 /</span><span class="sxs-lookup"><span data-stu-id="3ecea-409">1/1/1901 to 1/7/1901</span></span>|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-410">1901/2/19부터 1901/22/2</span><span class="sxs-lookup"><span data-stu-id="3ecea-410">2/19/1901 to 2/22/1901</span></span>|<span data-ttu-id="3ecea-411">1901/1/01부터 1/04/1901</span><span class="sxs-lookup"><span data-stu-id="3ecea-411">1/01/1901 to 1/04/1901</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstDay>|<span data-ttu-id="3ecea-412">9/17/1583</span><span class="sxs-lookup"><span data-stu-id="3ecea-412">9/17/1583</span></span>|<span data-ttu-id="3ecea-413">1/01/5344</span><span class="sxs-lookup"><span data-stu-id="3ecea-413">1/01/5344</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-414">1583/9/17부터 1583/9/23</span><span class="sxs-lookup"><span data-stu-id="3ecea-414">9/17/1583 to 9/23/1583</span></span>|<span data-ttu-id="3ecea-415">1/01/5344를 1/07/5344</span><span class="sxs-lookup"><span data-stu-id="3ecea-415">1/01/5344 to 1/07/5344</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-416">1583/9/17부터 1583/9/20</span><span class="sxs-lookup"><span data-stu-id="3ecea-416">9/17/1583 to 9/20/1583</span></span>|<span data-ttu-id="3ecea-417">1/01/5344를 1/04/5344</span><span class="sxs-lookup"><span data-stu-id="3ecea-417">1/01/5344 to 1/04/5344</span></span>|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-418">7/18/0622를 7/24/0622</span><span class="sxs-lookup"><span data-stu-id="3ecea-418">7/18/0622 to 7/24/0622</span></span>|<span data-ttu-id="3ecea-419">1/01/0001 1/07/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-419">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-420">7/18/0622를 7/21/0622</span><span class="sxs-lookup"><span data-stu-id="3ecea-420">7/18/0622 to 7/21/0622</span></span>|<span data-ttu-id="3ecea-421">1/01/0001 1/04/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-421">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-422">1960/1/28부터 1960/2/03</span><span class="sxs-lookup"><span data-stu-id="3ecea-422">1/28/1960 to 2/03/1960</span></span>|<span data-ttu-id="3ecea-423">35/1/01부터 0035/1/07</span><span class="sxs-lookup"><span data-stu-id="3ecea-423">1/01/35 to 1/07/0035</span></span>|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-424">1960/1/28부터 1/31/1960</span><span class="sxs-lookup"><span data-stu-id="3ecea-424">1/28/1960 to 1/31/1960</span></span>|<span data-ttu-id="3ecea-425">1/04/0035를 볼 수 1/01 /</span><span class="sxs-lookup"><span data-stu-id="3ecea-425">1/01/0035 to 1/04/0035</span></span>|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-426">1/01/0001 1/05/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-426">1/01/0001 to 1/05/0001</span></span>|<span data-ttu-id="3ecea-427">1/07/0001를 0001/1/03</span><span class="sxs-lookup"><span data-stu-id="3ecea-427">1/03/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-428">1/01/0001 1/02/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-428">1/01/0001 to 1/02/0001</span></span>|<span data-ttu-id="3ecea-429">1/04/0001를 0001/1/03</span><span class="sxs-lookup"><span data-stu-id="3ecea-429">1/03/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-430">2/14/0918에 2/20/0918</span><span class="sxs-lookup"><span data-stu-id="3ecea-430">2/14/0918 to 2/20/0918</span></span>|<span data-ttu-id="3ecea-431">1/01/0918를 1/07/0918</span><span class="sxs-lookup"><span data-stu-id="3ecea-431">1/01/0918 to 1/07/0918</span></span>|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-432">2/14/0918에 2/17/0918</span><span class="sxs-lookup"><span data-stu-id="3ecea-432">2/14/0918 to 2/17/0918</span></span>|<span data-ttu-id="3ecea-433">1/01/0918를 1/04/0918</span><span class="sxs-lookup"><span data-stu-id="3ecea-433">1/01/0918 to 1/04/0918</span></span>|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-434">0622/21/3에 3/27/0622</span><span class="sxs-lookup"><span data-stu-id="3ecea-434">3/21/0622 to 3/27/0622</span></span>|<span data-ttu-id="3ecea-435">1/01/0001 1/07/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-435">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-436">0622/21/3에 3/24/0622</span><span class="sxs-lookup"><span data-stu-id="3ecea-436">3/21/0622 to 3/24/0622</span></span>|<span data-ttu-id="3ecea-437">1/01/0001 1/04/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-437">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-438">1912/2/18 일까 지/2/24/1912</span><span class="sxs-lookup"><span data-stu-id="3ecea-438">2/18/1912 to 2/24/1912</span></span>|<span data-ttu-id="3ecea-439">1/01/0001 1/07/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-439">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-440">1912/2/18 일까 지/2/21/1912</span><span class="sxs-lookup"><span data-stu-id="3ecea-440">2/18/1912 to 2/21/1912</span></span>|<span data-ttu-id="3ecea-441">1/01/0001 1/04/0001를</span><span class="sxs-lookup"><span data-stu-id="3ecea-441">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="3ecea-442">5/06/1900을 1900 년 4 월 30 일</span><span class="sxs-lookup"><span data-stu-id="3ecea-442">4/30/1900 to 5/06/1900</span></span>|<span data-ttu-id="3ecea-443">1318/1/01부터 1318/1/07</span><span class="sxs-lookup"><span data-stu-id="3ecea-443">1/01/1318 to 1/07/1318</span></span>|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="3ecea-444">1900 년 5 월 03을 1900 년 4 월 30 일</span><span class="sxs-lookup"><span data-stu-id="3ecea-444">4/30/1900 to 5/03/1900</span></span>|<span data-ttu-id="3ecea-445">1318/1/01부터 1/04/1318</span><span class="sxs-lookup"><span data-stu-id="3ecea-445">1/01/1318 to 1/04/1318</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-446">다음 코드 예제에서는 어떻게 결과인 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 에 따라 달라 집니다 합니다 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> 및 <xref:System.Globalization.CalendarWeekRule> 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-446">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and the <xref:System.Globalization.CalendarWeekRule> used.</span></span> <span data-ttu-id="3ecea-447">지정된 된 날짜의 연도 마지막 날 이면 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 해당 연도의 주의 총 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-447">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> <span data-ttu-id="3ecea-448"><see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />보다 이전이거나 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />보다 이후인 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-448">is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.</span></span>  
  
<span data-ttu-id="3ecea-449">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-449">-or-</span></span> 
 <paramref name="firstDayOfWeek" /> <span data-ttu-id="3ecea-450">유효한 <see cref="T:System.DayOfWeek" /> 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-450">is not a valid <see cref="T:System.DayOfWeek" /> value.</span></span>  
  
<span data-ttu-id="3ecea-451">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-451">-or-</span></span> 
 <paramref name="rule" /> <span data-ttu-id="3ecea-452">유효한 <see cref="T:System.Globalization.CalendarWeekRule" /> 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-452">is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public abstract int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetYear : DateTime -&gt; int" Usage="calendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="3ecea-453">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-453">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="3ecea-454">파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 연도를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-454">When overridden in a derived class, returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ecea-455"><paramref name="time" />의 연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-455">An integer that represents the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ecea-456">다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-456">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapDay">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-457">파생 클래스에 재정의될 때 지정된 날짜가 윤일인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-457">When overridden in a derived class, determines whether a date is a leap day.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapDay (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapDay (year As Integer, month As Integer, day As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapDay(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int -&gt; bool&#xA;override this.IsLeapDay : int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-458">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-458">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-459">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-459">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="3ecea-460">일을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-460">A positive integer that represents the day.</span></span></param>
        <summary><span data-ttu-id="3ecea-461">현재 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-461">Determines whether the specified date in the current era is a leap day.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="3ecea-462">지정된 날짜가 윤일인 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-462">if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-463">하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일)</span><span class="sxs-lookup"><span data-stu-id="3ecea-463">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="3ecea-464">각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-464">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="3ecea-465">윤 일은 윤년 에서만에서 발생 하는 일입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-465">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="3ecea-466">예를 들어 일반 달력에서 2 월 29 일이만 윤 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-466">For example, in the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-467">다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-467">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-468">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-468">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-469">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-469">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-470">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-470">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-471">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-471">-or-</span></span> 
 <paramref name="day" /> <span data-ttu-id="3ecea-472">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-472">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-473">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-473">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-474">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-474">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="3ecea-475">일을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-475">A positive integer that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-476">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-476">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="3ecea-477">파생 클래스에 재정의될 때 지정된 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-477">When overridden in a derived class, determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="3ecea-478">지정된 날짜가 윤일인 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-478">if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-479">하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일)</span><span class="sxs-lookup"><span data-stu-id="3ecea-479">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="3ecea-480">각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-480">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="3ecea-481">윤 일은 윤년 에서만에서 발생 하는 일입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-481">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="3ecea-482">예를 들어 일반 달력에서 2 월 29 일이만 윤 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-482">For example, in the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-483">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-483">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-484">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-484">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-485">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-485">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-486">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-486">-or-</span></span> 
 <paramref name="day" /> <span data-ttu-id="3ecea-487">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-487">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-488">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-488">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="3ecea-489">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-489">is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ecea-490">파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-490">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="3ecea-491">지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-491">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-492">파생 클래스에 재정의될 때 지정된 월이 윤월인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-492">When overridden in a derived class, determines whether a month is a leap month.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapMonth (year As Integer, month As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int -&gt; bool&#xA;override this.IsLeapMonth : int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-493">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-493">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-494">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-494">A positive integer that represents the month.</span></span></param>
        <summary><span data-ttu-id="3ecea-495">현재 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-495">Determines whether the specified month in the specified year in the current era is a leap month.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="3ecea-496">지정된 월이 윤월인 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-496">if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-497">하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일)</span><span class="sxs-lookup"><span data-stu-id="3ecea-497">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="3ecea-498">각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-498">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="3ecea-499">윤 월은 윤년 에서만에서 발생 하는 한 달 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-499">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="3ecea-500">예를 들어 히브리식 달력에서 아 달 트는 윤 월입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-500">For example, in the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-501">다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-501">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-502">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-502">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-503">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-503">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-504">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-504">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-505">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-505">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-506">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-506">A positive integer that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-507">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-507">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="3ecea-508">파생 클래스에 재정의될 때 지정된 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-508">When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="3ecea-509">지정된 월이 윤월인 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-509">if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-510">하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일)</span><span class="sxs-lookup"><span data-stu-id="3ecea-510">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="3ecea-511">각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-511">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="3ecea-512">윤 월은 윤년 에서만에서 발생 하는 한 달 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-512">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="3ecea-513">예를 들어 히브리식 달력에서 아 달 트는 윤 월입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-513">For example, in the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-514">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-514">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-515">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-515">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-516">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-516">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-517">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-517">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="3ecea-518">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-518">is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ecea-519">파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-519">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="3ecea-520">지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-520">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-521">파생 클래스에 재정의될 때 지정된 연도가 윤년인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-521">When overridden in a derived class, determines whether a year is a leap year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int -&gt; bool&#xA;override this.IsLeapYear : int -&gt; bool" Usage="calendar.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-522">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-522">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="3ecea-523">지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-523">Determines whether the specified year in the current era is a leap year.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="3ecea-524">지정된 연도가 윤년인 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-524">if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-525">하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일)</span><span class="sxs-lookup"><span data-stu-id="3ecea-525">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="3ecea-526">각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-526">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ecea-527">다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-527">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-528">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-528">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int * int -&gt; bool" Usage="calendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-529">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-529">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-530">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-530">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="3ecea-531">파생 클래스에 재정의될 때 지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-531">When overridden in a derived class, determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="3ecea-532">지정된 연도가 윤년인 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-532">if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-533">하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일)</span><span class="sxs-lookup"><span data-stu-id="3ecea-533">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="3ecea-534">각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-534">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-535">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-535">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-536">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-536">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="3ecea-537">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-537">is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ecea-538">파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-538">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="3ecea-539">지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-539">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.Calendar.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-540">이 <see cref="T:System.Globalization.Calendar" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-540">Gets a value indicating whether this <see cref="T:System.Globalization.Calendar" /> object is read-only.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="3ecea-541">이 경우 <see cref="T:System.Globalization.Calendar" /> 개체는 읽기 전용 이면이 고, 그렇지 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-541">if this <see cref="T:System.Globalization.Calendar" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-542">이 <see cref="T:System.Globalization.Calendar" /> 개체에서 지원하는 마지막 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-542">Gets the latest date and time supported by this <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <value><span data-ttu-id="3ecea-543">이 달력에서 지원하는 마지막 날짜와 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-543">The latest date and time supported by this calendar.</span></span> <span data-ttu-id="3ecea-544">기본값은 <see cref="F:System.DateTime.MaxValue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-544">The default is <see cref="F:System.DateTime.MaxValue" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MinSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-545">이 <see cref="T:System.Globalization.Calendar" /> 개체에서 지원하는 시작 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-545">Gets the earliest date and time supported by this <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <value><span data-ttu-id="3ecea-546">이 달력에서 지원하는 시작 날짜와 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-546">The earliest date and time supported by this calendar.</span></span> <span data-ttu-id="3ecea-547">기본값은 <see cref="F:System.DateTime.MinValue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-547">The default is <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.Calendar ReadOnly (System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.Calendar ReadOnly(class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::Calendar ^ ReadOnly(System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.Calendar -&gt; System.Globalization.Calendar" Usage="System.Globalization.Calendar.ReadOnly calendar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="calendar"><span data-ttu-id="3ecea-548"><see cref="T:System.Globalization.Calendar" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-548">A <see cref="T:System.Globalization.Calendar" /> object.</span></span></param>
        <summary><span data-ttu-id="3ecea-549">지정된 <see cref="T:System.Globalization.Calendar" /> 개체의 읽기 전용 버전을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-549">Returns a read-only version of the specified <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <returns><span data-ttu-id="3ecea-550"><paramref name="calendar" />가 읽기 전용인 경우 <paramref name="calendar" /> 매개 변수로 지정된 <see cref="T:System.Globalization.Calendar" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-550">The <see cref="T:System.Globalization.Calendar" /> object specified by the <paramref name="calendar" /> parameter, if <paramref name="calendar" /> is read-only.</span></span>  
  
<span data-ttu-id="3ecea-551">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-551">-or-</span></span> 
<span data-ttu-id="3ecea-552"><paramref name="calendar" />가 읽기 전용이 아닌 경우 <paramref name="calendar" />로 지정된 <see cref="T:System.Globalization.Calendar" /> 개체의 읽기 전용 멤버 수준 복제본입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-552">A read-only memberwise clone of the <see cref="T:System.Globalization.Calendar" /> object specified by <paramref name="calendar" />, if <paramref name="calendar" /> is not read-only.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="calendar" /> <span data-ttu-id="3ecea-553"><see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-553">is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ecea-554">파생 클래스에 재정의될 때 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-554">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is set to the specified date and time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int -&gt; DateTime&#xA;override this.ToDateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-555">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-555">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-556">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-556">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="3ecea-557">일을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-557">A positive integer that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="3ecea-558">시간을 나타내는 0에서 23 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-558">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="3ecea-559">분을 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-559">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="3ecea-560">초를 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-560">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="3ecea-561">밀리초를 나타내는 0에서 999 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-561">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <summary><span data-ttu-id="3ecea-562">현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-562">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-563">현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-563">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="3ecea-564">이 메서드는 날짜 및 시간을 기준으로 특정 달력의 현재 연대를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-564">This method returns a date and time based on the current era of a particular calendar.</span></span> <span data-ttu-id="3ecea-565">에 대 한 합니다 <xref:System.Globalization.JapaneseCalendar> 고 <xref:System.Globalization.JapaneseLunisolarCalendar>,이 메서드를 호출 하는 emperor 통치에 따라 여러 연대를 지 원하는 연대를 변경 하는 경우 의도 하지 않은 날짜를 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-565">For the <xref:System.Globalization.JapaneseCalendar> and <xref:System.Globalization.JapaneseLunisolarCalendar>, which support multiple eras based on the reign of the emperor, calling this method can produce an unintended date when an era changes.</span></span> <span data-ttu-id="3ecea-566">이러한 달력 중 하나를 사용 하 여 날짜를 인스턴스화할 때 호출 하는 것이 좋습니다 합니다 <xref:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)?displayProperty=nameWithType> 나 [JapaneseLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)](xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)) 메서드 및 명시적으로 연대를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-566">When instantiating a date using either of these calendars, we recommend that you call the <xref:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)?displayProperty=nameWithType> or [JapaneseLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)](xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)) method and explicitly specify an era.</span></span> 

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-567">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-567">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-568">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-568">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-569">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-569">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-570">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-570">-or-</span></span> 
 <paramref name="day" /> <span data-ttu-id="3ecea-571">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-571">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-572">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-572">-or-</span></span> 
 <paramref name="hour" /> <span data-ttu-id="3ecea-573">0보다 작거나 23보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-573">is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="3ecea-574">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-574">-or-</span></span> 
 <paramref name="minute" /> <span data-ttu-id="3ecea-575">0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-575">is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="3ecea-576">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-576">-or-</span></span> 
 <paramref name="second" /> <span data-ttu-id="3ecea-577">0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-577">is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="3ecea-578">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-578">-or-</span></span> 
 <paramref name="millisecond" /> <span data-ttu-id="3ecea-579">0보다 작거나 999보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-579">is less than zero or greater than 999.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="3ecea-580">예제: Calendar Week Range 유틸리티</span><span class="sxs-lookup"><span data-stu-id="3ecea-580">Sample: Calendar Week Range Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-581">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-581">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="3ecea-582">월을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-582">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="3ecea-583">일을 나타내는 양의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-583">A positive integer that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="3ecea-584">시간을 나타내는 0에서 23 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-584">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="3ecea-585">분을 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-585">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="3ecea-586">초를 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-586">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="3ecea-587">밀리초를 나타내는 0에서 999 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-587">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="3ecea-588">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-588">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="3ecea-589">파생 클래스에 재정의될 때 지정된 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-589">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="3ecea-590">현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-590">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-591"><xref:System.Globalization.Calendar.ToDateTime%2A> 방법은 현재 달력의 날짜를 양력 날짜를 변환할 수 있습니다 때문에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-591">The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="3ecea-592">양력 날짜 이후에 사용할 수, 예를 들어, 특정 달력의 동일한 날짜를 만들거나 다른 달력의 날짜를 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-592">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-593">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-593">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-594">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-594">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="3ecea-595">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-595">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-596">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-596">-or-</span></span> 
 <paramref name="day" /> <span data-ttu-id="3ecea-597">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-597">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="3ecea-598">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-598">-or-</span></span> 
 <paramref name="hour" /> <span data-ttu-id="3ecea-599">0보다 작거나 23보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-599">is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="3ecea-600">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-600">-or-</span></span> 
 <paramref name="minute" /> <span data-ttu-id="3ecea-601">0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-601">is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="3ecea-602">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-602">-or-</span></span> 
 <paramref name="second" /> <span data-ttu-id="3ecea-603">0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-603">is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="3ecea-604">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-604">-or-</span></span> 
 <paramref name="millisecond" /> <span data-ttu-id="3ecea-605">0보다 작거나 999보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-605">is less than zero or greater than 999.</span></span>  
  
<span data-ttu-id="3ecea-606">또는</span><span class="sxs-lookup"><span data-stu-id="3ecea-606">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="3ecea-607">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-607">is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ecea-608">파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-608">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="3ecea-609">지원에 한 가지 방법은 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 의 첫 번째 요소에 저장 된 값으로 대체 하는 것을 <see cref="P:System.Globalization.Calendar.Eras" /> 값인 일정의 현재 연대에 대 한 속성 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-609">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in the first element of the <see cref="P:System.Globalization.Calendar.Eras" /> property array, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="3ecea-610">예제: Calendar Week Range 유틸리티</span><span class="sxs-lookup"><span data-stu-id="3ecea-610">Sample: Calendar Week Range Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public virtual int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member ToFourDigitYear : int -&gt; int&#xA;override this.ToFourDigitYear : int -&gt; int" Usage="calendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="3ecea-611">변환할 연도를 나타내는 두 자릿수 또는 네 자릿수의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-611">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="3ecea-612"><see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> 속성으로 해당 세기를 확인하여 지정된 연도를 네 자릿수 연도로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-612">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="3ecea-613"><paramref name="year" />를 네 자릿수로 표시하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-613">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> <span data-ttu-id="3ecea-614">두 자리 연도로 나타낼 수 있는 100 년 범위의 마지막 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-614">is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="3ecea-615">두 자리를 찾아 확인 세기 `year` 100 년 범위의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-615">The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range.</span></span> <span data-ttu-id="3ecea-616">예를 들어 경우 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> 설정할지 2029 100 년 범위의 1930에서과 2029로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-616">For example, if <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="3ecea-617">따라서 2 자리 값은 29 2029로 해석 됩니다 1930과 30 2 자리 값을 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-617">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="3ecea-618">하는 경우 `year` 100의 값 보다 크거나 같은 경우는 `year` 그대로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-618">If `year` is greater than or equal to 100, the value of `year` is returned unchanged.</span></span>  
  
 <xref:System.Globalization.Calendar.ToFourDigitYear%2A> <span data-ttu-id="3ecea-619">두 자리 연도 또는 4 자리 연도 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-619">supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="3ecea-620">두 자리 연도 값 (100 미만)를 전달 하면이 값에 따라 4 자리 값을 변환할 메서드는 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> 해당 세기를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-620">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="3ecea-621">지원 되는 일정 범위 내에 있는 네 자리 연도 값을 제공 하는 응용 프로그램 <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, 메서드는 실제 입력된 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-621">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="3ecea-622">메서드를 지원 되는 달력 범위를 벗어난 네 자릿수 값을 제공 하는 응용 프로그램 또는 음수 값을 제공 하는 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-622">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="3ecea-623">달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="3ecea-623">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public virtual int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ecea-624">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-624">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="3ecea-625">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-625">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecea-626">이 속성에는 2 자리 연도를를 4 자리 연도 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-626">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="3ecea-627">예를 들어이 속성이 2029, 100 년 범위의 경우 1930에서 2029 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-627">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="3ecea-628">따라서 2 자리 값은 29 2029로 해석 됩니다 1930과 30 2 자리 값을 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-628">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="3ecea-629">이 속성의 초기 값은 제어판의 국가 및 언어 옵션 영역에서 설정에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-629">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="3ecea-630">그러나 정보 수명 동안 변경할 수는 <xref:System.AppDomain>합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-630">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="3ecea-631"><xref:System.Globalization.Calendar> 클래스 시스템 설정에서 변경 내용을 검색 하지 않는 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-631">The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically.</span></span> <span data-ttu-id="3ecea-632">이 속성의 초기 값은 정의한 기본값 달력 국가 및 언어 옵션에서 지원 되지 않으면는 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-632">If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class.</span></span>  
  
 <span data-ttu-id="3ecea-633">응용 프로그램을 99로 문자 그대로 해석 되도록 2 자리 연도이 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-633">Your application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="3ecea-634">예를 들어이 속성을 설정 하 여 99를 100 년 범위의 방법은 (없습니다: 대부분의 일정에 대 한 유효한 값) 0에서 99입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-634">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="3ecea-635">따라서 2 자리 숫자 값이 30 30으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-635">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ecea-636">현재 <see cref="T:System.Globalization.Calendar" /> 개체가 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="3ecea-636">The current <see cref="T:System.Globalization.Calendar" /> object is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>