<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf8a178e7c0ab4143fcc13571ce169e78289e571" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57932431" /></Metadata><TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fcb00-101">포커스 범위를 확인 및 설정하고 범위 내에서 포커스가 있는 요소를 설정하기 위한 정적 메서드, 연결된 속성 및 이벤트의 집합을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-102">Windows Presentation Foundation (WPF)의 두 가지 개념이 있습니다 포커스와 관련 된: 키보드 포커스와 논리 포커스가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="fcb00-103">키보드 포커스는 키보드 입력을 받고 현재 요소와 관련이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="fcb00-104">키보드 포커스가 있는 요소가 하나만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="fcb00-105">키보드 포커스를 사용 하 여이 요소에 <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="fcb00-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> 키보드 포커스가 있는 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="fcb00-107">논리 포커스와 관련 된 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 특정 포커스 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="fcb00-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="fcb00-108">포커스 범위는 추적 하는 컨테이너 요소는 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 해당 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="fcb00-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="fcb00-109">기본적으로 <xref:System.Windows.Window> 클래스는 마찬가지로 포커스 범위는 <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, 및 <xref:System.Windows.Controls.ToolBar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="fcb00-110">가 포커스 범위는 요소가 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="fcb00-111">논리 포커스를 가진 요소가 여러 개 있을 수 있지만 단일 포커스 범위 내에서 논리적 포커스가 있는 요소가 하나만 존재할 합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="fcb00-112">논리적 포커스가 있는 요소가 키보드 포커스를 반드시 있지만 키보드 포커스가 있는 요소가 논리 포커스를 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="fcb00-113">포커스 범위의 포커스 범위를 정의 하는 것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="fcb00-114">부모 포커스 범위 및 자식 포커스 범위를 모두 포함할 수 있습니다이 경우에 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fcb00-115">다음 시나리오는 WPF 응용 프로그램에서 키보드 포커스와 논리 포커스가 변경 하는 방법을 보여 줍니다.는 <xref:System.Windows.Window> 사용 하 여는 <xref:System.Windows.Controls.TextBox> 및 <xref:System.Windows.Controls.Menu> 있는 <xref:System.Windows.Controls.MenuItem>입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="fcb00-116">키보드 포커스를 변경 하는 경우는 <xref:System.Windows.Controls.TextBox> 에 <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TextBox> 키보드 포커스를 잃지에 대 한 논리적 포커스를 유지 하지만 <xref:System.Windows.Window> 포커스 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="fcb00-117">합니다 <xref:System.Windows.Controls.MenuItem> 키보드 포커스 및에 대 한 논리 포커스가 <xref:System.Windows.Controls.Menu> 포커스 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="fcb00-118">루트에 키보드 포커스를 반환 하면 <xref:System.Windows.Window>, 요소 <xref:System.Windows.Window> 논리적 포커스가 있는 포커스 범위에는 경우에 키보드 포커스를 받습니다는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="fcb00-119"><xref:System.Windows.Controls.TextBox> 키보드 포커스와 논리 포커스가 설정 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="fcb00-120">합니다 <xref:System.Windows.Controls.MenuItem> 에 대 한 논리적 포커스를 유지 하지만 키보드 포커스를 잃을 <xref:System.Windows.Controls.Menu> 포커스 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="fcb00-121">기본값인 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 에 <xref:System.Windows.Window>를 <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, 및 <xref:System.Windows.Controls.ContextMenu> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="fcb00-122">포커스에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md) 하며 [포커스 개요](~/docs/framework/wpf/advanced/focus-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-123">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="fcb00-124">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-124">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="fcb00-125"><see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-126">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="fcb00-127">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-127">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="fcb00-128"><see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fcb00-129">이 속성이 연결된 요소에 논리적 포커스가 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-129">Determines whether the element this property is attached to has logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-130"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> 특정 포커스 범위에 대 한 논리 포커스가 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-130">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="fcb00-131">이 개체 수 또는 키보드 포커스가 없을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-131">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="fcb00-132">키보드 포커스는 키보드 입력을 받는 요소를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-132">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="fcb00-133">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-133">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="fcb00-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> 및 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 가져오고 지정된 된 포커스 범위 내에서 포커스가 있는 요소를 설정할 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> and <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> can be used to get and set the focused element within the specified focus scope.</span></span>  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb00-135">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="fcb00-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb00-136">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="fcb00-136">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|<span data-ttu-id="fcb00-137">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="fcb00-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb00-138">없음</span><span class="sxs-lookup"><span data-stu-id="fcb00-138">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fcb00-139">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Windows.Controls.Button> 포커스가 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-139">The following example shows how to make a <xref:System.Windows.Controls.Button> the focused element.</span></span>  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb00-140"><see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> 연결된 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-140">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-141">지정된 포커스 범위 내에서 논리적 포커스가 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-141">The element with logical focus in the specified focus scope.</span></span></param>
        <summary><span data-ttu-id="fcb00-142">지정된 포커스 범위 내에서 논리적 포커스가 있는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-142">Gets the element with logical focus within the specified focus scope.</span></span></summary>
        <returns><span data-ttu-id="fcb00-143">지정된 포커스 범위 내에서 논리적 포커스가 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-143">The element in the specified focus scope with logical focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-144"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> 특정 포커스 범위에 대 한 논리 포커스가 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-144">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="fcb00-145">이 개체 수 또는 키보드 포커스가 없을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-145">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="fcb00-146">키보드 포커스는 키보드 입력을 받는 요소를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-146">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="fcb00-147">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-147">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="fcb00-148">하는 경우 `element` 아닙니다 포커스 범위에서이 메서드는 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-148">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="fcb00-149">사용 하 여 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>지정 된 포커스 범위 내에서 논리적 포커스가 있는 요소를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-149">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb00-150">다음 예제에서는 논리 포커스가 있는 요소를 사용 하 여 설정 합니다 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 논리적 포커스가 있는 요소를 사용 하 여 가져옵니다는 <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb00-150">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcb00-151"><paramref name="element" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-151"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-152">가장 가까운 포커스 범위를 가져올 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-152">The element to get the closest focus scope for.</span></span></param>
        <summary><span data-ttu-id="fcb00-153"><see cref="P:System.Windows.Input.FocusManager.IsFocusScope" />가 <see langword="true" />로 설정된 지정된 요소의 가장 가까운 상위 요소를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-153">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="fcb00-154">지정된 요소에 대한 포커스 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-154">The focus scope for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-155">기본값인 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 에 <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>를 <xref:System.Windows.Controls.ContextMenu> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-155">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="fcb00-156">포커스 범위는 추적 하는 컨테이너 요소는 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 해당 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="fcb00-156">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="fcb00-157">기본적으로 <xref:System.Windows.Window> 클래스는 마찬가지로 포커스 범위는 <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, 및 <xref:System.Windows.Controls.ToolBar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-157">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="fcb00-158">가 포커스 범위는 요소가 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-158">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="fcb00-159">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-159">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcb00-160"><paramref name="element" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-160"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-161">연결된 속성을 읽어올 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-161">The element from which to read the attached property.</span></span></param>
        <summary><span data-ttu-id="fcb00-162">지정된 <see cref="T:System.Windows.DependencyObject" />가 포커스 범위인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-162">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span></span></summary>
        <returns><span data-ttu-id="fcb00-163">지정된 요소에서 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" />가 <see langword="true" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-163"><see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-164">포커스 범위는 추적 하는 컨테이너 요소는 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 해당 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="fcb00-164">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="fcb00-165">기본적으로 <xref:System.Windows.Window> 클래스는 마찬가지로 포커스 범위는 <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, 및 <xref:System.Windows.Controls.ToolBar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-165">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="fcb00-166">가 포커스 범위는 요소가 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-166">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="fcb00-167">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-167">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fcb00-168">요소가 포커스를 받을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-168">Occurs when an element gets focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb00-169"><see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-169">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fcb00-170">이 속성이 연결된 요소가 포커스 범위인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-170">Determines whether the element this property is attached to is a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-171">포커스 범위는 추적 하는 컨테이너 요소는 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 해당 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="fcb00-171">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="fcb00-172">기본적으로 <xref:System.Windows.Window> 클래스는 마찬가지로 포커스 범위는 <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, 및 <xref:System.Windows.Controls.ToolBar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-172">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="fcb00-173">가 포커스 범위는 요소가 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-173">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="fcb00-174">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-174">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb00-175">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="fcb00-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb00-176">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="fcb00-176">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|<span data-ttu-id="fcb00-177">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="fcb00-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb00-178">없음</span><span class="sxs-lookup"><span data-stu-id="fcb00-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fcb00-179">다음 예에서는 한 <xref:System.Windows.Controls.StackPanel> 포커스 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-179">The following example makes a <xref:System.Windows.Controls.StackPanel> a focus scope.</span></span>  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb00-180"><see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 연결된 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-180">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-181">기본값인 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 에 <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>를 <xref:System.Windows.Controls.ContextMenu> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-181">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="fcb00-182">포커스 범위는 추적 하는 컨테이너 요소는 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 해당 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="fcb00-182">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="fcb00-183">기본적으로 <xref:System.Windows.Window> 클래스는 마찬가지로 포커스 범위는 <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, 및 <xref:System.Windows.Controls.ToolBar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-183">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="fcb00-184">가 포커스 범위는 요소가 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-184">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="fcb00-185">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-185">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fcb00-186">요소가 포커스를 잃을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-186">Occurs when an element loses focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb00-187"><see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-187">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-188">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-188">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="fcb00-189">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-189">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="fcb00-190"><see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-190">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-191">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-191">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="fcb00-192">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-192">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="fcb00-193"><see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-193">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-194">지정된 요소를 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />로 만들 포커스 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-194">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span></span></param>
        <param name="value"><span data-ttu-id="fcb00-195">논리적 포커스를 제공할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-195">The element to give logical focus to.</span></span></param>
        <summary><span data-ttu-id="fcb00-196">지정된 요소에 논리적 포커스를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-196">Sets logical focus on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-197"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> 특정 포커스 범위에 대 한 논리 포커스가 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-197">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="fcb00-198">이 개체 수 또는 키보드 포커스가 없을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-198">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="fcb00-199">키보드 포커스는 키보드 입력을 받는 요소를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-199">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="fcb00-200">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-200">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="fcb00-201">상위 요소에 포커스 범위의 포커스 범위를 지정 하는 것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-201">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="fcb00-202">예를 들어 경우는 <xref:System.Windows.Controls.StackPanel> 포커스 범위와 해당 부모는 <xref:System.Windows.Window> 가 포커스 범위를를 <xref:System.Windows.Controls.TextBox> 자식의 <xref:System.Windows.Controls.StackPanel> 지정할 수는 <xref:System.Windows.Window> 를 호출할 때 포커스 범위로 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb00-202">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="fcb00-203">합니다 <xref:System.Windows.Controls.TextBox> 이면 <xref:System.Windows.Input.FocusManager.FocusedElement%2A> 둘 다에 대해 합니다 <xref:System.Windows.Window> 포커스 범위 및 <xref:System.Windows.Controls.StackPanel> 포커스 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-203">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="fcb00-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 지정된 된 포커스 범위에서 지정 된 요소가 논리 포커스를 제공 하는 및 요소가 키보드 포커스를 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb00-205">다음 예제에서는 논리 포커스가 있는 요소를 사용 하 여 설정 합니다 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 논리적 포커스가 있는 요소를 사용 하 여 가져옵니다는 <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb00-205">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fcb00-206">포커스 범위를 만들 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-206">The element to make a focus scope.</span></span></param>
        <param name="value"><span data-ttu-id="fcb00-207"><paramref name="element" />가 포커스 범위이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-207"><see langword="true" /> if <paramref name="element" /> is a focus scope; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fcb00-208">지정된 <see cref="T:System.Windows.DependencyObject" />를 포커스 범위로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-208">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb00-209">포커스 범위는 추적 하는 컨테이너 요소는 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 해당 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="fcb00-209">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="fcb00-210">기본적으로 <xref:System.Windows.Window> 클래스는 마찬가지로 포커스 범위는 <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, 및 <xref:System.Windows.Controls.ToolBar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-210">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="fcb00-211">가 포커스 범위는 요소가 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-211">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="fcb00-212">포커스, 키보드 포커스와 논리 포커스가에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-212">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb00-213">다음 예제에서는 요소를 포커스 범위로 사용 하 여 <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="fcb00-213">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>