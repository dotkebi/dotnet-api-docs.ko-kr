<Type Name="Stylus" FullName="System.Windows.Input.Stylus">
  <Metadata><Meta Name="ms.openlocfilehash" Value="068fcc542ea86aaf844fe31317674f076fb4a5c7" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56392620" /></Metadata><TypeSignature Language="C#" Value="public static class Stylus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Stylus extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Stylus" />
  <TypeSignature Language="VB.NET" Value="Public Class Stylus" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stylus abstract sealed" />
  <TypeSignature Language="F#" Value="type Stylus = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9f0e0-101">태블릿 펜에 대한 일반 정보에 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-101">Provides access to general information about a tablet pen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f0e0-102">다음 예제에서는 스타일러스 범위를 벗어날 경우에, 사용 된 스타일러스의 좌표를 기록 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-102">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="9f0e0-103">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및를 <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, 및 <xref:System.Windows.Input.Stylus.StylusMove> 이벤트는 이벤트 처리기에 연결 되어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-103">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-104">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-104">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-105">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-105">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-106"><see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-106">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-107">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-108">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-108">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-109"><see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-109">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-110">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-111">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-111">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-112"><see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-112">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-113">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-114">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-114">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-115"><see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-115">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-116">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-117">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-117">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-118"><see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-118">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-119">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-120">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-120">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-121"><see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-121">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-122">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-123">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-123">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-124"><see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-124">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-125">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-126">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-126">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-127"><see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-127">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-128">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-129">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-129">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-130"><see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-130">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-131">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-132">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-132">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-133"><see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-133">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-134">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-135">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-135">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-136"><see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-136">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-137">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-138">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-138">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-139"><see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-139">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-140">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-141">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-141">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-142"><see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-142">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-143">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-144">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-144">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-145"><see cref="E:System.Windows.Input.Stylus.StylusDown" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-145">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-146">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-147">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-147">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-148"><see cref="E:System.Windows.Input.Stylus.StylusEnter" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-148">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-149">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-150">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-150">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-151"><see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-151">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-152">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-153">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-153">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-154"><see cref="E:System.Windows.Input.Stylus.StylusInRange" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-154">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-155">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-155">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-156">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-156">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-157"><see cref="E:System.Windows.Input.Stylus.StylusLeave" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-157">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-158">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-158">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-159">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-159">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-160"><see cref="E:System.Windows.Input.Stylus.StylusMove" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-160">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-161">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-161">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-162">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-162">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-163"><see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-163">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-164">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-164">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-165">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-165">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-166"><see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-166">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-167">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-167">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-168">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-168">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="9f0e0-169"><see cref="E:System.Windows.Input.Stylus.StylusUp" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-169">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-170">특정 요소에 바인딩된 스타일러스를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-170">Captures the stylus that is bound to a particular element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Stylus.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-171">스타일러스를 캡처할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-171">The element to capture the stylus to.</span></span></param>
        <summary><span data-ttu-id="9f0e0-172">지정한 요소에 스타일러스를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-172">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="9f0e0-173">스타일러스가 <paramref name="element" />에 캡처되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-173"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-174">사용 합니다 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> 되어 있는지 확인 하는 방법 `element` 커서가 요소의 경계를 벗어날 경우에 스타일러스 이벤트를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-174">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="9f0e0-175">스타일러스를 해제 하려면 호출 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> 사용 하 여 합니다 <xref:System.Windows.Input.CaptureMode> 로 <xref:System.Windows.Input.CaptureMode.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-175">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="9f0e0-176">합니다 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> 메서드가 반환 `false` 경우 `element` 보이지 않거나 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-176">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-177">다음 예제에서는 스타일러스 범위를 벗어날 경우에, 사용 된 스타일러스의 좌표를 기록 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-177">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="9f0e0-178">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및를 <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, 및 <xref:System.Windows.Input.Stylus.StylusMove> 이벤트는 이벤트 처리기에 연결 되어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-178">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Stylus.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-179">스타일러스를 캡처할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-179">The element to capture the stylus to.</span></span></param>
        <param name="captureMode"><span data-ttu-id="9f0e0-180"><see cref="T:System.Windows.Input.CaptureMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-180">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</span></span></param>
        <summary><span data-ttu-id="9f0e0-181">지정한 요소에 스타일러스를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-181">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="9f0e0-182">스타일러스가 <paramref name="element" />에 캡처되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-182"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-183">사용 합니다 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> 되어 있는지 확인 하는 방법 `element` 커서가 요소의 경계를 벗어날 경우에 스타일러스 이벤트를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-183">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="9f0e0-184">스타일러스를 해제 하려면 호출 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> 사용 하 여 합니다 <xref:System.Windows.Input.CaptureMode> 로 <xref:System.Windows.Input.CaptureMode.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-184">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="9f0e0-185">합니다 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> 메서드가 반환 `false` 경우 `element` 보이지 않거나 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-185">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-186">다음 예제에서는 스타일러스 범위를 벗어날 경우에, 사용 된 스타일러스의 좌표를 기록 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-186">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="9f0e0-187">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및를 <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, 및 <xref:System.Windows.Input.Stylus.StylusMove> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-187">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-188">스타일러스가 바인딩된 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-188">Gets the element to which the stylus is bound.</span></span></summary>
        <value><span data-ttu-id="9f0e0-189">스타일러스가 바인딩된 <see cref="T:System.Windows.IInputElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-189">The <see cref="T:System.Windows.IInputElement" /> to which the stylus is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f0e0-190">다음 예제에서는 사용자가 디지타이저에서 스타일러스를 터치 하면 스타일러스 캡처되지 않습니다을 보장 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-190">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the digitizer.</span></span> <span data-ttu-id="9f0e0-191">이 가정은 <xref:System.Windows.Input.Stylus.PreviewStylusDown> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-191">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStylusDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusDevice CurrentStylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.StylusDevice CurrentStylusDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentStylusDevice As StylusDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::StylusDevice ^ CurrentStylusDevice { System::Windows::Input::StylusDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentStylusDevice : System.Windows.Input.StylusDevice" Usage="System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-192">현재 사용 중인 스타일러스를 나타내는 스타일러스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-192">Gets the stylus that represents the stylus currently in use.</span></span></summary>
        <value><span data-ttu-id="9f0e0-193">현재 사용 중인 스타일러스를 나타내는 <see cref="T:System.Windows.Input.StylusDevice" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-193">The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus currently in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f0e0-194">다음 예제에는 반전 된 스타일러스를 사용 하 여 선택한 텍스트를 지우는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-194">The following example demonstrates how to erase the text that is selected with an inverted stylus.</span></span> <span data-ttu-id="9f0e0-195">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.StylusUpEvent> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusUpEvent> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[StylusSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-196">스타일러스 바로 아래에 있는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-196">Gets the element that is directly beneath the stylus.</span></span></summary>
        <value><span data-ttu-id="9f0e0-197">스타일러스 바로 아래에 있는 <see cref="T:System.Windows.IInputElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-197">The <see cref="T:System.Windows.IInputElement" /> that is directly beneath the stylus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f0e0-198">다음 예제는 스타일러스 아래 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-198">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="9f0e0-199">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.StylusInAirMove> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-199">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsFlicksEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFlicksEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFlicksEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFlicksEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFlicksEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsFlicksEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-200">긋기가 사용되는지 여부를 확인할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-200">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether flicks are enabled.</span></span></param>
        <summary><span data-ttu-id="9f0e0-201">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-201">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="9f0e0-202">지정한 요소에서 긋기가 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-202"><see langword="true" /> if the specified element has flicks enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-203">Windows Vista 제스처를 가능한 시스템 제스처 중 하나는 탐색 또는 바로 가기 명령에 매핑될 수 있는 간단한, 빠른, 직선 스트로크입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-203">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="9f0e0-204">기본적으로 제스처에서 해제 되어는 <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, 및 <xref:System.Windows.Controls.Primitives.ScrollBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-204">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="9f0e0-205">긋기가 다른 모든 컨트롤에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-205">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-206">다음 예제에서는 제스처 사용 되는지 여부를 결정 하는 방법에 설명 된 <xref:System.Windows.Controls.Canvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-206">The following example demonstrates how to determine whether flicks are enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#6)]
 [!code-vb[GestureSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsPressAndHoldEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsPressAndHoldEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsPressAndHoldEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsPressAndHoldEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsPressAndHoldEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-207">누르고 있기가 사용되는지 여부를 확인할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-207">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether press and hold is enabled.</span></span></param>
        <summary><span data-ttu-id="9f0e0-208">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-208">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="9f0e0-209">지정한 요소에서 누르고 있기가 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-209"><see langword="true" /> if the specified element has press and hold enabled; otherwise, <see langword="false" />;</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f0e0-210">다음 예제에서는 누른 키를 눌러를 사용 하도록 설정 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.Slider>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-210">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="9f0e0-211">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.Slider> 호출 `horizontalSlider1`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-211">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTapFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTapFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTapFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTapFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTapFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-212">누르기 피드백이 사용되는지 여부를 확인할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-212">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether tap feedback enabled.</span></span></param>
        <summary><span data-ttu-id="9f0e0-213">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-213">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="9f0e0-214">지정한 요소에서 누르기 피드백이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-214"><see langword="true" /> if the specified element has tap feedback enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-215">Windows Vista에서는 간단한 애니메이션을 사용자가 컨트롤을 누를 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-215">In Windows Vista, a short animation occurs when the user taps the control.</span></span>  <span data-ttu-id="9f0e0-216">기본적으로 탭 피드백에서 사용할 수 없습니다는 <xref:System.Windows.Controls.InkCanvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-216">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="9f0e0-217">다른 모든 컨트롤에 대해 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-217">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-218">다음 예제에서는 누르기 피드백이 사용 되는지 여부를 결정 하는 방법에 설명 된 <xref:System.Windows.Controls.Canvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-218">The following example demonstrates how to determine whether tap feedback is enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#5)]
 [!code-vb[GestureSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTouchFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTouchFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTouchFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-219">터치식 입력 피드백이 사용되는지 여부를 확인할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-219">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether touch input feedback enabled.</span></span></param>
        <summary><span data-ttu-id="9f0e0-220">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-220">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="9f0e0-221">터치식 입력 피드백이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-221"><see langword="true" /> if touch input feedback is enabled, otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f0e0-222">다음 예제에는 누르기 피드백이 사용 되는지 여부를 결정 하는 방법을 보여 줍니다.는 <xref:System.Windows.Controls.InkCanvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-222">The following example demonstrates how to determine whether tap feedback is enabled on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#7)]
 [!code-vb[GestureSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" Usage="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-223">요소에서 스타일러스 이벤트를 캡처할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-223">Occurs when an element captures the stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-224">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-224">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-225">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-225">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-226">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-226">Attached events are, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> <span data-ttu-id="9f0e0-227">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-227">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-228">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-228">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-229">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-229">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-230">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-230">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-231">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-231">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.GotStylusCaptureEvent>|  
|<span data-ttu-id="9f0e0-232">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-232">Routing strategy</span></span>|<span data-ttu-id="9f0e0-233">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-233">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-234">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-234">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-235">다음 예제에서는의 배경색을 변경 하는 방법에 설명를 <xref:System.Windows.Controls.TextBox> 경우는 <xref:System.Windows.Controls.TextBox> 캡처하고 스타일러스 이벤트를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-235">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="9f0e0-236">이 예제에서는 라는 textbox가 있다고 가정 `textBox1`, 및는 <xref:System.Windows.Input.Stylus.GotStylusCapture> 및 <xref:System.Windows.Input.Stylus.LostStylusCapture> 이벤트는 이벤트 처리기에 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-236">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-237"><see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-237">Identifies the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabled">
      <MemberSignature Language="C#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsFlicksEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="F#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" Usage="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-238">긋기가 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-238">Gets or sets a value indicating whether flicks are enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-239">[!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], 제스처를 가능한 시스템 제스처 중 하나는 탐색 또는 바로 가기 명령에 매핑될 수 있는 간단한, 빠른, 직선 스트로크를 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-239">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="9f0e0-240">기본적으로 제스처에서 해제 되어는 <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, 및 <xref:System.Windows.Controls.Primitives.ScrollBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-240">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="9f0e0-241">긋기가 다른 모든 컨트롤에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-241">Flicks are enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsFlicksEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9f0e0-242">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-243">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-243">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsFlicksEnabledProperty>|  
|<span data-ttu-id="9f0e0-244">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9f0e0-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="9f0e0-245">없음</span><span class="sxs-lookup"><span data-stu-id="9f0e0-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-246">다음 예제에서 긋기를 사용 하지 않도록 설정 하는 방법에 설명 된 <xref:System.Windows.Controls.Canvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-246">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Camvas Name="canvas1" Stylus.IsFlicksEnabled="False" ></Canvas>
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFlicksEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFlicksEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFlicksEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFlicksEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFlicksEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-247"><see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> 연결된 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-247">Identifies the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="F#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" Usage="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-248">누르고 있기가 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-248">Gets or sets a values indicating whether press and hold is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-249">마우스 오른쪽 단추로 클릭 하 지도 누르고 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-249">Press and hold maps to a right-click on a mouse.</span></span> <span data-ttu-id="9f0e0-250">[!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] 있는 사용자 수 없이 누르고 태블릿 펜 시뮬레이션을 마우스 오른쪽 단추로 클릭 하려는 의도 하는 경우 예상 되는 경우에이 동작을 비활성화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-250">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
<a name="dependencyPropertyInfo_IsPressAndHoldEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9f0e0-251">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-252">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-252">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty>|  
|<span data-ttu-id="9f0e0-253">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9f0e0-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="9f0e0-254">없음</span><span class="sxs-lookup"><span data-stu-id="9f0e0-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-255">다음 예제에서는 누른 키를 눌러를 사용 하도록 설정 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.Slider>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-255">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span>  

```xaml
<Slider Name="horizontalSlider1" Stylus.IsPressAndHoldEnabled="True" />
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressAndHoldEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressAndHoldEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-256"><see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> 연결된 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-256">Identifies the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" Usage="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-257">누르기 피드백이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-257">Gets or sets whether a value indicating whether tap feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-258">[!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], 간단한 애니메이션을 사용자가 컨트롤을 누를 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-258">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="9f0e0-259">기본적으로 탭 피드백에서 사용할 수 없습니다는 <xref:System.Windows.Controls.InkCanvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-259">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="9f0e0-260">다른 모든 컨트롤에 대해 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-260">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTapFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9f0e0-261">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-261">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-262">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-262">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty>|  
|<span data-ttu-id="9f0e0-263">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9f0e0-263">Metadata properties set to `true`</span></span>|<span data-ttu-id="9f0e0-264">없음</span><span class="sxs-lookup"><span data-stu-id="9f0e0-264">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-265">다음 예제에서는 사용 하지 않도록 설정 탭 피드백을 <xref:System.Windows.Controls.Canvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-265">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsTapFeedbackEnabled="False"></Canvas>
```
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTapFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTapFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-266"><see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> 연결된 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-266">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" Usage="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-267">터치 피드백이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-267">Gets or sets whether a value indicating whether touch feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-268">[!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], 간단한 애니메이션을 사용자가 손가락을 사용 하 여 컨트롤을 터치 하면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-268">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user touches the control with a finger.</span></span> <span data-ttu-id="9f0e0-269">기본적으로 터치 피드백이에서 사용할 수 없습니다는 <xref:System.Windows.Controls.InkCanvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-269">By default, touch feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="9f0e0-270">다른 모든 컨트롤에 대해 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-270">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTouchFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9f0e0-271">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-271">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-272">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-272">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty>|  
|<span data-ttu-id="9f0e0-273">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9f0e0-273">Metadata properties set to `true`</span></span>|<span data-ttu-id="9f0e0-274">없음</span><span class="sxs-lookup"><span data-stu-id="9f0e0-274">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-275">다음 예제에서 터치 피드백이 사용을 <xref:System.Windows.Controls.InkCanvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-275">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  

```xaml
<InkCanvas Name="inkCanvas1" Stylus.IsTouchFeedbackEnabled="True" />
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTouchFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTouchFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-276"><see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> 연결된 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-276">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" Usage="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-277">요소에서 스타일러스 이벤트를 해제할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-277">Occurs when an element releases stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-278">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-278">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-279">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-279">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-280">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-280">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-281">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-281">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-282">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-282">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-283">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-283">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-284">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-284">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-285">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-285">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.LostStylusCaptureEvent>|  
|<span data-ttu-id="9f0e0-286">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-286">Routing strategy</span></span>|<span data-ttu-id="9f0e0-287">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-287">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-288">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-288">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-289">다음 예제에서는의 배경색을 변경 하는 방법에 설명를 <xref:System.Windows.Controls.TextBox> 경우는 <xref:System.Windows.Controls.TextBox> 캡처하고 스타일러스 이벤트를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-289">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="9f0e0-290">이 예제에서는 라는 textbox가 있다고 가정 `textBox1`, 및는 <xref:System.Windows.Input.Stylus.GotStylusCapture> 및 <xref:System.Windows.Input.Stylus.LostStylusCapture> 예제의 이벤트 처리기에 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-290">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-291"><see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-291">Identifies the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" Usage="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-292">사용자가 스타일러스의 단추 중 하나를 누를 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-292">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-293">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-293">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-294">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-294">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-295">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-295">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-296">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-296">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-297">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-297">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-298">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-298">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-299">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-299">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-300">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-300">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="9f0e0-301">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-301">Routing strategy</span></span>|<span data-ttu-id="9f0e0-302">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-302">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-303">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-303">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-304">다음 예제에서는 단추 발생을 확인 하는 방법에 설명 합니다 <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-304">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event.</span></span> <span data-ttu-id="9f0e0-305">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-305">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[StylusSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-306"><see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-306">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" Usage="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-307">사용자가 스타일러스의 단추 중 하나를 놓을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-307">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-308">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-308">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-309">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-309">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-310">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-310">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-311">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-311">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-312">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-312">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-313">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-313">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-314">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-315">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-315">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="9f0e0-316">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-316">Routing strategy</span></span>|<span data-ttu-id="9f0e0-317">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-317">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-318">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-318">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-319">다음 예제에서는 단추 발생을 확인 하는 방법에 설명 합니다 <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-319">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event.</span></span> <span data-ttu-id="9f0e0-320">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-320">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[StylusSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-321"><see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-321">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" Usage="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-322">사용자가 스타일러스의 끝을 태블릿에 댈 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-322">Occurs when user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-323">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-323">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-324">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-324">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-325">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-325">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-326">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-326">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-327">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-328">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-329">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-330">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-330">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusDownEvent>|  
|<span data-ttu-id="9f0e0-331">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-331">Routing strategy</span></span>|<span data-ttu-id="9f0e0-332">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-332">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-333">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-334">다음 예제에서는 사용자가 스타일러스를 태블릿을 터치 하면 스타일러스 캡처되지 않은 확인 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-334">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the tablet.</span></span> <span data-ttu-id="9f0e0-335">이 가정은 <xref:System.Windows.Input.Stylus.PreviewStylusDown> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-335">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-336"><see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-336">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" Usage="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-337">스타일러스를 태블릿에 대지 않고 태블릿 범위 안에서 움직일 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-337">Occurs if the stylus moves while it is within range of (but not touching) the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-338">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-338">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-339">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-339">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-340">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-340">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-341">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-341">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-342">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-342">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-343">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-343">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-344">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-345">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-345">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="9f0e0-346">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-346">Routing strategy</span></span>|<span data-ttu-id="9f0e0-347">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-347">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-348">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-348">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-349">다음 예제는 스타일러스 아래 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-349">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="9f0e0-350">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및는 <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-350">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[StylusSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-351"><see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-351">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" Usage="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-352">스타일러스가 태블릿 범위 안으로 들어올 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-352">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-353">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-353">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-354">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-354">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-355">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-355">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-356">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-356">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-357">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-357">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-358">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-358">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-359">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-359">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-360">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-360">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="9f0e0-361">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-361">Routing strategy</span></span>|<span data-ttu-id="9f0e0-362">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-362">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-363">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-363">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-364">다음 예제에서는 스타일러스가 반전 있는지 여부를 결정 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-364">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="9f0e0-365">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.PreviewStylusInRange> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-365">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusInRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[StylusSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-366"><see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-366">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" Usage="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-367">스타일러스를 태블릿에 대고 움직일 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-367">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-368">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-369">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-369">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-370">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-370">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-371">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-371">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-372">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-372">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-373">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-373">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-374">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-374">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-375">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-375">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusMoveEvent>|  
|<span data-ttu-id="9f0e0-376">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-376">Routing strategy</span></span>|<span data-ttu-id="9f0e0-377">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-377">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-378">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-378">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-379">예제 이동할 때 사용 된 스타일러스의 위치를 결정 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-379">The example demonstrates how to determine the position of the stylus when it moves.</span></span> <span data-ttu-id="9f0e0-380">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.PreviewStylusMove> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-380">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusMove> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[StylusSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-381"><see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-381">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" Usage="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-382">스타일러스가 태블릿 범위를 벗어날 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-382">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-383">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-383">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-384">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-384">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-385">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-385">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-386">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-386">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-387">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-388">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-389">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-390">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-390">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="9f0e0-391">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-391">Routing strategy</span></span>|<span data-ttu-id="9f0e0-392">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-392">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-393">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-393">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-394">다음 예제에서는 스타일러스가 반전 있는지 여부를 결정 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-394">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="9f0e0-395">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> 이벤트 처리기에 연결 된 이벤트.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-395">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[StylusSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-396"><see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-396">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" Usage="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-397">사용자가 이 스타일러스로 시스템 제스처를 만들 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-397">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-398">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-399">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-399">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-400">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-400">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-401">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-401">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-402">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-402">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-403">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-403">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-404">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-405">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-405">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="9f0e0-406">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-406">Routing strategy</span></span>|<span data-ttu-id="9f0e0-407">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-407">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-408">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-408">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-409">다음 예제에서는 시스템 제스처를 발생 시킨를 확인 하는 방법에 설명 합니다 <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-409">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event.</span></span> <span data-ttu-id="9f0e0-410">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-410">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#17)]
 [!code-vb[StylusSamples#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-411"><see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-411">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" Usage="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-412">사용자가 스타일러스를 태블릿에서 뗄 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-412">Occurs when the user lifts the stylus from the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-413">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-413">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-414">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-414">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-415">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-415">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-416">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-416">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-417">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-417">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-418">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-418">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-419">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-420">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-420">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusUpEvent>|  
|<span data-ttu-id="9f0e0-421">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-421">Routing strategy</span></span>|<span data-ttu-id="9f0e0-422">터널링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-422">Tunneling</span></span>|  
|<span data-ttu-id="9f0e0-423">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-423">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-424">다음 예제에서는 사용자가 태블릿에서 뗄 때 사용 된 스타일러스의 위치를 확인 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-424">The following example demonstrates how to determine the position of the stylus when the user lifts it from the tablet.</span></span> <span data-ttu-id="9f0e0-425">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.PreviewStylusUp> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-425">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[StylusSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-426"><see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-426">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-427">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-427">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-428">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-428">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-429"><see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-429">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-430">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-430">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-431">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-431">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-432"><see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-432">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-433">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-433">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-434">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-434">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-435"><see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-435">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-436">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-437">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-437">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-438"><see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-438">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-439">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-439">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-440">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-440">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-441"><see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-441">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-442">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-442">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-443">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-443">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-444"><see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-444">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-445">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-445">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-446">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-446">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-447"><see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-447">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-448">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-449">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-449">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-450"><see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-450">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-451">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-451">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-452">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-452">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-453"><see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-453">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-454">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-454">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-455">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-455">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-456"><see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-456">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-457">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-457">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-458">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-458">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-459"><see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-459">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-460">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-461">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-461">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-462"><see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-462">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-463">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-463">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-464">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-464">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-465"><see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-465">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-466">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-466">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-467">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-467">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-468"><see cref="E:System.Windows.Input.Stylus.StylusDown" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-468">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-469">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-469">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-470">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-470">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-471"><see cref="E:System.Windows.Input.Stylus.StylusEnter" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-471">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-472">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-472">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-473">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-473">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-474"><see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-474">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-475">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-475">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-476">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-476">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-477"><see cref="E:System.Windows.Input.Stylus.StylusInRange" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-477">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-478">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-478">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-479">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-479">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-480"><see cref="E:System.Windows.Input.Stylus.StylusLeave" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-480">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-481">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-481">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-482">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-482">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-483"><see cref="E:System.Windows.Input.Stylus.StylusMove" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-483">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-484">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-484">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-485">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-485">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-486"><see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-486">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-487">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-487">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-488">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-488">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-489"><see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-489">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-490">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-490">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9f0e0-491">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-491">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="9f0e0-492"><see cref="E:System.Windows.Input.Stylus.StylusUp" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-492">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsFlicksEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFlicksEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFlicksEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFlicksEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsFlicksEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsFlicksEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-493">긋기를 사용할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-493">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable flicks.</span></span></param>
        <param name="enabled"><span data-ttu-id="9f0e0-494">긋기를 사용하려면 <see langword="true" />이고, 긋기를 사용하지 않으려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-494"><see langword="true" /> to enable flicks; <see langword="false" /> to disable flicks.</span></span></param>
        <summary><span data-ttu-id="9f0e0-495">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-495">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-496">Windows Vista 제스처를 가능한 시스템 제스처 중 하나는 탐색 또는 바로 가기 명령에 매핑될 수 있는 간단한, 빠른, 직선 스트로크입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-496">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="9f0e0-497">기본적으로 제스처에서 해제 되어는 <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, 및 <xref:System.Windows.Controls.Primitives.ScrollBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-497">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="9f0e0-498">긋기가 다른 모든 컨트롤에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-498">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-499">다음 예제에서 긋기를 사용 하지 않도록 설정 하는 방법에 설명 된 <xref:System.Windows.Controls.Canvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-499">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#2)]
 [!code-vb[GestureSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsPressAndHoldEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsPressAndHoldEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsPressAndHoldEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsPressAndHoldEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsPressAndHoldEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-500">누르고 있기를 사용할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-500">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable press and hold.</span></span></param>
        <param name="enabled"><span data-ttu-id="9f0e0-501">누르고 있기를 사용하려면 <see langword="true" />이고, 누르고 있기를 사용하지 않으려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-501"><see langword="true" /> to enable press and hold; <see langword="false" /> to disable press and hold.</span></span></param>
        <summary><span data-ttu-id="9f0e0-502">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-502">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-503">마우스 오른쪽 단추로 클릭 하 지도 누르고 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-503">Press and hold maps to the right-click on a mouse.</span></span> <span data-ttu-id="9f0e0-504">Windows Vista에 있는 사용자 수 없이 누르고 태블릿 펜 시뮬레이션을 마우스 오른쪽 단추로 클릭 하려는 의도 하는 경우 예상 되는 경우에이 동작을 비활성화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-504">In Windows Vista, you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-505">다음 예제에서는 누른 키를 눌러를 사용 하도록 설정 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.Slider>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-505">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="9f0e0-506">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.Slider> 호출 `horizontalSlider1`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-506">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTapFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTapFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTapFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTapFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTapFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-507">누르기 피드백을 사용할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-507">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="9f0e0-508">누르기 피드백을 사용하려면 <see langword="true" />이고, 누르기 피드백을 사용하지 않으려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-508"><see langword="true" /> to enable tap feedback; <see langword="false" /> to disable tap feedback.</span></span></param>
        <summary><span data-ttu-id="9f0e0-509">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-509">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-510">Windows Vista에서는 간단한 애니메이션을 사용자가 컨트롤을 누를 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-510">In Windows Vista, a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="9f0e0-511">기본적으로 탭 피드백에서 사용할 수 없습니다는 <xref:System.Windows.Controls.InkCanvas>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-511">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="9f0e0-512">다른 모든 컨트롤에 대해 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-512">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-513">다음 예제에서는 사용 하지 않도록 설정 탭 피드백을 <xref:System.Windows.Controls.Canvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-513">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#4)]
 [!code-vb[GestureSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTouchFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTouchFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTouchFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9f0e0-514">누르기 피드백을 사용할 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-514">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="9f0e0-515">터치식 입력 피드백을 사용하려면 <see langword="true" />이고, 터치식 입력 피드백을 사용하지 않으려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-515"><see langword="true" /> to enable touch input feedback; <see langword="false" /> to disable touch input feedback.</span></span></param>
        <summary><span data-ttu-id="9f0e0-516">지정된 요소에 대한 <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> 연결된 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-516">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f0e0-517">다음 예제에서 터치 피드백이 사용을 <xref:System.Windows.Controls.InkCanvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-517">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#8)]
 [!code-vb[GestureSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" Usage="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-518">사용자가 스타일러스의 단추 중 하나를 누를 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-518">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-519">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-519">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-520">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-520">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-521">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-521">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-522">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-522">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-523">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-523">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-524">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-524">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-525">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-525">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-526">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-526">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonDownEvent>|  
|<span data-ttu-id="9f0e0-527">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-527">Routing strategy</span></span>|<span data-ttu-id="9f0e0-528">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-528">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-529">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-529">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-530">다음 예제에서는 사용자가 스타일러스에서 스타일러스의 펜 단추를 누르면 바로 가기 메뉴를 표시 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-530">The following example demonstrates how to show a shortcut menu when the user presses the barrel button on a stylus.</span></span> <span data-ttu-id="9f0e0-531">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및 <xref:System.Windows.Controls.ContextMenu> 호출 `textBoxContextMenu`, 및는 <xref:System.Windows.Input.Stylus.StylusButtonDown> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-531">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and a <xref:System.Windows.Controls.ContextMenu> called `textBoxContextMenu`, and that the <xref:System.Windows.Input.Stylus.StylusButtonDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[StylusSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-532"><see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-532">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" Usage="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-533">사용자가 스타일러스의 단추 중 하나를 놓을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-533">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-534">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-534">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-535">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-535">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-536">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-536">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-537">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-537">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-538">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-538">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-539">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-539">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-540">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-540">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-541">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-541">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonUpEvent>|  
|<span data-ttu-id="9f0e0-542">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-542">Routing strategy</span></span>|<span data-ttu-id="9f0e0-543">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-543">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-544">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-544">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-545">다음 예제에서는 사용자의 barrel 스타일러스의 단추를 놓으면 선택한 텍스트를 복사 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-545">The following example demonstrates how to copy the selected text when the user releases the barrel button on a stylus.</span></span> <span data-ttu-id="9f0e0-546">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및는 <xref:System.Windows.Input.Stylus.StylusButtonUp> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-546">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[StylusSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-547"><see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-547">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" Usage="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-548">사용자가 스타일러스의 끝을 태블릿에 댈 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-548">Occurs when the user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-549">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-549">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-550">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-550">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-551">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-551">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-552">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-552">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-553">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-553">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-554">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-554">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-555">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-556">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-556">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusDownEvent>|  
|<span data-ttu-id="9f0e0-557">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-557">Routing strategy</span></span>|<span data-ttu-id="9f0e0-558">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-558">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-559">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-559">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-560">다음 예제에서는 스타일러스 범위를 벗어날 경우에, 사용 된 스타일러스의 좌표를 기록 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-560">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="9f0e0-561">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및를 <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, 및 <xref:System.Windows.Input.Stylus.StylusMove> 이벤트는 이벤트 처리기에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-561">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-562"><see cref="E:System.Windows.Input.Stylus.StylusDown" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-562">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="F#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" Usage="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-563">스타일러스 커서가 요소 범위 안으로 들어올 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-563">Occurs when the stylus cursor enters the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-564">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-564">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-565">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-565">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-566">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-566">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-567">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-567">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-568">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-568">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-569">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-569">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-570">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-571">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-571">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusEnterEvent>|  
|<span data-ttu-id="9f0e0-572">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-572">Routing strategy</span></span>|<span data-ttu-id="9f0e0-573">직접</span><span class="sxs-lookup"><span data-stu-id="9f0e0-573">Direct</span></span>|  
|<span data-ttu-id="9f0e0-574">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-574">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-575">다음 예제에서는 색을 변경 하는 방법에 설명 된 <xref:System.Windows.Controls.Button> 스타일러스 커서가 입력 하 고 해당 범위를 벗어날 때입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-575">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="9f0e0-576">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.Button> 호출 `button1` 하 고는 <xref:System.Windows.Input.Stylus.StylusEnter> 및 <xref:System.Windows.Input.Stylus.StylusLeave> 이벤트 처리기에 연결 된 이벤트.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-576">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-577"><see cref="E:System.Windows.Input.Stylus.StylusEnter" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-577">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" Usage="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-578">스타일러스를 태블릿에 대지 않고 태블릿 범위 안에서 움직일 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-578">Occurs when the stylus moves while it is in range of, but not touching, the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-579">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-579">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-580">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-580">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-581">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-581">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-582">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-582">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-583">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-583">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-584">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-584">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-585">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-586">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-586">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInAirMoveEvent>|  
|<span data-ttu-id="9f0e0-587">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-587">Routing strategy</span></span>|<span data-ttu-id="9f0e0-588">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-588">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-589">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-589">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-590">다음 예제는 스타일러스 아래 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-590">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="9f0e0-591">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.StylusInAirMove> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-591">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-592"><see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-592">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" Usage="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-593">스타일러스가 태블릿 범위 안으로 들어올 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-593">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-594">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-594">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-595">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-595">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-596">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-596">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-597">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-597">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-598">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-598">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-599">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-599">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-600">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-601">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-601">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInRangeEvent>|  
|<span data-ttu-id="9f0e0-602">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-602">Routing strategy</span></span>|<span data-ttu-id="9f0e0-603">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-603">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-604">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-604">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-605">다음 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 속성의는 <xref:System.Windows.Controls.InkCanvas> 에 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> 스타일러스가 반전 경우.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-605">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of an <xref:System.Windows.Controls.InkCanvas> to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> when the stylus is inverted.</span></span> <span data-ttu-id="9f0e0-606">이 예제에서는 있다고 가정는 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1` 하 고는 <xref:System.Windows.Input.Stylus.StylusInRange> 이벤트 처리기에 연결 된 이벤트.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-606">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusInRange> event is connected to the event handlers.</span></span> <span data-ttu-id="9f0e0-607">변경 커서를 설정 합니다 <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> 속성을 `true` 에서 `inkCanvas1`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-607">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#18)]
 [!code-vb[StylusSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-608"><see cref="E:System.Windows.Input.Stylus.StylusInRange" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-608">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" Usage="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-609">스타일러스 커서가 요소 범위를 벗어날 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-609">Occurs when the stylus cursor leaves the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-610">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-610">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-611">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-611">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-612">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-612">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-613">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-613">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-614">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-614">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-615">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-615">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-616">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-616">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-617">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-617">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusLeaveEvent>|  
|<span data-ttu-id="9f0e0-618">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-618">Routing strategy</span></span>|<span data-ttu-id="9f0e0-619">직접</span><span class="sxs-lookup"><span data-stu-id="9f0e0-619">Direct</span></span>|  
|<span data-ttu-id="9f0e0-620">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-620">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-621">다음 예제에서는 색을 변경 하는 방법에 설명 된 <xref:System.Windows.Controls.Button> 스타일러스 커서가 입력 하 고 해당 범위를 벗어날 때입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-621">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="9f0e0-622">이 예제 있다고 가정를 <xref:System.Windows.Controls.Button> 호출 `button1` 하 고는 <xref:System.Windows.Input.Stylus.StylusEnter> 및 <xref:System.Windows.Input.Stylus.StylusLeave> 이벤트는 이벤트 처리기에 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-622">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-623"><see cref="E:System.Windows.Input.Stylus.StylusLeave" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-623">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" Usage="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-624">스타일러스를 태블릿에 대고 움직일 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-624">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-625">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-625">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-626">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-626">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-627">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-627">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-628">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-628">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-629">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-629">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-630">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-630">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-631">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-631">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-632">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-632">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusMoveEvent>|  
|<span data-ttu-id="9f0e0-633">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-633">Routing strategy</span></span>|<span data-ttu-id="9f0e0-634">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-634">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-635">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-635">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-636">다음 예제에서는 스타일러스 범위를 벗어날 경우에, 사용 된 스타일러스의 좌표를 기록 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-636">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="9f0e0-637">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및를 <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, 및 <xref:System.Windows.Input.Stylus.StylusMove> 이벤트는 이벤트 처리기에 연결 되어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-637">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-638"><see cref="E:System.Windows.Input.Stylus.StylusMove" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-638">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" Usage="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-639">스타일러스가 태블릿 범위를 벗어날 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-639">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-640">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-640">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-641">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-641">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-642">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-642">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-643">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-643">further expands an attached event's capabilities, allowing it to traverse a route.</span></span>  <span data-ttu-id="9f0e0-644">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-644">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-645">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-645">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-646">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-647">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-647">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusOutOfRangeEvent>|  
|<span data-ttu-id="9f0e0-648">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-648">Routing strategy</span></span>|<span data-ttu-id="9f0e0-649">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-649">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-650">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-650">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-651">다음 예제에서는 스타일러스 범위를 벗어날 때 커서를 화살표로 변경 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-651">The following example demonstrates how to change the cursor to an arrow when the stylus goes out of range.</span></span> <span data-ttu-id="9f0e0-652">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1` 하 고는 <xref:System.Windows.Input.Stylus.StylusOutOfRange> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-652">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusOutOfRange> event is connected to an event handler.</span></span> <span data-ttu-id="9f0e0-653">변경 커서를 설정 합니다 <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> 속성을 `true` 에서 `inkCanvas1`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-653">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#19)]
 [!code-vb[StylusSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-654"><see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-654">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" Usage="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-655">사용자가 이 스타일러스로 시스템 제스처를 만들 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-655">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-656">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-656">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-657">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-657">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-658">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-658">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-659">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-659">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-660">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-660">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-661">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-661">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-662">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-662">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-663">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-663">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusSystemGestureEvent>|  
|<span data-ttu-id="9f0e0-664">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-664">Routing strategy</span></span>|<span data-ttu-id="9f0e0-665">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-665">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-666">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-666">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-667">다음 예제에서는 시스템 제스처를 발생 시킨를 확인 하는 방법에 설명 합니다 <xref:System.Windows.Input.Stylus.StylusSystemGesture> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-667">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event.</span></span> <span data-ttu-id="9f0e0-668">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1` 하 고는 <xref:System.Windows.Input.Stylus.StylusSystemGesture> 이벤트를 이벤트 처리기를 연결할 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-668">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event is connected to an event handler.</span></span>  
  
 [!code-csharp[StylusSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[StylusSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-669"><see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-669">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" Usage="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f0e0-670">사용자가 스타일러스를 Tablet PC에서 뗄 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-670">Occurs when the user raises the stylus from the Tablet PC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-671">연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-671">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-672">라우트된 이벤트로 연결 된 이벤트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-672">implements attached events as routed events.</span></span> <span data-ttu-id="9f0e0-673">연결 된 이벤트는 근본적으로 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 언어 개념을 처리 하는 이벤트, 하지 않는 개체에 직접 이벤트를 정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-673">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="9f0e0-674">경로 통과할 수 있도록 연결된 된 이벤트의 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-674">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="9f0e0-675">연결 된 이벤트 코드에서 직접 처리 구문이 없습니다 지정 된 추가 사용 하 여 코드에서 라우트된 이벤트에 대 한 처리기를 연결 하려면 \* 처리기 메서드.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-675">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="9f0e0-676">자세한 내용은 참조 하세요 [연결 된 이벤트 개요](~/docs/framework/wpf/advanced/attached-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-676">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9f0e0-677">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="9f0e0-677">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f0e0-678">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9f0e0-678">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusUpEvent>|  
|<span data-ttu-id="9f0e0-679">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="9f0e0-679">Routing strategy</span></span>|<span data-ttu-id="9f0e0-680">버블링</span><span class="sxs-lookup"><span data-stu-id="9f0e0-680">Bubbling</span></span>|  
|<span data-ttu-id="9f0e0-681">대리자</span><span class="sxs-lookup"><span data-stu-id="9f0e0-681">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-682">다음 예제에서는 스타일러스 범위를 벗어날 경우에, 사용 된 스타일러스의 좌표를 기록 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-682">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="9f0e0-683">이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.TextBox> 호출 `textBox1`, 및를 <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, 및 <xref:System.Windows.Input.Stylus.StylusMove> 이벤트는 이벤트 처리기에 연결 되어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-683">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0e0-684"><see cref="E:System.Windows.Input.Stylus.StylusUp" /> 연결된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-684">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Stylus.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f0e0-685">커서와 사용자 인터페이스를 동기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-685">Synchronizes the cursor and the user interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e0-686">애플리케이션은 커서 위치에 요소를 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-686">Applications may need to determine the element on which the cursor is located.</span></span> <span data-ttu-id="9f0e0-687">애니메이션을 사용 하면 애플리케이션을 <xref:System.Windows.Input.Stylus.DirectlyOver%2A> 메서드는 커서에서 움직인 요소를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-687">If the application uses animation, the <xref:System.Windows.Input.Stylus.DirectlyOver%2A> method might return an element that has moved out from under the cursor.</span></span> <span data-ttu-id="9f0e0-688">호출 <xref:System.Windows.Input.Stylus.Synchronize%2A> 있는지 확인 하려면 <xref:System.Windows.Input.Stylus.DirectlyOver%2A> 올바른 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-688">Call <xref:System.Windows.Input.Stylus.Synchronize%2A> to be sure that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the proper element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e0-689">다음 예에서는 커서 아래에 있는 요소를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-689">The following example demonstrates how to get the element that is under the cursor.</span></span> <span data-ttu-id="9f0e0-690">호출 <xref:System.Windows.Input.Stylus.Synchronize%2A> 되도록 <xref:System.Windows.Input.Stylus.DirectlyOver%2A> 올바른 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0e0-690">Calling <xref:System.Windows.Input.Stylus.Synchronize%2A> ensures that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the correct element.</span></span>  
  
 [!code-csharp[StylusSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#24)]
 [!code-vb[StylusSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#24)]  
[!code-csharp[StylusSamples#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#25)]
[!code-vb[StylusSamples#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>