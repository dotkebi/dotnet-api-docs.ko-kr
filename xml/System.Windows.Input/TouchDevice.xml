<Type Name="TouchDevice" FullName="System.Windows.Input.TouchDevice">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b24eedf98213523996d47ccf3ca3b43f738e49a" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56362270" /></Metadata><TypeSignature Language="C#" Value="public abstract class TouchDevice : System.Windows.Input.InputDevice, System.Windows.Input.IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TouchDevice extends System.Windows.Input.InputDevice implements class System.Windows.Input.IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TouchDevice&#xA;Inherits InputDevice&#xA;Implements IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchDevice abstract : System::Windows::Input::InputDevice, System::Windows::Input::IManipulator" />
  <TypeSignature Language="F#" Value="type TouchDevice = class&#xA;    inherit InputDevice&#xA;    interface IManipulator" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.IManipulator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1f93f-101">터치 스크린에서 손가락으로 생성된 단일 터치식 입력을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-101">Represents a single touch input produced by a finger on a touchscreen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-102">일반적으로 액세스 한 <xref:System.Windows.Input.TouchDevice> 를 사용 하 여는 <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-102">You typically access a <xref:System.Windows.Input.TouchDevice> by using the <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1f93f-103"><xref:System.Windows.Input.TouchDevice> 화면의 단일 터치를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-103">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="1f93f-104">사용 하 여 여러 터치가 없는 경우는 <xref:System.Windows.Input.TouchDevice.Id%2A> 구별할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-104">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f93f-105">이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 상속 요청을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-105">This class contains an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="1f93f-106"><xref:System.Security.SecurityException> 파생된 클래스에는 완전 신뢰 권한이 없는 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-106">A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission.</span></span> <span data-ttu-id="1f93f-107">보안 요청에 대 한 자세한 내용은 참조 하세요. [링크 요구가](~/docs/framework/misc/link-demands.md) 하 고 [상속 요청](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-107">For more information about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f93f-108">다음 예에서는 간단한 패턴에서 만들 수는 <xref:System.Windows.Controls.Canvas> 터치 스크린에서 두 손가락을 드래그 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-108">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers on a touchscreen.</span></span> <span data-ttu-id="1f93f-109">각 터치가 나타내는 <xref:System.Windows.Input.TouchDevice> 에 <xref:System.Windows.Input.TouchEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-109">Each touch is represented by a <xref:System.Windows.Input.TouchDevice> in the <xref:System.Windows.Input.TouchEventArgs>.</span></span> <span data-ttu-id="1f93f-110">패턴은 터치에 의해 제공 되는 터치 지점 사이의 선을 그려 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-110">The pattern is created by drawing a line between the touch points that are provided by the touches.</span></span> <span data-ttu-id="1f93f-111">이 예제에서는 Windows Touch 호환 화면이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-111">This example requires a Windows Touch-compatible screen.</span></span>  
  
 <span data-ttu-id="1f93f-112">다음 태그에 구성 된 사용자 인터페이스를 만들고는 <xref:System.Windows.Controls.Canvas> 가운데에 모눈을 터치 이벤트에 대 한 이벤트 처리기를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-112">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a grid, and attaches the event handlers for the touch events.</span></span>  
  
 [!code-xaml[TouchEventsSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="1f93f-113">다음 코드는 터치 이벤트를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-113">The following code handles the touch events.</span></span> <span data-ttu-id="1f93f-114">터치를 눌렀음을 합니다 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> 에 캡처되는지를 <xref:System.Windows.Controls.Canvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-114">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="1f93f-115">터치 리프트 된 때를 <xref:System.Windows.Input.TouchDevice> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-115">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="1f93f-116">터치 이동 하는 경우는 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> 확인란이 선택 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-116">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="1f93f-117">첫 번째 터치에서 이동 하는 경우, 해당 위치에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-117">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="1f93f-118">두 번째 터치에서 이동 하는 경우, 두 번째 터치 위치를 줄의 첫 번째 터치 위치에서 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-118">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchEventsSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchEventsSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1f93f-119">이 클래스에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-119">for deriving from this class.</span></span> <span data-ttu-id="1f93f-120">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-120">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="1f93f-121">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="1f93f-121">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TouchDevice (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (deviceId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TouchDevice(int deviceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TouchDevice : int -&gt; System.Windows.Input.TouchDevice" Usage="new System.Windows.Input.TouchDevice deviceId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId"><span data-ttu-id="1f93f-122">터치 장치의 고유한 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-122">A unique identifier for the touch device.</span></span></param>
        <summary><span data-ttu-id="1f93f-123"><see cref="T:System.Windows.Input.TouchDevice" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-123">Called from constructors in derived classes to initialize the <see cref="T:System.Windows.Input.TouchDevice" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1f93f-124">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-124">requires full trust for the immediate caller.</span></span> <span data-ttu-id="1f93f-125">이 클래스는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-125">This class cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="touchDevice.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f93f-126">입력 메시징 시스템에 <see cref="T:System.Windows.Input.TouchDevice" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-126">Adds the <see cref="T:System.Windows.Input.TouchDevice" /> to the input messaging system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-127">상속한 클래스 <xref:System.Windows.Input.TouchDevice> 현재 디바이스를 활성화 하려면이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-127">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to activate the current device.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f93f-128">장치가 이미 활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-128">The device is already activated.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-129"><see cref="T:System.Windows.Input.TouchDevice" />가 입력 메시징 시스템에 추가되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-129">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is added to the input messaging system.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Activate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveSource : System.Windows.PresentationSource" Usage="System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-130">이 장치에 대한 입력을 보고하는 <see cref="T:System.Windows.PresentationSource" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-130">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <value><span data-ttu-id="1f93f-131">이 장치에 대한 입력을 보고하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-131">The source that is reporting input for this device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f93f-132">지정된 요소에 터치를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-132">Captures a touch to the specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement -&gt; bool" Usage="touchDevice.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="1f93f-133">터치식 입력을 캡처하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-133">The element that captures the touch input.</span></span></param>
        <summary><span data-ttu-id="1f93f-134"><see cref="F:System.Windows.Input.CaptureMode.Element" /> 캡처 모드를 사용하여 지정된 요소에 터치를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-134">Captures a touch to the specified element by using the <see cref="F:System.Windows.Input.CaptureMode.Element" /> capture mode.</span></span></summary>
        <returns><span data-ttu-id="1f93f-135">요소에 터치가 캡처되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-135"><see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-136"><xref:System.Windows.Input.TouchDevice> 다른 요소에 이미 캡처되어 있으면 요소에 캡처할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-136">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f93f-137">다음 예제에서는 처리 합니다 <xref:System.Windows.UIElement.TouchDown> 에서 일어나는 이벤트를 <xref:System.Windows.Controls.Canvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-137">The following example handles the <xref:System.Windows.UIElement.TouchDown> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="1f93f-138">터치를 눌렀음을 합니다 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> 에 캡처되는지를 <xref:System.Windows.Controls.Canvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-138">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 <span data-ttu-id="1f93f-139">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Input.TouchDevice> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-139">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchEventsSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f93f-140"><paramref name="element" />가 <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> 또는 <see cref="T:System.Windows.ContentElement" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="1f93f-140"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="touchDevice.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="1f93f-141">터치를 캡처하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-141">The element that captures the touch.</span></span></param>
        <param name="captureMode"><span data-ttu-id="1f93f-142">사용할 캡처 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-142">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="1f93f-143">지정된 <see cref="T:System.Windows.Input.CaptureMode" />를 사용하여 지정된 요소에 터치를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-143">Captures a touch to the specified element by using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns><span data-ttu-id="1f93f-144">요소에 터치가 캡처되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-144"><see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-145"><xref:System.Windows.Input.TouchDevice> 다른 요소에 이미 캡처되어 있으면 요소에 캡처할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-145">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f93f-146"><paramref name="element" />가 <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> 또는 <see cref="T:System.Windows.ContentElement" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="1f93f-146"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-147"><see cref="T:System.Windows.Input.TouchDevice" />를 캡처한 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-147">Gets the element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="1f93f-148"><see cref="T:System.Windows.Input.TouchDevice" />를 캡처한 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-148">The element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f93f-149">다음 예제에서는 처리 합니다 <xref:System.Windows.UIElement.TouchUp> 에서 일어나는 이벤트를 <xref:System.Windows.Controls.Canvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-149">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="1f93f-150">확인 합니다 <xref:System.Windows.Input.TouchDevice.Captured%2A> 속성을 통해 이벤트를 발생 시킨 디바이스가 캡처 있는지 확인 합니다 <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="1f93f-150">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="1f93f-151">이 경우는 <xref:System.Windows.Input.TouchDevice> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-151">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="1f93f-152">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Input.TouchDevice> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-152">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CaptureMode CaptureMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.CaptureMode CaptureMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaptureMode As CaptureMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CaptureMode CaptureMode { System::Windows::Input::CaptureMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CaptureMode : System.Windows.Input.CaptureMode" Usage="System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CaptureMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-153"><see cref="T:System.Windows.Input.TouchDevice" />의 캡처 정책을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-153">Gets the capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="1f93f-154"><see cref="T:System.Windows.Input.TouchDevice" />의 캡처 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-154">The capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Deactivate();" />
      <MemberSignature Language="F#" Value="member this.Deactivate : unit -&gt; unit" Usage="touchDevice.Deactivate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f93f-155">입력 메시징 시스템에서 <see cref="T:System.Windows.Input.TouchDevice" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-155">Removes the <see cref="T:System.Windows.Input.TouchDevice" /> from the input messaging system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-156">상속한 클래스 <xref:System.Windows.Input.TouchDevice> 현재 디바이스를 비활성화 하려면이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-156">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to deactivate the current device.</span></span>  
  
 <span data-ttu-id="1f93f-157">A <xref:System.Windows.UIElement.TouchLeave> 이벤트는 해당 하지 않고 <xref:System.Windows.UIElement.TouchUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-157">A <xref:System.Windows.UIElement.TouchLeave> event is raised without the corresponding <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f93f-158">장치가 활성화되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-158">The device is not activated.</span></span></exception>
        <altmember cref="E:System.Windows.ContentElement.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement3D.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement.TouchLeave" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-159"><see cref="T:System.Windows.Input.TouchDevice" />가 입력 메시징 시스템에서 제거될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-159">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is removed from the input messaging system.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-160">터치 접촉 지점 바로 아래에 있는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-160">Gets the element that the touch contact point is directly over.</span></span></summary>
        <value><span data-ttu-id="1f93f-161">터치 접촉 지점 바로 아래에 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-161">The element that the touch contact point is directly over.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetIntermediateTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchDevice.GetIntermediateTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="1f93f-162">좌표 공간을 정의하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-162">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="1f93f-163">파생 클래스에서 재정의된 경우 최신 터치 이벤트와 이전 터치 이벤트 사이에 수집된 모든 터치 지점을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-163">When overridden in a derived class, returns all touch points that are collected between the most recent and previous touch events.</span></span></summary>
        <returns><span data-ttu-id="1f93f-164">최신 터치 이벤트와 이전 터치 이벤트 사이에 수집된 모든 터치 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-164">All touch points that were collected between the most recent and previous touch events.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchDevice.GetTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="1f93f-165">좌표 공간을 정의하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-165">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="1f93f-166">지정된 요소를 기준으로 터치 장치의 현재 위치를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-166">Returns the current position of the touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="1f93f-167">지정된 요소를 기준으로 터치 장치의 현재 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-167">The current position of the touch device relative to the specified element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Windows.Input.TouchDevice.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-168">운영 체제에서 제공한 <see cref="T:System.Windows.Input.TouchDevice" />의 고유 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-168">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />, as provided by the operating system.</span></span></summary>
        <value><span data-ttu-id="1f93f-169"><see cref="T:System.Windows.Input.TouchDevice" />의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-169">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-170"><xref:System.Windows.Input.TouchDevice> 화면의 단일 터치를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-170">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="1f93f-171">사용 하 여 여러 터치가 없는 경우는 <xref:System.Windows.Input.TouchDevice.Id%2A> 구별할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-171">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f93f-172">다음 예제에서는 처리 합니다 <xref:System.Windows.UIElement.TouchMove> 에서 일어나는 이벤트를 <xref:System.Windows.Controls.Canvas>입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-172">The following example handles the <xref:System.Windows.UIElement.TouchMove> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="1f93f-173">터치 이동 하는 경우는 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> 확인란이 선택 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-173">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="1f93f-174">첫 번째 터치에서 이동 하는 경우, 해당 위치에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-174">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="1f93f-175">두 번째 터치에서 이동 하는 경우, 두 번째 터치 위치를 줄의 첫 번째 터치 위치에서 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-175">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="1f93f-176">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Input.TouchDevice> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-176">This example is part of a larger example available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchEventsSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Input.TouchDevice.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-177">장치가 활성 상태인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-177">Gets a value that indicates whether the device is active.</span></span></summary>
        <value><span data-ttu-id="1f93f-178">장치가 활성 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-178"><see langword="true" /> if the device is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnCapture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCapture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCapture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="abstract member OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit&#xA;override this.OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit" Usage="touchDevice.OnCapture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="1f93f-179">터치식 입력을 캡처하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-179">The element that captures the touch input.</span></span></param>
        <param name="captureMode"><span data-ttu-id="1f93f-180">캡처 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-180">The capture policy.</span></span></param>
        <summary><span data-ttu-id="1f93f-181">터치가 요소에 캡처될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-181">Called when a touch is captured to an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-182"><xref:System.Windows.Input.TouchDevice.OnCapture%2A> 메서드는 기본 구현이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-182">The <xref:System.Windows.Input.TouchDevice.OnCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="1f93f-183">필요한 터치 입력을 캡처할 때 작업을 수행 하도록 파생된 클래스에서 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-183">It can be overridden in a derived class to perform any actions that are required when the touch input is captured.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationEnded">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationEnded(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationEnded : bool -&gt; unit&#xA;override this.OnManipulationEnded : bool -&gt; unit" Usage="touchDevice.OnManipulationEnded cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><span data-ttu-id="1f93f-184">작업을 취소하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-184"><see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1f93f-185">조작이 종료되었을 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-185">Called when a manipulation has ended.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : unit -&gt; unit&#xA;override this.OnManipulationStarted : unit -&gt; unit" Usage="touchDevice.OnManipulationStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f93f-186">조작이 시작될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-186">Called when a manipulation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-187"><xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> 메서드는 기본 구현이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-187">The <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="1f93f-188">터치 조작을 시작할 때 필요한 상태인 작업을 수행 하도록 파생된 클래스에서 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-188">It can be overridden in a derived class to perform any actions that are required when touch manipulation is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationStarted" />
      </Docs>
    </Member>
    <Member MemberName="ReportDown">
      <MemberSignature Language="C#" Value="protected bool ReportDown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportDown" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportDown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportDown();" />
      <MemberSignature Language="F#" Value="member this.ReportDown : unit -&gt; bool" Usage="touchDevice.ReportDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f93f-189">요소에서 터치를 눌렀음을 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-189">Reports that a touch is pressed on an element.</span></span></summary>
        <returns><span data-ttu-id="1f93f-190"><see cref="E:System.Windows.UIElement.TouchDown" /> 이벤트가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-190"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchDown" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-191">클래스에서 상속 되 <xref:System.Windows.Input.TouchDevice> 시키려면이 메서드를 호출 해야 합니다 <xref:System.Windows.UIElement.TouchDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-191">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="1f93f-192">A <xref:System.Windows.UIElement.TouchEnter> 이벤트가 발생 하기 전에 <xref:System.Windows.UIElement.TouchDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-192">A <xref:System.Windows.UIElement.TouchEnter> event is raised before the <xref:System.Windows.UIElement.TouchDown> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchDown" />
        <altmember cref="E:System.Windows.UIElement3D.TouchDown" />
        <altmember cref="E:System.Windows.UIElement.TouchDown" />
      </Docs>
    </Member>
    <Member MemberName="ReportMove">
      <MemberSignature Language="C#" Value="protected bool ReportMove ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportMove" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportMove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportMove();" />
      <MemberSignature Language="F#" Value="member this.ReportMove : unit -&gt; bool" Usage="touchDevice.ReportMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f93f-193">요소에서 터치가 움직이고 있음을 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-193">Reports that a touch is moving across an element.</span></span></summary>
        <returns><span data-ttu-id="1f93f-194"><see cref="E:System.Windows.UIElement.TouchMove" /> 이벤트가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-194"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchMove" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-195">클래스에서 상속 되 <xref:System.Windows.Input.TouchDevice> 시키려면이 메서드를 호출 해야 합니다 <xref:System.Windows.UIElement.TouchMove> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-195">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchMove> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchMove" />
        <altmember cref="E:System.Windows.UIElement3D.TouchMove" />
        <altmember cref="E:System.Windows.UIElement.TouchMove" />
      </Docs>
    </Member>
    <Member MemberName="ReportUp">
      <MemberSignature Language="C#" Value="protected bool ReportUp ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportUp" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportUp () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportUp();" />
      <MemberSignature Language="F#" Value="member this.ReportUp : unit -&gt; bool" Usage="touchDevice.ReportUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f93f-196">요소에서 터치를 해제했음을 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-196">Reports that a touch was lifted from an element.</span></span></summary>
        <returns><span data-ttu-id="1f93f-197"><see cref="E:System.Windows.UIElement.TouchUp" /> 이벤트가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-197"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchUp" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-198">클래스에서 상속 되 <xref:System.Windows.Input.TouchDevice> 시키려면이 메서드를 호출 해야 합니다 <xref:System.Windows.UIElement.TouchUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-198">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="1f93f-199">A <xref:System.Windows.UIElement.TouchLeave> 이벤트가 발생 한 후의 <xref:System.Windows.UIElement.TouchUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-199">A <xref:System.Windows.UIElement.TouchLeave> event is raised after the <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchUp" />
        <altmember cref="E:System.Windows.UIElement3D.TouchUp" />
        <altmember cref="E:System.Windows.UIElement.TouchUp" />
      </Docs>
    </Member>
    <Member MemberName="SetActiveSource">
      <MemberSignature Language="C#" Value="protected void SetActiveSource (System.Windows.PresentationSource activeSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetActiveSource(class System.Windows.PresentationSource activeSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetActiveSource (activeSource As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetActiveSource(System::Windows::PresentationSource ^ activeSource);" />
      <MemberSignature Language="F#" Value="member this.SetActiveSource : System.Windows.PresentationSource -&gt; unit" Usage="touchDevice.SetActiveSource activeSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="activeSource"><span data-ttu-id="1f93f-200">이 장치에 대한 입력을 보고하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-200">The source that reports input for this device.</span></span></param>
        <summary><span data-ttu-id="1f93f-201">이 장치에 대한 입력을 보고하는 <see cref="T:System.Windows.PresentationSource" />를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-201">Sets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberSignature Language="F#" Value="member this.Synchronize : unit -&gt; unit" Usage="touchDevice.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f93f-202"><see cref="T:System.Windows.Input.TouchDevice" />에서 사용자 인터페이스를 기본 터치 지점과 동기화하도록 강제합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-202">Forces the <see cref="T:System.Windows.Input.TouchDevice" /> to synchronize the user interface with underlying touch points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-203">기본 터치 위치를 사용 하 여 사용자 인터페이스를 동기화 않을 <xref:System.Windows.UIElement.TouchMove> 이벤트를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-203">Synchronizing the user interface with the underlying touch positions might cause <xref:System.Windows.UIElement.TouchMove> events to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.GetPosition">
      <MemberSignature Language="C#" Value="System.Windows.Point IManipulator.GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Point System.Windows.Input.IManipulator.GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Function GetPosition (relativeTo As IInputElement) As Point Implements IManipulator.GetPosition" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Point System.Windows.Input.IManipulator.GetPosition(System::Windows::IInputElement ^ relativeTo) = System::Windows::Input::IManipulator::GetPosition;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="1f93f-204"><see cref="T:System.Windows.Input.IManipulator" />의 위치를 계산하기 위한 참조 프레임으로 사용할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-204">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span></span></param>
        <summary><span data-ttu-id="1f93f-205"><see cref="T:System.Windows.Input.IManipulator" /> 개체의 위치를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-205">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span></span></summary>
        <returns><span data-ttu-id="1f93f-206"><see cref="T:System.Windows.Input.IManipulator" /> 개체의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-206">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-207">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="1f93f-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1f93f-208"><xref:System.Windows.Input.TouchDevice> 인스턴스가 <xref:System.Windows.Input.IManipulator> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-208">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.Id">
      <MemberSignature Language="C#" Value="int System.Windows.Input.IManipulator.Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Id As Integer Implements IManipulator.Id" />
      <MemberSignature Language="C++ CLI" Value="property int System::Windows::Input::IManipulator::Id { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Input.IManipulator.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-209">운영 체제에서 제공한 <see cref="T:System.Windows.Input.TouchDevice" />의 고유 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-209">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" /> as provided by the operating system.</span></span></summary>
        <value><span data-ttu-id="1f93f-210"><see cref="T:System.Windows.Input.TouchDevice" />의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-210">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-211">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="1f93f-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1f93f-212"><xref:System.Windows.Input.TouchDevice> 인스턴스가 <xref:System.Windows.Input.IManipulator> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-212">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.ManipulationEnded">
      <MemberSignature Language="C#" Value="void IManipulator.ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub ManipulationEnded (cancel As Boolean) Implements IManipulator.ManipulationEnded" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) = System::Windows::Input::IManipulator::ManipulationEnded;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><span data-ttu-id="1f93f-213">작업을 취소하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-213"><see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1f93f-214">조작이 종료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-214">Occurs when a manipulation has ended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f93f-215">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="1f93f-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1f93f-216"><xref:System.Windows.Input.TouchDevice> 인스턴스가 <xref:System.Windows.Input.IManipulator> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-216">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-217"><see cref="T:System.Windows.Input.TouchDevice" />에서 입력을 받는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-217">Gets the element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="1f93f-218"><see cref="T:System.Windows.Input.TouchDevice" />에서 입력을 받는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-218">The element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Event Updated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler " Usage="member this.Updated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.IManipulator.Updated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f93f-219">터치 메시지가 전송되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1f93f-219">Occurs when a touch message is sent.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>