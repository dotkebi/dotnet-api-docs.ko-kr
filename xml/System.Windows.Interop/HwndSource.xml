<Type Name="HwndSource" FullName="System.Windows.Interop.HwndSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbb1a9b546daf5337580788d516a82cd3fc67c70" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57942662" /></Metadata><TypeSignature Language="C#" Value="public class HwndSource : System.Windows.PresentationSource, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSource" />
  <TypeSignature Language="VB.NET" Value="Public Class HwndSource&#xA;Inherits PresentationSource&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndSource : System::Windows::PresentationSource, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <TypeSignature Language="F#" Value="type HwndSource = class&#xA;    inherit PresentationSource&#xA;    interface IDisposable&#xA;    interface IWin32Window&#xA;    interface IKeyboardInputSink" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.PresentationSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="96bd1-101">Win32 창에 WPF(Windows Presentation Foundation) 콘텐츠를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-101">Presents Windows Presentation Foundation (WPF) content in a Win32 window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-102">이 클래스의 많은 멤버는 Internet 보안 영역에서 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="96bd1-102">Many members of this class are unavailable in the Internet security zone.</span></span>  
  
 <span data-ttu-id="96bd1-103"><xref:System.Windows.Interop.HwndSource> 를 구현 하는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 포함할 수 있는 창 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-103">An <xref:System.Windows.Interop.HwndSource> implements a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="96bd1-104">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 측정 및 렌더링는 입력을 대화형 창에서 콘텐츠 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-104">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input.</span></span> <span data-ttu-id="96bd1-105">때문에 합니다 <xref:System.Windows.Interop.HwndSource> 와 상호 운용 하도록 설계 된 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)],이 클래스는 여러 가지 하위 수준의 노출 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-105">Because the <xref:System.Windows.Interop.HwndSource> is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] features.</span></span> <span data-ttu-id="96bd1-106">다음을 수행 하려면이 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-106">You can use this class to do the following:</span></span>  
  
-   <span data-ttu-id="96bd1-107">창 스타일, 창 클래스 스타일을 지정 하 고 확장 창 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-107">Specify window styles, window class styles, and extended window styles.</span></span>  
  
-   <span data-ttu-id="96bd1-108">창 프로시저에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-108">Hook the window procedure.</span></span>  
  
-   <span data-ttu-id="96bd1-109">창 핸들 (HWND)에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-109">Provide access to the window handle (HWND).</span></span>  
  
-   <span data-ttu-id="96bd1-110">창을 소멸 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-110">Destroy the window.</span></span>  
  
 <span data-ttu-id="96bd1-111"><xref:System.Windows.Interop.HwndSource> 클래스는 일반 상호 운용성을 위해 설계 되었습니다 되며 관리 되는 HWND 래퍼로 설계 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-111">The <xref:System.Windows.Interop.HwndSource> class is designed for general interoperability and is not designed as a managed HWND wrapper.</span></span> <span data-ttu-id="96bd1-112">일반적으로 창이 나 해당 상태를 검사 하는 것에 대 한 속성을 조작 하기 위한 관리 되는 메서드를 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-112">In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.</span></span> <span data-ttu-id="96bd1-113">대신 합니다 <xref:System.Windows.Interop.HwndSource> 클래스에 대 한 액세스를 제공 합니다 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 창 핸들 (HWND)을 통해를 <xref:System.Windows.Interop.HwndSource.Handle%2A> PInvoke 기법을 통해 전달 될 수 있는 속성을 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] 창 조작 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="96bd1-113">Instead, the <xref:System.Windows.Interop.HwndSource> class provides access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in order to manipulate the window.</span></span>  
  
 <span data-ttu-id="96bd1-114">**생성**</span><span class="sxs-lookup"><span data-stu-id="96bd1-114">**Construction**</span></span>  
  
 <span data-ttu-id="96bd1-115">다양 한 측면을 <xref:System.Windows.Interop.HwndSource> 생성 시에만 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-115">Many aspects of the <xref:System.Windows.Interop.HwndSource> can only be specified at construction time.</span></span> <span data-ttu-id="96bd1-116">만들려는 <xref:System.Windows.Interop.HwndSource>, 먼저 만듭니다는 <xref:System.Windows.Interop.HwndSourceParameters> 구조체이 고 필요한 매개 변수를 사용 하 여 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-116">To create an <xref:System.Windows.Interop.HwndSource>, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters.</span></span> <span data-ttu-id="96bd1-117">이러한 매개 변수는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-117">These parameters include the following:</span></span>  
  
-   <span data-ttu-id="96bd1-118">클래스, 창 및 확장된 창 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-118">The class, window, and extended window styles.</span></span> <span data-ttu-id="96bd1-119">창을 만든 후 스타일을 변경 하려면 PInvoke를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-119">You must use PInvoke to change the styles after the window is created.</span></span> <span data-ttu-id="96bd1-120">창을 만든 후에 모든 스타일을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-120">Not all styles can be changed after the window is created.</span></span> <span data-ttu-id="96bd1-121">참조 된 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 창 스타일을 변경 하기 전에 설명서.</span><span class="sxs-lookup"><span data-stu-id="96bd1-121">Consult the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.</span></span>  
  
-   <span data-ttu-id="96bd1-122">창의 초기 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-122">The initial position of the window.</span></span>  
  
-   <span data-ttu-id="96bd1-123">크기 지정 되거나 결정된 된 크기에서 결정 해야 하는지 여부를 포함 하는 창의 초기 크기는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-123">The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span>  
  
-   <span data-ttu-id="96bd1-124">부모 창입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-124">The parent window.</span></span>  
  
-   <span data-ttu-id="96bd1-125"><xref:System.Windows.Interop.HwndSourceHook> 창 프로시저 체인에 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-125">The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain.</span></span> <span data-ttu-id="96bd1-126">생성 시 후크를 지정 하는 경우 모든 창의 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-126">If you specify a hook at construction time, it receives all messages for the window.</span></span> <span data-ttu-id="96bd1-127">사용할 수 있습니다 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 창을 만든 후 후크를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-127">You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.</span></span>  
  
-   <span data-ttu-id="96bd1-128">투명도 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-128">The transparency settings.</span></span> <span data-ttu-id="96bd1-129">최상위 창을 바탕 화면의 픽셀 별 투명도 따라 다른 windows와 함께 사용 하도록 구성할 수 있습니다는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-129">A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="96bd1-130">이 작업이 가능 하도록 설정 합니다 <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> 속성에는 <xref:System.Windows.Interop.HwndSourceParameters> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-130">To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`.</span></span> <span data-ttu-id="96bd1-131">이 속성을 통해서만 생성 시에 지정할 수는 <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> 생성자 서명 하며 여러 가지 제한을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-131">This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.</span></span>  
  
 <span data-ttu-id="96bd1-132">데이터로 채운 후는 <xref:System.Windows.Interop.HwndSourceParameters> 구조체를 전달 하는 <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> 에 대 한 생성자는 <xref:System.Windows.Interop.HwndSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-132">After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="96bd1-133">**개체 수명**</span><span class="sxs-lookup"><span data-stu-id="96bd1-133">**Object Lifetime**</span></span>  
  
 <span data-ttu-id="96bd1-134"><xref:System.Windows.Interop.HwndSource> 는 일반 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 개체와 수명이 가비지 수집기에 의해 관리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-134">An <xref:System.Windows.Interop.HwndSource> is a regular [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector.</span></span> <span data-ttu-id="96bd1-135">때문에 합니다 <xref:System.Windows.Interop.HwndSource> 관리 되지 않는 리소스를 나타내는 <xref:System.Windows.Interop.HwndSource> 구현 <xref:System.IDisposable>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-135">Because the <xref:System.Windows.Interop.HwndSource> represents an unmanaged resource, <xref:System.Windows.Interop.HwndSource> implements <xref:System.IDisposable>.</span></span> <span data-ttu-id="96bd1-136">동기적으로 호출 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 즉시 제거는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 창 소유자 스레드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="96bd1-136">Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window if called from the owner thread.</span></span> <span data-ttu-id="96bd1-137">다른 스레드에서 호출 하는 경우는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 창 비동기적으로 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-137">If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously.</span></span> <span data-ttu-id="96bd1-138">호출 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 명시적으로 상호 운용 코드에서 해야 할 수도 있습니다 특정 상호 운용 시나리오에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-138">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.</span></span>  
  
 <span data-ttu-id="96bd1-139">**창 프로시저**</span><span class="sxs-lookup"><span data-stu-id="96bd1-139">**Window Procedures**</span></span>  
  
 <span data-ttu-id="96bd1-140"><xref:System.Windows.Interop.HwndSource> 클래스 자체 창 프로시저를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-140">The <xref:System.Windows.Interop.HwndSource> class implements its own window procedure.</span></span> <span data-ttu-id="96bd1-141">이 창 프로시저 레이아웃, 렌더링, 관련 된 것과 같은 중요 한 창 메시지를 처리 하는 데 사용 되 고 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-141">This window procedure is used to process important window messages, such as those related to layout, rendering, and input.</span></span> <span data-ttu-id="96bd1-142">그러나 직접 사용 하기 위해 창 프로시저도 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-142">However, you can also hook the window procedure for your own use.</span></span> <span data-ttu-id="96bd1-143">설정 하 여 사용자 고유의 후크를 생성 하는 동안 지정할 수 있습니다는 <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> 속성 또는 사용자가 이용할 수 있습니다 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 및 <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> 추가 하 고 창을 만든 후 후크를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-143">You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created.</span></span> <span data-ttu-id="96bd1-144">마지막-후입선출 순서에 후크를 처리 하는 기본 제공 하기 전에 실행할 수 있도록 하는 후크를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-144">The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.</span></span> <span data-ttu-id="96bd1-145">실제 후크 약한 참조로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-145">The actual hooks are held by a weak reference.</span></span> <span data-ttu-id="96bd1-146">따라서 후크 대리자의 수명을 관리 하는 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-146">Therefore, make sure that you manage the lifetime of your hook delegate.</span></span>  
  
 <span data-ttu-id="96bd1-147">에 대 한 자세한 내용은 <xref:System.Windows.Interop.HwndSource> 상호 운용 다른 클래스를 살펴보고 [WPF 및 Win32 상호 운용성](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-147">For more information about <xref:System.Windows.Interop.HwndSource> and other interoperation classes, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 <span data-ttu-id="96bd1-148">통지 하는 방법에 대 한 생성자 <xref:System.Windows.Interop.HwndSource> 유사한 매개 변수는 매개 변수를 사용 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 와 같은 함수 [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkID=98462)합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-148">Notice how the constructors for <xref:System.Windows.Interop.HwndSource> take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkID=98462).</span></span>  
  
 <span data-ttu-id="96bd1-149">크기 조정 변환을를 적용 해야 합니다 <xref:System.Windows.Interop.HwndSource.RootVisual%2A> 의 <xref:System.Windows.Interop.HwndSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-149">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="96bd1-150">주의 참조 하십시오 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-150">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96bd1-151"><see cref="T:System.Windows.Interop.HwndSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-151">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-152">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-152">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (System.Windows.Interop.HwndSourceParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Interop.HwndSourceParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As HwndSourceParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(System::Windows::Interop::HwndSourceParameters parameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : System.Windows.Interop.HwndSourceParameters -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="96bd1-153">창을 만드는 데 필요한 매개 변수가 포함된 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-153">A structure that contains the parameters that are required to create the window.</span></span></param>
        <summary><span data-ttu-id="96bd1-154">초기 설정을 포함하는 구조체를 사용하여 <see cref="T:System.Windows.Interop.HwndSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-154">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class by using a structure that contains the initial settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-155">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-155">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="96bd1-156">이 생성자 시그니처는 일부 적절 한 초기 기본값을 포함 하는 기본 구조 때문에 특정 한 상황에서는 더 편리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-156">This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-157">이 시그니처를 사용 하는 경우 기본값을 사용 하지 마세요 <xref:System.Windows.Interop.HwndSourceParameters> 생성자를 생성 하는 <xref:System.Windows.Interop.HwndSourceParameters> 의 구조는 `parameters` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-157">If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value.</span></span> <span data-ttu-id="96bd1-158">사용 해야 합니다는 <xref:System.Windows.Interop.HwndSourceParameters> 생성자는 초기 창 이름을 지정할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-158">You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name.</span></span> <span data-ttu-id="96bd1-159">기본값을 사용 하는 경우 <xref:System.Windows.Interop.HwndSourceParameters> 생성자 만들고는 <xref:System.Windows.Interop.HwndSource> 를 사용 하 여는 <xref:System.Windows.Interop.HwndSource> 초기 창 이름이 표현된 된 HWND에 대 한 구성 요구 사항 이므로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-159">If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-160">이 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-160">to create instances of this class.</span></span> <span data-ttu-id="96bd1-161">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-161">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="96bd1-162">창에 대한 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 클래스 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-162">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="96bd1-163">창에 대한 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-163">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="96bd1-164">창에 대한 확장 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-164">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="96bd1-165">창 왼쪽 가장자리의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-165">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="96bd1-166">창 위쪽 가장자리의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-166">The position of the window's upper edge.</span></span></param>
        <param name="name"><span data-ttu-id="96bd1-167">창의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-167">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="96bd1-168">창의 부모 창의 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-168">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="96bd1-169">지정된 클래스 스타일, 스타일, 확장 스타일, x-y 위치, 이름 및 부모 창을 사용하여 <see cref="T:System.Windows.Interop.HwndSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-169">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-170">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-170">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-171">이 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-171">to create instances of this class.</span></span> <span data-ttu-id="96bd1-172">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-172">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="96bd1-173">창에 대한 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 클래스 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-173">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="96bd1-174">창에 대한 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-174">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="96bd1-175">창에 대한 확장 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-175">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="96bd1-176">창 왼쪽 가장자리의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-176">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="96bd1-177">창 위쪽 가장자리의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-177">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="96bd1-178">창의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-178">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="96bd1-179">창의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-179">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="96bd1-180">창의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-180">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="96bd1-181">창의 부모 창의 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-181">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="96bd1-182">지정된 클래스 스타일, 스타일, 확장 스타일, x-y 위치, 너비, 높이, 이름 및 부모 창을 사용하여 <see cref="T:System.Windows.Interop.HwndSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-182">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-183">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-183">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-184">이 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-184">to create instances of this class.</span></span> <span data-ttu-id="96bd1-185">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-185">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent, bool adjustSizingForNonClientArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr, adjustSizingForNonClientArea As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint * bool -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent, adjustSizingForNonClientArea)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
        <Parameter Name="adjustSizingForNonClientArea" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="96bd1-186">창에 대한 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 클래스 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-186">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="96bd1-187">창에 대한 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-187">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="96bd1-188">창에 대한 확장 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-188">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="96bd1-189">창 왼쪽 가장자리의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-189">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="96bd1-190">창 위쪽 가장자리의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-190">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="96bd1-191">창의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-191">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="96bd1-192">창의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-192">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="96bd1-193">창의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-193">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="96bd1-194">창의 부모 창의 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-194">The handle of the window's parent window.</span></span></param>
        <param name="adjustSizingForNonClientArea"><span data-ttu-id="96bd1-195">크기 조정을 위해 레이아웃 관리자에 비클라이언트 영역을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-195"><see langword="true" /> to have the layout manager include the non-client area for sizing; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="96bd1-196">지정된 클래스 스타일, 스타일, 확장 스타일, x-y 위치, 너비, 높이, 이름, 부모 창을 사용하고 창의 자동 크기 조정 여부를 지정하여 <see cref="T:System.Windows.Interop.HwndSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-196">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-197">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-197">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-198">이 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-198">to create instances of this class.</span></span> <span data-ttu-id="96bd1-199">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-199">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AcquireHwndFocusInMenuMode : bool" Usage="System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-200">이 <see cref="T:System.Windows.Interop.HwndSource" />에 대해 창이 포함된 WPF에 대한 Win32 포커스를 가져올지 여부를 결정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-200">Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="96bd1-201">사용자가 메뉴를 조작하는 경우 창이 포함된 WPF에 대해 Win32 포커스를 가져오려면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-201"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-202">만들 때이 값이 설정 된 <xref:System.Windows.Interop.HwndSource> 설정 하 여를 <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-202">This value is set when you create the <xref:System.Windows.Interop.HwndSource> by setting the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> parameter.</span></span>  
  
 <span data-ttu-id="96bd1-203">기본 값으로 결정 됩니다는 <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-203">The default value is determined by the <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHook">
      <MemberSignature Language="C#" Value="public void AddHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.AddHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.AddHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="96bd1-204">창 메시지를 받는 처리기 구현(<see cref="T:System.Windows.Interop.HwndSourceHook" /> 대리자 기반)입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-204">The handler implementation (based on the <see cref="T:System.Windows.Interop.HwndSourceHook" /> delegate) that receives the window messages.</span></span></param>
        <summary><span data-ttu-id="96bd1-205">모든 창 메시지를 받는 이벤트 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-205">Adds an event handler that receives all window messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-206">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-206">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="96bd1-207">대부분 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 도달 하는 메시지를 <xref:System.Windows.Interop.HwndSource> 는 대략적인 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-207">Most [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] messages that reach the <xref:System.Windows.Interop.HwndSource> have an approximate [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span> <span data-ttu-id="96bd1-208">사용할 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 메시지에 없는 경우를 처리 하 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-208">You use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to handle the cases where the message has no [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span>  
  
 <span data-ttu-id="96bd1-209">합니다 <xref:System.Windows.Interop.HwndSourceHook> 대리자의 매개 변수 프로필 비슷합니다는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 주 창 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-209">The <xref:System.Windows.Interop.HwndSourceHook> delegate resembles the parameter profile of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] main window procedure.</span></span> <span data-ttu-id="96bd1-210">모든 창 메시지의 주 창 프로시저를 <xref:System.Windows.Interop.HwndSource> 부모 창은 전달 됩니다는 <xref:System.Windows.Interop.HwndSourceHook> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-210">All window messages that the main window procedure of the <xref:System.Windows.Interop.HwndSource> parent window receives are also forwarded to the <xref:System.Windows.Interop.HwndSourceHook> delegates.</span></span>  
  
 <span data-ttu-id="96bd1-211">후크 추가 된 순서 대로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-211">Hooks are called in the order that they were added.</span></span> <span data-ttu-id="96bd1-212">반환 후크가 있으면 `handled` = `true` 메시지에 대 한 호출 순서에서 그 후 후크 해당 메시지에 대해 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-212">If any hook returns `handled`=`true` for a message, the hooks after it in the call order are not called for that message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-213">처리를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-213">to add handling.</span></span> <span data-ttu-id="96bd1-214">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-214">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
        <altmember cref="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      </Docs>
    </Member>
    <Member MemberName="AutoResized">
      <MemberSignature Language="C#" Value="public event System.Windows.AutoResizedEventHandler AutoResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.AutoResizedEventHandler AutoResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.AutoResized" />
      <MemberSignature Language="VB.NET" Value="Public Event AutoResized As AutoResizedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::AutoResizedEventHandler ^ AutoResized;" />
      <MemberSignature Language="F#" Value="member this.AutoResized : System.Windows.AutoResizedEventHandler " Usage="member this.AutoResized : System.Windows.AutoResizedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.AutoResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-215">레이아웃에서 <see cref="T:System.Windows.Interop.HwndSource" />의 크기를 자동으로 조정할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-215">Occurs when layout causes the <see cref="T:System.Windows.Interop.HwndSource" /> to automatically resize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-216">기본 동작 <xref:System.Windows.Interop.HwndSource> 콘텐츠와 통해 보고 된 변경 내용에 따라 창 영역을 자동으로 조정 하는 것은 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 레이아웃 시스템입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-216">The native behavior of <xref:System.Windows.Interop.HwndSource> is to automatically resize content and the window region based on changes reported through the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="96bd1-217">현재 최소화 하거나 경우 창 크기가 조정 되지 않습니다 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 로 설정 된 <xref:System.Windows.SizeToContent.Manual>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-217">The window does not resize if it is currently minimized or if <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Manual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildKeyboardInputSinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildKeyboardInputSinks As IEnumerable(Of IKeyboardInputSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ ChildKeyboardInputSinks { System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildKeyboardInputSinks : seq&lt;System.Windows.Interop.IKeyboardInputSink&gt;" Usage="System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__29))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__24))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__31))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-218">등록된 입력 싱크의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-218">Gets a sequence of registered input sinks.</span></span></summary>
        <value><span data-ttu-id="96bd1-219">키보드 입력 싱크의 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-219">An enumeration of keyboard input sinks.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As HwndTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndTarget ^ CompositionTarget { System::Windows::Interop::HwndTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Interop.HwndTarget" Usage="System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-220">호스팅된 창의 표시 관리자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-220">Gets the visual manager for the hosted window.</span></span></summary>
        <value><span data-ttu-id="96bd1-221">표시 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-221">The visual manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-222">재정의 <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> 값을 재정의 하기 위해는 <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-222">Override <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> in order to override the value that <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandleRef">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.HandleRef CreateHandleRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.HandleRef CreateHandleRef() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHandleRef () As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::HandleRef CreateHandleRef();" />
      <MemberSignature Language="F#" Value="member this.CreateHandleRef : unit -&gt; System.Runtime.InteropServices.HandleRef" Usage="hwndSource.CreateHandleRef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd1-223"><see cref="T:System.Windows.Interop.HwndSource" />에 대한 창 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-223">Gets the window handle for the <see cref="T:System.Windows.Interop.HwndSource" />.</span></span> <span data-ttu-id="96bd1-224">창 핸들은 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 구조체의 일부로 패키지됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-224">The window handle is packaged as part of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> structure.</span></span></summary>
        <returns><span data-ttu-id="96bd1-225">이 <see cref="T:System.Windows.Interop.HwndSource" />에 대한 창 핸들을 포함하는 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-225">A structure that contains the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-226">가져온 핸들을 사용할 수 있습니다 <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> 참조에는 <xref:System.Windows.Interop.HwndSource> 에서 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-226">You can use the handle that is obtained from <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> to reference the <xref:System.Windows.Interop.HwndSource> from [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] code.</span></span> <span data-ttu-id="96bd1-227">메시지 처리 및 창의 동작과 같은 작업에 대 한 핸들을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-227">Use the handle for operations such as message handling and window behavior.</span></span>  
  
 <span data-ttu-id="96bd1-228">방금 핸들을 사용 <xref:System.Windows.Interop.HwndSource.Handle%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-228">To get just the handle, use <xref:System.Windows.Interop.HwndSource.Handle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.Handle" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public static bool DefaultAcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultAcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DefaultAcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAcquireHwndFocusInMenuMode : bool with get, set" Usage="System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-229"><see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />의 새 인스턴스에 대한 기본 <see cref="T:System.Windows.Interop.HwndSource" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-229">Gets or sets the default <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> value for new instances of <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="96bd1-230">사용자가 메뉴를 조작하는 경우 창이 포함된 WPF에 대해 Win32 포커스를 가져오려면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-230"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="96bd1-231">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-231">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-232">새 인스턴스 <xref:System.Windows.Interop.HwndSource> 가 <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> 다른 값을 매개 변수로 전달 되지 않으면이 기본 값으로 설정 합니다 <xref:System.Windows.Interop.HwndSource> 생성자를 사용 하 여 특정 인스턴스의 경우는 <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-232">New instances of <xref:System.Windows.Interop.HwndSource> have <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> set to this default value, unless a different value is passed as a parameter to the <xref:System.Windows.Interop.HwndSource> constructor for a specific instance, by using the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="96bd1-233">이 속성을 가져오려면.</span><span class="sxs-lookup"><span data-stu-id="96bd1-233">to get this property.</span></span> <span data-ttu-id="96bd1-234">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-234">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hwndSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd1-235"><see cref="T:System.Windows.Interop.HwndSource" />에서 사용하는 관리되는 리소스를 모두 해제하고 <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-235">Releases all managed resources that are used by the <see cref="T:System.Windows.Interop.HwndSource" />, and raises the <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-236">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-236">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="96bd1-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 시작 관련 HWND에 대 한 정리 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="96bd1-238">경우 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 호출 되는 주 UI 스레드가 다른 스레드를 통해 정리 작업을 수 있습니다 될 때까지 지연 주 UI 스레드를 게시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-238">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span>  
  
 <span data-ttu-id="96bd1-239">호출 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 명시적으로 상호 운용 코드에서 해야 할 수도 있습니다 특정 상호 운용 시나리오의 경우 때문에 <xref:System.Windows.Interop.HwndSource> 일부 상호 운용 시나리오에서 상호 운용 경계를 넘어 몇 가지 참조를 생성할 수 있습니다 하는 시기 적절 하 게 가비지 수집을 하지 못할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-239">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <xref:System.Windows.Interop.HwndSource> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.IsDisposed" />
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-240">이 개체에서 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 메서드가 호출될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-240">Occurs when the <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> method is called on this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-241">합니다 <xref:System.Windows.Interop.HwndSource.Disposed> 이벤트가 발생 하 여 리소스를 해제 하기 전에 <xref:System.Windows.Interop.HwndSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-241">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised before any resources are released by the <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="96bd1-242"><xref:System.Windows.Interop.HwndSource.Disposed> 이벤트 이벤트를 발생 시키는 개체 제거에 대 한 모든 참조를 갖는 것을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-242">The <xref:System.Windows.Interop.HwndSource.Disposed> event indicates that the object that raises the event is about to have all references to it removed.</span></span>  
  
 <span data-ttu-id="96bd1-243">사용 하 여 <xref:System.Windows.Interop.HwndSource.Disposed> 하며 <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> 호출을 피하기 위해 속성 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 두 번 (예외 발생).</span><span class="sxs-lookup"><span data-stu-id="96bd1-243">Use <xref:System.Windows.Interop.HwndSource.Disposed> and the <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> property to avoid calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> twice (which raises an exception).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.HwndDpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.HwndDpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DpiChanged As HwndDpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::HwndDpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HwndDpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-244">이 Hwnd의 모니터 DPI가 변경되거나 Hwnd가 다른 DPI의 모니터로 이동될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-244">Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.HwndSource FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Interop.HwndSource FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As HwndSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Interop::HwndSource ^ FromHwnd(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwnd : nativeint -&gt; System.Windows.Interop.HwndSource" Usage="System.Windows.Interop.HwndSource.FromHwnd hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="96bd1-245">제공된 창 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-245">The provided window handle.</span></span></param>
        <summary><span data-ttu-id="96bd1-246">지정된 창의 <see cref="T:System.Windows.Interop.HwndSource" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-246">Returns the <see cref="T:System.Windows.Interop.HwndSource" /> object of the specified window.</span></span></summary>
        <returns><span data-ttu-id="96bd1-247"><paramref name="hwnd" /> 창 핸들에 지정된 창에 대한 <see cref="T:System.Windows.Interop.HwndSource" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-247">The <see cref="T:System.Windows.Interop.HwndSource" /> object for the window that is specified by the <paramref name="hwnd" /> window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-248">이 방법은 사용할 수 없습니다 또는 부분 신뢰 인터넷 보안 영역에서 일반적입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-248">This method is not available in the Internet security zone, or for partial trust in general.</span></span>  
  
 <span data-ttu-id="96bd1-249">이 메서드를 사용 하 여 반환 하는 <xref:System.Windows.Interop.HwndSource> 상호 운용 창이 명시적으로 없는 창에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-249">You can use this method to return an <xref:System.Windows.Interop.HwndSource> for a window that is not explicitly an interoperation window.</span></span> <span data-ttu-id="96bd1-250">이 대 한 절차가입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-250">The procedure for this is:</span></span>  
  
1.  <span data-ttu-id="96bd1-251">만들기는 <xref:System.Windows.Interop.WindowInteropHelper> 인스턴스 (기본 제공 <xref:System.Windows.Window> 생성자 매개 변수로).</span><span class="sxs-lookup"><span data-stu-id="96bd1-251">Create a <xref:System.Windows.Interop.WindowInteropHelper> instance (providing the main <xref:System.Windows.Window> as a constructor parameter).</span></span>  
  
2.  <span data-ttu-id="96bd1-252">값을 가져올는 <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> 속성에서 <xref:System.Windows.Interop.WindowInteropHelper> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="96bd1-252">Get the value of the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property from that <xref:System.Windows.Interop.WindowInteropHelper> instance.</span></span>  
  
3.  <span data-ttu-id="96bd1-253">해당 HWND 값에 대 한 매개 변수로 전달 <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-253">Pass that HWND value as a parameter to <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>.</span></span>  
  
 <span data-ttu-id="96bd1-254">이 기술은 다음 일반 추가 하려는 경우에 유용할 수 있습니다 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 메시지 창으로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-254">This technique can be useful if you then want to add general <xref:System.Windows.Interop.HwndSource.AddHook%2A> message processing to the window.</span></span> <span data-ttu-id="96bd1-255">그러나 만들 때마다는 <xref:System.Windows.Interop.HwndSource>를 제거 하는 일을 담당 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-255">However, whenever you create an <xref:System.Windows.Interop.HwndSource>, you are also responsible for destroying it.</span></span> <span data-ttu-id="96bd1-256">이 참인 경우에를 <xref:System.Windows.Application> 응용 프로그램에 대 한 개체 <xref:System.Windows.Interop.HwndSource> 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-256">This is true even if the <xref:System.Windows.Application> object for an application <xref:System.Windows.Interop.HwndSource> is disposed.</span></span> <span data-ttu-id="96bd1-257">자세한 내용은 설명 부분을에서 참조 <xref:System.Windows.Interop.HwndSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-257">For more information, see Remarks on <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-258">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-258">to call this method.</span></span> <span data-ttu-id="96bd1-259">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-259">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.WindowInteropHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="override this.GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="hwndSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd1-260">창의 표시 대상을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-260">Gets the visual target of the window.</span></span></summary>
        <returns><span data-ttu-id="96bd1-261">창의 표시 대상을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-261">Returns the visual target of the window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-262">기본 구현으로 동일한 결과 반환 합니다. <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-262">The default implementation returns the same result as <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="96bd1-263">유형별 표시 대상을 반환 하려면이 메서드를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-263">Implement this method to return a type-specific visual target.</span></span> <span data-ttu-id="96bd1-264"><see cref="T:System.Windows.Interop.HwndSource" /> 반환 하려면이 메서드를 구현 <see cref="T:System.Windows.Interop.HwndTarget" />합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-264"><see cref="T:System.Windows.Interop.HwndSource" /> implements this method to return <see cref="T:System.Windows.Interop.HwndTarget" />.</span></span></para></block>
        <altmember cref="T:System.Windows.Media.CompositionTarget" />
        <altmember cref="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.HwndSource.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-265">이 <see cref="T:System.Windows.Interop.HwndSource" />의 창 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-265">Gets the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="96bd1-266">창 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-266">The window handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-267">이 속성은 인터넷 보안 영역에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-267">This property is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-268">이 포인터에 액세스할 수</span><span class="sxs-lookup"><span data-stu-id="96bd1-268">to access this pointer.</span></span> <span data-ttu-id="96bd1-269">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-269">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithinCore : unit -&gt; bool&#xA;override this.HasFocusWithinCore : unit -&gt; bool" Usage="hwndSource.HasFocusWithinCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd1-270">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-270">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns><span data-ttu-id="96bd1-271">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-271"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public override bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-272">이 <see cref="M:System.Windows.Interop.HwndSource.Dispose" />에 대해 <see cref="T:System.Windows.Interop.HwndSource" />가 호출되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-272">Gets a value that indicates whether <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> has been called on this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="96bd1-273">개체에 대해 <see cref="M:System.Windows.Interop.HwndSource.Dispose" />가 호출되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-273"><see langword="true" /> if the object has had <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> called on it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-274"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 시작 관련 HWND에 대 한 정리 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-274"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="96bd1-275">경우 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 호출 되는 주 UI 스레드가 다른 스레드를 통해 정리 작업을 수 있습니다 될 때까지 지연 주 UI 스레드를 게시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-275">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span> <span data-ttu-id="96bd1-276">합니다 <xref:System.Windows.Interop.HwndSource.Disposed> 이벤트가 발생의 값과 <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> 됩니다 `false` 즉시 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-276">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised and the value of <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> becomes `false` as soon as <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called.</span></span> <span data-ttu-id="96bd1-277">호출 하는 경우이 시간 동안 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 다시 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-277">During this time, if you call <xref:System.Windows.Interop.HwndSource.Dispose%2A> again, <xref:System.Windows.Interop.HwndSource.Dispose%2A> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSiteCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberSignature Language="VB.NET" Value="Protected Property KeyboardInputSiteCore As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSiteCore { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSiteCore : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-278">구성 요소 컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-278">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></summary>
        <value><span data-ttu-id="96bd1-279">컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조입니다. 또는 사이트가 할당되지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-279">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface; or <see langword="null" /> if no site is assigned.</span></span> <span data-ttu-id="96bd1-280">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-280">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-281">이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-281">to set this property.</span></span> <span data-ttu-id="96bd1-282">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-282">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.HwndDpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.HwndDpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As HwndDpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::HwndDpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit" Usage="hwndSource.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.HwndDpiChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="96bd1-283">이벤트의 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-283">The event arguments</span></span></param>
        <summary><span data-ttu-id="96bd1-284">창의 DPI가 변경될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-284">Called when the DPI is going to change for the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-285">사용자가이 이벤트를 처리 하는 경우 WPF는 시각적 개체가 확장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-285">If the user handles this event,         WPF does not scale any visuals.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-286">이 메서드는 중요 한 데이터 액세스 <xref:System.Windows.Interop.HwndTarget>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-286">This method accesses critical data <xref:System.Windows.Interop.HwndTarget>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonicCore :  * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.OnMnemonicCore :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.OnMnemonicCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="96bd1-287">니모닉 및 연결된 데이터에 대한 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-287">The message for the mnemonic and associated data.</span></span></param>
        <param name="modifiers"><span data-ttu-id="96bd1-288">보조키입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-288">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="96bd1-289">이 싱크에 대한 니모닉(선택키) 중 하나가 호출될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-289">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns><span data-ttu-id="96bd1-290">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-290"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96bd1-291"><paramref name="msg" />는 WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, 또는 WM_DEADCHAR 가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-291"><paramref name="msg" /> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-292">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-292">to call this method.</span></span> <span data-ttu-id="96bd1-293">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-293">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="member this.RegisterKeyboardInputSinkCore : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="hwndSource.RegisterKeyboardInputSinkCore sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="96bd1-294">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 싱크입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-294">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="96bd1-295">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 인터페이스를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-295">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="96bd1-296">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-296">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-297">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-297">to call this method.</span></span> <span data-ttu-id="96bd1-298">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-298">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHook">
      <MemberSignature Language="C#" Value="public void RemoveHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.RemoveHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.RemoveHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="96bd1-299">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-299">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="96bd1-300"><see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />로 추가된 이벤트 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-300">Removes the event handlers that were added by <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd1-301">인터넷 보안 영역에서는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-301">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-302">처리기를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-302">to remove handlers.</span></span> <span data-ttu-id="96bd1-303">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-303">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreFocusMode : System.Windows.Input.RestoreFocusMode" Usage="System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-304">창의 <see cref="T:System.Windows.Input.RestoreFocusMode" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-304">Gets the <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></summary>
        <value><span data-ttu-id="96bd1-305">창의 <see cref="T:System.Windows.Input.RestoreFocusMode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-305">The <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-306">이 속성에만 설정할 수 있습니다는 <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> 생성자를 사용 하 여는 <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-306">This property can be set only in the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> constructor by using the <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public override System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Interop.HwndSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-307">창의 <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-307">Gets or sets the <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> of the window.</span></span></summary>
        <value><span data-ttu-id="96bd1-308">창의 루트 시각적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-308">The root visual object of the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-309">이 속성을 사용 하 여 연결할를 <xref:System.Windows.Controls.Page> 또는 시각적 개체를 다른 루트를 <xref:System.Windows.Interop.HwndSource>입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-309">Use this property to connect a <xref:System.Windows.Controls.Page> or another root visual to the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="96bd1-310">배율 변환 해야 적용할 수 없습니다는 <xref:System.Windows.Interop.HwndSource.RootVisual%2A> 의 <xref:System.Windows.Interop.HwndSource> 이 비활성화할 수 있으므로 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-310">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource> because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="96bd1-311">콘텐츠 확장 됩니다. 그러나 포함 하는 창의 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-311">The content will scale, but the enclosing window will not.</span></span> <span data-ttu-id="96bd1-312">변환 되는 개체에 적용 하는 대신 합니다 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>, 개체의 자식 요소에 변환을 적용 합니다 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span><span class="sxs-lookup"><span data-stu-id="96bd1-312">Instead of applying the transformation to the object that is the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>, apply the transformation to an object that is a child element of the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span> <span data-ttu-id="96bd1-313">추가 포함 요소를 추가 해야 하는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 확장 가능한 개체를 제공 하기 위해 패널 등의 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-313">You might need to add an extra enclosing element to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content, such as a panel, in order to provide a scaleable object.</span></span>  
  
 <span data-ttu-id="96bd1-314">추가할 수는 <xref:System.Windows.Window> 루트 visual로 최상위 창 (ws_overlapped) 으로만 하지만 자식 창이 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-314">You can add a <xref:System.Windows.Window> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-315">이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-315">to set this property.</span></span> <span data-ttu-id="96bd1-316">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-316">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.HwndTarget.RootVisual" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-317">콘텐츠에 맞게 창의 크기가 조정되는지 여부와 크기 조정 방법을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-317">Get or sets whether and how the window is sized to its content.</span></span></summary>
        <value><span data-ttu-id="96bd1-318">열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-318">One of the enumeration values.</span></span> <span data-ttu-id="96bd1-319">기본값은 <see cref="F:System.Windows.SizeToContent.Manual" />로, 콘텐츠에 맞게 창의 크기를 조정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-319">The default value is <see cref="F:System.Windows.SizeToContent.Manual" />, which specifies that the window is not sized to its content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-320">최종 사용자가 직접 경우 설정할 수 있습니다 하지 응용 프로그램 UI 통해이 속성 기능 응용 프로그램에 의해 노출 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-320">End users might indirectly set this property through application UI, if that functionality is exposed by the application.</span></span>  
  
 <span data-ttu-id="96bd1-321">크기 조정 변환을를 적용 해야 합니다 <xref:System.Windows.Interop.HwndSource.RootVisual%2A> 의 <xref:System.Windows.Interop.HwndSource>이므로이 비활성화할 수 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-321">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>, because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="96bd1-322">주의 참조 하십시오 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-322">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeToContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeToContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SizeToContentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeToContentChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeToContentChanged : EventHandler " Usage="member this.SizeToContentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-323"><see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-323">Occurs when the value of the <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-324"><xref:System.Windows.Interop.HwndSource.SizeToContentChanged> 이벤트는 사용자 상호 작용으로 인해 변경 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-324">The <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is only raised when user interaction causes the change.</span></span> <span data-ttu-id="96bd1-325">설정 하는 경우 <xref:System.Windows.Window.SizeToContent%2A> 코드에서의 <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-325">If you set <xref:System.Windows.Window.SizeToContent%2A> in code, the <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Interop.HwndSource.AutoResized" />
        <altmember cref="P:System.Windows.Interop.HwndSource.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd1-326">이 멤버에 대한 설명은 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-326">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="96bd1-327">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-327"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-328">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="96bd1-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96bd1-329"><xref:System.Windows.Interop.HwndSource> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-329">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System::Windows::Interop::IKeyboardInputSink::KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-330">이 멤버에 대한 설명은 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-330">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span></span></summary>
        <value><span data-ttu-id="96bd1-331">컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-331">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-332">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="96bd1-332">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96bd1-333"><xref:System.Windows.Interop.HwndSource> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-333">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="96bd1-334">이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-334">to set this property.</span></span> <span data-ttu-id="96bd1-335">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-335">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/0ffbde0d-701d-45a3-a6fa-dd71f4d9772e"><span data-ttu-id="96bd1-336">WPF 및 Win32 상호 운용성 개요</span><span class="sxs-lookup"><span data-stu-id="96bd1-336">WPF and Win32 Interoperation Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ee5258b7-6567-415a-9b1c-c0cbe46e79ef"><span data-ttu-id="96bd1-337">입력 개요</span><span class="sxs-lookup"><span data-stu-id="96bd1-337">Input Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="96bd1-338">니모닉 및 연결된 데이터에 대한 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-338">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="96bd1-339">이 메시지 구조체를 수정하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-339">Do not modify this message structure.</span></span> <span data-ttu-id="96bd1-340">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-340">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="96bd1-341">보조키입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-341">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="96bd1-342">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-342">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="96bd1-343">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-343"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-344">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="96bd1-344">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96bd1-345"><xref:System.Windows.Interop.HwndSource> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-345">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="96bd1-346">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 싱크입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-346">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="96bd1-347">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-347">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span></span></summary>
        <returns><span data-ttu-id="96bd1-348">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-348">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-349">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="96bd1-349">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96bd1-350"><xref:System.Windows.Interop.HwndSource> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-350">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-351">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-351">to call this method.</span></span> <span data-ttu-id="96bd1-352">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-352">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="96bd1-353">포커스를 첫 번째 또는 마지막 탭 정지로 설정해야 하는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-353">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="96bd1-354">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-354">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span></span></summary>
        <returns><span data-ttu-id="96bd1-355">포커스가 요청대로 설정되었으면 <see langword="true" />이고, 탭 정지가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-355"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-356">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="96bd1-356">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96bd1-357"><xref:System.Windows.Interop.HwndSource> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-357">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-358">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-358">to call this method.</span></span> <span data-ttu-id="96bd1-359">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-359">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="96bd1-360">메시지 및 연결된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-360">The message and associated data.</span></span> <span data-ttu-id="96bd1-361">이 구조체를 수정하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-361">Do not modify this structure.</span></span> <span data-ttu-id="96bd1-362">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-362">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="96bd1-363">보조키입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-363">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="96bd1-364">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-364">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="96bd1-365">메서드 구현에서 메시지가 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-365"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-366">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="96bd1-366">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96bd1-367"><xref:System.Windows.Interop.HwndSource> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-367">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="96bd1-368">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-368">to call this method.</span></span> <span data-ttu-id="96bd1-369">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-369">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="96bd1-370">메시지 및 연결된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-370">The message and associated data.</span></span> <span data-ttu-id="96bd1-371">이 구조체를 수정하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-371">Do not modify this structure.</span></span> <span data-ttu-id="96bd1-372">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-372">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="96bd1-373">보조키입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-373">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="96bd1-374">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-374">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="96bd1-375">메시지가 처리되었고 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />을 호출하지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-375"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-376">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="96bd1-376">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96bd1-377"><xref:System.Windows.Interop.HwndSource> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-377">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool" Usage="hwndSource.TabIntoCore request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="96bd1-378">포커스를 첫 번째 또는 마지막 탭 정지로 설정해야 하는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-378">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="96bd1-379">싱크의 첫 번째 또는 마지막 탭 정지에 포커스를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-379">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns><span data-ttu-id="96bd1-380">포커스가 요청대로 설정되었으면 <see langword="true" />이고, 탭 정지가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-380"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96bd1-381"><paramref name="request" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-381"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAcceleratorCore :  * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateAcceleratorCore :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateAcceleratorCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="96bd1-382">메시지 및 연결된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-382">The message and associated data.</span></span> <span data-ttu-id="96bd1-383">이 구조체를 수정하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-383">Do not modify this structure.</span></span> <span data-ttu-id="96bd1-384">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-384">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="96bd1-385">보조키입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-385">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="96bd1-386">keydown 메시지 수준에서 키보드 입력을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-386">Processes keyboard input at the key-down message level.</span></span></summary>
        <returns><span data-ttu-id="96bd1-387">메서드 구현에서 메시지가 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-387"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-388">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-388">to call this method.</span></span> <span data-ttu-id="96bd1-389">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-389">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateCharCore :  * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateCharCore :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateCharCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="96bd1-390">메시지 및 연결된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-390">The message and associated data.</span></span> <span data-ttu-id="96bd1-391">이 구조체를 수정하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="96bd1-391">Do not modify this structure.</span></span> <span data-ttu-id="96bd1-392">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-392">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="96bd1-393">보조키입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-393">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="96bd1-394"><see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 메서드가 호출되기 전에 WM_CHAR, WM_SYSCHAR, WM_DEADCHAR 및 WM_SYSDEADCHAR 입력 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-394">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span></span></summary>
        <returns><span data-ttu-id="96bd1-395">메시지가 처리되었고 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />을 호출하지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-395"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="96bd1-396">이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-396">to call this method.</span></span> <span data-ttu-id="96bd1-397">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="96bd1-397">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelOpacity : bool" Usage="System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd1-398">소스 창 콘텐츠의 픽셀별 불투명도가 적용되는지 여부를 선언하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-398">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span></span></summary>
        <value><span data-ttu-id="96bd1-399">시스템에서 픽셀별 불투명도를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-399"><see langword="true" /> if the system uses per-pixel opacity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd1-400">픽셀 별 불투명도 사용 하도록 설정 하면 시스템은 더 이상 비클라이언트 영역을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-400">When you enable per-pixel opacity, the system no longer draws the non-client area.</span></span> <span data-ttu-id="96bd1-401">왜냐하면의 원래 용도 <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> 상호 운용 시나리오에서 작동 하는 사각형이 아닌 최상위 UI를 표시 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-401">This is because the intended purpose of <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> is to show non-rectangular top-level UI that works in interoperation scenarios.</span></span> <span data-ttu-id="96bd1-402">따라서 사각형 비클라이언트 영역 비교를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="96bd1-402">Therefore, showing the rectangular non-client area defeats that purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>