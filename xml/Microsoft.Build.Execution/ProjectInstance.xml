<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5451857db4ef12db6b1101250ea6d20e7ecb62a" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57923864" /></Metadata><TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0a69a-101">프로젝트 인스턴스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-101">Represents a project instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-102">이 클래스의 인스턴스는 프로젝트를 복제할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="0a69a-103">생성자는 기존 프로젝트의 프로젝트 인스턴스를 만들려면 사용자가 내부입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="0a69a-104">인스턴스 항목에 추가할 수 있으며 인스턴스 속성을 설정할 한다는는 새 프로젝트 인스턴스는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="0a69a-105">프로젝트 인스턴스 수정 및 원래 프로젝트에 영향을 주지 않고 여러 번을 작성할 수 있으므로 아주 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="0a69a-106">이 클래스 및 그 구성 요소에 대 한 참조를 가질 수는 <xref:Microsoft.Build.Construction> 또는 <xref:Microsoft.Build.Evaluation> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="0a69a-107">프로젝트 인스턴스 대상, 호스트 서비스 및 작업 레지스트리 노출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a69a-108">새 프로젝트 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-108">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0a69a-109">프로젝트 루트 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-109">The project root element.</span></span></param>
        <summary><span data-ttu-id="0a69a-110">기본 프로젝트 컬렉션을 사용하여 새 프로젝트 인스턴스를 만들고 지정된 프로젝트 루트에서 이를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-111">중간 <xref:Microsoft.Build.Evaluation.Project> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="0a69a-112">프로젝트를 빌드 하지만 하지 표시 하거나 편집할 수 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0a69a-113">프로젝트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-113">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="0a69a-114">기본 프로젝트 컬렉션을 사용하여 새 프로젝트 인스턴스를 만들고 지정된 프로젝트 파일에서 이를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-115">중간 <xref:Microsoft.Build.Evaluation.Project> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="0a69a-116">프로젝트를 빌드 하지만 하지 표시 하거나 편집할 수 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0a69a-117">프로젝트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-117">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0a69a-118">사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-118">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0a69a-119">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-119">The tools version.</span></span></param>
        <summary><span data-ttu-id="0a69a-120">지정된 전역 속성, 도구 버전 및 기본 프로젝트 컬렉션을 사용하여 새 프로젝트 인스턴스를 만들고 지정된 프로젝트 파일에서 이를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-121">중간 <xref:Microsoft.Build.Evaluation.Project> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="0a69a-122">프로젝트를 빌드 하지만 하지 표시 하거나 편집할 수 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0a69a-123">프로젝트 루트 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-123">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0a69a-124">사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-124">The global properties to use.</span></span> <span data-ttu-id="0a69a-125">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-125">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0a69a-126">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-126">The tools version.</span></span> <span data-ttu-id="0a69a-127">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-127">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0a69a-128">프로젝트 컬렉션</span><span class="sxs-lookup"><span data-stu-id="0a69a-128">Project collection</span></span></param>
        <summary><span data-ttu-id="0a69a-129">지정된 전역 속성, 도구 버전 및 프로젝트 컬렉션을 사용하여 새 프로젝트 인스턴스를 만들고 지정된 프로젝트 루트에서 이를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-130">중간 <xref:Microsoft.Build.Evaluation.Project> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="0a69a-131">프로젝트를 빌드 하지만 하지 표시 하거나 편집할 수 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0a69a-132">프로젝트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-132">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0a69a-133">사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-133">The global properties to use.</span></span> <span data-ttu-id="0a69a-134">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-134">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0a69a-135">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-135">The tools version.</span></span> <span data-ttu-id="0a69a-136">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-136">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0a69a-137">프로젝트 컬렉션</span><span class="sxs-lookup"><span data-stu-id="0a69a-137">Project collection</span></span></param>
        <summary><span data-ttu-id="0a69a-138">지정된 전역 속성, 도구 버전 및 프로젝트 컬렉션을 사용하여 새 프로젝트 인스턴스를 만들고 지정된 프로젝트 파일에서 이를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-139">중간 <xref:Microsoft.Build.Evaluation.Project> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="0a69a-140">프로젝트를 빌드 하지만 하지 표시 하거나 편집할 수 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0a69a-141">프로젝트 루트 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-141">The project root element.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0a69a-142">사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-142">The global properties to use.</span></span> <span data-ttu-id="0a69a-143">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-143">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0a69a-144">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-144">The tools version.</span></span> <span data-ttu-id="0a69a-145">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-145">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="0a69a-146">하위 도구 집합의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-146">The sub toolset version.</span></span> <span data-ttu-id="0a69a-147">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-147">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0a69a-148">프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-148">Project collection.</span></span></param>
        <summary><span data-ttu-id="0a69a-149">지정된 전역 속성, 도구 버전 및 프로젝트 컬렉션을 사용하여 새 프로젝트 인스턴스를 만들고 지정된 프로젝트 루트에서 이를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-150">중간 <xref:Microsoft.Build.Evaluation.Project> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="0a69a-151">프로젝트를 빌드 하지만 하지 표시 하거나 편집할 수 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0a69a-152">프로젝트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-152">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0a69a-153">사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-153">The global properties to use.</span></span> <span data-ttu-id="0a69a-154">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-154">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0a69a-155">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-155">The tools version.</span></span> <span data-ttu-id="0a69a-156">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-156">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="0a69a-157">하위 도구 집합의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-157">The sub toolset version.</span></span> <span data-ttu-id="0a69a-158">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-158">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0a69a-159">프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-159">Project collection.</span></span></param>
        <summary><span data-ttu-id="0a69a-160">지정된 전역 속성, 도구 버전, 하위 도구 집합 버전 및 프로젝트 컬렉션을 사용하여 새 프로젝트 인스턴스를 만들고 지정된 프로젝트 파일에서 이를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-161">중간 <xref:Microsoft.Build.Evaluation.Project> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="0a69a-162">프로젝트를 빌드 하지만 하지 표시 하거나 편집할 수 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a69a-163">프로젝트에 메타데이터가 없는 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-163">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0a69a-164">추가할 항목의 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-164">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="0a69a-165">항목의 확인된 Include 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-165">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="0a69a-166">프로젝트에 메타데이터가 없는 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-166">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="0a69a-167">새 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-167">The new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-168">이미 다른 ProjectInstance에서 사용 하는 것이 없는 되도록 ProjectItemInstance 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0a69a-169">추가할 항목의 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-169">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="0a69a-170">항목의 확인된 Include 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-170">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="0a69a-171">항목의 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-171">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="0a69a-172">지정된 메타데이터가 있는 항목을 프로젝트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-172">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="0a69a-173">새 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-173">Return the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-174">이미 다른 ProjectInstance에서 사용 하는 것이 없는 되도록 ProjectItemInstance 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a69a-175">프로젝트 컬렉션의 로거를 사용하여 프로젝트의 기본 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-175">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a69a-176">프로젝트 컬렉션의 로거를 사용하여 프로젝트의 기본 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-176">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
        <returns><span data-ttu-id="0a69a-177">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-177"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="0a69a-178">빌드에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-178">The loggers to use for the build.</span></span> <span data-ttu-id="0a69a-179">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-179">May be null.</span></span></param>
        <summary><span data-ttu-id="0a69a-180">지정된 로거를 사용하여 프로젝트의 기본 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-180">Builds the default targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="0a69a-181">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-181"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-182">모든 제공 된로 거를 이미 로깅 서비스에 연결 되어 있으면 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="0a69a-183">빌드에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-183">The loggers to use for the build.</span></span> <span data-ttu-id="0a69a-184">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-184">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="0a69a-185">빌드에 사용할 원격 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-185">The remote loggers to use for the build.</span></span> <span data-ttu-id="0a69a-186">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-186">May be null.</span></span></param>
        <summary><span data-ttu-id="0a69a-187">지정된 로거와 원격 로거를 사용하여 프로젝트의 기본 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-187">Builds the default targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="0a69a-188">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-188"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-189">모든 제공 된로 거를 이미 로깅 서비스에 연결 되어 있으면 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0a69a-190">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-190">The target to build.</span></span> <span data-ttu-id="0a69a-191">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-191">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="0a69a-192">빌드에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-192">The loggers to use for the build.</span></span> <span data-ttu-id="0a69a-193">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-193">May be null.</span></span></param>
        <summary><span data-ttu-id="0a69a-194">지정된 로거를 사용하여 프로젝트의 지정된 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-194">Builds the given target of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="0a69a-195">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-195"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-196">모든 제공 된로 거를 이미 로깅 서비스에 연결 되어 있으면 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="0a69a-197">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-197">The targets to build.</span></span> <span data-ttu-id="0a69a-198">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-198">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="0a69a-199">빌드에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-199">The loggers to use for the build.</span></span> <span data-ttu-id="0a69a-200">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-200">May be null.</span></span></param>
        <summary><span data-ttu-id="0a69a-201">지정된 로거를 사용하여 프로젝트의 지정된 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-201">Builds the given targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="0a69a-202">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-202"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-203">모든 제공 된로 거를 이미 로깅 서비스에 연결 되어 있으면 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0a69a-204">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-204">The target to build.</span></span> <span data-ttu-id="0a69a-205">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-205">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="0a69a-206">빌드에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-206">The loggers to use for the build.</span></span> <span data-ttu-id="0a69a-207">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-207">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="0a69a-208">빌드에 사용할 원격 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-208">The remote loggers to use for the build.</span></span> <span data-ttu-id="0a69a-209">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-209">May be null.</span></span></param>
        <summary><span data-ttu-id="0a69a-210">지정된 로거와 원격 로거를 사용하여 프로젝트의 지정된 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-210">Builds the given target of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="0a69a-211">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-211"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-212">모든 제공 된로 거를 이미 로깅 서비스에 연결 되어 있으면 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="0a69a-213">빌드할 대상의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-213">List of targets to build.</span></span> <span data-ttu-id="0a69a-214">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-214">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="0a69a-215">대상 빌드에 사용할 열거형 로거 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-215">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="0a69a-216">대상 빌드의 출력입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-216">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="0a69a-217">지정된 로거를 사용하여 대상 목록을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-217">Build a list of targets with specified loggers.</span></span> <span data-ttu-id="0a69a-218">대상은 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-218">Targets may be null.</span></span> <span data-ttu-id="0a69a-219">로거는 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-219">Loggers may be null.</span></span></summary>
        <returns><span data-ttu-id="0a69a-220">성공하면 <see langword="true" />이고, 실패하면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-220"><see langword="true" /> on success, false on failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-221">이미 전달 된 로깅 서비스에 연결 된 모든 제공 된로 거를, InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="0a69a-222">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-222">The targets to build.</span></span> <span data-ttu-id="0a69a-223">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="0a69a-224">빌드에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-224">The loggers to use for the build.</span></span> <span data-ttu-id="0a69a-225">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-225">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="0a69a-226">빌드에 사용할 원격 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-226">The remote loggers to use for the build.</span></span> <span data-ttu-id="0a69a-227">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-227">May be null.</span></span></param>
        <summary><span data-ttu-id="0a69a-228">지정된 로거와 원격 로거를 사용하여 프로젝트의 지정된 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-228">Builds the given targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="0a69a-229">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-229"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-230">모든 제공 된로 거를 이미 로깅 서비스에 연결 되어 있으면 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="0a69a-231">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-231">The targets to build.</span></span> <span data-ttu-id="0a69a-232">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-232">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="0a69a-233">빌드에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-233">The loggers to use for the build.</span></span> <span data-ttu-id="0a69a-234">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-234">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="0a69a-235">빌드에 사용할 원격 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-235">The remote loggers to use for the build.</span></span> <span data-ttu-id="0a69a-236">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-236">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="0a69a-237">대상 출력입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-237">The target outputs.</span></span></param>
        <summary><span data-ttu-id="0a69a-238">지정된 대상 출력 및 지정된 로거와 원격 로거를 사용하여 지정된 대상을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="0a69a-239">빌드가 성공적으로 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-239"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-240">모든 제공 된로 거를 이미 로깅 서비스에 연결 되어 있으면 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a69a-241">이 프로젝트와 그 안에 포함된 모든 항목에 대해 독립적인 전체 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-241">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="0a69a-242">단일 파일을 컴파일하거나 빌드 간에 빌드 결과를 보관하는 데 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-242">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a69a-243">이 프로젝트와 그 안에 포함된 모든 항목에 대해 독립적인 전체 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-243">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="0a69a-244">복제본은 원본과 동일한 가변성으로 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-244">Clone has the same mutability as the original.</span></span> <span data-ttu-id="0a69a-245">단일 파일을 컴파일하거나 빌드 간에 빌드 결과를 보관하는 데 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-245">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="0a69a-246">이 프로젝트의 독립적인 전체 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-246">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="0a69a-247">클론 가변성을 나타내는 플래그</span><span class="sxs-lookup"><span data-stu-id="0a69a-247">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="0a69a-248">지정된 반복성을 사용하여 이 프로젝트와 그 안에 포함된 모든 항목에 대해 독립적인 전체 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span></span> <span data-ttu-id="0a69a-249">단일 파일을 컴파일하거나 빌드 간에 빌드 결과를 보관하는 데 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-249">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="0a69a-250">지정된 반복성을 사용하는 이 프로젝트의 독립적인 전체 복제본입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-250">An independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-251">이 프로젝트의 기본 대상 목록을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-251">Gets or sets the list of default targets for this project.</span></span></summary>
        <value><span data-ttu-id="0a69a-252">이 프로젝트의 기본 대상의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-252">The list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-253">대상이 없습니다. 명시적으로 지정 된 경우 기본 대상이 빌드됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-254">프로젝트 루트 디렉터리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-254">Gets the project root directory.</span></span> <span data-ttu-id="0a69a-255">빌드 동안 상대 경로를 확인하고 현재 디렉터리를 설정하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-255">Used for evaluation of relative paths and setting the current directory during build.</span></span> <span data-ttu-id="0a69a-256">null이 될 수 없습니다. 디스크에서 로드되지 않은 프로젝트는 빌드가 시작되던 시점의 현재 디렉터리를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="0a69a-257">프로젝트 루트 디렉터리는 null입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-257">The project root directory, which is never null.</span></span> <span data-ttu-id="0a69a-258">디스크에서 로드되지 않은 프로젝트는 빌드가 시작된 시점의 현재 디렉터리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-258">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="0a69a-259">확장할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-259">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="0a69a-260">항목과 속성을 확장한 다음 사용 가능한 현재 항목과 속성을 사용하여 논리 평가를 수행하는 방식을 통해 조건으로 제공된 문자열을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span></summary>
        <returns><span data-ttu-id="0a69a-261">문자열이 true로 계산되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-261"><see langword="true" /> if the string evaluates to true; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-262">직접 실행 창에 대 한 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="0a69a-263">기본 메타 데이터 식을 확장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="0a69a-264">확장할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-264">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="0a69a-265">항목과 속성을 확장하여 사용 가능한 현재 항목과 속성을 사용하여 제공된 문자열을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span></summary>
        <returns><span data-ttu-id="0a69a-266">확장된 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-266">The expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-267">일부 호스트 또는 디버거 직접 실행 창에 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="0a69a-268">기본 메타 데이터 식을 확장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-269">프로젝트 파일에 대한 전체 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-269">Gets the full path to the project file.</span></span> <span data-ttu-id="0a69a-270">로깅에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-270">Used for logging.</span></span></summary>
        <value><span data-ttu-id="0a69a-271">프로젝트 파일 전체 경로 또는 <see langword="null" /> 프로젝트 이름이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-271">The full path to the project file, or <see langword="null" /> if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a69a-272">제공된 항목 정의의 Include 특성에 대한 확인되고 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-272">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0a69a-273">확인하고 이스케이프할 항목 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-273">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="0a69a-274">제공된 항목 정의의 Include 특성에 대한 확인되고 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-274">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="0a69a-275">제공된 항목 정의의 Include 특성에 대한 확인되고 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-275">The evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0a69a-276">확인하고 이스케이프할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-276">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="0a69a-277">제공된 항목의 Include 특성에 대한 확인되고 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-277">Gets the evaluated, escaped value of the Include attribute of the provided item.</span></span></summary>
        <returns><span data-ttu-id="0a69a-278">제공된 항목의 Include 특성에 대한 확인되고 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-278">The evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0a69a-279">검색할 항목의 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-279">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0a69a-280">이 프로젝트에서 지정된 형식의 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-280">Gets all the items in this project of the specified type.</span></span> <span data-ttu-id="0a69a-281">읽기 전용 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-281">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="0a69a-282">이 프로젝트에서 지정된 형식의 모든 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-282">All the items in this project of the specified type.</span></span> <span data-ttu-id="0a69a-283">해당 항목이 없으면 빈 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-283">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="evaluatedInclude" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0a69a-284">검색할 항목의 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-284">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="0a69a-285">검색할 항목의 평가된 포함 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-285">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="0a69a-286">이 프로젝트에서 지정된 형식과 평가된 포함 값의 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-286">Gets all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="0a69a-287">읽기 전용 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-287">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="0a69a-288">이 프로젝트에서 지정된 형식과 평가된 포함 값의 모든 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-288">All the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="0a69a-289">해당 항목이 없으면 빈 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-289">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a69a-290">제공된 항목 정의에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-290">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="0a69a-291">이스케이프할 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-291">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="0a69a-292">제공된 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-292">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="0a69a-293">제공된 메타데이터의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-293">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0a69a-294">메타데이터 값을 제공하는 항목 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-294">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="0a69a-295">메타데이터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-295">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="0a69a-296">제공된 항목 정의에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-296">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="0a69a-297">제공된 항목 정의에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-297">The escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0a69a-298">메타데이터 값을 제공하는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-298">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="0a69a-299">메타데이터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-299">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="0a69a-300">제공된 항목에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-300">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="0a69a-301">제공된 항목에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-301">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0a69a-302">검색할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-302">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="0a69a-303">지정된 이름의 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-303">Gets the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="0a69a-304">지정된 이름의 속성이거나 해당 이름을 가진 속성이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-304">The property with the given name, or <see langword="null" /> if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0a69a-305">값을 검색할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-305">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0a69a-306">지정된 이름을 가진 속성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-306">Gets the value of the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="0a69a-307">지정된 이름의 속성 값이거나 해당 이름을 가진 속성이 없으면 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-307">The value of the property with the given name, or an empty string if no property exists with that name.</span></span> <span data-ttu-id="0a69a-308">반환된 값에는 이스케이프된 문자 시퀀스가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-308">The value returned has no escaped character sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-309">이 메서드가 빈 문자열 값을 사용 하 여 속성 및 지정 된 이름의 속성이 없는 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-309">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="0a69a-310">이스케이프할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-310">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="0a69a-311">제공된 속성의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-311">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="0a69a-312">제공된 속성의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-312">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-313">이 프로젝트 확인에 사용된 전역 속성의 사전(있는 경우)을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-313">Gets the dictionary of global properties this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="0a69a-314">이 프로젝트 확인에 사용 된 전역 속성의 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-314">The dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-315">읽기 전용 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-315">Read only collection.</span></span>  
  
 <span data-ttu-id="0a69a-316">프로젝트 참조를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-316">Traverses project references.</span></span>  
  
 <span data-ttu-id="0a69a-317">이 읽기 전용 데드 IDictionary 변환 하는 공개적으로 노출 된 getter\<문자열, 문자열 >.</span><span class="sxs-lookup"><span data-stu-id="0a69a-317">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-318">프로젝트의 초기 대상 목록 및 모든 해당 가져오기를 깊이 우선 방식으로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-318">Gets the list of initial targets for the project and all its imports, depth-first.</span></span> <span data-ttu-id="0a69a-319">이러한 대상은 다른 대상이 빌드되기 전에 빌드됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-319">These targets are built before any other targets.</span></span></summary>
        <value><span data-ttu-id="0a69a-320">프로젝트 및 모든 해당 가져오기를 깊이 우선 초기 대상 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-320">The list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-321">프로젝트 인스턴스를 변경할 수 없는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-321">Gets a value that indicates whether the project instance is immutable.</span></span> <span data-ttu-id="0a69a-322">이 플래그는 인스턴스가 만들어질 때 영구적으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-322">This flag is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="0a69a-323"><see langword="true" /> 프로젝트 인스턴스; 변경할 수 없는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-323"><see langword="true" /> if the project instance is immutable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-324">프로젝트의 항목 정의에 대한 읽기 전용 사전을 항목 형식을 키로 사용하여 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-324">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="0a69a-325">프로젝트에서 항목 형식을 키로 사용 하는 항목 정의의 읽기 전용 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-325">A read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-326">이 프로젝트의 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-326">Gets all items in this project.</span></span></summary>
        <value><span data-ttu-id="0a69a-327">이 프로젝트의 모든 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-327">All items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-328">이 프로젝트의 모든 항목 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-328">Gets all item types in this project.</span></span></summary>
        <value><span data-ttu-id="0a69a-329">이 프로젝트의 모든 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-329">All item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-330">원본 파일 자체의 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-330">Gets the location of the originating file itself.</span></span> <span data-ttu-id="0a69a-331">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-331">Never null.</span></span></summary>
        <value><span data-ttu-id="0a69a-332">원본 파일의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-332">The location of the originating file.</span></span> <span data-ttu-id="0a69a-333">반환 하지 않습니다 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-333">Never returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-334">이 프로젝트의 모든 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-334">Gets all properties in this project.</span></span></summary>
        <value><span data-ttu-id="0a69a-335">이 프로젝트의 모든 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-335">All properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0a69a-336">제거할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-336">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="0a69a-337">프로젝트에서 항목(있을 경우)을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-337">Removes an item from the project, if present.</span></span> <span data-ttu-id="0a69a-338">항목이 있으면 true를 반환하고, 그렇지 않으면 false를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-338">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="0a69a-339">제거 전에 항목이 있었다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-339"><see langword="true" /> if the item was present before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0a69a-340">제거할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-340">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="0a69a-341">지정된 이름의 속성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-341">Removes a property with the given name.</span></span> <span data-ttu-id="0a69a-342">속성에 값(빈 문자열도 가능)이 있으면 true를 반환하고, 그렇지 않으면 false를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-342">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="0a69a-343">제거 전에 속성에 값(빈 문자열도 가능)이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-343"><see langword="true" /> if the property had a value (possibly an empty string) before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0a69a-344">추가할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-344">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="0a69a-345">추가할 속성의 확인된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-345">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="0a69a-346">지정된 이름과 값을 사용하여 속성을 프로젝트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-346">Add a property with the specified name and value to the project.</span></span> <span data-ttu-id="0a69a-347">속성 컬렉션에 이미 같은 이름의 속성이 있는 경우 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-347">Overwrites any property with the same name already in the property collection.</span></span></summary>
        <returns><span data-ttu-id="0a69a-348">새 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-348">The new property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-349">이미 다른 ProjectPropertyInstance에서 사용 하는 것이 없는 되도록 ProjectPropertyInstance 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-349">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-350">이 프로젝트의 모든 대상에 대한 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-350">Gets an enumerator over all targets in this project.</span></span> <span data-ttu-id="0a69a-351">이 컬렉션은 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-351">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="0a69a-352">이 프로젝트의 모든 대상에 대 한 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-352">An enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a69a-353">이 프로젝트 확인에 사용된 도구 버전(있는 경우)을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-353">Gets the tools version this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="0a69a-354">도구 버전을이 프로젝트 확인에 사용 된, 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="0a69a-354">The tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a69a-355">결과 필요는 없습니다 프로젝트 태그에서 도구 버전과 같은 경우 모든; 이 지정 된 것 외부에서, 예를 들어 /tv 스위치를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-355">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a69a-356">이 ProjectInstance의 내용으로부터 ProjectRootElement를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-356">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="0a69a-357">이 인스턴스를 나타내는 ProjectRootElement입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-357">A ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="0a69a-358">업데이트할 <see langword="ProjectInstance" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-358">The <see langword="ProjectInstance" /> to update from.</span></span></param>
        <summary><span data-ttu-id="0a69a-359">프로젝트 상태 <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> 및 <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" />를 지정된 <see cref="T:Microsoft.Build.Execution.ProjectInstance" />의 해당 사항으로 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="0a69a-359">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>