<Type Name="OleDbLiteral" FullName="System.Data.OleDb.OleDbLiteral">
  <Metadata><Meta Name="ms.openlocfilehash" Value="997f0f164f62f49735e460cecc4a4da4f7e043aa" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56767567" /></Metadata><TypeSignature Language="C#" Value="public enum OleDbLiteral" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OleDbLiteral extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbLiteral" />
  <TypeSignature Language="VB.NET" Value="Public Enum OleDbLiteral" />
  <TypeSignature Language="C++ CLI" Value="public enum class OleDbLiteral" />
  <TypeSignature Language="F#" Value="type OleDbLiteral = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="1e5d6-101">텍스트 명령, 데이터 값 및 데이터베이스 개체에서 사용된 리터럴에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-101">Returns information about literals used in text commands, data values, and database objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5d6-102"><xref:System.Data.OleDb.OleDbLiteral> 열거형 리터럴 정보 다음 범주를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-102">The <xref:System.Data.OleDb.OleDbLiteral> enumeration returns the following categories of literal information.</span></span>  
  
|<span data-ttu-id="1e5d6-103">범주</span><span class="sxs-lookup"><span data-stu-id="1e5d6-103">Category</span></span>|<span data-ttu-id="1e5d6-104">반환 값</span><span class="sxs-lookup"><span data-stu-id="1e5d6-104">Returns</span></span>|  
|--------------|-------------|  
|<span data-ttu-id="1e5d6-105">특수 문자 또는 식별자를 사용 하는 문자 같은 텍스트 명령에서 사용 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-105">A special character or characters used by text commands, such as the character used to quote identifiers.</span></span>|<span data-ttu-id="1e5d6-106">문자 또는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-106">The character or characters.</span></span>|  
|<span data-ttu-id="1e5d6-107">SQL 문에서 리터럴 문자와 같은 리터럴 데이터 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-107">A literal data value, such as a character literal in an SQL statement.</span></span>|<span data-ttu-id="1e5d6-108">문자, 리터럴에서 사용할 수 있는 문자 목록을 및 리터럴의 첫 문자로 사용할 수 없는 문자의 목록을 리터럴의 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-108">The maximum length of the literal in characters, a list of the characters that cannot be used in the literal, and a list of the characters that cannot be used as the first character of the literal.</span></span>|  
|<span data-ttu-id="1e5d6-109">열 또는 테이블을 같은 데이터베이스 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-109">The name of a database object such as a column or table.</span></span>|<span data-ttu-id="1e5d6-110">이름에 사용할 수 없는 문자의 목록을 문자와 이름의 첫 번째 문자로 사용할 수 없는 문자의 목록을 이름의 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-110">The maximum length of the name in characters, a list of the characters that cannot be used in the name, and a list of the characters that cannot be used as the first character of the name.</span></span>|  
|<span data-ttu-id="1e5d6-111">다차원 제한 열입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-111">Multidimensional restriction columns.</span></span>|<span data-ttu-id="1e5d6-112">제한 값을 데이터 원본에서 큐브, 차원, 계층, 수준 및 사용할 수 있는 멤버에 대 한 정보를 반환 하는 검색 패턴으로 대신 리터럴로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-112">Restriction values that return information about cubes, dimensions, hierarchies, levels, and members available from a data source; and are treated as literals instead of as search patterns.</span></span>|  
  
 <span data-ttu-id="1e5d6-113">멤버는 대부분의 <xref:System.Data.OleDb.OleDbLiteral> 열거형 DBLITERALINFO 구조에 반환 되는 OLE DB DBLITERAL 값 중 하나에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-113">Most members of the <xref:System.Data.OleDb.OleDbLiteral> enumeration maps to one of the OLE DB DBLITERAL values that are returned in the DBLITERALINFO structure.</span></span>  
  
 <span data-ttu-id="1e5d6-114">다차원 제한 열은 매핑할 IDBSchemaRowset 인터페이스에 사용 되는 OLAP 용 OLE DB 및 스키마 개체의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-114">Multidimensional restriction columns are members of schema objects and map to OLE DB for OLAP used by the IDBSchemaRowset interface.</span></span>  
  
 <span data-ttu-id="1e5d6-115"><xref:System.NotSupportedException> 지정된 된 리터럴 정보는 지원 되지 않으며 반환할 수 없는 경우 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-115">A <xref:System.NotSupportedException> is generated if the specified literal information is not supported and cannot be returned.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Binary_Literal">
      <MemberSignature Language="C#" Value="Binary_Literal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Binary_Literal = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Binary_Literal" />
      <MemberSignature Language="VB.NET" Value="Binary_Literal" />
      <MemberSignature Language="C++ CLI" Value="Binary_Literal" />
      <MemberSignature Language="F#" Value="Binary_Literal = 1" Usage="System.Data.OleDb.OleDbLiteral.Binary_Literal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-116">텍스트 명령의 이진 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-116">A binary literal in a text command.</span></span> <span data-ttu-id="1e5d6-117">DBLITERAL_BINARY_LITERAL에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-117">Maps to DBLITERAL_BINARY_LITERAL.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Catalog_Name">
      <MemberSignature Language="C#" Value="Catalog_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Catalog_Name = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Catalog_Name" />
      <MemberSignature Language="VB.NET" Value="Catalog_Name" />
      <MemberSignature Language="C++ CLI" Value="Catalog_Name" />
      <MemberSignature Language="F#" Value="Catalog_Name = 2" Usage="System.Data.OleDb.OleDbLiteral.Catalog_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-118">텍스트 명령의 카탈로그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-118">A catalog name in a text command.</span></span> <span data-ttu-id="1e5d6-119">DBLITERAL_CATALOG_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-119">Maps to DBLITERAL_CATALOG_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Catalog_Separator">
      <MemberSignature Language="C#" Value="Catalog_Separator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Catalog_Separator = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Catalog_Separator" />
      <MemberSignature Language="VB.NET" Value="Catalog_Separator" />
      <MemberSignature Language="C++ CLI" Value="Catalog_Separator" />
      <MemberSignature Language="F#" Value="Catalog_Separator = 3" Usage="System.Data.OleDb.OleDbLiteral.Catalog_Separator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-120">텍스트 명령에서 식별자의 나머지와 카탈로그 이름을 분리하는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-120">The character that separates the catalog name from the rest of the identifier in a text command.</span></span> <span data-ttu-id="1e5d6-121">DBLITERAL_CATALOG_SEPARATOR에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-121">Maps to DBLITERAL_CATALOG_SEPARATOR.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Char_Literal">
      <MemberSignature Language="C#" Value="Char_Literal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Char_Literal = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Char_Literal" />
      <MemberSignature Language="VB.NET" Value="Char_Literal" />
      <MemberSignature Language="C++ CLI" Value="Char_Literal" />
      <MemberSignature Language="F#" Value="Char_Literal = 4" Usage="System.Data.OleDb.OleDbLiteral.Char_Literal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-122">텍스트 명령의 문자 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-122">A character literal in a text command.</span></span> <span data-ttu-id="1e5d6-123">DBLITERAL_CHAR_LITERAL에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-123">Maps to DBLITERAL_CHAR_LITERAL.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Column_Alias">
      <MemberSignature Language="C#" Value="Column_Alias" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Column_Alias = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Column_Alias" />
      <MemberSignature Language="VB.NET" Value="Column_Alias" />
      <MemberSignature Language="C++ CLI" Value="Column_Alias" />
      <MemberSignature Language="F#" Value="Column_Alias = 5" Usage="System.Data.OleDb.OleDbLiteral.Column_Alias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-124">텍스트 명령의 열 별칭입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-124">A column alias in a text command.</span></span> <span data-ttu-id="1e5d6-125">DBLITERAL_COLUMN_ALIAS에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-125">Maps to DBLITERAL_COLUMN_ALIAS.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Column_Name">
      <MemberSignature Language="C#" Value="Column_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Column_Name = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Column_Name" />
      <MemberSignature Language="VB.NET" Value="Column_Name" />
      <MemberSignature Language="C++ CLI" Value="Column_Name" />
      <MemberSignature Language="F#" Value="Column_Name = 6" Usage="System.Data.OleDb.OleDbLiteral.Column_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-126">텍스트 명령 또는 데이터 정의 인터페이스에 사용된 열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-126">A column name used in a text command or in a data-definition interface.</span></span> <span data-ttu-id="1e5d6-127">DBLITERAL_COLUMN_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-127">Maps to DBLITERAL_COLUMN_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Correlation_Name">
      <MemberSignature Language="C#" Value="Correlation_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Correlation_Name = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Correlation_Name" />
      <MemberSignature Language="VB.NET" Value="Correlation_Name" />
      <MemberSignature Language="C++ CLI" Value="Correlation_Name" />
      <MemberSignature Language="F#" Value="Correlation_Name = 7" Usage="System.Data.OleDb.OleDbLiteral.Correlation_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-128">텍스트 명령의 상관 관계 이름(테이블 별칭)입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-128">A correlation name (table alias) in a text command.</span></span> <span data-ttu-id="1e5d6-129">DBLITERAL_CORRELATION_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-129">Maps to DBLITERAL_CORRELATION_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Cube_Name">
      <MemberSignature Language="C#" Value="Cube_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Cube_Name = int32(21)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Cube_Name" />
      <MemberSignature Language="VB.NET" Value="Cube_Name" />
      <MemberSignature Language="C++ CLI" Value="Cube_Name" />
      <MemberSignature Language="F#" Value="Cube_Name = 21" Usage="System.Data.OleDb.OleDbLiteral.Cube_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-130">스키마(공급자가 스키마를 지원하지 않는 경우에는 카탈로그)의 큐브 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-130">The name of a cube in a schema (or the catalog if the provider does not support schemas).</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Cursor_Name">
      <MemberSignature Language="C#" Value="Cursor_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Cursor_Name = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Cursor_Name" />
      <MemberSignature Language="VB.NET" Value="Cursor_Name" />
      <MemberSignature Language="C++ CLI" Value="Cursor_Name" />
      <MemberSignature Language="F#" Value="Cursor_Name = 8" Usage="System.Data.OleDb.OleDbLiteral.Cursor_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-131">텍스트 명령의 커서 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-131">A cursor name in a text command.</span></span> <span data-ttu-id="1e5d6-132">DBLITERAL_CURSOR_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-132">Maps to DBLITERAL_CURSOR_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Dimension_Name">
      <MemberSignature Language="C#" Value="Dimension_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Dimension_Name = int32(22)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Dimension_Name" />
      <MemberSignature Language="VB.NET" Value="Dimension_Name" />
      <MemberSignature Language="C++ CLI" Value="Dimension_Name" />
      <MemberSignature Language="F#" Value="Dimension_Name = 22" Usage="System.Data.OleDb.OleDbLiteral.Dimension_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-133">크기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-133">The name of the dimension.</span></span> <span data-ttu-id="1e5d6-134">크기가 하나 이상의 큐브의 일부인 경우에는 각 큐브/크기 조합에 대해 하나의 행이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-134">If a dimension is part of more than one cube, there is one row for each cube/dimension combination.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Escape_Percent_Prefix">
      <MemberSignature Language="C#" Value="Escape_Percent_Prefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Escape_Percent_Prefix = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Prefix" />
      <MemberSignature Language="VB.NET" Value="Escape_Percent_Prefix" />
      <MemberSignature Language="C++ CLI" Value="Escape_Percent_Prefix" />
      <MemberSignature Language="F#" Value="Escape_Percent_Prefix = 9" Usage="System.Data.OleDb.OleDbLiteral.Escape_Percent_Prefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-135">DBLITERAL_LIKE_PERCENT 리터럴에 대해 반환된 문자를 이스케이프하기 위해 LIKE 절에서 사용된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-135">The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_PERCENT literal.</span></span> <span data-ttu-id="1e5d6-136">예를 들어, 백분율 기호(%)를 사용하여 0개 이상의 문자를 결합하고, 이 기호가 백슬래시(\\)인 경우에는 “abc\\%%” 문자가 “abc%”로 시작하는 모든 문자 값을 결합시킵니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-136">For example, if a percent sign (%) is used to match zero or more characters and this is a backslash (\\), the characters "abc\\%%" match all character values that start with "abc%".</span></span> <span data-ttu-id="1e5d6-137">일부 SQL 언어는 이 값을 재정의할 수 있는 절(ESCAPE 절)을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-137">Some SQL dialects support a clause (the ESCAPE clause) that can be used to override this value.</span></span> <span data-ttu-id="1e5d6-138">DBLITERAL_ESCAPE_PERCENT_PREFIX에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-138">Maps to DBLITERAL_ESCAPE_PERCENT_PREFIX.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Escape_Percent_Suffix">
      <MemberSignature Language="C#" Value="Escape_Percent_Suffix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Escape_Percent_Suffix = int32(29)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Suffix" />
      <MemberSignature Language="VB.NET" Value="Escape_Percent_Suffix" />
      <MemberSignature Language="C++ CLI" Value="Escape_Percent_Suffix" />
      <MemberSignature Language="F#" Value="Escape_Percent_Suffix = 29" Usage="System.Data.OleDb.OleDbLiteral.Escape_Percent_Suffix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-139">DBLITERAL_LIKE_PERCENT 리터럴에 대해 반환된 문자를 접미사로 붙이는 데 사용된 이스케이프 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-139">The escape character, if any, used to suffix the character returned for the DBLITERAL_LIKE_PERCENT literal.</span></span> <span data-ttu-id="1e5d6-140">예를 들어, 백분율 기호(%)를 사용하여 0개 이상의 문자를 결합하고 이 백분율 문자가 대괄호 쌍을 포함하여 이스케이프된 경우에는 DBLITERAL_ESCAPE_PERCENT_PREFIX가 "[", DBLITERAL_ESCAPE_PERCENT_SUFFIX is "]"이며, "abc[%]%" 문자는 "abc%"로 시작하는 모든 문자 값을 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-140">For example, if a percent sign (%) is used to match zero or more characters and percent signs are escaped by enclosing in open and close square brackets, DBLITERAL_ESCAPE_PERCENT_PREFIX is "[", DBLITERAL_ESCAPE_PERCENT_SUFFIX is "]", and the characters "abc[%]%" match all character values that start with "abc%".</span></span> <span data-ttu-id="1e5d6-141">DBLITERAL_ESCAPE_PERCENT 문자를 이스케이프하는 데 접미사 문자를 사용하지 않는 공급자에서는 이 리터럴 값을 반환하지 않으며, 요청된 경우 DBLITERAL 구조체의 lt 멤버를 DBLITERAL_INVALID로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-141">Providers that do not use a suffix character to escape the DBLITERAL_ESCAPE_PERCENT character do not return this literal value and can set the lt member of the DBLITERAL structure to DBLITERAL_INVALID if requested.</span></span> <span data-ttu-id="1e5d6-142">DBLITERAL_ESCAPE_PERCENT_SUFFIX에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-142">Maps to DBLITERAL_ESCAPE_PERCENT_SUFFIX.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Escape_Underscore_Prefix">
      <MemberSignature Language="C#" Value="Escape_Underscore_Prefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Escape_Underscore_Prefix = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Prefix" />
      <MemberSignature Language="VB.NET" Value="Escape_Underscore_Prefix" />
      <MemberSignature Language="C++ CLI" Value="Escape_Underscore_Prefix" />
      <MemberSignature Language="F#" Value="Escape_Underscore_Prefix = 10" Usage="System.Data.OleDb.OleDbLiteral.Escape_Underscore_Prefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-143">DBLITERAL_LIKE_UNDERSCORE 리터럴에 대해 반환된 문자를 이스케이프하기 위해 LIKE 절에서 사용된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-143">The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_UNDERSCORE literal.</span></span> <span data-ttu-id="1e5d6-144">예를 들어, 밑줄(\_)을 사용하여 정확하게 하나의 문자를 결합하고, 이 문자가 백슬래시(\\)인 경우에는 “abc\\\_ _” 문자가 “abc\_”로 시작하고 문자 수가 5개인 모든 문자 값을 일치시킵니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-144">For example, if an underscore (\_) is used to match exactly one character and this is a backslash (\\), the characters "abc\\\_ _" match all character values that are five characters long and start with "abc\_".</span></span> <span data-ttu-id="1e5d6-145">일부 SQL 언어는 이 값을 재정의할 수 있는 절(ESCAPE 절)을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-145">Some SQL dialects support a clause (the ESCAPE clause) that can be used to override this value.</span></span> <span data-ttu-id="1e5d6-146">DBLITERAL_ESCAPE_UNDERSCORE_PREFIX에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-146">Maps to DBLITERAL_ESCAPE_UNDERSCORE_PREFIX.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Escape_Underscore_Suffix">
      <MemberSignature Language="C#" Value="Escape_Underscore_Suffix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Escape_Underscore_Suffix = int32(30)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Suffix" />
      <MemberSignature Language="VB.NET" Value="Escape_Underscore_Suffix" />
      <MemberSignature Language="C++ CLI" Value="Escape_Underscore_Suffix" />
      <MemberSignature Language="F#" Value="Escape_Underscore_Suffix = 30" Usage="System.Data.OleDb.OleDbLiteral.Escape_Underscore_Suffix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-147">DBLITERAL_LIKE_UNDERSCORE 리터럴에 대해 반환된 문자를 이스케이프하기 위해 LIKE 절에서 사용된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-147">The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_UNDERSCORE literal.</span></span> <span data-ttu-id="1e5d6-148">예를 들어, 밑줄(\_)을 사용하여 정확하게 하나의 문자를 결합하고, 이 문자가 백슬래시(\\)인 경우에는 “abc\\\_ _” 문자가 “abc\_”로 시작하고 문자 수가 5개인 모든 문자 값을 일치시킵니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-148">For example, if an underscore (\_) is used to match exactly one character and this is a backslash (\\), the characters "abc\\\_ _" match all character values that are five characters long and start with "abc\_".</span></span> <span data-ttu-id="1e5d6-149">일부 SQL 언어는 이 값을 재정의할 수 있는 절(ESCAPE 절)을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-149">Some SQL dialects support a clause (the ESCAPE clause) that can be used to override this value.</span></span> <span data-ttu-id="1e5d6-150">DBLITERAL_ESCAPE_UNDERSCORE_SUFFIX에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-150">Maps to DBLITERAL_ESCAPE_UNDERSCORE_SUFFIX.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Hierarchy_Name">
      <MemberSignature Language="C#" Value="Hierarchy_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Hierarchy_Name = int32(23)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Hierarchy_Name" />
      <MemberSignature Language="VB.NET" Value="Hierarchy_Name" />
      <MemberSignature Language="C++ CLI" Value="Hierarchy_Name" />
      <MemberSignature Language="F#" Value="Hierarchy_Name = 23" Usage="System.Data.OleDb.OleDbLiteral.Hierarchy_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-151">계층 구조의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-151">The name of the hierarchy.</span></span> <span data-ttu-id="1e5d6-152">크기에 계층 구조가 포함되지 않거나 단 하나의 계층 구조만 포함되어 있을 경우에는 현재 열에 null 값이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-152">If the dimension does not contain a hierarchy or has only one hierarchy, the current column contains a null value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Index_Name">
      <MemberSignature Language="C#" Value="Index_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Index_Name = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Index_Name" />
      <MemberSignature Language="VB.NET" Value="Index_Name" />
      <MemberSignature Language="C++ CLI" Value="Index_Name" />
      <MemberSignature Language="F#" Value="Index_Name = 11" Usage="System.Data.OleDb.OleDbLiteral.Index_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-153">텍스트 명령 또는 데이터 정의 인터페이스에 사용된 인덱스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-153">An index name used in a text command or in a data-definition interface.</span></span> <span data-ttu-id="1e5d6-154">DBLITERAL_INDEX_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-154">Maps to DBLITERAL_INDEX_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Invalid">
      <MemberSignature Language="C#" Value="Invalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Invalid = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Invalid" />
      <MemberSignature Language="VB.NET" Value="Invalid" />
      <MemberSignature Language="C++ CLI" Value="Invalid" />
      <MemberSignature Language="F#" Value="Invalid = 0" Usage="System.Data.OleDb.OleDbLiteral.Invalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-155">잘못된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-155">An invalid value.</span></span> <span data-ttu-id="1e5d6-156">DBLITERAL_INVALID에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-156">Maps to DBLITERAL_INVALID.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Level_Name">
      <MemberSignature Language="C#" Value="Level_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Level_Name = int32(24)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Level_Name" />
      <MemberSignature Language="VB.NET" Value="Level_Name" />
      <MemberSignature Language="C++ CLI" Value="Level_Name" />
      <MemberSignature Language="F#" Value="Level_Name = 24" Usage="System.Data.OleDb.OleDbLiteral.Level_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-157">현재 수준이 속해 있는 큐브의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-157">Name of the cube to which the current level belongs.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Like_Percent">
      <MemberSignature Language="C#" Value="Like_Percent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Like_Percent = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Like_Percent" />
      <MemberSignature Language="VB.NET" Value="Like_Percent" />
      <MemberSignature Language="C++ CLI" Value="Like_Percent" />
      <MemberSignature Language="F#" Value="Like_Percent = 12" Usage="System.Data.OleDb.OleDbLiteral.Like_Percent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-158">0개 이상의 문자를 결합하기 위해 LIKE 절에서 사용된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-158">The character used in a LIKE clause to match zero or more characters.</span></span> <span data-ttu-id="1e5d6-159">예를 들어, 이 문자가 백분율 기호(%)인 경우, "abc%" 문자는 "abc"로 시작하는 모든 문자 값과 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-159">For example, if this is a percent sign (%), the characters "abc%" match all character values that start with "abc".</span></span> <span data-ttu-id="1e5d6-160">DBLITERAL_LIKE_PERCENT에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-160">Maps to DBLITERAL_LIKE_PERCENT.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Like_Underscore">
      <MemberSignature Language="C#" Value="Like_Underscore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Like_Underscore = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Like_Underscore" />
      <MemberSignature Language="VB.NET" Value="Like_Underscore" />
      <MemberSignature Language="C++ CLI" Value="Like_Underscore" />
      <MemberSignature Language="F#" Value="Like_Underscore = 13" Usage="System.Data.OleDb.OleDbLiteral.Like_Underscore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-161">정확하게 한 개의 문자와 결합하기 위해 LIKE 절에서 사용된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-161">The character used in a LIKE clause to match exactly one character.</span></span> <span data-ttu-id="1e5d6-162">예를 들어, 이 문자가 밑줄(_)인 경우, “abc\_” 문자는 “abc”로 시작하고 문자 수가 4개인 모든 문자 값과 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-162">For example, if this is an underscore (_), the characters "abc\_" match all character values that are four characters long and start with "abc".</span></span> <span data-ttu-id="1e5d6-163">DBLITERAL_LIKE_UNDERSCORE에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-163">Maps to DBLITERAL_LIKE_UNDERSCORE.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Member_Name">
      <MemberSignature Language="C#" Value="Member_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Member_Name = int32(25)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Member_Name" />
      <MemberSignature Language="VB.NET" Value="Member_Name" />
      <MemberSignature Language="C++ CLI" Value="Member_Name" />
      <MemberSignature Language="F#" Value="Member_Name = 25" Usage="System.Data.OleDb.OleDbLiteral.Member_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-164">멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-164">The name of the member.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Procedure_Name">
      <MemberSignature Language="C#" Value="Procedure_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Procedure_Name = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Procedure_Name" />
      <MemberSignature Language="VB.NET" Value="Procedure_Name" />
      <MemberSignature Language="C++ CLI" Value="Procedure_Name" />
      <MemberSignature Language="F#" Value="Procedure_Name = 14" Usage="System.Data.OleDb.OleDbLiteral.Procedure_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-165">텍스트 명령의 프로시저 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-165">A procedure name in a text command.</span></span> <span data-ttu-id="1e5d6-166">DBLITERAL_PROCEDURE_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-166">Maps to DBLITERAL_PROCEDURE_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Property_Name">
      <MemberSignature Language="C#" Value="Property_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Property_Name = int32(26)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Property_Name" />
      <MemberSignature Language="VB.NET" Value="Property_Name" />
      <MemberSignature Language="C++ CLI" Value="Property_Name" />
      <MemberSignature Language="F#" Value="Property_Name = 26" Usage="System.Data.OleDb.OleDbLiteral.Property_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-167">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-167">The name of the property.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Quote_Prefix">
      <MemberSignature Language="C#" Value="Quote_Prefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Quote_Prefix = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Quote_Prefix" />
      <MemberSignature Language="VB.NET" Value="Quote_Prefix" />
      <MemberSignature Language="C++ CLI" Value="Quote_Prefix" />
      <MemberSignature Language="F#" Value="Quote_Prefix = 15" Usage="System.Data.OleDb.OleDbLiteral.Quote_Prefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-168">텍스트 명령에서 특수 문자가 포함된 식별자를 따옴표로 묶을 때 여는 따옴표로 사용되는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-168">The character used in a text command as the opening quote for quoting identifiers that contain special characters.</span></span> <span data-ttu-id="1e5d6-169">DBLITERAL_QUOTE_PREFIX에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-169">Maps to DBLITERAL_QUOTE_PREFIX.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Quote_Suffix">
      <MemberSignature Language="C#" Value="Quote_Suffix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Quote_Suffix = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Quote_Suffix" />
      <MemberSignature Language="VB.NET" Value="Quote_Suffix" />
      <MemberSignature Language="C++ CLI" Value="Quote_Suffix" />
      <MemberSignature Language="F#" Value="Quote_Suffix = 28" Usage="System.Data.OleDb.OleDbLiteral.Quote_Suffix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-170">특수 문자를 포함하는 따옴표 식별자에 대한 닫기 따옴표로서 텍스트 명령에서 사용된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-170">The character used in a text command as the closing quote for quoting identifiers that contain special characters.</span></span> <span data-ttu-id="1e5d6-171">접두사와 접미사로 같은 문자를 사용하는 1.x 공급자는 이 리터럴 값을 반환하지 않을 수 있으며, 요청되는 경우에는 DBLITERAL 구조체의 멤버를 DBLITERAL_INVALID로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-171">1.x providers that use the same character as the prefix and suffix may not return this literal value and can set the member of the DBLITERAL structure to DBLITERAL_INVALID if requested.</span></span> <span data-ttu-id="1e5d6-172">DBLITERAL_QUOTE_SUFFIX에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-172">Maps to DBLITERAL_QUOTE_SUFFIX.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Schema_Name">
      <MemberSignature Language="C#" Value="Schema_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Schema_Name = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Schema_Name" />
      <MemberSignature Language="VB.NET" Value="Schema_Name" />
      <MemberSignature Language="C++ CLI" Value="Schema_Name" />
      <MemberSignature Language="F#" Value="Schema_Name = 16" Usage="System.Data.OleDb.OleDbLiteral.Schema_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-173">텍스트 명령의 스키마 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-173">A schema name in a text command.</span></span> <span data-ttu-id="1e5d6-174">DBLITERAL_SCHEMA_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-174">Maps to DBLITERAL_SCHEMA_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Schema_Separator">
      <MemberSignature Language="C#" Value="Schema_Separator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Schema_Separator = int32(27)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Schema_Separator" />
      <MemberSignature Language="VB.NET" Value="Schema_Separator" />
      <MemberSignature Language="C++ CLI" Value="Schema_Separator" />
      <MemberSignature Language="F#" Value="Schema_Separator = 27" Usage="System.Data.OleDb.OleDbLiteral.Schema_Separator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-175">텍스트 명령에서 식별자의 나머지와 스키마 이름을 분리하는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-175">The character that separates the schema name from the rest of the identifier in a text command.</span></span> <span data-ttu-id="1e5d6-176">DBLITERAL_SCHEMA_SEPARATOR에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-176">Maps to DBLITERAL_SCHEMA_SEPARATOR.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Table_Name">
      <MemberSignature Language="C#" Value="Table_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Table_Name = int32(17)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Table_Name" />
      <MemberSignature Language="VB.NET" Value="Table_Name" />
      <MemberSignature Language="C++ CLI" Value="Table_Name" />
      <MemberSignature Language="F#" Value="Table_Name = 17" Usage="System.Data.OleDb.OleDbLiteral.Table_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-177">텍스트 명령 또는 데이터 정의 인터페이스에 사용된 테이블 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-177">A table name used in a text command or in a data-definition interface.</span></span> <span data-ttu-id="1e5d6-178">DBLITERAL_TABLE_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-178">Maps to DBLITERAL_TABLE_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Text_Command">
      <MemberSignature Language="C#" Value="Text_Command" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral Text_Command = int32(18)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.Text_Command" />
      <MemberSignature Language="VB.NET" Value="Text_Command" />
      <MemberSignature Language="C++ CLI" Value="Text_Command" />
      <MemberSignature Language="F#" Value="Text_Command = 18" Usage="System.Data.OleDb.OleDbLiteral.Text_Command" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-179">SQL 문과 같은 텍스트 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-179">A text command, such as an SQL statement.</span></span> <span data-ttu-id="1e5d6-180">DBLITERAL_TEXT_COMMAND에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-180">Maps to DBLITERAL_TEXT_COMMAND.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="User_Name">
      <MemberSignature Language="C#" Value="User_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral User_Name = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.User_Name" />
      <MemberSignature Language="VB.NET" Value="User_Name" />
      <MemberSignature Language="C++ CLI" Value="User_Name" />
      <MemberSignature Language="F#" Value="User_Name = 19" Usage="System.Data.OleDb.OleDbLiteral.User_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-181">텍스트 명령의 사용자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-181">A user name in a text command.</span></span> <span data-ttu-id="1e5d6-182">DBLITERAL_USER_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-182">Maps to DBLITERAL_USER_NAME.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="View_Name">
      <MemberSignature Language="C#" Value="View_Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OleDb.OleDbLiteral View_Name = int32(20)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbLiteral.View_Name" />
      <MemberSignature Language="VB.NET" Value="View_Name" />
      <MemberSignature Language="C++ CLI" Value="View_Name" />
      <MemberSignature Language="F#" Value="View_Name = 20" Usage="System.Data.OleDb.OleDbLiteral.View_Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbLiteral</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e5d6-183">텍스트 명령의 뷰 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-183">A view name in a text command.</span></span> <span data-ttu-id="1e5d6-184">DBLITERAL_VIEW_NAME에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1e5d6-184">Maps to DBLITERAL_VIEW_NAME.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>