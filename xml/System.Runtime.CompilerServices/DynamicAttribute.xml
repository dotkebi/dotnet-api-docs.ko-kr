<Type Name="DynamicAttribute" FullName="System.Runtime.CompilerServices.DynamicAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fa3669f778fe8711e1b01cfa0610fc29627927c" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56380270" /></Metadata><TypeSignature Language="C#" Value="public sealed class DynamicAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.DynamicAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DynamicAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Dynamic.Runtime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5c5a9-101">멤버에서 <see cref="T:System.Object" />를 사용하면 동적으로 디스패치되는 형식으로 처리된다는 것을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-101">Indicates that the use of <see cref="T:System.Object" /> on a member is meant to be treated as a dynamically dispatched type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c5a9-102"><see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-102">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c5a9-103"><see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-103">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c5a9-104">특성 사양에서 사용 하는 경우 기본 생성자는 의미상 동등한 `DynamicAttribute({ true })`, 및 해당 식에 대 한 약어로 간주 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-104">When used in an attribute specification, the default constructor is semantically equivalent to `DynamicAttribute({ true })`, and can be considered a shorthand for that expression.</span></span> <span data-ttu-id="5c5a9-105">따라서만 사용할 형식의 요소에 <xref:System.Object>입니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-105">It should therefore only be used on an element of type <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicAttribute (bool[] transformFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool[] transformFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transformFlags As Boolean())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicAttribute(cli::array &lt;bool&gt; ^ transformFlags);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.DynamicAttribute : bool[] -&gt; System.Runtime.CompilerServices.DynamicAttribute" Usage="new System.Runtime.CompilerServices.DynamicAttribute transformFlags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transformFlags" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="transformFlags"><span data-ttu-id="5c5a9-106">형식의 접두사 순회 생성 시 동적으로 디스패치되는 형식으로 처리될 <see cref="T:System.Object" /> 를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-106">Specifies, in a prefix traversal of a type's construction, which <see cref="T:System.Object" /> occurrences are meant to be treated as a dynamically dispatched type.</span></span></param>
        <summary><span data-ttu-id="5c5a9-107"><see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-107">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c5a9-108">이 생성자는 기본 발생을 기반으로 하는 형식에 사용할 수 하려는 <xref:System.Object> 동적으로 간주 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-108">This constructor is meant to be used on types that are built on an underlying occurrence of <xref:System.Object> that is meant to be treated dynamically.</span></span>  
  
 <span data-ttu-id="5c5a9-109">예를 들어 경우 `C` 두 형식 매개 변수, 생성 된 형식의 사용을 사용 하 여 제네릭 형식이 `C<Object,Object>` 첫 번째 형식 인수를 동적으로 처리를 위한 것일 되며 두 번째 일반적으로 하는 경우에 적절 한 특성 사양 사용 해야는 `transformFlags` 의 값 `{ false, true, false }`합니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-109">For instance, if `C` is a generic type with two type parameters, a use of the constructed type `C<Object,Object>` might be intended to treat the first type argument dynamically and the second typically, in which case the appropriate attribute specification should use a `transformFlags` value of `{ false, true, false }`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformFlags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; TransformFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; TransformFlags" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.DynamicAttribute.TransformFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformFlags As IList(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;bool&gt; ^ TransformFlags { System::Collections::Generic::IList&lt;bool&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformFlags : System.Collections.Generic.IList&lt;bool&gt;" Usage="System.Runtime.CompilerServices.DynamicAttribute.TransformFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c5a9-110">형식의 접두사 순회 생성 시 동적으로 디스패치되는 형식으로 처리될 <see cref="T:System.Object" /> 를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-110">Specifies, in a prefix traversal of a type's construction, which <see cref="T:System.Object" /> occurrences are meant to be treated as a dynamically dispatched type.</span></span></summary>
        <value><span data-ttu-id="5c5a9-111">동적으로 디스패치되는 형식으로 처리될 <see cref="T:System.Object" />의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="5c5a9-111">The list of <see cref="T:System.Object" /> occurrences that are meant to be treated as a dynamically dispatched type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>