<Type Name="EntityModelSchemaGenerator" FullName="System.Data.Entity.Design.EntityModelSchemaGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31b7bf45ac1233e5f445e062f53c559f85570789" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911683" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityModelSchemaGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityModelSchemaGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityModelSchemaGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityModelSchemaGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityModelSchemaGenerator sealed" />
  <TypeSignature Language="F#" Value="type EntityModelSchemaGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da436-101">클래스에서 S 공간의 EntityContainer와 C 공간의 EntityContainer 사이에 기본 CCMapping을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="da436-101">The class creates a default CCMapping between an EntityContainer in S space and an EntityContainer in C space.</span></span> <span data-ttu-id="da436-102">범위의 선언된 형식에 따라 매핑이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="da436-102">The Mapping will be created based on the declared types of extents.</span></span> <span data-ttu-id="da436-103">따라서 상속이 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="da436-103">So Inheritance does not work.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da436-104"><see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-104">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.EntityContainer storeEntityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeEntityContainer As EntityContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::EntityContainer ^ storeEntityContainer);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityModelSchemaGenerator : System.Data.Metadata.Edm.EntityContainer -&gt; System.Data.Entity.Design.EntityModelSchemaGenerator" Usage="new System.Data.Entity.Design.EntityModelSchemaGenerator storeEntityContainer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeEntityContainer" Type="System.Data.Metadata.Edm.EntityContainer" />
      </Parameters>
      <Docs>
        <param name="storeEntityContainer"><span data-ttu-id="da436-105">개념 및 매핑 메타데이터가 생성되는 저장소 모델 EntityContainer입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-105">The storage model EntityContainer from which conceptual and mapping metadata is created.</span></span></param>
        <summary><span data-ttu-id="da436-106"><see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-106">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer, string namespaceName, string modelEntityContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.EntityContainer storeEntityContainer, string namespaceName, string modelEntityContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeEntityContainer As EntityContainer, namespaceName As String, modelEntityContainerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::EntityContainer ^ storeEntityContainer, System::String ^ namespaceName, System::String ^ modelEntityContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityModelSchemaGenerator : System.Data.Metadata.Edm.EntityContainer * string * string -&gt; System.Data.Entity.Design.EntityModelSchemaGenerator" Usage="new System.Data.Entity.Design.EntityModelSchemaGenerator (storeEntityContainer, namespaceName, modelEntityContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeEntityContainer" Type="System.Data.Metadata.Edm.EntityContainer" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="modelEntityContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeEntityContainer"><span data-ttu-id="da436-107">개념 및 매핑 메타데이터가 생성되는 저장소 모델 EntityContainer입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-107">The storage model EntityContainer from which conceptual and mapping metadata is created.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="da436-108">개념 모델 네임스페이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-108">The name for the conceptual model namespace.</span></span> <span data-ttu-id="da436-109">이 값이 null이면 네임스페이스 이름으로 storeEntityContainer 이름이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="da436-109">If this value is null, the storeEntityContainer name is used for the namespace name.</span></span></param>
        <param name="modelEntityContainerName"><span data-ttu-id="da436-110">개념 모델에서 선언된 EntityContainer 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-110">The EntityContainer name declared in the conceptual model.</span></span></param>
        <summary><span data-ttu-id="da436-111"><see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-111">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.StoreItemCollection storeItemCollection, string namespaceName, string modelEntityContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection, string namespaceName, string modelEntityContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.StoreItemCollection,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection, System::String ^ namespaceName, System::String ^ modelEntityContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityModelSchemaGenerator : System.Data.Metadata.Edm.StoreItemCollection * string * string -&gt; System.Data.Entity.Design.EntityModelSchemaGenerator" Usage="new System.Data.Entity.Design.EntityModelSchemaGenerator (storeItemCollection, namespaceName, modelEntityContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="namespaceName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modelEntityContainerName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="storeItemCollection"><span data-ttu-id="da436-112">EntityContainer 및 모델 메타데이터를 만드는 기타 항목이 포함된 StoreItemCollection입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-112">The StoreItemCollection that contains an EntityContainer and other items to create the Model Metadata from.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="da436-113">네임스페이스를 지정할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-113">The name to give the namespace.</span></span> <span data-ttu-id="da436-114">null인 경우 storeEntityContainer의 이름이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="da436-114">If null, the name of the storeEntityContainer will be used.</span></span></param>
        <param name="modelEntityContainerName"><span data-ttu-id="da436-115">모델 EntityContainer를 제공하는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-115">The name to give the Model EntityContainer.</span></span> <span data-ttu-id="da436-116">null이면 storeEntityContainer에서 참조되는 형식의 수정된 네임스페이스 버전이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="da436-116">If null, a modified version of the namespace of the of a type referenced in storeEntityContainer will be used.</span></span></param>
        <summary><span data-ttu-id="da436-117">EntityModelGenerator를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-117">Constructs an EntityModelGenerator</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdmItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmItemCollection EdmItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EdmItemCollection EdmItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EdmItemCollection As EdmItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EdmItemCollection ^ EdmItemCollection { System::Data::Metadata::Edm::EdmItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EdmItemCollection : System.Data.Metadata.Edm.EdmItemCollection" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da436-118">GenerateMetadata 메서드에 의해 만들어진 EdmItemCollection을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="da436-118">Gets the EdmItemCollection that was created by the GenerateMetadata method.</span></span></summary>
        <value><span data-ttu-id="da436-119">CSDL(개념 스키마 정의 언어)이 포함된 <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-119">An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> object that contains the conceptual schema definition language (CSDL).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntityContainer EntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityContainer As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntityContainer ^ EntityContainer { System::Data::Metadata::Edm::EntityContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainer : System.Data.Metadata.Edm.EntityContainer" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da436-120">GenerateMetadata 메서드에 의해 만들어진 개념 모델인 EntityContainer를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="da436-120">Gets the conceptual model EntityContainer that was created by the GenerateMetadata method.</span></span></summary>
        <value><span data-ttu-id="da436-121">개념 모델 EntityContainer가 포함된 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-121">An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object that contains the conceptual model EntityContainer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateForeignKeyProperties">
      <MemberSignature Language="C#" Value="public bool GenerateForeignKeyProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateForeignKeyProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateForeignKeyProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateForeignKeyProperties : bool with get, set" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da436-122">개념적 모델에서 외래 키 속성을 생성하는 플래그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-122">Gets or sets the flag for generating foreign key properties in a conceptual model.</span></span></summary>
        <value><span data-ttu-id="da436-123">이 속성 값이 <see langword="true" />로 설정되어 있으면 외래 키 속성이 개념적 모델에서 생성되고, 그렇지 않으면 외래 키 속성이 개념적 모델에서 생성되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="da436-123">If the value of this property is set to <see langword="true" /> then foreign key properties are generated in the conceptual model; otherwise foreign key properties are not generated in the conceptual model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da436-124">개념 모델 메타데이터 정보를 생성하고 모든 스키마 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-124">Generates the conceptual model metadata information and returns any schema errors.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateMetadata () As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateMetadata();" />
      <MemberSignature Language="F#" Value="member this.GenerateMetadata : unit -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityModelSchemaGenerator.GenerateMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da436-125">개념 모델 메타데이터 정보를 생성하고 모든 스키마 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-125">Generates the conceptual model metadata information and returns any schema errors.</span></span></summary>
        <returns><span data-ttu-id="da436-126">스키마 오류 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-126">A collection of schema error objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata (Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata(class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateMetadata (targetEntityFrameworkVersion As Version) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateMetadata(Version ^ targetEntityFrameworkVersion);" />
      <MemberSignature Language="F#" Value="member this.GenerateMetadata : Version -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityModelSchemaGenerator.GenerateMetadata targetEntityFrameworkVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetEntityFrameworkVersion"><span data-ttu-id="da436-127">Entity Framework의 대상 버전에 해당하는 EntityFrameworkVersions의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-127">The property of EntityFrameworkVersions that corresponds to the targeted version of the Entity Framework.</span></span></param>
        <summary><span data-ttu-id="da436-128">개념 모델 메타데이터 정보를 생성하고 모든 스키마 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-128">Generates the conceptual model metadata information and returns any schema errors.</span></span></summary>
        <returns><span data-ttu-id="da436-129">스키마 오류 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-129">A collection of schema error objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PluralizationService">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Design.PluralizationServices.PluralizationService PluralizationService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Design.PluralizationServices.PluralizationService PluralizationService" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService" />
      <MemberSignature Language="VB.NET" Value="Public Property PluralizationService As PluralizationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Entity::Design::PluralizationServices::PluralizationService ^ PluralizationService { System::Data::Entity::Design::PluralizationServices::PluralizationService ^ get(); void set(System::Data::Entity::Design::PluralizationServices::PluralizationService ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PluralizationService : System.Data.Entity.Design.PluralizationServices.PluralizationService with get, set" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.PluralizationServices.PluralizationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da436-130">모델을 생성할 때 사용되는 서비스를 나타내는 PluralizationService 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="da436-130">Gets or sets the PluralizationService value that indicates the service used when generating a model.</span></span></summary>
        <value><span data-ttu-id="da436-131">모델을 생성할 때 사용되는 서비스를 나타내는 <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-131">The <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> value that indicates the service used when generating a model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteModelSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da436-132">생성된 CSDL(개념 스키마 정의 언어)을 지정된 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="da436-132">Writes the generated conceptual schema definition language (CSDL) to the specified file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteModelSchema">
      <MemberSignature Language="C#" Value="public void WriteModelSchema (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteModelSchema(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteModelSchema (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteModelSchema(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="member this.WriteModelSchema : string -&gt; unit" Usage="entityModelSchemaGenerator.WriteModelSchema outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="da436-133">출력 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-133">The name of the output file.</span></span></param>
        <summary><span data-ttu-id="da436-134">생성된 CSDL(개념 스키마 정의 언어)을 지정된 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="da436-134">Writes the generated conceptual schema definition language (CSDL) to the specified file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteModelSchema">
      <MemberSignature Language="C#" Value="public void WriteModelSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteModelSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteModelSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteModelSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteModelSchema : System.Xml.XmlWriter -&gt; unit" Usage="entityModelSchemaGenerator.WriteModelSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="da436-135">CSDL을 쓸 XmlWriter입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-135">The XmlWriter to which the CSDL is written.</span></span></param>
        <summary><span data-ttu-id="da436-136">생성된 CSDL(개념 스키마 정의 언어)을 XmlWriter 개체에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="da436-136">Writes the generated conceptual schema definition language (CSDL) to an XmlWriter object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStorageMapping">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da436-137">생성된 MSL(매핑 사양 언어)을 지정된 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="da436-137">Writes the generated mapping specification language (MSL) to the specified file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStorageMapping">
      <MemberSignature Language="C#" Value="public void WriteStorageMapping (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStorageMapping(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStorageMapping (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStorageMapping(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="member this.WriteStorageMapping : string -&gt; unit" Usage="entityModelSchemaGenerator.WriteStorageMapping outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="da436-138">출력 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-138">The name of the output file.</span></span></param>
        <summary><span data-ttu-id="da436-139">생성된 MSL(매핑 사양 언어)을 지정된 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="da436-139">Writes the generated mapping specification language (MSL) to the specified file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStorageMapping">
      <MemberSignature Language="C#" Value="public void WriteStorageMapping (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStorageMapping(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStorageMapping (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStorageMapping(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteStorageMapping : System.Xml.XmlWriter -&gt; unit" Usage="entityModelSchemaGenerator.WriteStorageMapping writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="da436-140">MSL을 쓸 XmlWriter입니다.</span><span class="sxs-lookup"><span data-stu-id="da436-140">The XmlWriter to which the MSL is written.</span></span></param>
        <summary><span data-ttu-id="da436-141">생성된 MSL(매핑 사양 언어)을 XmlWriter 개체에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="da436-141">Writes the generated mapping specification language (MSL) to an XmlWriter object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>