<Type Name="ModuleBuilder" FullName="System.Reflection.Emit.ModuleBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b6c8553746c5e22064195891826ababdf34e9cc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58713748" /></Metadata><TypeSignature Language="C#" Value="public class ModuleBuilder : System.Reflection.Module, System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ModuleBuilder extends System.Reflection.Module implements class System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ModuleBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ModuleBuilder&#xA;Inherits Module&#xA;Implements _ModuleBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModuleBuilder : System::Reflection::Module, System::Runtime::InteropServices::_ModuleBuilder" />
  <TypeSignature Language="F#" Value="type ModuleBuilder = class&#xA;    inherit Module&#xA;    interface _ModuleBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Module</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ModuleBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ModuleBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a834-101">동적 어셈블리의 모듈을 정의하고 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-101">Defines and represents a module in a dynamic assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-102">인스턴스를 가져오려면 <xref:System.Reflection.Emit.ModuleBuilder>를 사용 하 여를 <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-102">To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-103">다음 코드 샘플의 사용법을 보여 줍니다. `ModuleBuilder` 동적 모듈을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-103">The following code sample demonstrates the use of `ModuleBuilder` to create a dynamic module.</span></span> <span data-ttu-id="4a834-104">그리고 ModuleBuilder를 호출 하 여 만들어집니다 <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> 에서 <xref:System.Reflection.Emit.AssemblyBuilder>, 생성자를 통해서가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-104">Note that the ModuleBuilder is created by calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> in <xref:System.Reflection.Emit.AssemblyBuilder>, rather than through a constructor.</span></span>  
  
 [!code-cpp[ModuleBuilder_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_Class/CPP/modulebuilder.cpp#1)]
 [!code-csharp[ModuleBuilder_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_Class/CS/modulebuilder.cs#1)]
 [!code-vb[ModuleBuilder_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_Class/VB/modulebuilder.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModuleBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModuleBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a834-105">이 <see cref="T:System.Reflection.Emit.ModuleBuilder" /> 인스턴스를 정의한 동적 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-105">Gets the dynamic assembly that defined this instance of <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
        <value><span data-ttu-id="4a834-106">현재 동적 모듈을 정의한 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-106">The dynamic assembly that defined the current dynamic module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-107">합니다 <xref:System.Reflection.Assembly> 반환 되는 개체를 <xref:System.Reflection.Emit.AssemblyBuilder> 의이 인스턴스를 정의 하는 <xref:System.Reflection.Emit.ModuleBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-107">The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalFunctions">
      <MemberSignature Language="C#" Value="public void CreateGlobalFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateGlobalFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateGlobalFunctions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateGlobalFunctions();" />
      <MemberSignature Language="F#" Value="member this.CreateGlobalFunctions : unit -&gt; unit" Usage="moduleBuilder.CreateGlobalFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-108">이 동적 모듈에 대한 전역 함수 정의 및 전역 데이터 정의를 완성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-108">Completes the global function definitions and global data definitions for this dynamic module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-109">이 동적 모듈 내에서 모든 전역 함수를 정의 하는 사용자 완료 되 면이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-109">This method should be called when the user is done with defining all the global functions within this dynamic module.</span></span> <span data-ttu-id="4a834-110">이 함수를 호출한 후 새 전역 데이터 없거나 새 전역 함수에 더 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-110">After calling this function, no more new global functions or new global data are allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-111">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-111">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-112">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-112">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-113">다음 샘플의 사용법을 보여 줍니다 `CreateGlobalFunctions` 에서 전역 정적 메서드를 만들려면를 <xref:System.Reflection.Emit.MethodBuilder> 사용 하 여 구현 <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-113">The following sample illustrates the use of `CreateGlobalFunctions` to create a static global method from a <xref:System.Reflection.Emit.MethodBuilder> implemented with <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#2)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#2)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-114">이 메서드가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-114">This method was called previously.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="member this.DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="moduleBuilder.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="language" Type="System.Guid" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="languageVendor" Type="System.Guid" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="documentType" Type="System.Guid" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="4a834-115">문서에 대한 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-115">The URL for the document.</span></span></param>
        <param name="language"><span data-ttu-id="4a834-116">문서 언어를 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-116">The GUID that identifies the document language.</span></span> <span data-ttu-id="4a834-117">이 매개 변수는 <see cref="F:System.Guid.Empty" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-117">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="4a834-118">문서의 언어 공급업체를 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-118">The GUID that identifies the document language vendor.</span></span> <span data-ttu-id="4a834-119">이 매개 변수는 <see cref="F:System.Guid.Empty" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-119">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="documentType"><span data-ttu-id="4a834-120">문서 형식을 식별하는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-120">The GUID that identifies the document type.</span></span> <span data-ttu-id="4a834-121">이 매개 변수는 <see cref="F:System.Guid.Empty" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-121">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <summary><span data-ttu-id="4a834-122">소스에 대한 문서를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-122">Defines a document for source.</span></span></summary>
        <returns><span data-ttu-id="4a834-123">정의된 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-123">The defined document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a834-124">이전 버전의.NET Framework throw <xref:System.ArgumentException> of <xref:System.ArgumentNullException> 때 `url` 는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-124">Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-125">다음 코드 샘플의 사용법을 보여 줍니다. `DefineDocument` (이 경우 원시 IL 파일)에서 외부 기호를 문서를 동적 모듈을 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-125">The following code sample illustrates the use of `DefineDocument` to attach an external symbol document (in this case, a raw IL file) to a dynamic module.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineDocument#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CPP/modulebuilder_definedocument.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineDocument#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CS/modulebuilder_definedocument.cs#1)]
 [!code-vb[ModuleBuilder_DefineDocument#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineDocument/VB/modulebuilder_definedocument.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-126"><paramref name="url" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-126"><paramref name="url" /> is <see langword="null" />.</span></span> <span data-ttu-id="4a834-127">이것은 .NET Framework의 이전 버전의 변형입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-127">This is a change from earlier versions of the .NET Framework.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-128">디버그 모듈이 아닌 동적 모듈에서 해당 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-128">This method is called on a dynamic module that is not a debug module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineEnum">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.EnumBuilder DefineEnum (string name, System.Reflection.TypeAttributes visibility, Type underlyingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.EnumBuilder DefineEnum(string name, valuetype System.Reflection.TypeAttributes visibility, class System.Type underlyingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineEnum (name As String, visibility As TypeAttributes, underlyingType As Type) As EnumBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::EnumBuilder ^ DefineEnum(System::String ^ name, System::Reflection::TypeAttributes visibility, Type ^ underlyingType);" />
      <MemberSignature Language="F#" Value="member this.DefineEnum : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.EnumBuilder" Usage="moduleBuilder.DefineEnum (name, visibility, underlyingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.EnumBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="visibility" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="underlyingType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-129">열거형 형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-129">The full path of the enumeration type.</span></span> <span data-ttu-id="4a834-130"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-130"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="visibility"><span data-ttu-id="4a834-131">열거형에 대한 형식 특성이며</span><span class="sxs-lookup"><span data-stu-id="4a834-131">The type attributes for the enumeration.</span></span> <span data-ttu-id="4a834-132"><see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />에 의해 정의되는 비트는 모두 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-132">The attributes are any bits defined by <see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />.</span></span></param>
        <param name="underlyingType"><span data-ttu-id="4a834-133">열거형에 대한 내부 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-133">The underlying type for the enumeration.</span></span> <span data-ttu-id="4a834-134">기본 제공 정수 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-134">This must be a built-in integer type.</span></span></param>
        <summary><span data-ttu-id="4a834-135">지정된 형식의 단일 비정적 필드인 <paramref name="value__" />가 들어 있는 값 형식으로 열거형 형식을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-135">Defines an enumeration type that is a value type with a single non-static field called <paramref name="value__" /> of the specified type.</span></span></summary>
        <returns><span data-ttu-id="4a834-136">정의된 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-136">The defined enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-137">정의 된 열거형의 파생 클래스인 <xref:System.Enum>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-137">The defined enum is a derived class of <xref:System.Enum>.</span></span> <span data-ttu-id="4a834-138">합니다 `value__` 필드에 <xref:System.Reflection.FieldAttributes.Private> 고 <xref:System.Reflection.FieldAttributes.SpecialName> 특성 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-138">The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set.</span></span>  
  
 <span data-ttu-id="4a834-139">열거형의 기본 형식으로 지정할 수 있는 기본 제공 정수 형식에 대 한 자세한 내용은 참조 하세요. [클래스 라이브러리 개요](~/docs/standard/class-library-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-139">For more information about the built-in integer types that can be specified as the underlying types of enumerations, see [Class Library Overview](~/docs/standard/class-library-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-140">.NET Framework 버전 1.0 및 1.1을 사용 하 여 열거형을 정의 하는 데 필요한 것 <xref:System.Reflection.Emit.TypeBuilder> 하므로 <xref:System.Reflection.Emit.EnumBuilder> 요소가 들어 있는 형식의 열거형을 내보내는 <xref:System.Int32> 열거형 형식 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-140">In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type.</span></span> <span data-ttu-id="4a834-141">.NET Framework 버전 2.0의에서 <xref:System.Reflection.Emit.EnumBuilder> 요소가 올바른 형식을 갖도록 하는 열거형을 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-141">In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-142">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-142">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-143">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-143">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-144">다음 예제에서는 `DefineEnum` 동적 모듈의 열거형 클래스를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-144">The following example illustrates the use of `DefineEnum` to implement an enumeration class in a dynamic module.</span></span> <span data-ttu-id="4a834-145">라는 열거형을 정의 하는 예제 `Elevation` 의 내부 형식이 있는 <xref:System.Int32>, 요소를 만듭니다: `Low`, 값이 0 인 및 `High`, 값이 1 인 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-145">The example defines an enumeration named `Elevation` that has an underlying type of <xref:System.Int32>, and creates two elements: `Low`, with a value of 0, and `High`, with a value of 1.</span></span> <span data-ttu-id="4a834-146">어셈블리 이름으로 저장 됩니다 형식 만들어지면 `TempAssembly.dll`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-146">After the type has been created, the assembly is saved with the name `TempAssembly.dll`.</span></span> <span data-ttu-id="4a834-147">사용할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) 이 어셈블리의 내용을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-147">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the contents of this assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-148">.NET Framework 버전 2.0에서 이전이 코드 예제에는 올바른 열거형을 생성 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-148">Prior to the .NET Framework version 2.0, this code example does not produce a correct enumeration.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineEnum#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CPP/modulebuilder_defineenum.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineEnum#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CS/modulebuilder_defineenum.cs#1)]
 [!code-vb[ModuleBuilder_DefineEnum#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineEnum/VB/modulebuilder_defineenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-149">표시 여부 특성이 아닌 다른 특성이 제공된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-149">Attributes other than visibility attributes are provided.</span></span>  
  
<span data-ttu-id="4a834-150">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-150">-or-</span></span> 
<span data-ttu-id="4a834-151">이 모듈의 부모 어셈블리에 지정된 이름의 열거형이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-151">An enumeration with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-152">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-152">-or-</span></span> 
<span data-ttu-id="4a834-153">표시 특성이 열거형의 범위와 일치하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="4a834-153">The visibility attributes do not match the scope of the enumeration.</span></span> <span data-ttu-id="4a834-154">예를 들어 <paramref name="visibility" />가 <see cref="F:System.Reflection.TypeAttributes.NestedPublic" />으로 지정되었지만 열거형이 중첩 형식이 아닌 경우가 여기에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-154">For example, <see cref="F:System.Reflection.TypeAttributes.NestedPublic" /> is specified for <paramref name="visibility" />, but the enumeration is not a nested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-155"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-155"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineGlobalMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-156">전역 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-156">Defines a global method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-157">메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-157">The name of the method.</span></span> <span data-ttu-id="4a834-158"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-158"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="4a834-159">메서드의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-159">The attributes of the method.</span></span> <span data-ttu-id="4a834-160"><paramref name="attributes" />에는 <see cref="F:System.Reflection.MethodAttributes.Static" />이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-160"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="4a834-161">메서드의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-161">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="4a834-162">메서드 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-162">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="4a834-163">이름, 특성, 반환 형식 및 매개 변수 형식을 지정하여 전역 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-163">Defines a global method with the specified name, attributes, return type, and parameter types.</span></span></summary>
        <returns><span data-ttu-id="4a834-164">정의된 전역 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-164">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-165">호출 하기 전에이 메서드를 정의 하는 전역 메서드에 사용할 수 없는 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-165">The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-166">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-166">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-167">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-167">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-168">다음 예제에서는의 사용을 보여 줍니다 `DefineGlobalMethod` 현재 연결 된 형식에 관계 없이 메서드를 만들려면 <xref:System.Reflection.Emit.ModuleBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-168">The following example illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="4a834-169">전역 메서드를 작성 한 후 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 완료 하기 위해 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-169">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-170">메서드가 정적이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-170">The method is not static.</span></span> <span data-ttu-id="4a834-171">즉 <paramref name="attributes" />에 <see cref="F:System.Reflection.MethodAttributes.Static" />이 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-171">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="4a834-172">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-172">-or-</span></span> 
<span data-ttu-id="4a834-173"><paramref name="name" />의 길이가 0인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-173">The length of <paramref name="name" /> is zero</span></span> 
<span data-ttu-id="4a834-174">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-174">-or-</span></span> 
<span data-ttu-id="4a834-175"><see cref="T:System.Type" /> 배열의 요소가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-175">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-176"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-176"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-177"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />이 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-177"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-178">메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-178">The name of the method.</span></span> <span data-ttu-id="4a834-179"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-179"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="4a834-180">메서드의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-180">The attributes of the method.</span></span> <span data-ttu-id="4a834-181"><paramref name="attributes" />에는 <see cref="F:System.Reflection.MethodAttributes.Static" />이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-181"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="4a834-182">메서드의 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-182">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="4a834-183">메서드의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-183">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="4a834-184">메서드 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-184">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="4a834-185">이름, 특성, 호출 규칙, 반환 형식 및 매개 변수 형식을 지정하여 전역 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-185">Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.</span></span></summary>
        <returns><span data-ttu-id="4a834-186">정의된 전역 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-186">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-187">될 때까지이 메서드를 정의 하는 전역 메서드를 사용할 수 없습니다. 호출 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-187">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-188">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-188">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-189">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-189">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-190">다음 코드 샘플의 사용법을 보여 줍니다 `DefineGlobalMethod` 현재 연결 된 형식에 관계 없이 메서드를 만들려면 <xref:System.Reflection.Emit.ModuleBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-190">The following code sample illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="4a834-191">전역 메서드를 작성 한 후 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 완료 하기 위해 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-191">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-192">메서드가 정적이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-192">The method is not static.</span></span> <span data-ttu-id="4a834-193">즉 <paramref name="attributes" />에 <see cref="F:System.Reflection.MethodAttributes.Static" />이 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-193">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="4a834-194">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-194">-or-</span></span> 
<span data-ttu-id="4a834-195"><see cref="T:System.Type" /> 배열의 요소가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-195">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-196"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-196"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-197"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />이 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-197"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" Index="8" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-198">메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-198">The name of the method.</span></span> <span data-ttu-id="4a834-199"><paramref name="name" />은 null 문자를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-199"><paramref name="name" /> cannot contain embedded null characters.</span></span></param>
        <param name="attributes"><span data-ttu-id="4a834-200">메서드의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-200">The attributes of the method.</span></span> <span data-ttu-id="4a834-201"><paramref name="attributes" />에는 <see cref="F:System.Reflection.MethodAttributes.Static" />이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-201"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="4a834-202">메서드의 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-202">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="4a834-203">메서드의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-203">The return type of the method.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="4a834-204"><see cref="T:System.Runtime.CompilerServices.IsConst" /> 또는 <see cref="T:System.Runtime.CompilerServices.IsBoxed" />와 같이 반환 형식에 대한 필수적 사용자 지정 한정자를 나타내는 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-204">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="4a834-205">반환 형식에 필수 사용자 지정 한정자가 없으면 <see langword="null" />을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-205">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="4a834-206"><see cref="T:System.Runtime.CompilerServices.IsConst" /> 또는 <see cref="T:System.Runtime.CompilerServices.IsBoxed" />와 같이 반환 형식에 대한 선택적 사용자 지정 한정자를 나타내는 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-206">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="4a834-207">반환 형식에 선택적 사용자 지정 한정자가 없으면 <see langword="null" />을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-207">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="4a834-208">메서드 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-208">The types of the method's parameters.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="4a834-209">형식 배열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-209">An array of arrays of types.</span></span> <span data-ttu-id="4a834-210">각 형식 배열은 전역 메서드의 해당 매개 변수에 대한 필수적 사용자 지정 한정자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-210">Each array of types represents the required custom modifiers for the corresponding parameter of the global method.</span></span> <span data-ttu-id="4a834-211">특정 인수에 필수적 사용자 지정 한정자가 없는 경우에는 형식 배열 대신 <see langword="null" />을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-211">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="4a834-212">전역 메서드에 인수가 없거나 모든 인수에 필수적 사용자 지정 한정자가 없는 경우에는 배열로 이루어진 배열 대신 <see langword="null" />을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-212">If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="4a834-213">형식 배열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-213">An array of arrays of types.</span></span> <span data-ttu-id="4a834-214">각 형식 배열은 해당 매개 변수에 대한 선택적 사용자 지정 한정자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-214">Each array of types represents the optional custom modifiers for the corresponding parameter.</span></span> <span data-ttu-id="4a834-215">특정 인수에 선택적 사용자 지정 한정자가 없는 경우에는 형식 배열 대신 <see langword="null" />을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-215">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="4a834-216">전역 메서드에 인수가 없거나 모든 인수에 선택적 사용자 지정 한정자가 없는 경우에는 배열로 이루어진 배열 대신 <see langword="null" />을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-216">If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="4a834-217">이름, 특성, 호출 규칙, 반환 형식, 반환 형식에 대한 사용자 지정 한정자, 매개 변수 형식 및 매개 변수 형식에 대한 사용자 지정 한정자를 지정하여 전역 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-217">Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.</span></span></summary>
        <returns><span data-ttu-id="4a834-218">정의된 전역 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-218">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-219">이 오버 로드는 관리 되는 컴파일러의 디자이너를 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-219">This overload is provided for designers of managed compilers.</span></span>  
  
 <span data-ttu-id="4a834-220">될 때까지이 메서드를 정의 하는 전역 메서드를 사용할 수 없습니다. 호출 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-220">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-221">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-221">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-222">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-222">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-223">메서드가 정적이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-223">The method is not static.</span></span> <span data-ttu-id="4a834-224">즉 <paramref name="attributes" />에 <see cref="F:System.Reflection.MethodAttributes.Static" />이 포함되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-224">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="4a834-225">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-225">-or-</span></span> 
<span data-ttu-id="4a834-226"><see cref="T:System.Type" /> 배열의 요소가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-226">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-227"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-227"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-228"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> 메서드가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-228">The <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> method has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineInitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineInitializedData(string name, unsigned int8[] data, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineInitializedData (name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineInitializedData(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineInitializedData : string * byte[] * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineInitializedData (name, data, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-229">데이터를 참조하는 데 사용되는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-229">The name used to refer to the data.</span></span> <span data-ttu-id="4a834-230"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-230"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="data"><span data-ttu-id="4a834-231">데이터의 BLOB(Binary Large Object)입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-231">The binary large object (BLOB) of data.</span></span></param>
        <param name="attributes"><span data-ttu-id="4a834-232">필드에 대한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-232">The attributes for the field.</span></span> <span data-ttu-id="4a834-233">기본값은 <see langword="Static" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-233">The default is <see langword="Static" />.</span></span></param>
        <summary><span data-ttu-id="4a834-234">PE 파일(이식 가능한 실행 파일)의 .sdata 섹션에서 초기화된 데이터 필드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-234">Defines an initialized data field in the .sdata section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="4a834-235">데이터를 참조할 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-235">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-236"><xref:System.Reflection.FieldAttributes.Static> 자동으로 포함 됩니다 `attributes`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-236"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="4a834-237">이 메서드에 의해 정의 된 데이터까지 만들어지지는 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-237">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-238">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-238">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-239">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-239">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-240">다음 예제에서는 합니다 <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> 에서 초기화 된 데이터 필드를 정의 하는 메서드는 `.sdata` pe (이식 가능) 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-240">The following example uses the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> method to define an initialized data field in the `.sdata` section of the portable executable (PE) file.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CPP/modulebuilder_defineinitializeddata.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CS/modulebuilder_defineinitializeddata.cs#1)]
 [!code-vb[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/VB/modulebuilder_defineinitializeddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-241"><paramref name="name" />의 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-241">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="4a834-242">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-242">-or-</span></span> 
<span data-ttu-id="4a834-243"><paramref name="data" />의 크기가 0보다 작거나 같은 경우이거나, 0x3f0000보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-243">The size of <paramref name="data" /> is less than or equal to zero or greater than or equal to 0x3f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-244"><paramref name="name" /> 또는 <paramref name="data" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-244"><paramref name="name" /> or <paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-245"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />이 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-245"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineManifestResource">
      <MemberSignature Language="C#" Value="public void DefineManifestResource (string name, System.IO.Stream stream, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineManifestResource(string name, class System.IO.Stream stream, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineManifestResource(System::String ^ name, System::IO::Stream ^ stream, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineManifestResource : string * System.IO.Stream * System.Reflection.ResourceAttributes -&gt; unit" Usage="moduleBuilder.DefineManifestResource (name, stream, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="stream" Type="System.IO.Stream" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-246">리소스의 이름(대/소문자를 구분함)입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-246">The case-sensitive name for the resource.</span></span></param>
        <param name="stream"><span data-ttu-id="4a834-247">리소스의 바이트가 들어 있는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-247">A stream that contains the bytes for the resource.</span></span></param>
        <param name="attribute"><span data-ttu-id="4a834-248">리소스가 공용인지 아니면 전용인지 지정하는 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-248">An enumeration value that specifies whether the resource is public or private.</span></span></param>
        <summary><span data-ttu-id="4a834-249">동적 어셈블리에 포함할 매니페스트 리소스를 나타내는 BLOB(Binary Large Object)를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-249">Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-250">어셈블리 매니페스트에 기록 되는 리소스 매니페스트 리소스 Blob 또는 관리 되는 리소스를 수 있습니다 하 고 연결 또는 포함 하 여 어셈블리에 포함 될 각 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-250">Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding.</span></span> <span data-ttu-id="4a834-251">모든 4 가지 시나리오는 동적 어셈블리에 대 한 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-251">All four scenarios are supported for dynamic assemblies.</span></span>  
  
-   <span data-ttu-id="4a834-252">이 메서드를 사용 하면 BLOB 동적 어셈블리에 매니페스트 리소스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-252">This method allows you to embed a manifest resource BLOB into a dynamic assembly.</span></span>  
  
-   <span data-ttu-id="4a834-253">관리 되는 리소스를 위성 모듈 또는 동적 어셈블리의 매니페스트 모듈을 포함 하려면 사용 합니다 <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> 리소스 작성기를 가져와서 사용 하는 메서드는 <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> 리소스를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-253">To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the resource.</span></span>  
  
-   <span data-ttu-id="4a834-254">동적 어셈블리에 관리 되는 리소스에 연결을 사용 합니다 <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> 리소스 작성기를 가져와서 사용 하는 메서드는 <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> 링크 된 리소스를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-254">To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
-   <span data-ttu-id="4a834-255">동적 어셈블리에 매니페스트 BLOB 리소스에 연결 하려면 사용 된 <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> 링크 된 리소스를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-255">To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
 <span data-ttu-id="4a834-256">또한 단일 Win32 리소스에 연결할 수는 어셈블리를 사용 하 여 합니다 <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-256">In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a834-257">이 리소스를 어셈블리 매니페스트에 나타나지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-257">This resource does not appear in the assembly manifest.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-258">생성 하 고 이라는 동적 어셈블리를 저장 하는 다음 예제에서는 `EmittedManifestResourceAssembly.exe`를 포함 하는 포함 된 관리 되는 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-258">The following example generates and saves a dynamic assembly named `EmittedManifestResourceAssembly.exe`, which contains an embedded unmanaged resource.</span></span> <span data-ttu-id="4a834-259">이 예제에서는 하나의 모듈로 구성 하 고 메모리 스트림을 관리 되지 않는 리소스를 포함 하는 어셈블리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-259">The example creates the assembly, which consists of one module, and opens a memory stream to contain the unmanaged resource.</span></span> <span data-ttu-id="4a834-260">호출 된 <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> 리소스를 정의 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-260">The code then calls the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method to define the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-261">모든 종류의 스트림 사용 하 여; 리소스에 대 한 예를 들어 파일에서 관리 되지 않는 이진 데이터를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-261">You can use any kind of stream for your resource; for example, you can read the unmanaged binary data from a file.</span></span>  
  
 <span data-ttu-id="4a834-262">이 예제에서는 사용 하 여 동적 모듈에서 형식 정의 `Main` 메서드를 메서드 본문의 MSIL을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-262">The example defines a type in the dynamic module with a `Main` method, and generates MSIL for the method body.</span></span> <span data-ttu-id="4a834-263">본문에 대 한 다음는 `Main` 코드 예제에서는 5 바이트 매니페스트 리소스와 연결 된 스트림에 씁니다 메서드 생성 된는 형식이 생성 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-263">After the body for the `Main` method has been generated and the type has been created, the code example writes five bytes to the stream associated with the manifest resource.</span></span> <span data-ttu-id="4a834-264">어셈블리를 저장 하면 리소스에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-264">When the assembly is saved, the resource is appended to it.</span></span>  
  
 <span data-ttu-id="4a834-265">예제를 실행 한 후 내보낸된 어셈블리를 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-265">After running the example, you can run the emitted assembly.</span></span> <span data-ttu-id="4a834-266">내보낸된 어셈블리의 코드 `Main` 메서드가 포함된 된 매니페스트 리소스를 읽고 바이트 값을 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-266">The code in the emitted assembly's `Main` method reads the embedded manifest resource and prints the byte values to the console.</span></span> <span data-ttu-id="4a834-267">사용할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) 어셈블리 매니페스트의 정보를 볼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-267">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the information in the assembly manifest.</span></span>  
  
 [!code-csharp[DefineManifestResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/DefineManifestResource/cs/source.cs#1)]
 [!code-vb[DefineManifestResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DefineManifestResource/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-268"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-268"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4a834-269">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-269">-or-</span></span> 
 <span data-ttu-id="4a834-270"><paramref name="stream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-270"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-271"><paramref name="name" />이 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-271"><paramref name="name" /> is a zero-length string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-272">현재 모듈이 들어 있는 동적 어셈블리가 임시 어셈블리인 경우, 즉 <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />을 호출할 때 파일 이름이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-272">The dynamic assembly that contains the current module is transient; that is, no file name was specified when <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" /> was called.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
        <altmember cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefinePInvokeMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-273"><see langword="PInvoke" /> 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-273">Defines a <see langword="PInvoke" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dllName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="4" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="6" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" Index="7" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-274"><see langword="PInvoke" /> 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-274">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="4a834-275"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-275"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="4a834-276"><see langword="PInvoke" /> 메서드가 정의된 DLL의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-276">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="attributes"><span data-ttu-id="4a834-277">메서드의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-277">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="4a834-278">메서드의 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-278">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="4a834-279">메서드의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-279">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="4a834-280">메서드 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-280">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="4a834-281">네이티브 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-281">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="4a834-282">메서드의 네이티브 문자 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-282">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="4a834-283">이름, 메서드가 정의되어 있는 DLL의 이름, 해당 메서드의 특성, 호출 규칙, 반환 형식, 매개 변수 형식 및 <see langword="PInvoke" /> 플래그를 지정하여 <see langword="PInvoke" /> 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-283">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="4a834-284">정의된 <see langword="PInvoke" /> 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-284">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-285">일부 DLL 가져오기 특성이 메서드에 인수로 지정할 수 없습니다 (System.Runtime.InteropServices.DllImportAttribute의 설명 참조).</span><span class="sxs-lookup"><span data-stu-id="4a834-285">Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="4a834-286">이러한 특성은 메서드에 대 한 사용자 지정 특성을 내보내 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-286">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="4a834-287">예를 들어, DLL 가져오기 특성 `PreserveSig` 내보내는 사용자 지정 특성에 의해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-287">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-288">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-288">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-289">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-289">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-290">다음 예제를 사용 합니다 `DefinePInvokeMethod` 메서드를를 <xref:System.Reflection.Emit.MethodBuilder> 외부 관리 되지 않는 메서드에 대해 `MessageBoxA`, Win32 API에서.</span><span class="sxs-lookup"><span data-stu-id="4a834-290">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API.</span></span> <span data-ttu-id="4a834-291">사용 하 여 메시지 상자를 표시 하는 예제 **다시 시도** 및 **취소** , 단추 및 메시지 상자에서 반환 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-291">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a834-292">0이 아닌 반환 값을 가져오려면 추가 해야 합니다 <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> 만들면 메서드 구현 플래그를 <xref:System.Reflection.Emit.MethodBuilder>를 사용 하 여는 <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> 및 <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-292">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-293">메서드가 정적 메서드가 아니거나 포함하는 형식이 인터페이스인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-293">The method is not static or if the containing type is an interface.</span></span>  
  
<span data-ttu-id="4a834-294">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-294">-or-</span></span> 
<span data-ttu-id="4a834-295">abstract 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-295">The method is abstract.</span></span>  
  
<span data-ttu-id="4a834-296">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-296">-or-</span></span> 
<span data-ttu-id="4a834-297">메서드가 이전에 정의되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-297">The method was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-298"><paramref name="name" /> 또는 <paramref name="dllName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-298"><paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-299">포함하는 형식이 <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />을 사용하여 이미 만들어져 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-299">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::String ^ entryName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, entryName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dllName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="entryName" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="4" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="5" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="7" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" Index="8" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-300"><see langword="PInvoke" /> 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-300">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="4a834-301"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-301"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="4a834-302"><see langword="PInvoke" /> 메서드가 정의된 DLL의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-302">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="entryName"><span data-ttu-id="4a834-303">DLL의 진입점 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-303">The name of the entry point in the DLL.</span></span></param>
        <param name="attributes"><span data-ttu-id="4a834-304">메서드의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-304">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="4a834-305">메서드의 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-305">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="4a834-306">메서드의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-306">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="4a834-307">메서드 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-307">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="4a834-308">네이티브 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-308">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="4a834-309">메서드의 네이티브 문자 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-309">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="4a834-310">이름, 메서드가 정의되어 있는 DLL의 이름, 해당 메서드의 특성, 호출 규칙, 반환 형식, 매개 변수 형식 및 <see langword="PInvoke" /> 플래그를 지정하여 <see langword="PInvoke" /> 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-310">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="4a834-311">정의된 <see langword="PInvoke" /> 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-311">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-312">일부 DLL 특성을 가져오려면 (에 대 한 설명을 참조 하세요. <xref:System.Runtime.InteropServices.DllImportAttribute>)이 메서드에 인수로 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-312">Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="4a834-313">이러한 특성은 메서드에 대 한 사용자 지정 특성을 내보내 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-313">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="4a834-314">예를 들어, DLL 가져오기 특성 `PreserveSig` 내보내는 사용자 지정 특성에 의해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-314">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-315">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-315">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-316">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-316">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-317">다음 예제를 사용 합니다 `DefinePInvokeMethod` 메서드를를 <xref:System.Reflection.Emit.MethodBuilder> 외부 관리 되지 않는 메서드에 대해 `MessageBoxA`, Win32 API에서.</span><span class="sxs-lookup"><span data-stu-id="4a834-317">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API.</span></span> <span data-ttu-id="4a834-318">사용 하 여 메시지 상자를 표시 하는 예제 **다시 시도** 및 **취소** , 단추 및 메시지 상자에서 반환 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-318">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a834-319">0이 아닌 반환 값을 가져오려면 추가 해야 합니다 <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> 만들면 메서드 구현 플래그를 <xref:System.Reflection.Emit.MethodBuilder>를 사용 하 여는 <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> 및 <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-319">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="4a834-320">다른 오버 로드를 사용 하 여이 예제는 <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> 메서드이지만 기술을 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-320">This example uses a different overload of the <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> method, but the technique is the same.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-321">비정적 메서드이거나, 포함하는 형식이 인터페이스인 경우, 추상 메서드인 경우 또는 이미 정의되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-321">The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-322"><paramref name="name" /> 또는 <paramref name="dllName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-322"><paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-323">포함하는 형식이 <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />을 사용하여 이미 만들어져 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-323">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-324">이 모듈에 저장될 관리되는 포함 리소스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-324">Defines a managed embedded resource to be stored in this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-325">리소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-325">The name of the resource.</span></span> <span data-ttu-id="4a834-326"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-326"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="description"><span data-ttu-id="4a834-327">리소스에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-327">The description of the resource.</span></span></param>
        <summary><span data-ttu-id="4a834-328">이 모듈에 저장될 명명된 관리되는 포함 리소스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-328">Defines the named managed embedded resource to be stored in this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-329">정의된 리소스에 대한 리소스 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-329">A resource writer for the defined resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-330">호출자에 게 호출 하지 않아야 합니다 `ResourceWriter.Generate()` 및 `ResourceWriter.Close()` 메서드를 이러한 메서드를 호출 하기 때문에 `ModuleBuilder.Save` 동적 어셈블리를 기록할 때 디스크에 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-330">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="4a834-331">이 메서드를 사용 하 여 관리 되는 리소스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-331">Use this method to embed a managed resource.</span></span> <span data-ttu-id="4a834-332">매니페스트 리소스 blob을 포함 하려면 사용 된 <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-332">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="4a834-333">요약이 포함 및 연결 관리 되는 리소스 및 리소스 매니페스트 blob에 대 한 참조를 <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-333">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-334">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-334">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-335">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-335">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-336">다음 예제에서는의 사용을 보여 줍니다 `DefineResource` 현재는 외부 리소스를 추가 하려면 <xref:System.Reflection.Emit.ModuleBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-336">The following example illustrates the use of `DefineResource` to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CPP/modulebuilder_defineresource1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CS/modulebuilder_defineresource1.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource1/VB/modulebuilder_defineresource1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-337"><paramref name="name" />의 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-337">Length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-338"><paramref name="name" />가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-338"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-339">이 모듈이 임시 모듈인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-339">This module is transient.</span></span>  
  
<span data-ttu-id="4a834-340">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-340">-or-</span></span> 
<span data-ttu-id="4a834-341">포함하는 어셈블리가 비지속적인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-341">The containing assembly is not persistable.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * System.Reflection.ResourceAttributes -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-342">리소스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-342">The name of the resource.</span></span> <span data-ttu-id="4a834-343"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-343"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="description"><span data-ttu-id="4a834-344">리소스에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-344">The description of the resource.</span></span></param>
        <param name="attribute"><span data-ttu-id="4a834-345">리소스 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-345">The resource attributes.</span></span></param>
        <summary><span data-ttu-id="4a834-346">해당 모듈에 저장될 명명된 관리되는 포함 리소스를 지정한 특성으로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-346">Defines the named managed embedded resource with the given attributes that is to be stored in this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-347">정의된 리소스에 대한 리소스 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-347">A resource writer for the defined resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-348">호출자에 게 호출 하지 않아야 합니다 `ResourceWriter.Generate()` 및 `ResourceWriter.Close()` 메서드를 이러한 메서드를 호출 하기 때문에 `ModuleBuilder.Save` 동적 어셈블리를 기록할 때 디스크에 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-348">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="4a834-349">이 메서드를 사용 하 여 관리 되는 리소스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-349">Use this method to embed a managed resource.</span></span> <span data-ttu-id="4a834-350">매니페스트 리소스 blob을 포함 하려면 사용 된 <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-350">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="4a834-351">요약이 포함 및 연결 관리 되는 리소스 및 리소스 매니페스트 blob에 대 한 참조를 <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-351">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-352">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-352">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-353">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-353">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-354">다음 예에서는 현재 외부 리소스를 추가 하려면 DefineResource의 사용을 보여 줍니다. <xref:System.Reflection.Emit.ModuleBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-354">The following example illustrates the use of DefineResource to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CPP/modulebuilder_defineresource2.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CS/modulebuilder_defineresource2.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource2/VB/modulebuilder_defineresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-355"><paramref name="name" />의 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-355">Length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-356"><paramref name="name" />가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-356"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-357">이 모듈이 임시 모듈인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-357">This module is transient.</span></span>  
  
<span data-ttu-id="4a834-358">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-358">-or-</span></span> 
<span data-ttu-id="4a834-359">포함하는 어셈블리가 비지속적인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-359">The containing assembly is not persistable.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-360"><see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-360">Constructs a <see langword="TypeBuilder" />.</span></span> <span data-ttu-id="4a834-361">값 형식을 정의하려면 <see cref="T:System.ValueType" />에서 파생되는 형식을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-361">To define a value type, define a type that derives from <see cref="T:System.ValueType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-362">네임스페이스를 포함한 형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-362">The full path of the type, including the namespace.</span></span> <span data-ttu-id="4a834-363"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-363"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <summary><span data-ttu-id="4a834-364">이 모듈에서 지정된 이름을 사용하는 전용 형식에 대해 <see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-364">Constructs a <see langword="TypeBuilder" /> for a private type with the specified name in this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-365">지정된 이름을 사용하는 전용 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-365">A private type with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-366">형식 이름은 어셈블리 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-366">Type names must be unique within an assembly.</span></span> <span data-ttu-id="4a834-367">어셈블리의 서로 다른 두 모듈에서 동일한 이름의 두 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-367">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-368">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-369">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-370">다음 예제는 <xref:System.Reflection.Emit.TypeBuilder> 사용 하 여 현재 동적 모듈 `CreateType`, 빌드 및 형식에 완료 하 고 어셈블리를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-370">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-371">이 모듈의 부모 어셈블리에 지정된 이름의 형식이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-371">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-372">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-372">-or-</span></span> 
<span data-ttu-id="4a834-373">중첩되지 않은 형식에 대해 중첩된 형식 특성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-373">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-374"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-374"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-375">형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-375">The full path of the type.</span></span> <span data-ttu-id="4a834-376"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-376"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="4a834-377">정의된 형식의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-377">The attributes of the defined type.</span></span></param>
        <summary><span data-ttu-id="4a834-378">지정된 형식 이름 및 형식 특성으로 <see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-378">Constructs a <see langword="TypeBuilder" /> given the type name and the type attributes.</span></span></summary>
        <returns><span data-ttu-id="4a834-379">요청된 특성을 모두 사용하여 만든 <see langword="TypeBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-379">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-380">형식 이름은 어셈블리 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-380">Type names must be unique within an assembly.</span></span> <span data-ttu-id="4a834-381">어셈블리의 서로 다른 두 모듈에서 동일한 이름의 두 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-381">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-382">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-382">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-383">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-383">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-384">다음 예제는 <xref:System.Reflection.Emit.TypeBuilder> 사용 하 여 현재 동적 모듈 `CreateType`, 빌드 및 형식에 완료 하 고 어셈블리를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-384">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-385">이 모듈의 부모 어셈블리에 지정된 이름의 형식이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-385">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-386">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-386">-or-</span></span> 
<span data-ttu-id="4a834-387">중첩되지 않은 형식에 대해 중첩된 형식 특성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-387">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-388"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-388"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-389">형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-389">The full path of the type.</span></span> <span data-ttu-id="4a834-390"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-390"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="4a834-391">해당 형식과 연결될 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-391">The attribute to be associated with the type.</span></span></param>
        <param name="parent"><span data-ttu-id="4a834-392">정의된 형식이 확장하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-392">The type that the defined type extends.</span></span></param>
        <summary><span data-ttu-id="4a834-393">형식 이름, 형식 특성 및 정의된 형식이 확장하는 형식으로 <see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-393">Constructs a <see langword="TypeBuilder" /> given type name, its attributes, and the type that the defined type extends.</span></span></summary>
        <returns><span data-ttu-id="4a834-394">요청된 특성을 모두 사용하여 만든 <see langword="TypeBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-394">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-395">형식 이름은 어셈블리 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-395">Type names must be unique within an assembly.</span></span> <span data-ttu-id="4a834-396">어셈블리의 서로 다른 두 모듈에서 동일한 이름의 두 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-396">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-397">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-397">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-398">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-398">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-399">다음 예제는 <xref:System.Reflection.Emit.TypeBuilder> 사용 하 여 현재 동적 모듈 `CreateType`, 빌드 및 형식에 완료 하 고 어셈블리를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-399">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-400">이 모듈의 부모 어셈블리에 지정된 이름의 형식이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-400">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-401">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-401">-or-</span></span> 
<span data-ttu-id="4a834-402">중첩되지 않은 형식에 대해 중첩된 형식 특성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-402">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-403"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-403"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, typesize As Integer) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-404">형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-404">The full path of the type.</span></span> <span data-ttu-id="4a834-405"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-405"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="4a834-406">정의된 형식의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-406">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="4a834-407">정의된 형식이 확장하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-407">The type that the defined type extends.</span></span></param>
        <param name="typesize"><span data-ttu-id="4a834-408">형식의 총 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-408">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="4a834-409">형식 이름, 특성, 정의된 형식이 확장하는 형식 및 해당 형식의 전체 크기를 지정하여 <see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-409">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the total size of the type.</span></span></summary>
        <returns><span data-ttu-id="4a834-410"><see langword="TypeBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-410">A <see langword="TypeBuilder" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-411">형식 이름은 어셈블리 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-411">Type names must be unique within an assembly.</span></span> <span data-ttu-id="4a834-412">어셈블리의 서로 다른 두 모듈에 동일한 이름 가진 두 형식이 있을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-412">It is forbidden to have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-413">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-413">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-414">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-414">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-415">다음 예제는 <xref:System.Reflection.Emit.TypeBuilder> 사용 하 여 현재 동적 모듈 `CreateType`, 빌드 및 형식에 완료 하 고 어셈블리를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-415">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-416">이 모듈의 부모 어셈블리에 지정된 이름의 형식이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-416">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-417">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-417">-or-</span></span> 
<span data-ttu-id="4a834-418">중첩되지 않은 형식에 대해 중첩된 형식 특성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-418">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-419"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-419"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, packsize As PackingSize) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packsize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packsize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packsize" Type="System.Reflection.Emit.PackingSize" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-420">형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-420">The full path of the type.</span></span> <span data-ttu-id="4a834-421"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-421"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="4a834-422">정의된 형식의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-422">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="4a834-423">정의된 형식이 확장하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-423">The type that the defined type extends.</span></span></param>
        <param name="packsize"><span data-ttu-id="4a834-424">형식의 압축 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-424">The packing size of the type.</span></span></param>
        <summary><span data-ttu-id="4a834-425">형식 이름, 특성, 정의된 형식이 확장하는 형식 및 해당 형식의 압축 크기를 지정하여 <see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-425">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the packing size of the type.</span></span></summary>
        <returns><span data-ttu-id="4a834-426"><see langword="TypeBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-426">A <see langword="TypeBuilder" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-427">형식 이름은 어셈블리 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-427">Type names must be unique within an assembly.</span></span> <span data-ttu-id="4a834-428">어셈블리의 서로 다른 두 모듈에서 동일한 이름의 두 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-428">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-429">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-429">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-430">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-430">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-431">다음 예제는 <xref:System.Reflection.Emit.TypeBuilder> 사용 하 여 현재 동적 모듈 `CreateType`, 빌드 및 형식에 완료 하 고 어셈블리를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-431">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-432">이 모듈의 부모 어셈블리에 지정된 이름의 형식이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-432">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-433">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-433">-or-</span></span> 
<span data-ttu-id="4a834-434">중첩되지 않은 형식에 대해 중첩된 형식 특성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-434">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-435"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-435"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * Type[] -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-436">형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-436">The full path of the type.</span></span> <span data-ttu-id="4a834-437"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-437"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="4a834-438">해당 형식과 연결될 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-438">The attributes to be associated with the type.</span></span></param>
        <param name="parent"><span data-ttu-id="4a834-439">정의된 형식이 확장하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-439">The type that the defined type extends.</span></span></param>
        <param name="interfaces"><span data-ttu-id="4a834-440">해당 형식이 구현하는 인터페이스의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-440">The list of interfaces that the type implements.</span></span></param>
        <summary><span data-ttu-id="4a834-441">형식 이름, 특성, 정의된 형식이 확장하는 형식 및 정의된 형식이 구현하는 인터페이스를 지정하여 <see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-441">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.</span></span></summary>
        <returns><span data-ttu-id="4a834-442">요청된 특성을 모두 사용하여 만든 <see langword="TypeBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-442">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-443">형식 이름은 어셈블리 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-443">Type names must be unique within an assembly.</span></span> <span data-ttu-id="4a834-444">어셈블리의 서로 다른 두 모듈에서 동일한 이름의 두 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-444">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-445">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-445">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-446">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-446">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-447">다음 예제는 <xref:System.Reflection.Emit.TypeBuilder> 사용 하 여 현재 동적 모듈 `CreateType`, 빌드 및 형식에 완료 하 고 어셈블리를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-447">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-448">이 모듈의 부모 어셈블리에 지정된 이름의 형식이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-448">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-449">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-449">-or-</span></span> 
<span data-ttu-id="4a834-450">중첩되지 않은 형식에 대해 중첩된 형식 특성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-450">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-451"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-451"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packingSize, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packingSize, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packingSize, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packingSize, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packingSize" Type="System.Reflection.Emit.PackingSize" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-452">형식의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-452">The full path of the type.</span></span> <span data-ttu-id="4a834-453"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-453"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="4a834-454">정의된 형식의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-454">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="4a834-455">정의된 형식이 확장하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-455">The type that the defined type extends.</span></span></param>
        <param name="packingSize"><span data-ttu-id="4a834-456">형식의 압축 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-456">The packing size of the type.</span></span></param>
        <param name="typesize"><span data-ttu-id="4a834-457">형식의 총 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-457">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="4a834-458">형식 이름, 특성, 정의된 형식이 확장하는 형식, 정의된 형식의 압축 크기 및 전체 크기를 지정하여 <see langword="TypeBuilder" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-458">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.</span></span></summary>
        <returns><span data-ttu-id="4a834-459">요청된 특성을 모두 사용하여 만든 <see langword="TypeBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-459">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-460">형식 이름은 어셈블리 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-460">Type names must be unique within an assembly.</span></span> <span data-ttu-id="4a834-461">어셈블리의 서로 다른 두 모듈에서 동일한 이름의 두 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-461">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-462">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-462">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-463">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-463">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-464">다음 예제는 <xref:System.Reflection.Emit.TypeBuilder> 사용 하 여 현재 동적 모듈 `CreateType`, 빌드 및 형식에 완료 하 고 어셈블리를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-464">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-465">이 모듈의 부모 어셈블리에 지정된 이름의 형식이 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-465">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="4a834-466">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-466">-or-</span></span> 
<span data-ttu-id="4a834-467">중첩되지 않은 형식에 대해 중첩된 형식 특성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-467">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-468"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-468"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUninitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineUninitializedData(string name, int32 size, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineUninitializedData (name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineUninitializedData(System::String ^ name, int size, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineUninitializedData : string * int * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineUninitializedData (name, size, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-469">데이터를 참조하는 데 사용되는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-469">The name used to refer to the data.</span></span> <span data-ttu-id="4a834-470"><paramref name="name" />에는 내장된 null이 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-470"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="size"><span data-ttu-id="4a834-471">데이터 필드의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-471">The size of the data field.</span></span></param>
        <param name="attributes"><span data-ttu-id="4a834-472">필드에 대한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-472">The attributes for the field.</span></span></param>
        <summary><span data-ttu-id="4a834-473">PE 파일(이식 가능한 실행 파일)의 .sdata 섹션에서 초기화되지 않은 데이터 필드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-473">Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="4a834-474">데이터를 참조할 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-474">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-475"><xref:System.Reflection.FieldAttributes.Static> 자동으로 포함 됩니다 `attributes`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-475"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="4a834-476">이 메서드에 의해 정의 된 데이터까지 만들어지지는 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-476">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-477">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-477">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-478">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-478">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-479"><paramref name="name" />의 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-479">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="4a834-480">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-480">-or-</span></span> 
 <span data-ttu-id="4a834-481"><paramref name="size" />가 0보다 작거나 같습니다. 또는 0x003f0000보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-481"><paramref name="size" /> is less than or equal to zero, or greater than or equal to 0x003f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-482"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-482"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-483"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />이 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-483"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-484">관리되지 않는 리소스를 이 모듈에서 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-484">Defines an unmanaged resource in this module.</span></span> <span data-ttu-id="4a834-485">BLOB(Binary Large Object)는 Win32 리소스에 적합한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-485">The binary large object (BLOB) must have the right format for a Win32 resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : byte[] -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="4a834-486">관리되지 않는 리소스를 나타내는 불투명 BLOB입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-486">An opaque BLOB that represents an unmanaged resource</span></span></param>
        <summary><span data-ttu-id="4a834-487">바이트의 불투명한 BLOB(Binary Large Object)를 지정하여 관리되지 않는 포함 리소스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-487">Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-488">어셈블리는 하나의 관리 되지 않는 리소스를 사용 하 여 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-488">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="4a834-489">즉, 호출 `DefineVersionInfoResource` 하거나 `DefineUnmanagedResource` 메서드 중 하나가 호출 된 후 이전에 throw <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-489">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a834-490">여러 관리 되지 않는 리소스 (공용 언어 런타임 함께 제공 되지)는 Microsoft ResMerge 유틸리티와 같은 도구를 사용 하 여 병합 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-490">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-491">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-491">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-492">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-492">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-493">모듈의 어셈블리에 관리되지 않는 리소스가 이미 정의되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-493">An unmanaged resource has already been defined in the module's assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-494"><paramref name="resource" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-494"><paramref name="resource" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : string -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resourceFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFileName"><span data-ttu-id="4a834-495">관리되지 않는 리소스 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-495">The name of the unmanaged resource file.</span></span></param>
        <summary><span data-ttu-id="4a834-496">Win32 리소스 파일의 이름으로 관리되지 않는 리소스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-496">Defines an unmanaged resource given the name of Win32 resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-497">어셈블리는 하나의 관리 되지 않는 리소스를 사용 하 여 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-497">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="4a834-498">즉, 호출 `DefineVersionInfoResource` 하거나 `DefineUnmanagedResource` 메서드 중 하나가 호출 된 후 이전에 throw <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-498">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a834-499">여러 관리 되지 않는 리소스 (공용 언어 런타임 함께 제공 되지)는 Microsoft ResMerge 유틸리티와 같은 도구를 사용 하 여 병합 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-499">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-500">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-500">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-501">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-501">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-502">모듈의 어셈블리에 관리되지 않는 리소스가 이미 정의되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-502">An unmanaged resource has already been defined in the module's assembly.</span></span>  
  
<span data-ttu-id="4a834-503">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-503">-or-</span></span> 
 <span data-ttu-id="4a834-504"><paramref name="resourceFileName" />가 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-504"><paramref name="resourceFileName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-505"><paramref name="resourceFileName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-505"><paramref name="resourceFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="4a834-506"><paramref name="resourceFileName" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-506"><paramref name="resourceFileName" /> is not found.</span></span>  
  
<span data-ttu-id="4a834-507">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-507">-or-</span></span> 
 <span data-ttu-id="4a834-508"><paramref name="resourceFileName" />는 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-508"><paramref name="resourceFileName" /> is a directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="moduleBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4a834-509">이 인스턴스와 비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-509">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4a834-510">이 인스턴스가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-510">Returns a value that indicates whether this instance is equal to the specified object.</span></span></summary>
        <returns><span data-ttu-id="4a834-511"><see langword="true" />가 이 인스턴스의 형식 및 값과 같으면 <paramref name="obj" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-511"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedName">
      <MemberSignature Language="C#" Value="public override string FullyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedName : string" Usage="System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a834-512">이 모듈의 정규화된 이름과 모듈의 경로를 나타내는 <see langword="String" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-512">Gets a <see langword="String" /> representing the fully qualified name and path to this module.</span></span></summary>
        <value><span data-ttu-id="4a834-513">정규화된 모듈 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-513">The fully qualified module name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-514">경로가 없는 이름을 가져오려면 `Name`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-514">To get the name without the path, use `Name`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-515">모듈 이름의 경우 플랫폼에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-515">The case of a module name is platform dependent.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="4a834-516">경로에 액세스 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-516">Accesses information in the path.</span></span> <span data-ttu-id="4a834-517">연관된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="4a834-517">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetArrayMethod (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodInfo GetArrayMethod(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethod (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetArrayMethod(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethod : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetArrayMethod (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="arrayClass"><span data-ttu-id="4a834-518">배열 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-518">An array class.</span></span></param>
        <param name="methodName"><span data-ttu-id="4a834-519">배열 클래스의 메서드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-519">The name of a method on the array class.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="4a834-520">메서드의 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-520">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="4a834-521">메서드의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-521">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="4a834-522">메서드 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-522">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="4a834-523">배열 클래스의 명명된 메서드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-523">Returns the named method on an array class.</span></span></summary>
        <returns><span data-ttu-id="4a834-524">배열 클래스의 명명된 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-524">The named method on an array class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-525">`GetArrayMethod` 정의가 완료 되지 않은 형식의 배열을 있고에 정의 된 메서드에 액세스 하려는 경우에 유용 <xref:System.Array>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-525">`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>.</span></span> <span data-ttu-id="4a834-526">예를 들어 형식을 정의할 수도 있으며 형식 매개 변수로 배열을 사용 하는 메서드를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-526">For example, you might define a type and want to define a method that takes an array of the type as a parameter.</span></span> <span data-ttu-id="4a834-527">배열의 요소에 액세스 하기 위해의 메서드를 호출 해야 합니다 <xref:System.Array> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-527">In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-528">다음 예제에 사용 하는 방법을 보여 줍니다. <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> 가져오려고는 <xref:System.Reflection.MethodInfo> 배열 값을 반환 하는 방법에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-528">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.MethodInfo> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#1)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#1)]
 [!code-vb[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-529"><paramref name="arrayClass" />가 배열이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-529"><paramref name="arrayClass" /> is not an array.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-530"><paramref name="arrayClass" /> 또는 <paramref name="methodName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-530"><paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetArrayMethodToken (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetArrayMethodToken(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethodToken (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetArrayMethodToken(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethodToken : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetArrayMethodToken (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="methodName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="arrayClass"><span data-ttu-id="4a834-531">배열에 대한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-531">The object for the array.</span></span></param>
        <param name="methodName"><span data-ttu-id="4a834-532">메서드의 이름이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-532">A string that contains the name of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="4a834-533">메서드의 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-533">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="4a834-534">메서드의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-534">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="4a834-535">메서드의 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-535">The types of the parameters of the method.</span></span></param>
        <summary><span data-ttu-id="4a834-536">배열 클래스의 명명된 메서드 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-536">Returns the token for the named method on an array class.</span></span></summary>
        <returns><span data-ttu-id="4a834-537">배열 클래스의 명명된 메서드 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-537">The token for the named method on an array class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-538">이 메서드는 유사한 <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>메서드 자체는 대신 배열 메서드 토큰을 반환 하는 점을 제외 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-538">This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a834-539">다음 예제에 사용 하는 방법을 보여 줍니다. <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> 가져오려고는 <xref:System.Reflection.Emit.MethodToken> 배열 값을 반환 하는 방법에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-539">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.Emit.MethodToken> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#2)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#2)]
 [!code-vb[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-540"><paramref name="arrayClass" />가 배열이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-540"><paramref name="arrayClass" /> is not an array.</span></span>  
  
<span data-ttu-id="4a834-541">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-541">-or-</span></span> 
<span data-ttu-id="4a834-542"><paramref name="methodName" />의 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-542">The length of <paramref name="methodName" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-543"><paramref name="arrayClass" /> 또는 <paramref name="methodName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-543"><paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructorToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-544">이 모듈 내에서 지정된 생성자를 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-544">Returns the token used to identify the specified constructor within this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo con);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo con) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (con As ConstructorInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ con);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken con" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="4a834-545">해당 토큰을 가져올 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-545">The constructor to get a token for.</span></span></param>
        <summary><span data-ttu-id="4a834-546">이 모듈 내에서 지정된 생성자를 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-546">Returns the token used to identify the specified constructor within this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-547">이 모듈 내에서 지정된 생성자를 식별하는 데 사용되는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-547">The token used to identify the specified constructor within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-548"><paramref name="con" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-548"><paramref name="con" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (constructor As ConstructorInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken (constructor, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="4a834-549">해당 토큰을 가져올 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-549">The constructor to get a token for.</span></span></param>
        <param name="optionalParameterTypes"><span data-ttu-id="4a834-550">생성자에 대한 선택적 매개 변수의 형식 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-550">A collection of the types of the optional parameters to the constructor.</span></span></param>
        <summary><span data-ttu-id="4a834-551">이 모듈에 지정된 특성 및 매개 변수 형식이 적용된 생성자를 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-551">Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-552">이 모듈 내에서 지정된 생성자를 식별하는 데 사용되는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-552">The token used to identify the specified constructor within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-553"><paramref name="constructor" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-553"><paramref name="constructor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-554">현재 <see cref="T:System.Reflection.Emit.ModuleBuilder" />에 적용된 사용자 지정 특성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-554">Returns the custom attributes that are applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="4a834-555">이 인수는 이 형식의 개체에 대해 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-555">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="4a834-556">현재 <see cref="T:System.Reflection.Emit.ModuleBuilder" />에 적용된 사용자 지정 특성을 모두 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-556">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="4a834-557">사용자 지정 특성이 들어 있는 배열입니다. 특성이 없으면 배열이 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-557">An array that contains the custom attributes; the array is empty if there are no attributes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="4a834-558">특성이 파생되는 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-558">The base type from which attributes derive.</span></span></param>
        <param name="inherit"><span data-ttu-id="4a834-559">이 인수는 이 형식의 개체에 대해 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-559">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="4a834-560">현재 <see cref="T:System.Reflection.Emit.ModuleBuilder" />에 적용되었으며 지정된 특성 형식에서 파생되는 사용자 지정 특성을 모두 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-560">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that derive from a specified attribute type.</span></span></summary>
        <returns><span data-ttu-id="4a834-561">임의 수준의 <paramref name="attributeType" />에서 파생된 사용자 지정 특성이 들어 있는 배열입니다. 해당 특성이 없으면 배열이 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-561">An array that contains the custom attributes that are derived, at any level, from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-562"><paramref name="attributeType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-562"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-563"><paramref name="attributeType" />이 런타임에 제공되는 <see cref="T:System.Type" /> 개체가 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="4a834-563"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="4a834-564">예를 들어 <paramref name="attributeType" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" /> 개체인 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-564">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="moduleBuilder.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-565"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> 개체로 표현되는, 현재 <see cref="T:System.Reflection.CustomAttributeData" />에 적용된 특성 관련 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-565">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span></span></summary>
        <returns><span data-ttu-id="4a834-566">현재 모듈에 적용된 특성에 대한 데이터를 나타내는 <see cref="T:System.Reflection.CustomAttributeData" /> 개체의 제네릭 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-566">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-567">리플렉션 전용 컨텍스트에 리플렉션 전용 컨텍스트에 로드 되는 코드에서 직접 사용자 지정 특성이 정의 되어 있는 경우 코드의 사용자 지정 특성을 검사할이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-567">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="4a834-568">와 같은 메서드 <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> 고 <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> 특성의 인스턴스를 만들기 때문에 이러한 경우에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-568">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="4a834-569">리플렉션 전용 컨텍스트에서 코드를 실행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-569">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="4a834-570">자세한 내용 및 예를 들어 코드를 실행 하는 것에 대 한 참조를 <xref:System.Reflection.CustomAttributeData> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-570">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-571">필드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-571">The field name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="4a834-572">검색을 제어하는 데 사용하는 <see langword="BindingFlags" /> 비트 플래그의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-572">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="4a834-573">지정된 이름과 바인딩 특성을 가진 PE 파일(이식 가능한 실행 파일)의 .sdata 영역에 정의된 모듈 수준 필드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-573">Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.</span></span></summary>
        <returns><span data-ttu-id="4a834-574">지정된 이름과 바인딩 특성이 있는 필드 또는 해당 필드가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-574">A field that has the specified name and binding attributes, or <see langword="null" /> if the field does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-575">Pe (이식 가능) 파일의.sdata 영역에 필드를 사용 하 여 정의 된 동적 어셈블리를 생성할 때 합니다 <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> 또는 <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-575">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a834-576">될 때까지 모듈 수준 필드를 검색할 수 없습니다 후는 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 모듈에 대 한 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-576">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-577"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-577">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="moduleBuilder.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="4a834-578">검색을 제어하는 데 사용하는 <see langword="BindingFlags" /> 비트 플래그의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-578">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="4a834-579">지정된 바인딩 플래그와 일치하는 PE 파일(이식 가능한 실행 파일)의 .sdata 영역에 정의된 모든 필드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-579">Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.</span></span></summary>
        <returns><span data-ttu-id="4a834-580">지정된 플래그와 일치하는 필드의 배열입니다. 해당 필드가 없으면 배열이 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-580">An array of fields that match the specified flags; the array is empty if no such fields exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-581">Pe (이식 가능) 파일의.sdata 영역에 필드를 사용 하 여 정의 된 동적 어셈블리를 생성할 때 합니다 <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> 또는 <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-581">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a834-582">될 때까지 모듈 수준 필드를 검색할 수 없습니다 후는 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 모듈에 대 한 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-582">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-583"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-583">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldToken GetFieldToken (System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.FieldToken GetFieldToken(class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldToken (field As FieldInfo) As FieldToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldToken GetFieldToken(System::Reflection::FieldInfo ^ field);" />
      <MemberSignature Language="F#" Value="member this.GetFieldToken : System.Reflection.FieldInfo -&gt; System.Reflection.Emit.FieldToken" Usage="moduleBuilder.GetFieldToken field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.FieldInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="4a834-584">해당 토큰을 가져올 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-584">The field to get a token for.</span></span></param>
        <summary><span data-ttu-id="4a834-585">이 모듈 내에서 지정된 필드를 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-585">Returns the token used to identify the specified field within this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-586">이 모듈 내에서 지정된 필드를 식별하는 데 사용되는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-586">The token used to identify the specified field within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-587"><paramref name="field" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-587"><paramref name="field" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="moduleBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-588">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-588">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4a834-589">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-589">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetMethodImpl (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="types" Type="System.Type[]" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-590">메서드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-590">The method name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="4a834-591">검색을 제어하는 데 사용하는 <see langword="BindingFlags" /> 비트 플래그의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-591">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="4a834-592"><see langword="Binder" />를 구현하는 개체로, 이 메서드와 관련된 속성을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-592">An object that implements <see langword="Binder" />, containing properties related to this method.</span></span></param>
        <param name="callConvention"><span data-ttu-id="4a834-593">메서드의 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-593">The calling convention for the method.</span></span></param>
        <param name="types"><span data-ttu-id="4a834-594">메서드의 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-594">The parameter types of the method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="4a834-595">바인딩을 형식이 수정된 매개 변수 서명과 함께 작동하도록 만드는 데 사용되는 매개 변수 한정자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-595">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="4a834-596">지정된 조건과 일치하는 모듈 수준 메서드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-596">Returns the module-level method that matches the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="4a834-597">모듈 수준에서 정의되고 지정된 조건과 일치하는 메서드 또는 해당 메서드가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-597">A method that is defined at the module level, and matches the specified criteria; or <see langword="null" /> if such a method does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-598">이 메서드는 상속 된 모든 오버 로드에 대 한 구현을 제공 <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-598">This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a834-599">상속 된 사용 하 여 <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> 메서드 모듈 수준에서 선언 된 메서드를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-599">Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method to get methods that have been declared at the module level.</span></span> <span data-ttu-id="4a834-600">모듈 수준 메서드를 사용 하 여 내보낸된 코드에 정의 된를 <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-600">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a834-601">모듈 수준 메서드가까지 검색할 수 없습니다 후는 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 모듈에 대 한 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-601">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-602"><paramref name="name" />이 <see langword="null" />이거나, <paramref name="types" />가 <see langword="null" />이거나, <paramref name="types" />의 요소가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-602"><paramref name="name" /> is <see langword="null" />, <paramref name="types" /> is <see langword="null" />, or an element of <paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="moduleBuilder.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="4a834-603">검색을 제어하는 데 사용하는 <see langword="BindingFlags" /> 비트 플래그의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-603">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="4a834-604">모듈 수준에서 현재 <see cref="T:System.Reflection.Emit.ModuleBuilder" />에 대해 정의되었으며 지정된 바인딩 플래그와 일치하는 모든 메서드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-604">Returns all the methods that have been defined at the module level for the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that match the specified binding flags.</span></span></summary>
        <returns><span data-ttu-id="4a834-605"><paramref name="bindingFlags" />와 일치하는 모듈 수준 메서드가 모두 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-605">An array that contains all the module-level methods that match <paramref name="bindingFlags" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-606">모듈 수준 메서드를 사용 하 여 내보낸된 코드에 정의 된를 <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-606">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a834-607">모듈 수준 메서드가까지 검색할 수 없습니다 후는 <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> 모듈에 대 한 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-607">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-608">이 모듈 내에서 지정된 메서드를 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-608">Returns the token used to identify the specified method within this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="4a834-609">해당 토큰을 가져올 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-609">The method to get a token for.</span></span></param>
        <summary><span data-ttu-id="4a834-610">이 모듈 내에서 지정된 메서드를 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-610">Returns the token used to identify the specified method within this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-611">이 모듈 내에서 지정된 메서드를 식별하는 데 사용되는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-611">The token used to identify the specified method within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-612"><paramref name="method" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-612"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-613">메서드의 선언 형식이 이 모듈에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-613">The declaring type for the method is not in this module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken (method, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="4a834-614">해당 토큰을 가져올 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-614">The method to get a token for.</span></span></param>
        <param name="optionalParameterTypes"><span data-ttu-id="4a834-615">메서드에 대한 선택적 매개 변수의 형식 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-615">A collection of the types of the optional parameters to the method.</span></span></param>
        <summary><span data-ttu-id="4a834-616">이 모듈에 지정된 특성 및 매개 변수 형식이 적용된 메서드를 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-616">Returns the token used to identify the method that has the specified attributes and parameter types within this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-617">이 모듈 내에서 지정된 메서드를 식별하는 데 사용되는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-617">The token used to identify the specified method within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-618"><paramref name="method" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-618"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-619">메서드의 선언 형식이 이 모듈에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-619">The declaring type for the method is not in this module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPEKind">
      <MemberSignature Language="C#" Value="public override void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPEKind([out] valuetype System.Reflection.PortableExecutableKinds&amp; peKind, [out] valuetype System.Reflection.ImageFileMachine&amp; machine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetPEKind (ByRef peKind As PortableExecutableKinds, ByRef machine As ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetPEKind([Runtime::InteropServices::Out] System::Reflection::PortableExecutableKinds % peKind, [Runtime::InteropServices::Out] System::Reflection::ImageFileMachine % machine);" />
      <MemberSignature Language="F#" Value="override this.GetPEKind :  *  -&gt; unit" Usage="moduleBuilder.GetPEKind (peKind, machine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peKind" Type="System.Reflection.PortableExecutableKinds" RefType="out" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="machine" Type="System.Reflection.ImageFileMachine" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="peKind"><span data-ttu-id="4a834-620">이 메서드가 반환될 때 모듈의 코드 특성을 나타내는 <see cref="T:System.Reflection.PortableExecutableKinds" /> 값의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-620">When this method returns, a combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values indicating the nature of the code in the module.</span></span></param>
        <param name="machine"><span data-ttu-id="4a834-621">이 메서드가 반환될 때 모듈의 대상 플랫폼을 나타내는 <see cref="T:System.Reflection.ImageFileMachine" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-621">When this method returns, one of the <see cref="T:System.Reflection.ImageFileMachine" /> values indicating the platform targeted by the module.</span></span></param>
        <summary><span data-ttu-id="4a834-622">모듈의 코드 특성과 대상 플랫폼을 나타내는 값 쌍을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-622">Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-623">동적 모듈에 대 한 `peKind` 은 항상 <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> 고 `machine` 은 항상 0 (영)입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-623">For dynamic modules, `peKind` is always <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> and `machine` is always 0 (zero).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSignatureToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-624">시그니처 토큰을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-624">Defines a signature token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (System.Reflection.Emit.SignatureHelper sigHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(class System.Reflection.Emit.SignatureHelper sigHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigHelper As SignatureHelper) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(System::Reflection::Emit::SignatureHelper ^ sigHelper);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : System.Reflection.Emit.SignatureHelper -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken sigHelper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigHelper" Type="System.Reflection.Emit.SignatureHelper" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sigHelper"><span data-ttu-id="4a834-625">시그니처입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-625">The signature.</span></span></param>
        <summary><span data-ttu-id="4a834-626">지정된 <see cref="T:System.Reflection.Emit.SignatureHelper" />로 정의된 시그니처의 토큰을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-626">Defines a token for the signature that is defined by the specified <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span></span></summary>
        <returns><span data-ttu-id="4a834-627">정의된 시그니처의 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-627">A token for the defined signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-628">이 메서드 정의에 설명 된 서명에 대 한 메타 데이터 토큰 `sigHelper`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-628">This method defines a metadata token for the signature described by `sigHelper`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-629"><paramref name="sigHelper" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-629"><paramref name="sigHelper" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (byte[] sigBytes, int sigLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(unsigned int8[] sigBytes, int32 sigLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigBytes As Byte(), sigLength As Integer) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(cli::array &lt;System::Byte&gt; ^ sigBytes, int sigLength);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : byte[] * int -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken (sigBytes, sigLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sigLength" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sigBytes"><span data-ttu-id="4a834-630">시그니처 BLOB(Binary Large Object)입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-630">The signature binary large object (BLOB).</span></span></param>
        <param name="sigLength"><span data-ttu-id="4a834-631">시그니처 BLOB의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-631">The length of the signature BLOB.</span></span></param>
        <summary><span data-ttu-id="4a834-632">문자 배열과 시그니처 길이를 지정하여 시그니처의 토큰을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-632">Defines a token for the signature that has the specified character array and signature length.</span></span></summary>
        <returns><span data-ttu-id="4a834-633">지정된 시그니처의 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-633">A token for the specified signature.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-634"><paramref name="sigBytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-634"><paramref name="sigBytes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignerCertificate">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignerCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignerCertificate () As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::X509Certificates::X509Certificate ^ GetSignerCertificate();" />
      <MemberSignature Language="F#" Value="override this.GetSignerCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate" Usage="moduleBuilder.GetSignerCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-635">이 모듈이 속한 어셈블리의 Authenticode 서명에 포함된 인증서에 해당하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-635">Returns an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to.</span></span> <span data-ttu-id="4a834-636">어셈블리가 Authenticode로 서명되지 않은 경우에는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-636">If the assembly has not been Authenticode signed, <see langword="null" /> is returned.</span></span></summary>
        <returns><span data-ttu-id="4a834-637">인증서 또는 이 모듈이 속하는 어셈블리가 Authenticode로 서명되지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-637">A certificate, or <see langword="null" /> if the assembly to which this module belongs has not been Authenticode signed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StringToken GetStringConstant (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.StringToken GetStringConstant(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringConstant (str As String) As StringToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::StringToken GetStringConstant(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.GetStringConstant : string -&gt; System.Reflection.Emit.StringToken" Usage="moduleBuilder.GetStringConstant str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StringToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="4a834-638">모듈의 상수 풀에 추가할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-638">The string to add to the module's constant pool.</span></span></param>
        <summary><span data-ttu-id="4a834-639">모듈의 상수 풀에서 지정된 문자열의 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-639">Returns the token of the given string in the module's constant pool.</span></span></summary>
        <returns><span data-ttu-id="4a834-640">상수 풀에 있는 문자열의 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-640">The token of the string in the constant pool.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-641">경우 `str` 이미 정의 된 기존 토큰이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-641">If `str` has already been defined, the existing token will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-642"><paramref name="str" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-642"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymWriter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSymWriter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSymWriter () As ISymbolWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolWriter ^ GetSymWriter();" />
      <MemberSignature Language="F#" Value="member this.GetSymWriter : unit -&gt; System.Diagnostics.SymbolStore.ISymbolWriter" Usage="moduleBuilder.GetSymWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-643">이 동적 모듈에 연결된 기호 작성기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-643">Returns the symbol writer associated with this dynamic module.</span></span></summary>
        <returns><span data-ttu-id="4a834-644">이 동적 모듈에 연결된 기호 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-644">The symbol writer associated with this dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4a834-645">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-645">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-646">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-646">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-647">해당 모듈에 정의되어 있는 명명된 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-647">Gets the named type defined in the module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="moduleBuilder.GetType className" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="4a834-648">가져올 <see cref="T:System.Type" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-648">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <summary><span data-ttu-id="4a834-649">해당 모듈에 정의되어 있는 명명된 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-649">Gets the named type defined in the module.</span></span></summary>
        <returns><span data-ttu-id="4a834-650">요청된 형식이 이 모듈에 정의되어 있으면 해당 형식이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-650">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-651">배열 형식, 포인터 형식 또는 byref 형식 생성 하려면이 메서드를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="4a834-651">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="4a834-652">사용 된 <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, 및 <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-652">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-653">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-653">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-654">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-654">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-655"><paramref name="className" />의 길이가 0이거나 1023보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-655">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-656"><paramref name="className" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-656"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4a834-657">요청된 <see cref="T:System.Type" />이 공용이 아니고 호출자가 현재 어셈블리 외부에서 공용이 아닌 개체를 리플렉션할 수 있는 <see cref="T:System.Security.Permissions.ReflectionPermission" />을 가지고 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-657">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="4a834-658">클래스 이니셜라이저가 호출되고 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-658">A class initializer is invoked and throws an exception.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="4a834-659"><see cref="T:System.Type" />을 로드하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-659">An error is encountered while loading the <see cref="T:System.Type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool -&gt; Type" Usage="moduleBuilder.GetType (className, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="4a834-660">가져올 <see cref="T:System.Type" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-660">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="4a834-661"><see langword="true" />이면 검색은 대/소문자를 구분합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-661">If <see langword="true" />, the search is case-insensitive.</span></span> <span data-ttu-id="4a834-662"><see langword="false" />이면 검색은 대/소문자를 구분하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-662">If <see langword="false" />, the search is case-sensitive.</span></span></param>
        <summary><span data-ttu-id="4a834-663">모듈에 정의되어 있는 명명된 형식을 가져옵니다. 필요에 따라 형식 이름의 대/소문자 구분을 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-663">Gets the named type defined in the module, optionally ignoring the case of the type name.</span></span></summary>
        <returns><span data-ttu-id="4a834-664">요청된 형식이 이 모듈에 정의되어 있으면 해당 형식이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-664">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-665">배열 형식, 포인터 형식 또는 byref 형식 생성 하려면이 메서드를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="4a834-665">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="4a834-666">사용 된 <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, 및 <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-666">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-667">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-667">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-668">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-668">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-669"><paramref name="className" />의 길이가 0이거나 1023보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-669">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-670"><paramref name="className" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-670"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4a834-671">요청된 <see cref="T:System.Type" />이 공용이 아니고 호출자가 현재 어셈블리 외부에서 공용이 아닌 개체를 리플렉션할 수 있는 <see cref="T:System.Security.Permissions.ReflectionPermission" />을 가지고 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-671">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="4a834-672">클래스 이니셜라이저가 호출되고 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-672">A class initializer is invoked and throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="moduleBuilder.GetType (className, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="throwOnError" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="4a834-673">가져올 <see cref="T:System.Type" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-673">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="4a834-674">형식을 찾을 수 없는 경우 예외를 throw하려면 <see langword="true" />이고, <see langword="false" />을 반환하려면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-674"><see langword="true" /> to throw an exception if the type cannot be found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="4a834-675"><see langword="true" />이면 검색은 대/소문자를 구분합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-675">If <see langword="true" />, the search is case-insensitive.</span></span> <span data-ttu-id="4a834-676"><see langword="false" />이면 검색은 대/소문자를 구분하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-676">If <see langword="false" />, the search is case-sensitive.</span></span></param>
        <summary><span data-ttu-id="4a834-677">모듈에 정의되어 있는 명명된 형식을 가져옵니다. 필요에 따라 형식 이름의 대/소문자 구분을 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-677">Gets the named type defined in the module, optionally ignoring the case of the type name.</span></span> <span data-ttu-id="4a834-678">해당 형식을 찾을 수 없는 경우 선택적으로 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-678">Optionally throws an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="4a834-679">지정된 형식이 이 모듈에 선언되어 있으면 해당 형식이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-679">The specified type, if the type is declared in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-680">`throwOnError` 형식을 찾을 수 없으면 어떻게 되나요 매개 변수에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-680">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="4a834-681">Throw 될 수 있는 다른 모든 예외에는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-681">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="4a834-682">특히, 형식을 찾았지만 로드할 수 없으면 <xref:System.TypeLoadException> throw 할 수 있습니다 경우에 `throwOnError` 는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-682">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 <span data-ttu-id="4a834-683">배열 형식, 포인터 형식 또는 byref 형식 생성 하려면이 메서드를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="4a834-683">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="4a834-684">사용 된 <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, 및 <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-684">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-685">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-685">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-686">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-686">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-687"><paramref name="className" />의 길이가 0이거나 1023보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-687">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-688"><paramref name="className" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-688"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4a834-689">요청된 <see cref="T:System.Type" />이 공용이 아니고 호출자가 현재 어셈블리 외부에서 공용이 아닌 개체를 리플렉션할 수 있는 <see cref="T:System.Security.Permissions.ReflectionPermission" />을 가지고 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-689">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="4a834-690">클래스 이니셜라이저가 호출되고 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-690">A class initializer is invoked and throws an exception.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="4a834-691"><paramref name="throwOnError" />가 <see langword="true" />이고 지정된 형식을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-691"><paramref name="throwOnError" /> is <see langword="true" /> and the specified type is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="override this.GetTypes : unit -&gt; Type[]" Usage="moduleBuilder.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-692">이 모듈 내에 정의된 클래스를 모두 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-692">Returns all the classes defined within this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-693">이 인스턴스가 리플렉션하는 모듈 내에 정의된 형식이 들어 있는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-693">An array that contains the types defined within the module that is reflected by this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-694">`ReflectionTypeLoadException` 특수 클래스 로드 예외가입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-694">`ReflectionTypeLoadException` is a special class load exception.</span></span> <span data-ttu-id="4a834-695">`ReflectionTypeLoadException.Types` 속성 모듈에서 정의 하 고 로드 된 클래스의 배열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-695">The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded.</span></span> <span data-ttu-id="4a834-696">이 배열의 일부 null 값을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-696">This array can contain some null values.</span></span> <span data-ttu-id="4a834-697">`ReflectionTypeLoadException.LoaderExceptions` 속성은 배열 클래스 로더에 의해 throw 된 예외를 나타내는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-697">The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader.</span></span> <span data-ttu-id="4a834-698">예외와 줄이 클래스 배열에 취약 한 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-698">The holes in the class array line up with the exceptions.</span></span>  
  
 <span data-ttu-id="4a834-699">예를 들어, 클래스 중 하나의 클래스 이니셜라이저가 하는 동안 예외가 발생 하는 경우이 로드 되는 `TargetInvocationException` 의 해당 요소에 저장 됩니다는 `LoaderExceptions` 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-699">For example, if the class initializers of one of the classes throws an exception while it is being loaded, a `TargetInvocationException` is stored in the corresponding element of the `LoaderExceptions` array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-700">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-700">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-701">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-701">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="4a834-702">모듈에 있는 하나 이상의 클래스를 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-702">One or more classes in a module could not be loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4a834-703">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-703">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.Reflection.ReflectionTypeLoadException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-704">형식 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-704">Returns a type token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeToken (name As String) As TypeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : string -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-705">네임스페이스를 포함한 클래스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-705">The name of the class, including the namespace.</span></span></param>
        <summary><span data-ttu-id="4a834-706">지정된 이름으로 형식을 식별하는 데 사용되는 토큰을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-706">Returns the token used to identify the type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="4a834-707">이 모듈 내에서 지정된 이름의 형식을 식별하는 데 사용되는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-707">The token used to identify the type with the specified name within this module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-708">이 메서드는 사용자에 게 유용 합니다 <xref:System.Reflection.Emit.MethodRental> 직접 메서드의 본문을 수정 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-708">This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-709"><paramref name="name" />가 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-709"><paramref name="name" /> is the empty string ("").</span></span>  
  
<span data-ttu-id="4a834-710">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-710">-or-</span></span> 
 <span data-ttu-id="4a834-711"><paramref name="name" />이 <see langword="ByRef" /> 형식을 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-711"><paramref name="name" /> represents a <see langword="ByRef" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-712"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-712"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4a834-713">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-713">-or-</span></span> 
<span data-ttu-id="4a834-714"><paramref name="name" />으로 지정한 형식을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-714">The type specified by <paramref name="name" /> could not be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-715">임시 모듈을 참조하는 지속적인 모듈인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-715">This is a non-transient module that references a transient module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : Type -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4a834-716">클래스 형식을 나타내는 Type 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-716">The type object that represents the class type.</span></span></param>
        <summary><span data-ttu-id="4a834-717">이 모듈 내에서 지정된 필드를 식별하는 데 사용되는 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-717">Returns the token used to identify the specified type within this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-718">이 모듈 내에서 지정된 형식을 식별하는 데 사용되는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-718">The token used to identify the given type within this module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-719">토큰 개체를 식별할 Microsoft MSIL (intermediate language) 명령에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-719">Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects.</span></span> <span data-ttu-id="4a834-720">토큰은 포함 된 모듈을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-720">Tokens are relative to the module in which they are contained.</span></span> <span data-ttu-id="4a834-721">예를 들어, 토큰 값 `String` 모듈 마다 다를 가능성이 높습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-721">For example, the token value for `String` is likely to be different from module to module.</span></span> <span data-ttu-id="4a834-722">때 `GetTypeToken` 는 호출 모듈에 대 한 참조를 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-722">When `GetTypeToken` is invoked, a reference is added to the module.</span></span> <span data-ttu-id="4a834-723">참조 된 모듈의 영구적 부분이 됩니다. 동일한 인수를 사용 하 여 여러 호출 추가 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-723">The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-724"><paramref name="type" />가 <see langword="ByRef" /> 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-724"><paramref name="type" /> is a <see langword="ByRef" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-725"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-725"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-726">임시 모듈을 참조하는 지속적인 모듈인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-726">This is a non-transient module that references a transient module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="moduleBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="4a834-727">테스트할 사용자 지정 특성의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-727">The type of custom attribute to test for.</span></span></param>
        <param name="inherit"><span data-ttu-id="4a834-728">이 인수는 이 형식의 개체에 대해 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-728">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="4a834-729">이 모듈에 지정된 특성 형식이 적용되었는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-729">Returns a value that indicates whether the specified attribute type has been applied to this module.</span></span></summary>
        <returns><span data-ttu-id="4a834-730">하나 이상의 <paramref name="attributeType" /> 인스턴스가 이 모듈에 적용되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-730"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> have been applied to this module; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-731"><paramref name="attributeType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-731"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-732"><paramref name="attributeType" />이 런타임에 제공되는 <see cref="T:System.Type" /> 개체가 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="4a834-732"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="4a834-733">예를 들어 <paramref name="attributeType" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" /> 개체인 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-733">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsResource">
      <MemberSignature Language="C#" Value="public override bool IsResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsResource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsResource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsResource();" />
      <MemberSignature Language="F#" Value="override this.IsResource : unit -&gt; bool" Usage="moduleBuilder.IsResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-734">이 개체가 리소스인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-734">Gets a value indicating whether the object is a resource.</span></span></summary>
        <returns><span data-ttu-id="4a834-735">이 개체가 리소스이면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-735"><see langword="true" /> if the object is a resource; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransient">
      <MemberSignature Language="C#" Value="public bool IsTransient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsTransient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsTransient" />
      <MemberSignature Language="VB.NET" Value="Public Function IsTransient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsTransient();" />
      <MemberSignature Language="F#" Value="member this.IsTransient : unit -&gt; bool" Usage="moduleBuilder.IsTransient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a834-736">이 동적 모듈이 임시 모듈인지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-736">Returns a value that indicates whether this dynamic module is transient.</span></span></summary>
        <returns><span data-ttu-id="4a834-737">이 동적 모듈이 임시 모듈이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-737"><see langword="true" /> if this dynamic module is transient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MDStreamVersion">
      <MemberSignature Language="C#" Value="public override int MDStreamVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MDStreamVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MDStreamVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MDStreamVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MDStreamVersion : int" Usage="System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a834-738">메타데이터 스트림 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-738">Gets the metadata stream version.</span></span></summary>
        <value><span data-ttu-id="4a834-739">메타데이터 스트림 버전을 나타내는 32비트 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-739">A 32-bit integer representing the metadata stream version.</span></span> <span data-ttu-id="4a834-740">두 개의 상위 바이트는 주 버전 번호를 나타내고 두 개의 하위 바이트는 부 버전 번호를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-740">The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4a834-741">메타 데이터 헤더에 대 한 자세한 내용은 참조 하세요. "파티션 II: 메타 데이터 정 및 의미 체계"공용 언어 인프라 (CLI) 설명서에서.</span><span class="sxs-lookup"><span data-stu-id="4a834-741">For more information on the metadata header, see "Partition II: Metadata Definition and Semantics" in the Common Language Infrastructure (CLI) documentation.</span></span> <span data-ttu-id="4a834-742">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-742">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a834-743">메타데이터에서 현재 동적 모듈을 식별하는 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-743">Gets a token that identifies the current dynamic module in metadata.</span></span></summary>
        <value><span data-ttu-id="4a834-744">메타데이터에서 현재 모듈을 식별하는 정수 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-744">An integer token that identifies the current module in metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-745">이 속성을 사용 하 여 가져온 토큰을 관리 되지 않는 리플렉션 API에 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-745">The tokens obtained using this property can be passed to the unmanaged Reflection API.</span></span> <span data-ttu-id="4a834-746">자세한 내용은 [관리 되지 않는 리플렉션 API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-746">For more information, see [Unmanaged Reflection API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-747">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터 토큰에 대 한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-747">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-748">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-748">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleVersionId">
      <MemberSignature Language="C#" Value="public override Guid ModuleVersionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ModuleVersionId" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModuleVersionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid ModuleVersionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ModuleVersionId : Guid" Usage="System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a834-749">모듈의 두 버전 간을 구분하는 데 사용할 수 있는 UUID(범용 고유 식별자)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-749">Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.</span></span></summary>
        <value><span data-ttu-id="4a834-750">모듈의 두 버전 간을 구분하는 데 사용할 수 있는 <see cref="T:System.Guid" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-750">A <see cref="T:System.Guid" /> that can be used to distinguish between two versions of a module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-751">GUID가 반환한 관리 되지 않는 메타 데이터에는 <xref:System.Reflection.Module.ModuleVersionId%2A> 속성 이라고 합니다 `mvid`, GUID 힙에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-751">In unmanaged metadata, the GUID returned by the <xref:System.Reflection.Module.ModuleVersionId%2A> property is referred to as the `mvid`, and is stored in the GUID heap.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-752">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터에 대 한 자세한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-752">More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-753">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-753">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a834-754">메모리 내 모듈임을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-754">A string that indicates that this is an in-memory module.</span></span></summary>
        <value><span data-ttu-id="4a834-755">메모리 내 모듈임을 나타내는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-755">Text that indicates that this is an in-memory module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-756">모듈에 저장 되 고 디스크에서 다시 로드 될 때까지 이름의 동적 모듈을 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-756">The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo ResolveField(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveField (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ ResolveField(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveField : int * Type[] * Type[] -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.ResolveField (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="4a834-757">모듈의 필드를 식별하는 메타데이터 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-757">A metadata token that identifies a field in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="4a834-758">해당 토큰이 범위 내에 있는 형식의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 형식이 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-758">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="4a834-759">해당 토큰이 범위 내에 있는 메서드의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 메서드가 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-759">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="4a834-760">지정된 제네릭 형식 매개 변수로 정의되는 컨텍스트에서 지정된 메타데이터 토큰으로 식별되는 필드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-760">Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="4a834-761">지정된 메타데이터 토큰으로 식별되는 필드를 나타내는 <see cref="T:System.Reflection.FieldInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-761">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-762">사용 하 여는 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 형식에 메서드를 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericTypeArguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-762">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="4a834-763">사용 된 <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> 메서드는 메서드를 위치 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="4a834-763">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="4a834-764">항상 것은 안전 필요 하지 않은 경우에 이러한 인수를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-764">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-765">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터 토큰에 대 한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-765">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-766">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-766">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="4a834-767">토큰 확인을 보여 주는 코드 참조 제네릭 컨텍스트 (제네릭 형식 및/또는 토큰이 포함 된 제네릭 메서드 매개 변수)를 사용 하 여 <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-767">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-768"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 필드의 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-768"><paramref name="metadataToken" /> is not a token for a field in the scope of the current module.</span></span>  
  
<span data-ttu-id="4a834-769">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-769">-or-</span></span> 
 <span data-ttu-id="4a834-770"><paramref name="metadataToken" />이 식별하는 필드의 부모 <see langword="TypeSpec" />이 <see langword="var" />(제네릭 형식의 형식 매개 변수) 또는 <see langword="mvar" />(제네릭 메서드의 형식 매개 변수) 요소 형식이 포함된 시그니처를 사용하고, <paramref name="genericTypeArguments" />와 <paramref name="genericMethodArguments" /> 중 하나 또는 둘 다에 대해 필요한 제네릭 형식 인수를 제공하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-770"><paramref name="metadataToken" /> identifies a field whose parent <see langword="TypeSpec" /> has a signature containing element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a834-771"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 유효한 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-771"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo ResolveMember(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMember (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MemberInfo ^ ResolveMember(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMember : int * Type[] * Type[] -&gt; System.Reflection.MemberInfo" Usage="moduleBuilder.ResolveMember (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="4a834-772">모듈에 있는 형식이나 멤버를 식별하는 메타데이터 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-772">A metadata token that identifies a type or member in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="4a834-773">해당 토큰이 범위 내에 있는 형식의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 형식이 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-773">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="4a834-774">해당 토큰이 범위 내에 있는 메서드의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 메서드가 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-774">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="4a834-775">지정된 제네릭 형식 매개 변수로 정의되는 컨텍스트에서 지정된 메타데이터 토큰으로 식별되는 형식 또는 멤버를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-775">Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="4a834-776">지정된 메타데이터 토큰으로 식별되는 형식이나 멤버를 나타내는 <see cref="T:System.Reflection.MemberInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-776">A <see cref="T:System.Reflection.MemberInfo" /> object representing the type or member that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-777">사용 하 여는 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 형식에 메서드를 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericTypeArguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-777">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="4a834-778">사용 된 <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> 메서드는 메서드를 위치 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="4a834-778">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="4a834-779">항상 것은 안전 필요 하지 않은 경우에 이러한 인수를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-779">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-780">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터 토큰에 대 한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-780">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-781">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-781">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="4a834-782">토큰 확인을 보여 주는 코드 참조 제네릭 컨텍스트 (제네릭 형식 및/또는 토큰이 포함 된 제네릭 메서드 매개 변수)를 사용 하 여 <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-782">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-783"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 형식이나 멤버의 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-783"><paramref name="metadataToken" /> is not a token for a type or member in the scope of the current module.</span></span>  
  
<span data-ttu-id="4a834-784">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-784">-or-</span></span> 
 <span data-ttu-id="4a834-785"><paramref name="metadataToken" />이 <see langword="MethodSpec" />(제네릭 형식의 형식 매개 변수) 또는 <see langword="TypeSpec" />(제네릭 메서드의 형식 매개 변수) 요소 형식이 포함된 시그니처를 사용하는 <see langword="var" /> 또는 <see langword="mvar" />이고, <paramref name="genericTypeArguments" />와 <paramref name="genericMethodArguments" /> 중 하나 또는 둘 다에 대해 필요한 제네릭 형식 인수를 제공하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-785"><paramref name="metadataToken" /> is a <see langword="MethodSpec" /> or <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span>  
  
<span data-ttu-id="4a834-786">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-786">-or-</span></span> 
 <span data-ttu-id="4a834-787"><paramref name="metadataToken" />이 속성 또는 이벤트를 식별하는 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-787"><paramref name="metadataToken" /> identifies a property or event.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a834-788"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 유효한 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-788"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodBase ResolveMethod(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMethod (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodBase ^ ResolveMethod(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMethod : int * Type[] * Type[] -&gt; System.Reflection.MethodBase" Usage="moduleBuilder.ResolveMethod (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="4a834-789">모듈의 메서드나 생성자를 식별하는 메타데이터 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-789">A metadata token that identifies a method or constructor in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="4a834-790">해당 토큰이 범위 내에 있는 형식의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 형식이 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-790">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="4a834-791">해당 토큰이 범위 내에 있는 메서드의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 메서드가 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-791">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="4a834-792">지정된 제네릭 형식 매개 변수로 정의되는 컨텍스트에서 지정된 메타데이터 토큰으로 식별되는 메서드 또는 생성자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-792">Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="4a834-793">지정된 메타데이터 토큰으로 식별되는 메서드를 나타내는 <see cref="T:System.Reflection.MethodBase" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-793">A <see cref="T:System.Reflection.MethodBase" /> object representing the method that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-794">사용 하 여는 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 형식에 메서드를 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericTypeArguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-794">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="4a834-795">사용 된 <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> 메서드는 메서드를 위치 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericMethodArguments`.</span><span class="sxs-lookup"><span data-stu-id="4a834-795">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`.</span></span> <span data-ttu-id="4a834-796">항상 것은 안전 필요 하지 않은 경우에 이러한 인수를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-796">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-797">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터 토큰에 대 한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-797">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-798">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-798">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="4a834-799">토큰 확인을 보여 주는 코드 참조 제네릭 컨텍스트 (제네릭 형식 및/또는 토큰이 포함 된 제네릭 메서드 매개 변수)를 사용 하 여 <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-799">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-800"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 메서드나 생성자의 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-800"><paramref name="metadataToken" /> is not a token for a method or constructor in the scope of the current module.</span></span>  
  
<span data-ttu-id="4a834-801">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-801">-or-</span></span> 
 <span data-ttu-id="4a834-802"><paramref name="metadataToken" />이 <see langword="MethodSpec" />(제네릭 형식의 형식 매개 변수) 또는 <see langword="var" />(제네릭 메서드의 형식 매개 변수) 요소 형식이 포함된 시그니처를 사용하는 <see langword="mvar" />이고, <paramref name="genericTypeArguments" />와 <paramref name="genericMethodArguments" /> 중 하나 또는 둘 다에 대해 필요한 제네릭 형식 인수를 제공하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-802"><paramref name="metadataToken" /> is a <see langword="MethodSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a834-803"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 유효한 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-803"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSignature">
      <MemberSignature Language="C#" Value="public override byte[] ResolveSignature (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] ResolveSignature(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveSignature (metadataToken As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ ResolveSignature(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveSignature : int -&gt; byte[]" Usage="moduleBuilder.ResolveSignature metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="4a834-804">모듈에 있는 시그니처를 식별하는 메타데이터 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-804">A metadata token that identifies a signature in the module.</span></span></param>
        <summary><span data-ttu-id="4a834-805">메타데이터 토큰으로 식별되는 시그니처 blob을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-805">Returns the signature blob identified by a metadata token.</span></span></summary>
        <returns><span data-ttu-id="4a834-806">시그니처 blob을 나타내는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-806">An array of bytes representing the signature blob.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4a834-807">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터 토큰 및 서명 하는 방법에 대 한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-807">Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-808">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-808">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-809"><paramref name="metadataToken" />이 현재 모듈의 범위에 유효한 <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, 시그니처 또는 <see langword="FieldDef" /> 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-809"><paramref name="metadataToken" /> is not a valid <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, signature, or <see langword="FieldDef" /> token in the scope of the current module.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a834-810"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 유효한 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-810"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveString">
      <MemberSignature Language="C#" Value="public override string ResolveString (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResolveString(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveString (metadataToken As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResolveString(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveString : int -&gt; string" Usage="moduleBuilder.ResolveString metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="4a834-811">모듈의 문자열 힙에 있는 문자열을 식별하는 메타데이터 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-811">A metadata token that identifies a string in the string heap of the module.</span></span></param>
        <summary><span data-ttu-id="4a834-812">지정된 메타데이터 토큰으로 식별되는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-812">Returns the string identified by the specified metadata token.</span></span></summary>
        <returns><span data-ttu-id="4a834-813">메타데이터 문자열 힙의 문자열 값이 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-813">A <see cref="T:System.String" /> containing a string value from the metadata string heap.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4a834-814">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터 토큰에 대 한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-814">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-815">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-815">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-816"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 문자열의 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-816"><paramref name="metadataToken" /> is not a token for a string in the scope of the current module.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a834-817"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 유효한 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-817"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public override Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveType(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveType (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ ResolveType(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveType : int * Type[] * Type[] -&gt; Type" Usage="moduleBuilder.ResolveType (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="4a834-818">모듈의 형식을 식별하는 메타데이터 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-818">A metadata token that identifies a type in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="4a834-819">해당 토큰이 범위 내에 있는 형식의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 형식이 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-819">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="4a834-820">해당 토큰이 범위 내에 있는 메서드의 제네릭 형식 인수를 나타내는 <see cref="T:System.Type" /> 개체의 배열이거나, 메서드가 제네릭이 아닌 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-820">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="4a834-821">지정된 제네릭 형식 매개 변수로 정의되는 컨텍스트에서 지정된 메타데이터 토큰으로 식별되는 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-821">Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="4a834-822">지정된 메타데이터 토큰으로 식별되는 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-822">A <see cref="T:System.Type" /> object representing the type that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-823">사용 하 여는 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 형식에 메서드를 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericTypeArguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-823">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="4a834-824">사용 된 <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> 메서드는 메서드를 위치 `metadataToken` 범위에 대 한 제네릭 형식 인수의 배열을 가져옵니다 `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="4a834-824">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="4a834-825">항상 것은 안전 필요 하지 않은 경우에 이러한 인수를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-825">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-826">공용 언어 인프라 (CLI) 설명서에서 특히 메타 데이터 토큰에 대 한 정보를 찾을 수 있습니다 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-826">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-827">이 설명서는 온라인; 참조 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) msdn 및 [표준 ECMA-335-CLI 공용 언어 인프라 ()](https://go.microsoft.com/fwlink/?LinkID=65552) ECMA 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-827">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="4a834-828">토큰 확인을 보여 주는 코드 참조 제네릭 컨텍스트 (제네릭 형식 및/또는 토큰이 포함 된 제네릭 메서드 매개 변수)를 사용 하 여 <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4a834-828">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a834-829"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 형식의 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-829"><paramref name="metadataToken" /> is not a token for a type in the scope of the current module.</span></span>  
  
<span data-ttu-id="4a834-830">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-830">-or-</span></span> 
 <span data-ttu-id="4a834-831"><paramref name="metadataToken" />이 <see langword="TypeSpec" />(제네릭 형식의 형식 매개 변수) 또는 <see langword="var" />(제네릭 메서드의 형식 매개 변수) 요소 형식이 포함된 시그니처를 사용하는 <see langword="mvar" />이고, <paramref name="genericTypeArguments" />와 <paramref name="genericMethodArguments" /> 중 하나 또는 둘 다에 대해 필요한 제네릭 형식 인수를 제공하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-831"><paramref name="metadataToken" /> is a <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a834-832"><paramref name="metadataToken" />이 현재 모듈의 범위에 있는 유효한 토큰이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-832"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public override string ScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ScopeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string" Usage="System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a834-833">동적 모듈의 이름을 나타내는 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-833">Gets a string that represents the name of the dynamic module.</span></span></summary>
        <value><span data-ttu-id="4a834-834">동적 모듈의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-834">The name of the dynamic module.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a834-835">이 모듈에 사용자 지정 특성을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-835">Applies a custom attribute to this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="moduleBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="4a834-836">적용할 사용자 지정 특성을 지정하는 도우미 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-836">An instance of a helper class that specifies the custom attribute to apply.</span></span></param>
        <summary><span data-ttu-id="4a834-837">사용자 지정 특성 작성기를 사용하여 이 모듈에 사용자 지정 특성을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-837">Applies a custom attribute to this module by using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4a834-838">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-838">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-839">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-839">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-840"><paramref name="customBuilder" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-840"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="moduleBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="4a834-841">사용자 지정 특성에 대한 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-841">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="4a834-842">특성을 나타내는 바이트 BLOB입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-842">A byte BLOB representing the attribute.</span></span></param>
        <summary><span data-ttu-id="4a834-843">특성을 나타내는 지정된 BLOB(Binary Large Object)를 사용하여 이 모듈에 사용자 지정 특성을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-843">Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-844">형식에 대 한 자세한 내용은 `binaryAttribute`, 특히 공용 언어 인프라 (CLI) 설명서를 참조 "파티션 II: 메타 데이터 정 및 의미 체계 "입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-844">For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="4a834-845">이 설명서는 온라인으로 제공됩니다. MSDN의 [ECMA C# 및 공용 언어 인프라 표준](https://go.microsoft.com/fwlink/?LinkID=99212) 및 Ecma International 웹 사이트의 [표준 ECMA-335 - CLI(공용 언어 인프라)](https://go.microsoft.com/fwlink/?LinkID=65552)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4a834-845">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-846">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-846">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-847">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-847">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-848"><paramref name="con" /> 또는 <paramref name="binaryAttribute" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-848"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSymCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetSymCustomAttribute (string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSymCustomAttribute(string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymCustomAttribute (name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymCustomAttribute(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetSymCustomAttribute : string * byte[] -&gt; unit" Usage="moduleBuilder.SetSymCustomAttribute (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a834-849">사용자 지정 특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-849">The name of the custom attribute</span></span></param>
        <param name="data"><span data-ttu-id="4a834-850">사용자 지정 특성 값을 나타내는 바이트의 불투명 BLOB(Binary Large Object)입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-850">An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="4a834-851">이 메서드는 아무 작업도 수행하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-851">This method does nothing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-852">이 메서드는 아무 작업도 수행하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-852">This method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-853">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-853">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-854">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-854">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-855"><paramref name="url" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-855"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public void SetUserEntryPoint (System.Reflection.MethodInfo entryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUserEntryPoint(class System.Reflection.MethodInfo entryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserEntryPoint (entryPoint As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserEntryPoint(System::Reflection::MethodInfo ^ entryPoint);" />
      <MemberSignature Language="F#" Value="member this.SetUserEntryPoint : System.Reflection.MethodInfo -&gt; unit" Usage="moduleBuilder.SetUserEntryPoint entryPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryPoint" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="entryPoint"><span data-ttu-id="4a834-856">사용자 진입점입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-856">The user entry point.</span></span></param>
        <summary><span data-ttu-id="4a834-857">사용자 진입점을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-857">Sets the user entry point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-858">컴파일러는 기본 사용자를 호출 하기 전에 시작 스텁을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-858">The compiler might generate a startup stub before calling user main.</span></span> <span data-ttu-id="4a834-859">시작 스텁 진입점 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-859">The startup stub will be the entry point.</span></span> <span data-ttu-id="4a834-860">기본 사용자가 수 있지만 사용자 진입점 디버거 컴파일러 진입점 한 단계씩 실행 하지는 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-860">While the user main will be the user entry point so that debugger will not step into the compiler entry point.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a834-861">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를이 멤버는 더 이상 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-861">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a834-862">(참조 [리플렉션 내보내기의 보안 문제점](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) 이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-862">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a834-863"><paramref name="entryPoint" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-863"><paramref name="entryPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a834-864">디버그 모듈이 아닌 동적 모듈에서 해당 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-864">This method is called on a dynamic module that is not a debug module.</span></span>  
  
<span data-ttu-id="4a834-865">또는</span><span class="sxs-lookup"><span data-stu-id="4a834-865">-or-</span></span> 
 <span data-ttu-id="4a834-866"><paramref name="entryPoint" />가 이 동적 모듈에 들어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="4a834-866"><paramref name="entryPoint" /> is not contained in this dynamic module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ModuleBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ModuleBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="4a834-867">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-867">Reserved for future use.</span></span> <span data-ttu-id="4a834-868">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-868">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="4a834-869">매핑할 전달된 이름의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-869">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="4a834-870">매핑할 이름의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-870">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="4a834-871">이름을 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-871">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="4a834-872">이름에 해당하는 ID를 받는 호출자가 할당한 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-872">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="4a834-873">이 멤버에 대한 설명은 <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="4a834-873">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-874">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-874">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="4a834-875">에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-875">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="4a834-876">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="4a834-876">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a834-877"><xref:System.Reflection.Emit.ModuleBuilder> 인스턴스가 <xref:System.Runtime.InteropServices._ModuleBuilder> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-877">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4a834-878">이 메서드는 COM <c>IDispatch</c> 인터페이스를 사용하여 런타임에 바인딩된 상태로 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-878">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ModuleBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="4a834-879">반환할 형식 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-879">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="4a834-880">형식 정보의 로캘 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-880">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="4a834-881">요청된 형식 정보 개체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-881">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="4a834-882">이 멤버에 대한 설명은 <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="4a834-882">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-883">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-883">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="4a834-884">에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-884">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="4a834-885">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="4a834-885">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a834-886"><xref:System.Reflection.Emit.ModuleBuilder> 인스턴스가 <xref:System.Runtime.InteropServices._ModuleBuilder> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-886">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4a834-887">이 메서드는 COM <c>IDispatch</c> 인터페이스를 사용하여 런타임에 바인딩된 상태로 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-887">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ModuleBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="4a834-888">개체에서 제공하는 형식 정보 인터페이스의 수를 받는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-888">The location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="4a834-889">이 멤버에 대한 설명은 <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="4a834-889">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-890">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-890">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="4a834-891">에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-891">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="4a834-892">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="4a834-892">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a834-893"><xref:System.Reflection.Emit.ModuleBuilder> 인스턴스가 <xref:System.Runtime.InteropServices._ModuleBuilder> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-893">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4a834-894">이 메서드는 COM <c>IDispatch</c> 인터페이스를 사용하여 런타임에 바인딩된 상태로 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-894">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ModuleBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ModuleBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="4a834-895">멤버 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-895">The member ID.</span></span></param>
        <param name="riid"><span data-ttu-id="4a834-896">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-896">Reserved for future use.</span></span> <span data-ttu-id="4a834-897">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-897">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="4a834-898">인수를 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-898">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="4a834-899">호출의 컨텍스트를 설명하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-899">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="4a834-900">인수의 배열, 명명된 인수에 대한 인수 DISPID의 배열 및 배열에 있는 요소의 개수가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-900">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="4a834-901">결과를 저장할 위치에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-901">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="4a834-902">예외 정보가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-902">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="4a834-903">오류가 있는 첫 번째 인수의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-903">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="4a834-904">이 멤버에 대한 설명은 <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="4a834-904">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a834-905">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-905">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="4a834-906">에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-906">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="4a834-907">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="4a834-907">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a834-908"><xref:System.Reflection.Emit.ModuleBuilder> 인스턴스가 <xref:System.Runtime.InteropServices._ModuleBuilder> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-908">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4a834-909">이 메서드는 COM <c>IDispatch</c> 인터페이스를 사용하여 런타임에 바인딩된 상태로 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a834-909">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>