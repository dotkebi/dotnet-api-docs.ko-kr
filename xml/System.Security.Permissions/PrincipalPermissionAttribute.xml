<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05833e4bbe1b566ebfc0a585c7575f6eda30ea4b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56769569" /></Metadata><TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f5bf-101"><see cref="T:System.Security.Permissions.PrincipalPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span></span> <span data-ttu-id="5f5bf-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f5bf-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 선언적 코드를 실행 하는 사용자 지정된 된 역할에 속하도록 요청 또는 인증 된 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="5f5bf-104">사용 <xref:System.Security.Permissions.PermissionState.Unrestricted> 만듭니다를 <xref:System.Security.Permissions.PrincipalPermission> 사용 하 여 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> 로 설정 `true` 하 고 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> 및 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> 로 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-104">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="5f5bf-105">허용 되는 선언의 범위에 따라 달라 집니다는 <xref:System.Security.Permissions.SecurityAction> 사용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-105">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="5f5bf-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 어셈블리 수준에서 적용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="5f5bf-107">보안 정보 보안 특성으로 선언 된 특성 대상의 메타 데이터에 저장 되 고 런타임에 시스템에서 액세스 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-107">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="5f5bf-108">보안 특성은 선언적 보안에만 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-108">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="5f5bf-109">명령적 보안을 위해 해당 권한 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-109">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5f5bf-110">열거형 값을 현재 애플리케이션 도메인의 사용자 정책 보안 주체 권한 요청 하려면이 클래스를 사용 하기 전에 설정 해야 합니다 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-110">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="5f5bf-111">보안 주체 정책을 기본적으로 <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-111">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="5f5bf-112">사용자 정책 설정 하지 않으면 경우 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, 주체 권한에 대 한 요청이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-112">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="5f5bf-113">보안 주체 권한을 요청 하기 전에 다음 코드를 실행 해야 합니다. `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="5f5bf-113">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5bf-114">다음 예제에서는 방법을 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 되도록 요청 하는 현재 사용자는 관리자 클래스를 선언적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-114">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f5bf-115">Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-115">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="5f5bf-116">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-116">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="5f5bf-117">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-117">By default, you are in the standard user role.</span></span> <span data-ttu-id="5f5bf-118">관리자 권한이 필요한 코드를 실행하려면 먼저 표준 사용자에서 관리자로 권한을 높여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-118">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="5f5bf-119">애플리케이션 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 애플리케이션을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-119">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
    <related type="Article" href="~/docs/standard/attributes/index.md"><span data-ttu-id="5f5bf-120">특성을 사용하여 메타데이터 확장</span><span class="sxs-lookup"><span data-stu-id="5f5bf-120">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.PrincipalPermissionAttribute" Usage="new System.Security.Permissions.PrincipalPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="5f5bf-121"><see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-121">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span></span></param>
        <summary><span data-ttu-id="5f5bf-122">지정된 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-122">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f5bf-123">`Demand`하십시오 `InheritanceDemand`, 및 `LinkDemand` 의 유일한 값은 <xref:System.Security.Permissions.SecurityAction> 이 특성에 대 한 의미를 가지는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-123">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="5f5bf-124">기타 작업 코드 액세스 권한 없는 사용 권한을 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-124">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5bf-125">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> 되도록 요청 하는 현재 사용자는 관리자는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-125">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f5bf-126">Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-126">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="5f5bf-127">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-127">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="5f5bf-128">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-128">By default, you are in the standard user role.</span></span> <span data-ttu-id="5f5bf-129">관리자 권한이 필요한 코드를 실행하려면 먼저 표준 사용자에서 관리자로 권한을 높여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-129">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="5f5bf-130">애플리케이션 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 애플리케이션을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-130">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5bf-131">현재 보안 주체가 기본 역할 기반 보안 공급자에 의해 인증되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-131">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span></span></summary>
        <value><span data-ttu-id="5f5bf-132">현재 보안 주체가 인증되었으면 <see langword="true" />이고, 인증되지 않았으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-132"><see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="principalPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5bf-133">새 <see cref="T:System.Security.Permissions.PrincipalPermission" />을 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-133">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="5f5bf-134">이 특성에 해당하는 <see cref="T:System.Security.Permissions.PrincipalPermission" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-134">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f5bf-135">이 메서드 애플리케이션 코드는 보안 시스템만 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-135">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="5f5bf-136">컴파일 타임에 특성은 보안 선언을 메타 데이터의 serialize 된 형식으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-136">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="5f5bf-137">선언적 보안 메타 데이터의 데이터는이 특성에 해당 하는이 메서드가 반환 하는 권한에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-137">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5bf-138">현재 사용자와 관련된 ID 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-138">Gets or sets the name of the identity associated with the current principal.</span></span></summary>
        <value><span data-ttu-id="5f5bf-139">내부 역할 기반 보안 공급자에서 제공하는 이름과 일치시키려는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-139">A name to match against that provided by the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f5bf-140">인증 공급자가 Windows NT <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> 사용자의 Windows NT 로그인 이름 ("DomainName\UserName" 형식)와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-140">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="5f5bf-141">사용 하는 인증 공급자와 현재 보안 주체의 id를 결정 하는 방법을 확인 하려면 해당 호스트의 설명서를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-141">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Role : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5bf-142">지정된 보안 역할에서 멤버를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-142">Gets or sets membership in a specified security role.</span></span></summary>
        <value><span data-ttu-id="5f5bf-143">내부 역할 기반 보안 공급자의 역할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-143">The name of a role from the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f5bf-144">사용 가능한 역할은 호스트에서 사용 중인 인증 공급자에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-144">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="5f5bf-145">인증 공급자를 Windows NT 이면 역할은 Windows NT 사용자 그룹 (형태로 "DomainName\GroupName")입니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-145">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="5f5bf-146">사용 하는 인증 공급자 및 사용자 역할에 속할 수 있는 확인 하려면 해당 호스트의 설명서를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f5bf-146">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>