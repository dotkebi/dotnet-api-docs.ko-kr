<Type Name="StrongNameIdentityPermission" FullName="System.Security.Permissions.StrongNameIdentityPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="847dd5923e1089121bccd2c5c8fafbdb46c5b2e3" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56777629" /></Metadata><TypeSignature Language="C#" Value="public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StrongNameIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.StrongNameIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrongNameIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrongNameIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type StrongNameIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="52aca-101">강력한 이름에 대한 ID 권한을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-101">Defines the identity permission for strong names.</span></span> <span data-ttu-id="52aca-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="52aca-103">부터 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], id 권한은 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-103">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], identity permissions are not used.</span></span>  
>   
>  <span data-ttu-id="52aca-104">.NET Framework 버전 1.0 및 1.1에서는 id 권한을 사용할 수 없습니다는 <xref:System.Security.Permissions.PermissionState.Unrestricted> 권한 상태 값입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-104">In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value.</span></span> <span data-ttu-id="52aca-105">.NET framework 버전 2.0 이상에서 id 권한이 모든 사용 권한 상태 값을 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-105">In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</span></span>  <span data-ttu-id="52aca-106">즉, 버전 2.0 이상 버전에서 id 권한이 동일한 동작을 구현 하는 권한으로는 <xref:System.Security.Permissions.IUnrestrictedPermission> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-106">This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span> <span data-ttu-id="52aca-107">즉, 항상 요청 id에 대 한 성공 하면 어셈블리의 id에 관계 없이 완전 신뢰 어셈블리에 권한이 부여 된 경우.</span><span class="sxs-lookup"><span data-stu-id="52aca-107">That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</span></span>  
  
 <span data-ttu-id="52aca-108">사용 하 여 <xref:System.Security.Permissions.StrongNameIdentityPermission> 호출 코드에서 특정 강력한 이름의 코드 어셈블리 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-108">Use <xref:System.Security.Permissions.StrongNameIdentityPermission> to confirm that the calling code is in a particular strong-named code assembly.</span></span> <span data-ttu-id="52aca-109">요청에 대 한 전체 <xref:System.Security.Permissions.StrongNameIdentityPermission> 스택의 모든 어셈블리는 수요를 충족 하기 위해 올바른 증명이 있는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-109">Full demands for <xref:System.Security.Permissions.StrongNameIdentityPermission> succeed only if all the assemblies in the stack have the correct evidence to satisfy the demand.</span></span> <span data-ttu-id="52aca-110">링크를 사용 하는 요청 된 <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> 특성 직접 실행 호출자에 게 올바른 증명이 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-110">Link demands that use the <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> attribute succeed only if the immediate caller has the correct evidence.</span></span>  
  
 <span data-ttu-id="52aca-111">강력한 이름 id 이름 및 특정 어셈블리의 버전을 사용 하 여 필요에 따라 결합 되는 binary large object (BLOB)를 호출 하는 암호화 공개 키를 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-111">A strong name identity is based on a cryptographic public key called a binary large object (BLOB),  which is optionally combined with the name and version of a specific assembly.</span></span> <span data-ttu-id="52aca-112">고유한 네임 스페이스를 정의 하 고 이름을 정품이 아니라는 메시지가 해당 개인 키에서 서명 된 어셈블리의 이름 정의 해야 하므로 강력한 인증을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-112">The key defines a unique namespace and provides strong verification that the name is genuine, because the definition of the name must be in an assembly that is signed by the corresponding private key.</span></span>  
  
 <span data-ttu-id="52aca-113">강력한 이름 키의 유효성을 검사를 반드시 키에 대해 발급 되 고 모든 인증서 또는 트러스트 관계에 종속 되지 않는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-113">Note that the validity of the strong name key is not dependent on a trust relationship or on any certificate necessarily being issued for the key.</span></span>  
  
 <span data-ttu-id="52aca-114">.NET Framework 버전 1.0 및 1.1에서는 id 권한 요청 호출 어셈블리를 완전히 신뢰할 수 있는 경우에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-114">In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted.</span></span> <span data-ttu-id="52aca-115">즉, 호출 어셈블리에 완전 신뢰 하는 경우에 id 권한 요청 어셈블리 요청 된 조건에 맞지 않는 경우 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-115">That is, even if the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</span></span> <span data-ttu-id="52aca-116">.NET Framework 버전에서 2.0 이상에서는 id 권한 요청이 호출 어셈블리에 완전 신뢰 하는 경우에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-116">In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</span></span> <span data-ttu-id="52aca-117">이 모든 사용 권한에 대 한 일관성을 보장 하 고 id 권한 한 특별 한 경우로 처리를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-117">This ensures consistency for all permissions and eliminates the treatment of identity permissions as a special case.</span></span>  
  
 <span data-ttu-id="52aca-118">강력한 이름의 설명은 참조 하세요.를 <xref:System.Security.Policy.StrongName> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-118">For a complete description of strong names, see the <xref:System.Security.Policy.StrongName> reference page.</span></span> <span data-ttu-id="52aca-119">강력한 이름의 어셈블리에 대 한 자세한 내용은 참조 하세요. [강력한 이름의 어셈블리](~/docs/framework/app-domains/strong-named-assemblies.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-119">For more information about strong-named assemblies, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
 <span data-ttu-id="52aca-120"><xref:System.Security.Permissions.StrongNameIdentityPermission> 클래스 형식의 공용 멤버에 액세스 하기 위한 강력한 이름 요구 사항을 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-120">The <xref:System.Security.Permissions.StrongNameIdentityPermission> class is used to define strong-name requirements for accessing the public members of a type.</span></span> <span data-ttu-id="52aca-121"><xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> 특성은 어셈블리 수준에서 강력한 이름 요구 사항을 정의를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-121">The <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> attribute can be used to define strong-name requirements at the assembly level.</span></span> <span data-ttu-id="52aca-122">.NET framework 버전 2.0 이상에서 사용할 수도 있습니다는 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 해당 어셈블리의 모든 public이 아닌 형식은 다른 어셈블리에 표시 되는지 지정 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-122">In the .NET Framework version 2.0 and later, you can also use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to specify that all nonpublic types in that assembly are visible to another assembly.</span></span> <span data-ttu-id="52aca-123">자세한 내용은 [Friend Assemblies](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)(Friend 어셈블리)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="52aca-123">For more information, see [Friend Assemblies](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.StrongNameIdentityPermission" />
    <altmember cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />
    <altmember cref="T:System.Security.Policy.StrongName" />
    <altmember cref="T:System.Security.Policy.StrongNameMembershipCondition" />
    <related type="Article" href="https://msdn.microsoft.com/library/d4a80263-f3e0-4d81-9b61-f0cbeae3797b"><span data-ttu-id="52aca-124">강력한 이름의 어셈블리</span><span class="sxs-lookup"><span data-stu-id="52aca-124">Strong-Named Assemblies</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd"><span data-ttu-id="52aca-125">Friend 어셈블리</span><span class="sxs-lookup"><span data-stu-id="52aca-125">Friend Assemblies</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52aca-126"><see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-126">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="52aca-127"><see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-127">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="52aca-128">지정된 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-128">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-129">만듭니다 완전히 제한 됨 (`None`) 또는 `Unrestricted` 권한.</span><span class="sxs-lookup"><span data-stu-id="52aca-129">Creates either a fully restricted (`None`) or `Unrestricted` permission.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52aca-130">.NET Framework 버전 1.0 및 1.1에서는 id 권한을 사용할 수 없습니다는 <xref:System.Security.Permissions.PermissionState.Unrestricted> 권한 상태 값입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-130">In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value.</span></span> <span data-ttu-id="52aca-131">.NET framework 버전 2.0 이상에서 id 권한이 모든 사용 권한 상태 값을 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-131">In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</span></span>  <span data-ttu-id="52aca-132">즉, 버전 2.0 이상 버전에서 id 권한이 동일한 동작을 구현 하는 권한으로는 <xref:System.Security.Permissions.IUnrestrictedPermission> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-132">This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span> <span data-ttu-id="52aca-133">즉, 항상 요청 id에 대 한 성공 하면 어셈블리의 id에 관계 없이 완전 신뢰 어셈블리에 권한이 부여 된 경우.</span><span class="sxs-lookup"><span data-stu-id="52aca-133">That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</span></span>  
  
 <span data-ttu-id="52aca-134">호출 어셈블리를 완전히 신뢰할 수 있는 경우에.NET Framework 버전 1.0 및 1.1에서는 id 권한 요청을 효과적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-134">In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.</span></span> <span data-ttu-id="52aca-135">즉, 호출 어셈블리에 완전 신뢰 수준으로 id 권한 요청 어셈블리 요청 된 조건에 맞지 않는 경우 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-135">That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</span></span> <span data-ttu-id="52aca-136">.NET Framework 버전에서 2.0 이상에서는 id 권한 요청이 호출 어셈블리에 완전 신뢰 하는 경우에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-136">In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</span></span> <span data-ttu-id="52aca-137">이 id 권한 한 특별 한 경우로 처리를 제거 하는 모든 사용 권한에 대 한 일관성을 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-137">This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.</span></span>  
  
 <span data-ttu-id="52aca-138">권한 상태 값을 사용 하 여이 생성자를 사용 하 여 <xref:System.Security.Permissions.PermissionState.None> 에 강력한 이름과 일치 하지는 id 권한을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-138">Use this constructor with a permission state value of <xref:System.Security.Permissions.PermissionState.None> to create an identity permission that matches no strong names.</span></span> <span data-ttu-id="52aca-139">이후에 설정한 경우에 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 및 <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> 속성을 특정 강력한 이름은 id를 사용 권한으로 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-139">If you subsequently set the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> and <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> properties, a specific strong name identity can be represented by the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-140">다음 코드 예제에서는 <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-140">The following code example shows the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#7)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52aca-141"><paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-141">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::StrongNamePublicKeyBlob ^ blob, System::String ^ name, Version ^ version);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.StrongNamePublicKeyBlob * string * Version -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission (blob, name, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blob" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="blob"><span data-ttu-id="52aca-142">강력한 이름 ID 네임스페이스를 정의하는 공용 키입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-142">The public key defining the strong name identity namespace.</span></span></param>
        <param name="name"><span data-ttu-id="52aca-143">강력한 이름 ID의 단순 이름 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-143">The simple name part of the strong name identity.</span></span> <span data-ttu-id="52aca-144">이 부분은 어셈블리의 이름에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-144">This corresponds to the name of the assembly.</span></span></param>
        <param name="version"><span data-ttu-id="52aca-145">ID의 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-145">The version number of the identity.</span></span></param>
        <summary><span data-ttu-id="52aca-146">지정된 강력한 이름 ID에 대해 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-146">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class for the specified strong name identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-147">합니다 `name` 하 고 `version` 매개 변수 수 `null` 공개 키 어셈블리를 식별 하기 사용 되는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-147">The `name` and `version` parameters can be `null` only when the public key is used to identify the assembly.</span></span> <span data-ttu-id="52aca-148">빈 문자열 ("") 대신 쓰일 수 없습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-148">An empty string ("") should not be used in place of `null`.</span></span> <span data-ttu-id="52aca-149">하는 경우 `name` 빈 문자열이 면는 <xref:System.ArgumentException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-149">If `name` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="52aca-150">이름 및 어셈블리의 버전 번호에 대 한 자세한 내용은 참조 하세요. [강력한 이름의 어셈블리](~/docs/framework/app-domains/strong-named-assemblies.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-150">For more information on names and version numbers of assemblies, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-151">다음 코드 예제에서는 <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-151">The following code example shows the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#8)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52aca-152"><paramref name="blob" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="52aca-152">The <paramref name="blob" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52aca-153"><paramref name="name" /> 매개 변수가 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-153">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52aca-154">현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-154">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="52aca-155">현재 사용 권한의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-155">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-156">권한 복사본이 원래 권한으로 리소스에 대 한 동일한 액세스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-156">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-157">다음 코드 예제에서는의 동작을 보여 줍니다.는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="52aca-157">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> method.</span></span> <span data-ttu-id="52aca-158">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Permissions.StrongNameIdentityPermission> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-158">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="52aca-159">이 예제에 대 한 모범 사용을 빌드 및 전체 예제를 실행 한 다음 출력을 볼 경우</span><span class="sxs-lookup"><span data-stu-id="52aca-159">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52aca-160">코드 예제에서는 동작 메서드의 용도 설명 하기 위해 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-160">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="52aca-161">으로 보안 인프라를 권한 클래스의 메서드를 사용 하는 일반적으로 애플리케이션에서 사용 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-161">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#5)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#5)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="strongNameIdentityPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="52aca-162">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-162">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="52aca-163">XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-163">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-164">이 메서드는 애플리케이션 코드에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-164">This method is not used by application code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-165">다음 코드 예제에서는의 동작을 보여 줍니다.는 <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="52aca-165">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> method.</span></span> <span data-ttu-id="52aca-166">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Permissions.StrongNameIdentityPermission> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-166">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="52aca-167">이 예제에 대 한 모범 사용을 빌드 및 전체 예제를 실행 한 다음 출력을 볼 경우</span><span class="sxs-lookup"><span data-stu-id="52aca-167">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52aca-168">코드 예제에서는 동작 메서드의 용도 설명 하기 위해 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-168">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="52aca-169">으로 보안 인프라를 권한 클래스의 메서드를 사용 하는 일반적으로 애플리케이션에서 사용 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-169">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52aca-170"><paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="52aca-170">The <paramref name="e" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52aca-171"><paramref name="e" /> 매개 변수가 올바른 권한 요소가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-171">The <paramref name="e" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="52aca-172">또는</span><span class="sxs-lookup"><span data-stu-id="52aca-172">-or-</span></span> 
<span data-ttu-id="52aca-173"><paramref name="e" /> 매개 변수의 버전 번호가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-173">The <paramref name="e" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="52aca-174">현재 사용 권한과 공통되는 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-174">A permission to intersect with the current permission.</span></span> <span data-ttu-id="52aca-175">현재 사용 권한과 동일한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-175">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="52aca-176">현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-176">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="52aca-177">현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 새 사용 권한이며, 교집합이 비어 있는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-177">A new permission that represents the intersection of the current permission and the specified permission, or <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-178">두 사용 권한의 교집합에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-178">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="52aca-179">원래 사용 권한을 모두 전달 하는 요구만 교집합을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-179">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="52aca-180">두 개의 동일한 강력한 이름 id 권한의 교집합에는 동일한 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-180">The intersection of two identical strong name identity permissions is the same permission.</span></span> <span data-ttu-id="52aca-181">서로 다른 두의 교집합 (없습니다 와일드 카드) 식에는 빈 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-181">The intersection of two different (not wildcard) expressions is an empty permission.</span></span> <span data-ttu-id="52aca-182">와일드 카드 식과 일치 하는 강력한 이름을 교차 강력한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-182">The intersection of a wildcard expression and a matching strong name is the strong name.</span></span> <span data-ttu-id="52aca-183">일치 하는 두 개의 와일드 카드 식의 교집합이 더 오래 두 식의 보다 구체적인 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-183">The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-184">다음 코드 예제에서는 사용 결과 보여 줍니다.는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> 메서드를 메서드를 사용 하는 방법에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-184">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> method, not how to use the method.</span></span> <span data-ttu-id="52aca-185">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Permissions.StrongNameIdentityPermission> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-185">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="52aca-186">이 예제에 대 한 모범 사용을 빌드 및 전체 예제를 실행 한 다음 출력을 볼 경우</span><span class="sxs-lookup"><span data-stu-id="52aca-186">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52aca-187">코드 예제에서는 동작 메서드의 용도 설명 하기 위해 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-187">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="52aca-188">으로 보안 인프라를 권한 클래스의 메서드를 사용 하는 일반적으로 애플리케이션에서 사용 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-188">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#4)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#4)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52aca-189"><paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 동일한 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-189">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="strongNameIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="52aca-190">하위 집합 관계에 대해 테스트할 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-190">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="52aca-191">이 사용 권한은 현재 권한과 동일한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-191">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="52aca-192">현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-192">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="52aca-193">현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 하위 집합이 아니면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-193"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-194">현재 권한 현재 사용 권한과 지정 된 권한으로 완전히 포함 된 작업의 집합을 지정 하는 경우 지정 된 사용 권한의 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-194">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="52aca-195">예를 들어 같다고 다른 속성, 사용 하 여 id를 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> MyCompany.MyDepartment.\* 와일드 카드 식이 포함 된 속성 사용 하 여 id의 하위 집합으로 식별 되는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 같을 .</span><span class="sxs-lookup"><span data-stu-id="52aca-195">For example, the other properties being equal, an identity with the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property containing the wildcard expression MyCompany.MyDepartment.\* is identified as a subset of an identity with the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property MyCompany.MyDepartment.MyFile.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-196">다음 코드 예제에서는 사용 결과 보여 줍니다.는 <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> 메서드를 메서드를 사용 하는 방법에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-196">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> method, not how to use the method.</span></span> <span data-ttu-id="52aca-197">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Permissions.StrongNameIdentityPermission> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-197">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="52aca-198">이 예제에 대 한 모범 사용을 빌드 및 전체 예제를 실행 한 다음 출력을 볼 경우</span><span class="sxs-lookup"><span data-stu-id="52aca-198">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52aca-199">코드 예제에서는 동작 메서드의 용도 설명 하기 위해 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-199">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="52aca-200">으로 보안 인프라를 권한 클래스의 메서드를 사용 하는 일반적으로 애플리케이션에서 사용 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-200">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#2)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#2)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52aca-201"><paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 동일한 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-201">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52aca-202">강력한 이름 ID의 단순한 이름 부분을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-202">Gets or sets the simple name portion of the strong name identity.</span></span></summary>
        <value><span data-ttu-id="52aca-203">ID의 단순한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-203">The simple name of the identity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-204">값을 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 같을 MyCompany.MyDepartment.\*은 유효한 이름에 예를 들어; 속성을 정확 하 게 이름일 수 있습니다 또는 마지막 위치에 와일드 카드 문자를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-204">The value of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property can be an exact name or can be modified by a wildcard character in the final position; for example, both MyCompany.MyDepartment.MyFile and MyCompany.MyDepartment.\* are valid names.</span></span> <span data-ttu-id="52aca-205">설정 하려는 경우는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 속성을 빈 문자열 (""), <xref:System.ArgumentException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-205">If you attempt to set the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property to an empty string (""), an <xref:System.ArgumentException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52aca-206">값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-206">The value is an empty string ("").</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="52aca-207">모호한 ID를 포함하기 때문에 속성 값을 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-207">The property value cannot be retrieved because it contains an ambiguous identity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.StrongNamePublicKeyBlob PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicKey As StrongNamePublicKeyBlob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::StrongNamePublicKeyBlob ^ PublicKey { System::Security::Permissions::StrongNamePublicKeyBlob ^ get(); void set(System::Security::Permissions::StrongNamePublicKeyBlob ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Permissions.StrongNamePublicKeyBlob with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.StrongNamePublicKeyBlob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52aca-208">강력한 이름 ID 네임스페이스를 정의하는 공개 키 blob을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-208">Gets or sets the public key blob that defines the strong name identity namespace.</span></span></summary>
        <value><span data-ttu-id="52aca-209">ID의 공개 키가 들어 있는 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />이거나, 키가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-209">A <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> that contains the public key of the identity, or <see langword="null" /> if there is no key.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52aca-210">속성 값이 <see langword="null" />로 설정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-210">The property value is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="52aca-211">모호한 ID를 포함하기 때문에 속성 값을 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-211">The property value cannot be retrieved because it contains an ambiguous identity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="strongNameIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52aca-212">사용 권한 및 현재 상태에 대한 XML 인코딩을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-212">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="52aca-213">모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-213">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-214">이 메서드는 애플리케이션 코드에서 일반적으로 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-214">This method is not typically used by application code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-215">다음 코드 예제에서는의 동작을 보여 줍니다.는 <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="52aca-215">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52aca-216">코드 예제에서는 동작 메서드의 용도 설명 하기 위해 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-216">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="52aca-217">으로 보안 인프라를 권한 클래스의 메서드를 사용 하는 일반적으로 애플리케이션에서 사용 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-217">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="52aca-218">현재 사용 권한과 결합할 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-218">A permission to combine with the current permission.</span></span> <span data-ttu-id="52aca-219">현재 사용 권한과 동일한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-219">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="52aca-220">현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-220">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="52aca-221">현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-221">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52aca-222">에 대 한 호출의 결과 <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> 현재 사용 권한 및 지정한 사용 권한의 권한 나타나는 모든 작업을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-222">The result of a call to <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="52aca-223">사용 권한 중 하나를 전달 하는 모든 요청 전달 합집합에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-223">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="52aca-224">사용 권한의 합집합 및 `null` 은 권한 없는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-224">The union of a permission and `null` is the permission that is not `null`.</span></span> <span data-ttu-id="52aca-225">사용 권한의 합집합 및 해당 사용 권한의 하위 집합을 다른 값을 포함 하는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-225">The union of a permission and a subset of that permission is the permission that contains the other.</span></span> <span data-ttu-id="52aca-226">모든 다른 조합의 <xref:System.ArgumentException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-226">Any other combination results in an <xref:System.ArgumentException> exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52aca-227">다음 코드 예제에서는 사용 결과 보여 줍니다.는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> 메서드를 메서드를 사용 하는 방법에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-227">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> method, not how to use the method.</span></span> <span data-ttu-id="52aca-228">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Permissions.StrongNameIdentityPermission> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-228">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="52aca-229">이 예제에 대 한 모범 사용을 빌드 및 전체 예제를 실행 한 다음 출력을 볼 경우</span><span class="sxs-lookup"><span data-stu-id="52aca-229">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52aca-230">코드 예제에서는 동작 메서드의 용도 설명 하기 위해 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-230">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="52aca-231">으로 보안 인프라를 권한 클래스의 메서드를 사용 하는 일반적으로 애플리케이션에서 사용 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-231">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#3)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#3)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52aca-232"><paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 동일한 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-232">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span>  
  
<span data-ttu-id="52aca-233">또는</span><span class="sxs-lookup"><span data-stu-id="52aca-233">-or-</span></span> 
<span data-ttu-id="52aca-234">두 사용 권한이 같지 않으며 하나가 다른 사용 권한의 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-234">The two permissions are not equal and one is a subset of the other.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52aca-235">ID의 버전 번호를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-235">Gets or sets the version number of the identity.</span></span></summary>
        <value><span data-ttu-id="52aca-236">ID의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-236">The version of the identity.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="52aca-237">모호한 ID를 포함하기 때문에 속성 값을 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="52aca-237">The property value cannot be retrieved because it contains an ambiguous identity.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>