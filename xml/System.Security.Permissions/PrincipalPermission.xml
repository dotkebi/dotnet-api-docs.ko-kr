<Type Name="PrincipalPermission" FullName="System.Security.Permissions.PrincipalPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28c74cccc76ab3dc07520a56955035c4d7bf43ef" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58724062" /></Metadata><TypeSignature Language="C#" Value="public sealed class PrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PrincipalPermission = class&#xA;    interface IPermission&#xA;    interface IUnrestrictedPermission&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="09885-101">선언적 및 명령적 보안 동작에 대해 정의된 언어 구문을 사용하여 활성 보안 주체(<see cref="T:System.Security.Principal.IPrincipal" /> 참조)에 대해 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-101">Allows checks against the active principal (see <see cref="T:System.Security.Principal.IPrincipal" />) using the language constructs defined for both declarative and imperative security actions.</span></span> <span data-ttu-id="09885-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-103">Id 정보 (사용자 이름 및 역할)를 생성자에 전달 하 여 <xref:System.Security.Permissions.PrincipalPermission> 현재 보안 주체의 id이이 정보와 일치 하는지 요청에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-103">By passing identity information (user name and role) to the constructor, <xref:System.Security.Permissions.PrincipalPermission> can be used to demand that the identity of the active principal matches this information.</span></span>  
  
 <span data-ttu-id="09885-104">활성에 맞게 <xref:System.Security.Principal.IPrincipal> 및 관련 된 <xref:System.Security.Principal.IIdentity>, 지정 된 id 및 역할 모두 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-104">To match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>, both the specified identity and role must match.</span></span> <span data-ttu-id="09885-105">경우 `null` identity 문자열을 사용 하면 모든 id와 일치 하는 요청으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09885-105">If `null` identity string is used, it is interpreted as a request to match any identity.</span></span> <span data-ttu-id="09885-106">사용 `null` 역할 문자열에는 모든 역할 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-106">Use of `null` role string will match any role.</span></span> <span data-ttu-id="09885-107">전달 의미상 `null` 에 대 한 매개 변수 `name` 또는 `role` 하려면 <xref:System.Security.Permissions.PrincipalPermission> id 및 역할에는 일치 <xref:System.Security.Principal.IPrincipal>합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-107">By implication, passing `null` parameter for `name` or `role` to <xref:System.Security.Permissions.PrincipalPermission> will match the identity and roles in any <xref:System.Security.Principal.IPrincipal>.</span></span> <span data-ttu-id="09885-108">것도 생성할 수는 <xref:System.Security.Permissions.PrincipalPermission> 만 결정 하는 여부를 <xref:System.Security.Principal.IIdentity> 인증 또는 인증 되지 않은 엔터티를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="09885-108">It is also possible to construct a <xref:System.Security.Permissions.PrincipalPermission> that only determines whether the <xref:System.Security.Principal.IIdentity> represents an authenticated or unauthenticated entity.</span></span> <span data-ttu-id="09885-109">이 예에서 `name` 고 `role` 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09885-109">In this case, `name` and `role` are ignored.</span></span>  
  
 <span data-ttu-id="09885-110">대부분의 기타 권한을 달리 <xref:System.Security.Permissions.PrincipalPermission> 를 확장 하지 않으므로 <xref:System.Security.CodeAccessPermission>합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-110">Unlike most other permissions, <xref:System.Security.Permissions.PrincipalPermission> does not extend <xref:System.Security.CodeAccessPermission>.</span></span> <span data-ttu-id="09885-111">그러나 구현 아니라는 <xref:System.Security.IPermission> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-111">It does, however, implement the <xref:System.Security.IPermission> interface.</span></span> <span data-ttu-id="09885-112">때문에 이것이 <xref:System.Security.Permissions.PrincipalPermission> 코드 액세스 권한을; 아닙니다. 즉,이 부여 되지 않은 한 실행 어셈블리의 id를 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-112">This is because <xref:System.Security.Permissions.PrincipalPermission> is not a code access permission; that is, it is not granted based on the identity of the executing assembly.</span></span> <span data-ttu-id="09885-113">대신 코드 작업을 수행할 수 있습니다 (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>등)과 동일한 방식으로 현재 사용자 id에 대 한 코드 액세스 및 코드 id 권한을 이러한 동작을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-113">Instead, it allows code to perform actions (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>, and so on) against the current user identity in a manner consistent with the way those actions are performed for code access and code identity permissions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09885-114">보안 주체 사용 권한 요청 하기 전에 현재 응용 프로그램 도메인의 사용자 정책 열거형 값으로 설정 하는 데 필요한은 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-114">Prior to a demand for principal permission it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="09885-115">보안 주체 정책을 기본적으로 <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-115">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="09885-116">사용자 정책 설정 하지 않으면 경우 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, 주체 권한에 대 한 요청이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-116">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="09885-117">보안 주체 권한을 요청 하기 전에 다음 코드를 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-117">The following code should be executed before the principal permission is demanded:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
   
  
## Examples  
 <span data-ttu-id="09885-118">다음 예제에서는 활성 보안 주체가 관리자 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-118">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="09885-119">합니다 `name` 매개 변수는 `null`, 사용자에 게는 관리자가 요청을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-119">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09885-120">Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-120">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="09885-121">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="09885-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="09885-122">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09885-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="09885-123">관리자 권한이 필요한 코드를 실행하려면 먼저 표준 사용자에서 관리자로 권한을 높여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-123">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="09885-124">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-124">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09885-125"><see cref="T:System.Security.Permissions.PrincipalPermission" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-125">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="09885-126"><see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-126">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="09885-127">지정된 <see cref="T:System.Security.Permissions.PrincipalPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-127">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-128">`None` 만 인증 되지 않은 보안 주체와 일치 (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> 가 빈 문자열 (""), no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>를 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> 는 `false`).</span><span class="sxs-lookup"><span data-stu-id="09885-128">`None` matches only the unauthenticated principal (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the empty string (""), no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> is `false`).</span></span> <span data-ttu-id="09885-129">`Unrestricted` 모든 보안 주체와 일치 (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> 됩니다 `null`를 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> 는 `null`).</span><span class="sxs-lookup"><span data-stu-id="09885-129">`Unrestricted` matches all principals (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is `null`, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> is `null`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09885-130">이 생성자는 다른 사용 권한과의 디자인을 사용 하 여 일관성을 위해 포함 되었지만 실제로 유용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-130">This constructor is included for consistency with the design of other permissions, but is not useful in practice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09885-131"><paramref name="state" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.PermissionState" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="09885-131">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09885-132"><see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-132">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="09885-133"><see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 역할(예: Administrator)입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-133">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <summary><span data-ttu-id="09885-134">지정된 <paramref name="name" /> 및 <paramref name="role" />에 대한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-134">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" /> and <paramref name="role" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-135">모두를 `name` 매개 변수 및 `role` 활성에 맞게이 사용 권한에 대 한 매개 변수 일치 해야 <xref:System.Security.Principal.IPrincipal> 및 관련 된 <xref:System.Security.Principal.IIdentity>합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-135">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span> <span data-ttu-id="09885-136">설정할 `name` 를 `null` 모든 사용자 역할에 대 한 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-136">Set `name` to `null` to check for any user in a role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09885-137">다음 예제에서는 활성 보안 주체가 관리자 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-137">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="09885-138">합니다 `name` 매개 변수는 `null`, 사용자에 게는 관리자가 요청을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-138">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
 <span data-ttu-id="09885-139">**참고** 사용자 계정 컨트롤 (UAC), Windows Vista의 사용자 권한을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-139">**Note** In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="09885-140">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="09885-140">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="09885-141">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09885-141">By default, you are in the standard user role.</span></span> <span data-ttu-id="09885-142">관리자 권한이 필요한 코드를 실행하려면 먼저 표준 사용자에서 관리자로 권한을 높여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-142">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="09885-143">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-143">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string * bool -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09885-144"><see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-144">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="09885-145"><see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 역할(예: Administrator)입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-145">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <param name="isAuthenticated"><span data-ttu-id="09885-146">인증된 사용자이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-146"><see langword="true" /> to signify that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09885-147">지정된 <paramref name="name" />, <paramref name="role" /> 및 인증 상태에 대한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-147">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" />, <paramref name="role" />, and authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-148">모두를 `name` 매개 변수 및 `role` 활성에 맞게이 사용 권한에 대 한 매개 변수 일치 해야 <xref:System.Security.Principal.IPrincipal> 및 관련 된 <xref:System.Security.Principal.IIdentity>합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-148">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="principalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09885-149">현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-149">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="09885-150">현재 사용 권한의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-150">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-151">권한 복사본이 원래 사용 권한과 같은 보안 주체와 id를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="09885-151">A copy of the permission represents the same principal and identity as the original permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="principalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09885-152">런타임에 현재 보안 주체가 현재 사용 권한이 지정하는 보안 주체와 일치하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-152">Determines at run time whether the current principal matches the principal specified by the current permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-153">없으면 <xref:System.Security.SecurityException> 발생 <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-153">If no <xref:System.Security.SecurityException> is raised, <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> succeeds.</span></span>  
  
 <span data-ttu-id="09885-154">이 메서드를 호출 스레드로 연결 된 보안 주체에 대해 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-154">This method acts against the principal attached to the calling thread.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09885-155">호출 하기 전에 합니다 <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> 는 현재 응용 프로그램 도메인의 사용자 정책 열거형 값으로 설정 하는 데 필요한 메서드를 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-155">Prior to calling the <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> method, it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="09885-156">기본적으로 사용자 정책 설정 됩니다 <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-156">By default the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="09885-157">사용자 정책 설정 하지 않으면 경우 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, 주체 권한에 대 한 요청이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-157">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="09885-158">보안 주체 권한 요청이 발생 하기 전에 다음 코드를 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-158">The following code should be executed before the demand for principal permission occurs:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="09885-159">현재 보안 주체가 현재 사용 권한이 지정하는 보안 주체에 대한 보안 검사를 통과하지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="09885-159">The current principal does not pass the security check for the principal specified by the current permission.</span></span>  
  
<span data-ttu-id="09885-160">또는</span><span class="sxs-lookup"><span data-stu-id="09885-160">-or-</span></span> 
<span data-ttu-id="09885-161">현재 <see cref="T:System.Security.Principal.IPrincipal" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="09885-161">The current <see cref="T:System.Security.Principal.IPrincipal" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals o" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals obj" FrameworkAlternate="netcore-2.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="09885-162">현재 <see cref="T:System.Security.Permissions.PrincipalPermission" />과 비교할 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-162">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></param>
        <param name="obj">To be added.</param>
        <summary><span data-ttu-id="09885-163">지정한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체가 현재 <see cref="T:System.Security.Permissions.PrincipalPermission" />과 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-163">Determines whether the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="09885-164">지정한 <see cref="T:System.Security.Permissions.PrincipalPermission" />이 현재 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-164"><see langword="true" /> if the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-165">자세한 내용은 <xref:System.Object.Equals%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="09885-165">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="principalPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="09885-166">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-166">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="09885-167">XML 인코딩을 사용하여 지정된 상태로 사용 권한을 다시 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="09885-167">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09885-168"><paramref name="elem" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="09885-168">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09885-169"><paramref name="elem" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="09885-169">The <paramref name="elem" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="09885-170">또는</span><span class="sxs-lookup"><span data-stu-id="09885-170">-or-</span></span> 
<span data-ttu-id="09885-171"><paramref name="elem" /> 매개 변수의 버전 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="09885-171">The <paramref name="elem" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="principalPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09885-172">해시 알고리즘과 해시 테이블 같은 데이터 구조에 사용하기 적합한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체에 대한 해시 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09885-172">Gets a hash code for the <see cref="T:System.Security.Permissions.PrincipalPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="09885-173">현재 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-173">A hash code for the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-174">동일한 권한에의 두 인스턴스에 대 한 해시 코드를 서로 다를 수 있으므로 해시 코드를 해야 사용 두 비교할 <xref:System.Security.Permissions.PrincipalPermission> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-174">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="09885-175">현재 사용 권한과 공통되는 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-175">A permission to intersect with the current permission.</span></span> <span data-ttu-id="09885-176">현재 사용 권한과 동일한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-176">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="09885-177">현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-177">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="09885-178">현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-178">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="09885-179">교집합이 공집합인 경우 이 새 사용 권한은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-179">This new permission will be <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-180">이 메서드는 데 유용 하므로 두 명의 사용자가 교차 되지 <xref:System.Security.Permissions.PrincipalPermission>합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-180">Because two users never intersect, this method is not useful for <xref:System.Security.Permissions.PrincipalPermission>.</span></span> <span data-ttu-id="09885-181">예를 들면 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-181">For example,</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#1)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#1)]  
  
 <span data-ttu-id="09885-182">위의 식은 아래의 식과 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-182">is equivalent to</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#2)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#2)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#2)]  
  
 <span data-ttu-id="09885-183">id는 Bob 및 중인에 동시에 나타낼 수 있습니다 때문에.</span><span class="sxs-lookup"><span data-stu-id="09885-183">because no identity can simultaneously represent both Bob and Louise.</span></span> <span data-ttu-id="09885-184">실제로 `pp1.Demand()` 주체를 인증 되지 않은 경우에 성공 (빈 문자열과 같은 이름의 (""))가 관리자 역할을 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09885-184">In effect, `pp1.Demand()` only succeeds if an unauthenticated principal (with name equal to the empty string ("")) is allowed to act in the Administrator role.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09885-185"><paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="09885-185">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="principalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="09885-186">하위 집합 관계를 테스트할 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-186">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="09885-187">이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-187">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="09885-188">현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-188">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="09885-189">현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-189"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-190">현재 권한 지정한 사용 권한의 현재 사용 권한의 성공 하는 모든 요청도 성공 하는 경우 지정 된 사용 권한의 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-190">The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09885-191">인스턴스를 정의 하는 다음 예제에서는 <xref:System.Security.Permissions.PrincipalPermission> 세 가지 고유 사용자에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-191">The following example defines instances of <xref:System.Security.Permissions.PrincipalPermission> corresponding to three distinct users.</span></span> <span data-ttu-id="09885-192">그런 다음 사용자 그룹으로에 추가 인스턴스 두 개 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="09885-192">Two additional instances are then created as groups of users.</span></span> <span data-ttu-id="09885-193">`pp1` Bob을 나타내고 중인, `pp2` Bob 고 중인, Greg 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="09885-193">`pp1` represents Bob and Louise, `pp2` represents Bob, Louise, and Greg.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/VB/source.vb#1)]  
  
 <span data-ttu-id="09885-194">앞의 선언 `pp1.IsSubsetOf(pp2)` 반환 `true`, 및 `pp2.IsSubsetOf(pp1)` 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-194">With the preceding declarations, `pp1.IsSubsetOf(pp2)` returns `true`, and `pp2.IsSubsetOf(pp1)` returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09885-195"><paramref name="target" /> 매개 변수가 현재 사용 권한과 다른 형식의 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="09885-195">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="principalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09885-196">현재 사용 권한이 무제한인지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-196">Returns a value indicating whether the current permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="09885-197">현재 사용 권한이 무제한이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-197"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-198">무제한 <xref:System.Security.Permissions.PrincipalPermission> 모든 보안 주체와 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-198">An unrestricted <xref:System.Security.Permissions.PrincipalPermission> matches any principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="principalPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09885-199">현재 사용 권한을 나타내는 문자열을 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-199">Creates and returns a string representing the current permission.</span></span></summary>
        <returns><span data-ttu-id="09885-200">현재 사용 권한의 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-200">A representation of the current permission.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="principalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09885-201">사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="09885-201">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="09885-202">상태 정보를 포함한 사용 권한의 XML 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-202">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="09885-203">현재 사용 권한과 결합할 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-203">A permission to combine with the current permission.</span></span> <span data-ttu-id="09885-204">현재 사용 권한과 동일한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-204">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="09885-205">현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="09885-205">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="09885-206">현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-206">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09885-207"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> 지정된 된 개별 집합이의 조건을 나타내는 사용 권한을 만듭니다 <xref:System.Security.Permissions.PrincipalPermission> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09885-207"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> creates a permission representing the criteria of a given set of individual <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span> <span data-ttu-id="09885-208">조밀 하 게 테스트 하는 조건 집합을 나타내는 것이 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-208">It is useful for compactly representing a set of conditions to test.</span></span> <span data-ttu-id="09885-209">예를 들어 선언</span><span class="sxs-lookup"><span data-stu-id="09885-209">For example, with the declarations</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#3)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#3)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#3)]  
  
 <span data-ttu-id="09885-210">`(ppBob.Union(ppLouise)).Demand()` 현재 보안 주체 관리자의 역할에서 역할 관리자 또는 중인의 Bob을 나타내는 경우 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="09885-210">`(ppBob.Union(ppLouise)).Demand()` will succeed if the current principal represents Bob in the role of Administrator or Louise in the role of Administrator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09885-211"><paramref name="other" /> 매개 변수가 현재 사용 권한과 다른 형식의 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="09885-211">The <paramref name="other" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>