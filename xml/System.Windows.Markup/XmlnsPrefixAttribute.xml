<Type Name="XmlnsPrefixAttribute" FullName="System.Windows.Markup.XmlnsPrefixAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7e28104a4d20836f82b9f62cd4fdadc2419c413" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58547446" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlnsPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlnsPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlnsPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlnsPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlnsPrefixAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type XmlnsPrefixAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="112ae-101">XAML 파일에 요소와 특성을 쓸 때(serialization) 또는 XMAL 편집 기능을 가진 디자인 환경과 상호 작용할 때 XAML 사용의 XAML 네임스페이스와 연결할 권장 접두사를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-101">Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="112ae-102">XAML 프로세서 또는 XAML, 또는 XAML 직렬화를 수행 하는 프로세스를 통합 하는 프레임 워크에 권장 되는 접두사를 인식 일반적으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-102">XAML processors or frameworks that incorporate XAML, or any process that performs XAML serialization, should generally honor the recommended prefix.</span></span> <span data-ttu-id="112ae-103">접두사는 어떤 경우에 접두사 XAML 원본에서 특정 매핑에 되지 런타임 개체 그래프에서 유지 또는 프레임 워크 또는 기술에 의해 저장 되 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-103">The prefix might be necessary in any case where prefixes from specific mappings in the original XAML source are not somehow preserved in the runtime object graph or otherwise stored by a framework or technology.</span></span> <span data-ttu-id="112ae-104">프레임 워크는 자체 어셈블리에서 권장 되는 접두사를 무시 하는 자체 형식을 serialize 하는 방법에 대 한 특정 기본 있을 수 있습니다. 기본 XAML 네임 스페이스를 지속적으로 승격 하려면 다음이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-104">A framework might have specific preferences for how to serialize its own types that ignore the recommended prefix from its own assemblies; this might be done to consistently promote a default XAML namespace.</span></span> <span data-ttu-id="112ae-105">그러나 이러한 프레임 워크는 XAML 형식의 가능한 제 3 자 및 도구 사용에 대 한 권장 되는 접두사를 제공 계속 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-105">However, such a framework should still provide recommended prefixes for possible third-party and tool usages of its XAML types.</span></span> <span data-ttu-id="112ae-106">아래 "XAML 디자이너 지원 또는 일반 Serialization에 대 한 모범 사례" 섹션을 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="112ae-106">See "Best Practice for XAML Designer Support or General Serialization" section below.</span></span>  
  
 <span data-ttu-id="112ae-107">접두사에 대 한 일반 권장 사항을 접두사는 XAML 네임 스페이스에서 제공 하는 모든 직렬화 된 요소에 일반적으로 적용 되기 때문에 짧은 문자열을 사용 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-107">A general recommendation for prefixes is to use short strings, because the prefix is typically applied to all serialized elements that come from the XAML namespace.</span></span> <span data-ttu-id="112ae-108">접두사 문자열 길이 serialize 된 XAML 출력의 크기에 눈에 띄는 영향을 미칠 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-108">The prefix string length can have a noticeable effect on the size of serialized XAML output.</span></span>  
  
 <span data-ttu-id="112ae-109">요청 되는 접두사를 이미 다른 이전에 발생 한/serialize 된 XAML 네임 스페이스 식별자로 사용 중이면 동작이 지정 되지 않습니다 (동작은 각 개별 XAML 프로세서 구현까지).</span><span class="sxs-lookup"><span data-stu-id="112ae-109">If a prefix being requested is already in use by another previously encountered/serialized XAML namespace identifier, the behavior is unspecified (behavior is up to each individual XAML processor implementation).</span></span>  
  
 <span data-ttu-id="112ae-110">대부분의 경우에서 적용 하 여 <xref:System.Windows.Markup.XmlnsPrefixAttribute> 하나 이상의 또한 적용 한 경우에 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 동일한 XAML 네임 스페이스에 대 한 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-110">In most cases, you apply <xref:System.Windows.Markup.XmlnsPrefixAttribute> only if you have also applied at least one <xref:System.Windows.Markup.XmlnsDefinitionAttribute> in the assembly for that same XAML namespace.</span></span>  
  
 <span data-ttu-id="112ae-111">.NET Framework의 이전 버전에서는이 클래스는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-111">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="112ae-112">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.XmlnsPrefixAttribute> System.Xaml 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-112">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.XmlnsPrefixAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="112ae-113">자세한 내용은 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="112ae-113">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="best-practice-for-xaml-designer-support-or-general-serialization"></a><span data-ttu-id="112ae-114">XAML 디자이너 지원 또는 일반 Serialization에 대 한 모범 사례</span><span class="sxs-lookup"><span data-stu-id="112ae-114">Best Practice for XAML Designer Support or General Serialization</span></span>  
 <span data-ttu-id="112ae-115">기본 XAML 네임 스페이스에 프레임 워크 또는 라이브러리에 대 한 대부분의 사용 사례에 연결된 된 XAML 네임 스페이스를 하려는 경우에 XAML 네임 스페이스에 대 한 권장 되는 접두사는 비어 있지 않은 문자열을 계속 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-115">Even if you intend the associated XAML namespace to be the default XAML namespace in most usage cases for your framework or library, you should still specify a non-empty string as the recommended prefix for a XAML namespace.</span></span> <span data-ttu-id="112ae-116">기본 XAML 네임 스페이스 정보는 개별 XAML 파일에 XAML 노드 스트림에서 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-116">Default XAML namespace information is carried in individual XAML files and XAML node streams.</span></span> <span data-ttu-id="112ae-117">기본 XAML 네임 스페이스 및 지정된 된 XAML 소스에서 어떻게 정의 되는지 쉽게 지속 될 수 있습니다 사례 serialization에 사용 하지 않고 <xref:System.Windows.Markup.XmlnsPrefixAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-117">The default XAML namespace and how it is defined in a given XAML source can easily be perpetuated for per-case serialization without using <xref:System.Windows.Markup.XmlnsPrefixAttribute>.</span></span> <span data-ttu-id="112ae-118">그러나는 <xref:System.Windows.Markup.XmlnsPrefixAttribute> 있는 XAML 작성자가 기본 XAML 네임 스페이스에 매핑될 다른 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-118">However, the <xref:System.Windows.Markup.XmlnsPrefixAttribute> is useful for cases where the XAML author has chosen to map the default XAML namespace to something else.</span></span> <span data-ttu-id="112ae-119">XAML 텍스트 편집기를 디자인에 포함 된이 시나리오에서는 환경을 사용할 수 <xref:System.Windows.Markup.XmlnsPrefixAttribute> 초기 XAML 네임 스페이스의 힌트로 `xmlns` 매핑.</span><span class="sxs-lookup"><span data-stu-id="112ae-119">In this scenario a XAML text editor embedded in a design environment can use <xref:System.Windows.Markup.XmlnsPrefixAttribute> as a hint for an initial XAML namespace `xmlns` mapping.</span></span> <span data-ttu-id="112ae-120">또는 디자인 환경 도구 상자에서 및 시각적 디자인 화면으로 개체를 끌어와 같은 디자인 요소에 대 한 XAML 지원-just-in-time 매핑을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-120">Or a design environment can add just-in-time mappings to the backing XAML for design metaphors such as dragging objects out of a toolbox and into a visual design surface.</span></span> <span data-ttu-id="112ae-121">또한 디자이너를 동시에 여러 XAML을 사용 하도록 설정 하면 프레임 워크를 지원할 수 있고 있는지 프레임 워크별 serialization 대신.NET Framework XAML 서비스에 의존 하는 일반적인 XAML serializer 가능한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-121">Also, it is conceivable that a designer could simultaneously support multiple XAML-enabling frameworks, and has a common XAML serializer that relies on .NET Framework XAML Services rather than framework-specific serialization.</span></span> <span data-ttu-id="112ae-122">지정 된 <xref:System.Windows.Markup.XmlnsPrefixAttribute> 이러한 시나리오에 대 한 수 있게 해 XAML 사용 형식에 대 한 더 이식 가능한 및의 XAML 디자인 도구 간에 교환 또는 XAML 편집기와 태그 컴파일러와 같은 다른 소비자 간의 왕복을 수행 하는 경우 강력한 또는 기타 직렬화입니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-122">Specifying a <xref:System.Windows.Markup.XmlnsPrefixAttribute> for these scenarios helps make the XAML usage for your types more portable and robust if the XAML is exchanged between design tools, or undergoes a round trip between XAML editors and other consumers such as markup compilers or other serialization.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="112ae-123">사용자 지정 형식 및 라이브러리에 대 한 XAML 관련 CLR 특성</span><span class="sxs-lookup"><span data-stu-id="112ae-123">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="112ae-124">.NET Framework XAML 서비스에서 사용할 사용자 지정 형식 정의</span><span class="sxs-lookup"><span data-stu-id="112ae-124">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="112ae-125">NET XAML Services 개념 설명서</span><span class="sxs-lookup"><span data-stu-id="112ae-125">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlnsPrefixAttribute (string xmlNamespace, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlNamespace, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlNamespace As String, prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlnsPrefixAttribute(System::String ^ xmlNamespace, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XmlnsPrefixAttribute : string * string -&gt; System.Windows.Markup.XmlnsPrefixAttribute" Usage="new System.Windows.Markup.XmlnsPrefixAttribute (xmlNamespace, prefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="prefix" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace"><span data-ttu-id="112ae-126">XML 네임스페이스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-126">The XAML namespace identifier.</span></span></param>
        <param name="prefix"><span data-ttu-id="112ae-127">권장 접두사 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-127">The recommended prefix string.</span></span></param>
        <summary><span data-ttu-id="112ae-128"><see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-128">Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="112ae-129"><paramref name="xmlNamespace" /> 또는 <paramref name="prefix" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="112ae-129"><paramref name="xmlNamespace" /> or <paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Windows.Markup.XmlnsPrefixAttribute.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="112ae-130">이 특성에 연결된 권장 접두사를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-130">Gets the recommended prefix associated with this attribute.</span></span></summary>
        <value><span data-ttu-id="112ae-131">권장 접두사 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-131">The recommended prefix string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespace">
      <MemberSignature Language="C#" Value="public string XmlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlNamespace : string" Usage="System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="112ae-132">이 특성에 연결된 XAML 네임스페이스 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-132">Gets the XAML namespace identifier associated with this attribute.</span></span></summary>
        <value><span data-ttu-id="112ae-133">XML 네임스페이스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="112ae-133">The XAML namespace identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>