<Type Name="NameScopePropertyAttribute" FullName="System.Windows.Markup.NameScopePropertyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a299accc7e125ccf2d771b0d5da34ca539eb97a" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56402838" /></Metadata><TypeSignature Language="C#" Value="public sealed class NameScopePropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NameScopePropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.NameScopePropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NameScopePropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScopePropertyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type NameScopePropertyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="02f49-101">XAML 이름 범위 값을 제공하는 관련된 클래스의 속성을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-101">Specifies a property of the associated class that provides the XAML namescope value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02f49-102">일반적인 개체 모델에서 애플리케이션 모델 조합 XAML 사용 된 위치는 XAML 이름 범위도 사용 되는 클래스는 일반적으로 루트 요소로 사용 되는 페이지 비유 지는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-102">In a typical object model / application model combination where XAML is used, the classes that are used as a XAML namescope are the classes that are generally used as root elements, or that support a page metaphor.</span></span> <span data-ttu-id="02f49-103">이러한 클래스는 일반적으로 구현 <xref:System.Windows.Markup.INameScope> 만들어지고 XAML 이름 범위를 루트에 해당 하는 프레임 워크의 프로그래밍 모델 및 애플리케이션 모델의 컨텍스트에서 일반적인 XAML 처리 동작에 의해 합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-103">These classes generally implement <xref:System.Windows.Markup.INameScope> and the XAML namescope is created corresponding to the root by typical XAML processing behavior in context of a framework's programming model and application model.</span></span>  
  
 <span data-ttu-id="02f49-104">경우 <xref:System.Windows.Markup.NameScopePropertyAttribute> 가 사용 된 XAML 이름 범위 속성 값 이어야 하는데 구현 하는 개체 <xref:System.Windows.Markup.INameScope> 실제 XAML 이름 범위 및 해당 동작을 보유 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-104">If <xref:System.Windows.Markup.NameScopePropertyAttribute> is used, the XAML namescope property value is expected to be an object that implements <xref:System.Windows.Markup.INameScope> and holds the actual XAML namescope and its behavior.</span></span>  
  
 <span data-ttu-id="02f49-105">이 특성에 대 한 두 가지: 속성 이름 또는 형식 및 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-105">There are two forms for this attribute: property name only, or type and property.</span></span> <span data-ttu-id="02f49-106">두 번째 형식은 XAML 이름 범위를 포함 하는 속성은 연결 가능한 멤버의 경우에만 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-106">The latter form should be used only for cases where the property that holds the XAML name scope is an attachable member.</span></span> <span data-ttu-id="02f49-107">연결 된 멤버 기법은 서비스 클래스가 여러 가지 개체 형식을 지원할 수 있는 XAML 이름 범위 개념을 구현할 수 있는 이점이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-107">The attached member technique has the advantage that service classes can implement a XAML namescope concept that can support several different object types.</span></span> <span data-ttu-id="02f49-108">이러한 개체 유형을 다음 필요가 없습니다 클래스 상속에 명시적으로 관련 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-108">Those object types then do not need to be explicitly related in class inheritance.</span></span>  
  
 <span data-ttu-id="02f49-109">.NET Framework의 이전 버전에서는이 클래스는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-109">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="02f49-110">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NameScopePropertyAttribute> System.Xaml 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-110">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NameScopePropertyAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="02f49-111">자세한 내용은 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="02f49-111">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="02f49-112">WPF 사용 정보</span><span class="sxs-lookup"><span data-stu-id="02f49-112">WPF Usage Notes</span></span>  
 <span data-ttu-id="02f49-113">WPF에서이 특성만 단일 형식에 적용 됩니다 <xref:System.Windows.DependencyObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-113">In WPF, this attribute is applied to only a single type, <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="02f49-114">이 경우 특성이 지정 된 속성은 서비스 클래스 <xref:System.Windows.NameScope> 고 <xref:System.Windows.NameScope.NameScope%2A?displayProperty=nameWithType> 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-114">In this case the attributed property is the service class <xref:System.Windows.NameScope> and its <xref:System.Windows.NameScope.NameScope%2A?displayProperty=nameWithType> attached property.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="02f49-115">사용자 지정 형식 및 라이브러리에 대 한 XAML 관련 CLR 특성</span><span class="sxs-lookup"><span data-stu-id="02f49-115">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="02f49-116">.NET Framework XAML 서비스에서 사용할 사용자 지정 형식 정의</span><span class="sxs-lookup"><span data-stu-id="02f49-116">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="02f49-117">NET XAML Services 개념 설명서</span><span class="sxs-lookup"><span data-stu-id="02f49-117">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02f49-118"><see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-118">Initializes a new instance of the <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScopePropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScopePropertyAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.NameScopePropertyAttribute : string -&gt; System.Windows.Markup.NameScopePropertyAttribute" Usage="new System.Windows.Markup.NameScopePropertyAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="02f49-119">XAML 이름 범위를 제공하는 특성 사용 형식에 대한 속성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-119">The name of the property on the attributed type that provides the XAML namescope.</span></span></param>
        <summary><span data-ttu-id="02f49-120">지정된 이름을 사용하여 <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-120">Initializes a new instance of the <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> class with the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScopePropertyAttribute (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScopePropertyAttribute(System::String ^ name, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.NameScopePropertyAttribute : string * Type -&gt; System.Windows.Markup.NameScopePropertyAttribute" Usage="new System.Windows.Markup.NameScopePropertyAttribute (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="02f49-121">XAML 이름 범위를 제공하는 연결 가능 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-121">The name of the attachable member that provides the XAML name scope.</span></span></param>
        <param name="type"><span data-ttu-id="02f49-122">XAML 이름 범위를 제공하는 연결 가능 멤버의 소유자 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-122">The owner type of the attachable member that provides the XAML name scope.</span></span></param>
        <summary><span data-ttu-id="02f49-123">지정된 이름 및 형식을 사용하여 <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-123">Initializes a new instance of the <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> class with the specified name and type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.NameScopePropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Markup.NameScopePropertyAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02f49-124">XAML 이름 범위를 제공하는 속성의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-124">Gets the name of the property that provides the XAML namescope.</span></span></summary>
        <value><span data-ttu-id="02f49-125">XAML 이름 범위를 제공하는 속성의 이름인 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-125">A string value that is the name of the property that provides the XAML namescope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02f49-126">의미 <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> 여부에 따라 달라 집니다 <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-126">The meaning of <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> depends on whether <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> is set.</span></span> <span data-ttu-id="02f49-127">하는 경우 <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> 이 null 이면 <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> 특성 사용 형식에 속성을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-127">If <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> is null, then <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> references a property on the type being attributed.</span></span> <span data-ttu-id="02f49-128">경우 <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> 한 다음 값을 포함 <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> 속성을 표시 된 참조 <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-128">If <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> contains a value, then <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> references a property on the indicated <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.NameScopePropertyAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Windows.Markup.NameScopePropertyAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02f49-129">XAML 이름 범위 지원을 제공하는 연결된 속성의 소유자 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-129">Gets the owner type of the attached property that provides the XAML namescope support.</span></span></summary>
        <value><span data-ttu-id="02f49-130">XAML 이름 범위 지원을 제공하는 연결된 속성의 소유자 형식인 <see cref="T:System.Type" /> 값이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-130">A <see cref="T:System.Type" /> value that is the owner type of the attached property that provides the XAML namescope support, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02f49-131">만이 속성은 관련이 XAML 이름 범위 구현 하는 속성이 연결 가능한 멤버 이면 경우에서 연결 가능 멤버의 소유자 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-131">This property only is relevant if the XAML namescope implementing property is an attachable member, in which case this is the attachable member's owner type.</span></span> <span data-ttu-id="02f49-132">그렇지 않은 경우이 값은 null 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-132">Otherwise, this value may be null.</span></span> <span data-ttu-id="02f49-133">네임 스페이스 속성의 정의 형식을 모든 경우에 보고 하는 일반적인 리플렉션 기반 논리가 필요한 경우 발생할 때마다 특성이 적용 되는 형식으로 대체할 수 있습니다 `null` 이 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="02f49-133">If you need general reflection-based logic that reports a namescope property's defining type in all cases, then you can substitute the type where the attribute is applied whenever you encounter `null` for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>