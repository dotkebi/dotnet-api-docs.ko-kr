<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="395e3f59debe7cfe65d0ae5bbe460b477e4d613b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57939529" /></Metadata><TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e743f-101">명명된 XAML 요소 및 이러한 요소에 이벤트 처리기를 연결하기 위한 태그 컴파일 및 도구 지원을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-101">Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e743f-102">이 인터페이스에서 내부적으로 사용 되어 <xref:System.Windows.Baml2006.Baml2006Reader>입니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-102">This interface is used internally by <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span>  
  
 <span data-ttu-id="e743f-103">구현의 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> 광범위 하 게 관찰 가능 개체 프레임 워크에서 제공 하는 인프라의 일부로 또는 애플리케이션 및 프로그래밍 모델을 사용 하 여 XAML을 사용 하는 기술을 결합 합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-103">Implementations of <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> are widely observable as part of the infrastructure provided by frameworks or technologies that use XAML combined with application and programming models.</span></span> <span data-ttu-id="e743f-104">예를 들어 WPF 페이지 및 애플리케이션에서 XAML 루트 요소에 대해 생성된 된 클래스를 살펴보면 때마다 나타납니다 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> 출력에 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-104">For example, whenever you look at the generated classes for XAML root elements in WPF pages and applications, you will see <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> defined in the output.</span></span> <span data-ttu-id="e743f-105">해당 메서드에 컴파일된 어셈블리에도 있고 XAML 구문 분석 시 XAML UI 콘텐츠를 로드 하는 WPF 애플리케이션 모델에서 역할을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-105">That method also exists in the compiled assembly and plays a role in the WPF application model of loading the XAML UI content at XAML parse time.</span></span> <span data-ttu-id="e743f-106">WPF 통합에 대 한 자세한 내용은 합니다 `InitializeComponent` 개념을 참조 하세요 [애플리케이션 관리 개요](~/docs/framework/wpf/app-development/application-management-overview.md) 또는 [코드 숨김 및 WPF에서 XAML](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-106">For more information on the WPF integration of the `InitializeComponent` concept, see [Application Management Overview](~/docs/framework/wpf/app-development/application-management-overview.md) or [Code-Behind and XAML in WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).</span></span>  
  
 <span data-ttu-id="e743f-107">.NET Framework의 이전 버전에서는이 인터페이스는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-107">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="e743f-108">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IComponentConnector> System.Xaml 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-108">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IComponentConnector> is in the System.Xaml assembly.</span></span> <span data-ttu-id="e743f-109">.</span><span class="sxs-lookup"><span data-stu-id="e743f-109">.</span></span> <span data-ttu-id="e743f-110">자세한 내용은 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e743f-110">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
> [!TIP]
>  <span data-ttu-id="e743f-111">오류를 해결 하려면 <xref:System.Windows.Markup.IComponentConnector> 빌드를 시도 하는 동안 경우가 WPF 프로젝트를 올바르게 업데이트 되지 한 표시기입니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-111">A failure to resolve <xref:System.Windows.Markup.IComponentConnector> during an attempted build is often an indicator that you have not updated your WPF project correctly.</span></span> <span data-ttu-id="e743f-112">프로젝트 대상으로 하는 프로젝트에 대 한 System.Xaml 어셈블리를 참조 하지 않는 특히 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-112">In particular, the project is not referencing the System.Xaml assembly for a project that targets [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="e743f-113">실행 된 `devenv /upgrade` 프로젝트에 대 한 옵션 또는 그렇지 않으면 System.Xaml가 참조 목록에 있도록 프로젝트 어셈블리 참조를 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-113">Try running the `devenv /upgrade` option for the project, or otherwise adjust the project assembly references so that System.Xaml is in the reference list.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="target" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionId"><span data-ttu-id="e743f-114">호출을 구분할 식별자 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-114">An identifier token to distinguish calls.</span></span></param>
        <param name="target"><span data-ttu-id="e743f-115">이벤트 및 이름을 연결할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-115">The target to connect events and names to.</span></span></param>
        <summary><span data-ttu-id="e743f-116">이벤트와 이름을 컴파일된 콘텐츠에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-116">Attaches events and names to compiled content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e743f-117"><xref:System.Windows.Markup.IComponentConnector> 내부적으로 사용 됩니다 <xref:System.Windows.Baml2006.Baml2006Reader>합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-117"><xref:System.Windows.Markup.IComponentConnector> is used internally by <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e743f-118">구성 요소의 컴파일된 페이지를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-118">Loads the compiled page of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e743f-119"><xref:System.Windows.Markup.IComponentConnector> 내부적으로 사용 됩니다 <xref:System.Windows.Baml2006.Baml2006Reader>합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-119"><xref:System.Windows.Markup.IComponentConnector> is used internally by <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span>  
  
 <span data-ttu-id="e743f-120">구현의 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> 광범위 하 게 관찰 가능 개체 프레임 워크에서 제공 하는 인프라의 일부로 또는 애플리케이션 및 프로그래밍 모델을 사용 하 여 XAML을 사용 하는 기술을 결합 합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-120">Implementations of <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> are widely observable as part of the infrastructure provided by frameworks or technologies that use XAML combined with application and programming models.</span></span> <span data-ttu-id="e743f-121">예를 들어 WPF 페이지 및 애플리케이션에서 XAML 루트 요소에 대해 생성된 된 클래스를 살펴보면 때마다 나타납니다 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> 출력에 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-121">For example, whenever you look at the generated classes for XAML root elements in WPF pages and applications, you will see <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> defined in the output.</span></span> <span data-ttu-id="e743f-122">해당 메서드에 컴파일된 어셈블리에도 있고 XAML 구문 분석 시 XAML UI 콘텐츠를 로드 하는 WPF 애플리케이션 모델에서 역할을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-122">That method also exists in the compiled assembly and plays a role in the WPF application model of loading the XAML UI content at XAML parse time.</span></span> <span data-ttu-id="e743f-123">WPF 통합에 대 한 자세한 내용은 합니다 `InitializeComponent` 개념을 참조 하세요 [애플리케이션 관리 개요](~/docs/framework/wpf/app-development/application-management-overview.md) 또는 [코드 숨김 및 WPF에서 XAML](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e743f-123">For more information on the WPF integration of the `InitializeComponent` concept, see [Application Management Overview](~/docs/framework/wpf/app-development/application-management-overview.md) or [Code-Behind and XAML in WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>