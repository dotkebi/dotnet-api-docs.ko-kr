<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8304293a4f3587ddb4a6d1d2c316286d66ba82d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57960628" /></Metadata><TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f7e5d-101">.NET Framework XAML 서비스 및 기타 XAML 판독기와 XAML 작성기에서 지원할 수 있는 XAML 태그 확장 구현에 대한 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-101">Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e5d-102">태그 확장의 문자열 특성 값 또는 XAML 태그 요소 입력에 따라 호출자에 게 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-102">Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</span></span> <span data-ttu-id="f7e5d-103">태그 확장 형식 변환기만 수행할 수 있는 보다 더 복잡 한 방식으로 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-103">Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</span></span> <span data-ttu-id="f7e5d-104">XAML 개체 작성기는 형식 또는 멤버에 연결 된 형식 변환기 구현이 있으므로 형식 변환기를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-104">A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</span></span> <span data-ttu-id="f7e5d-105">CLR 프레임의 참조에서 즉, 형식 또는 멤버 <xref:System.ComponentModel.TypeConverterAttribute> 특성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-105">From the CLR frame of reference, this means that a type or member is <xref:System.ComponentModel.TypeConverterAttribute> attributed.</span></span> <span data-ttu-id="f7e5d-106">XAML 형식 시스템의 관점에서 즉, XAML 형식 또는 XAML 멤버에 대 한 값에 해당 `TypeConverter` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-106">From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its `TypeConverter` property.</span></span> <span data-ttu-id="f7e5d-107">형식 변환기의 호출 또는 속성 형식 정의에 연결 되 고 항상 이러한 경우를 처리 하는 XAML에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-107">The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</span></span> <span data-ttu-id="f7e5d-108">반면, 태그 확장 사용자 코드와 사용자가 생성 한 태그의 제어 이며 응용 프로그램 시나리오를 요구할 때마다 적용 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-108">In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</span></span> <span data-ttu-id="f7e5d-109">태그 확장을 호출할 수 있으며으로 태그 확장의 반환 형식은 해당 값에 할당할 수 있는 다양 한 형식 멤버 값을 설정에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-109">A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</span></span>  
  
 <span data-ttu-id="f7e5d-110">사용자 지정 태그 확장을 만드는 방법에 대 한 정보를 참조 하세요. <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-110">For information on creating a custom markup extension, see <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span></span> <span data-ttu-id="f7e5d-111">태그 확장에에서 대 한 자세한 내용은 참조 하세요. [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-111">For more information on markup extensions in general, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span> <span data-ttu-id="f7e5d-112">WPF 사용 하거나 XAML에 대 한 태그 확장을 만들고에서 작성 하는 경우 항목의 기타 관련 정보를 찾을 수 있습니다 [태그 확장 및 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-112">If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="f7e5d-113">합니다 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 메서드가 각 태그 확장 구현에 사용할 수는 <xref:System.IServiceProvider> 컨텍스트를 제공할 수 있는 런타임 시.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-113">The <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of each markup extension implementation can use an <xref:System.IServiceProvider> at run time that can provide context.</span></span> <span data-ttu-id="f7e5d-114">이렇게 <xref:System.IServiceProvider> 와 같은 정보를 전달 하는 특정 서비스에 대해 다음 쿼리 <xref:System.Windows.Markup.IProvideValueTarget> 또는 <xref:System.Windows.Markup.IXamlTypeResolver>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-114">This  <xref:System.IServiceProvider> is then queried for specific services that pass information, such as <xref:System.Windows.Markup.IProvideValueTarget> or <xref:System.Windows.Markup.IXamlTypeResolver>.</span></span> <span data-ttu-id="f7e5d-115">태그 확장에 대 한 서비스 컨텍스트에 대 한 자세한 내용은 참조 하세요. [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-115">For more information on service contexts for a markup extension, see [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="f7e5d-116">파생된 클래스와 특성을 지정 해야 <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> 태그 확장에서 사용할 수 있는 가장 구체적인 반환 형식에 대 한 소비자 알림을 보내야 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-116">Derived classes should be attributed with <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> to inform consumers of the most specific return type available from the markup extension's <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="f7e5d-117">형식 변환기 또는 XAML 태그 확장명</span><span class="sxs-lookup"><span data-stu-id="f7e5d-117">Type Converters or Markup Extensions for XAML</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436"><span data-ttu-id="f7e5d-118">XAML 태그 확장명 개요</span><span class="sxs-lookup"><span data-stu-id="f7e5d-118">Markup Extensions for XAML Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7e5d-119"><see cref="T:System.Windows.Markup.MarkupExtension" />에서 파생된 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-119">Initializes a new instance of a class derived from <see cref="T:System.Windows.Markup.MarkupExtension" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e5d-120"><xref:System.Windows.Markup.MarkupExtension> 추상 클래스 초기화에 필요한 개인 값을 유지 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-120">The <xref:System.Windows.Markup.MarkupExtension> abstract class does not hold any private values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7e5d-121">기능 태그 확장을 자체 공용 기본 생성자를 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-121">A functional markup extension should define its own public default constructor.</span></span> <span data-ttu-id="f7e5d-122">또한 태그 확장은 확장의 의도 한 기능 및 태그 사용에 대 한 적절 한 생성자를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-122">Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage.</span></span> <span data-ttu-id="f7e5d-123">자세한 내용은 [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-123">For more information, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="f7e5d-124">태그 확장에 대한 서비스를 제공할 수 있는 서비스 공급자 도우미입니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-124">A service provider helper that can provide services for the markup extension.</span></span></param>
        <summary><span data-ttu-id="f7e5d-125">파생 클래스에서 구현된 경우 이 태그 확장의 대상 개체 속성에 대한 값으로 제공된 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-125">When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</span></span></summary>
        <returns><span data-ttu-id="f7e5d-126">확장이 적용되는 속성에 설정할 개체 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-126">The object value to set on the property where the extension is applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e5d-127">XAML 프로세서는 태그 확장 하는 형식 노드 및 멤버 값을 처리할 때 호출을 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 메서드는 태그 확장의 개체 그래프 또는 serialization 스트림에 결과 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-127">When a XAML processor processes a type node and member value that is a markup extension, it invokes the <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of that markup extension and writes the result into the object graph or serialization stream.</span></span> <span data-ttu-id="f7e5d-128">XAML 개체 작성기 서비스 컨텍스트를 통해 이러한 각 구현에 전달 된 `serviceProvider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-128">The XAML object writer passes service context to each such implementation through the `serviceProvider` parameter.</span></span>  
  
 <span data-ttu-id="f7e5d-129">구현 하는 방법에 대 한 자세한 내용은 "구현자 참고 사항" 섹션을 참조 하십시오 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 사용자 지정 태그 확장에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-129">See "Notes to Implementers" section for more information on how to implement <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in a custom markup extension.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="f7e5d-130">WPF 사용 정보</span><span class="sxs-lookup"><span data-stu-id="f7e5d-130">WPF Usage Notes</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f7e5d-131">가 태그 집합 작업을 사용 하 여 특정 상호 작용 하는 WPF 클래스에 의존 하지 않아야 <xref:System.Windows.Markup.IReceiveMarkupExtension> 에 대 한는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-131">WPF classes that have specific interactions with markup set operations should not rely on <xref:System.Windows.Markup.IReceiveMarkupExtension> for a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementation.</span></span> <span data-ttu-id="f7e5d-132">사용 하 여 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-콜백 특성을 대신 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-132">Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-attributed callbacks instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7e5d-133">일반적으로 기존 또는 사용자 지정에 사용할 수 있는 기본 서비스 공급자가 반환 하는 공통 서비스 <see cref="T:System.Windows.Markup.MarkupExtension" /> 구현을 다음 기본 서비스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-133">Common services returned by the default service provider that is typically available to a custom or existing <see cref="T:System.Windows.Markup.MarkupExtension" /> implementation include the following primary services.</span></span>  
  <span data-ttu-id="f7e5d-134">
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> 개체 참조와 속성 식별자 태그 확장 사용 되는 컨텍스트를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-134">
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> reports the object reference and a property identifier from the context where the markup extension is used</span></span> <span data-ttu-id="f7e5d-135">
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 일반 XAML 개체를 제공할 수 있는 동작을 쓰기 대응 하는 서비스를 노출 한 <see cref="T:System.Type" /> XAML 형식 이름을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-135">
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> exposes a service that parallels the general XAML object writing behavior that can provide a <see cref="T:System.Type" /> based on a XAML type name.</span></span> <span data-ttu-id="f7e5d-136">이름이 매핑된 XAML 네임 스페이스에 대 한 접두사를 선택적으로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-136">The name can optionally include a prefix for a mapped XAML namespace.</span></span>  
  <span data-ttu-id="f7e5d-137">
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> 활성 XAML 스키마 컨텍스트를 직접 노출합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-137">
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> exposes the active XAML schema context directly.</span></span> <span data-ttu-id="f7e5d-138">reported <see cref="T:System.Xaml.XamlSchemaContext" />, XAML 스키마 컨텍스트 정보 형식 지원, 어셈블리의 기본 접두사에 대 한 어셈블리를 매핑하는 방법과 나열 등 각를 가져올 수 있습니다 <see cref="T:System.Xaml.XamlType" /> 어셈블리 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-138">From the reported <see cref="T:System.Xaml.XamlSchemaContext" />, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <see cref="T:System.Xaml.XamlType" /> in an assembly, and so on.</span></span>  
  
<span data-ttu-id="f7e5d-139">-사용할 수 있는 보다 전문화 된 태그 확장 시나리오 다른 서비스는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-139">-   Other services available for more specialized markup extension scenarios include:</span></span> 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  
  
<span data-ttu-id="f7e5d-140">를 구현 <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> 무시할 수는 <paramref name="serviceProvider" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-140">Potentially, implementations of <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> can ignore the <paramref name="serviceProvider" /> parameter.</span></span> <span data-ttu-id="f7e5d-141">이 전혀 컨텍스트가 없는 값을 반환 하는 데 필요한 몇 가지 기본 시나리오, 가능한 경우</span><span class="sxs-lookup"><span data-stu-id="f7e5d-141">This is viable for some basic scenarios, where no context at all is required for returning a value.</span></span>  
  
<span data-ttu-id="f7e5d-142">일반적인 사용에서.NET Framework XAML 서비스 구현 된 XAML 개체 작성기는 XAML 하는 동안 호출 되는 모든 값 변환기 메서드를 서비스 공급자를 제공 하는 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-142">In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing.</span></span> <span data-ttu-id="f7e5d-143">그러나 견고성을 위해 제공 해야 코드 경로가 null 값에 대 한 자체 서비스 공급자와 요청된 된 서비스에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-143">However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service.</span></span> <span data-ttu-id="f7e5d-144">Null 값 발생할 수 있습니다는 상황에서 태그 확장이 적용 되 면 XAML 프로세서 인프라에서 제공 하는 일반적인 서비스 지원이 제공 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-144">Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.</span></span>  
  
<span data-ttu-id="f7e5d-145">XAML 서비스 공급자 컨텍스트를 사용 하는 방법을 사용할 수 있는 서비스에 대 한 자세한 내용은 참조 하세요. [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-145">For more information on available services from the XAML service provider context and how to use them, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span></span>  
  
<span data-ttu-id="f7e5d-146">특정 서비스를 위한 유용한 생성 하기 위해 사용할 수 필요로 하는 구현 <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> 결과 해당 서비스를 사용할 수 없는 경우 예외를 throw 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-146">Implementations that require a certain service to be available in order to produce a useful <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> result are expected to throw exceptions if that service is not available.</span></span> <span data-ttu-id="f7e5d-147">권장 되는 예외를 throw <see cref="T:System.InvalidOperationException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-147">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="f7e5d-148">구현 값이 null을 제공 하기 위해 사용자 지정 태그 확장에 필요한 인수 중 하나가 해당 데이터 형식에 대해 유효 하지 않거나 태그 확장에 처리 수 값이 들어 있지 않습니다 경우 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-148">The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing.</span></span> <span data-ttu-id="f7e5d-149">권장 되는 예외를 throw <see cref="T:System.InvalidOperationException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f7e5d-149">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span></para></block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="f7e5d-150">형식 변환기 또는 XAML 태그 확장명</span><span class="sxs-lookup"><span data-stu-id="f7e5d-150">Type Converters or Markup Extensions for XAML</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436"><span data-ttu-id="f7e5d-151">XAML 태그 확장명 개요</span><span class="sxs-lookup"><span data-stu-id="f7e5d-151">Markup Extensions for XAML Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>