<Type Name="DateTimeValueSerializer" FullName="System.Windows.Markup.DateTimeValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3879c2600fc78539ba3a48ea5ed7dffcf1a65c21" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57948269" /></Metadata><TypeSignature Language="C#" Value="public class DateTimeValueSerializer : System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimeValueSerializer extends System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DateTimeValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimeValueSerializer&#xA;Inherits ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeValueSerializer : System::Windows::Markup::ValueSerializer" />
  <TypeSignature Language="F#" Value="type DateTimeValueSerializer = class&#xA;    inherit ValueSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.ValueSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2fca7-101"><see cref="T:System.String" /> 인스턴스를 <see cref="T:System.DateTime" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-101">Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.DateTime" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fca7-102"><xref:System.Windows.Markup.ValueSerializer> 대신 <xref:System.ComponentModel.TypeConverter> 형식 변환에 추가 상태를 필요한 경우에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-102"><xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state.</span></span> <span data-ttu-id="2fca7-103"><xref:System.Windows.Markup.DateTimeValueSerializer> 형식으로 특성이 지정 되지 <xref:System.Windows.Markup.ValueSerializerAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-103"><xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="2fca7-104">왜냐하면 <xref:System.DateTime> mscorlib에 mscorlib 자체 정의 하지 않습니다는 특성 클래스에서 종속성을 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-104">This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself.</span></span> <span data-ttu-id="2fca7-105">대신, 사용 <xref:System.Windows.Markup.DateTimeValueSerializer> .NET Framework XAML 서비스 동작에서 XAML 프로세서 동작에 특별 하 게 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-105">Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.</span></span>  
  
 <span data-ttu-id="2fca7-106">.NET Framework의 이전 버전에서는이 클래스는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="2fca7-107">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> System.Xaml 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="2fca7-108">참조 [WPF에서 System.Xaml로 마이그레이션된 형식](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-108">See [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
    <altmember cref="T:System.DateTime" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2fca7-109"><see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-109">Initializes a new instance of the <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public override bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2fca7-110">변환을 위해 평가할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-110">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="2fca7-111">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-111">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="2fca7-112">지정된 <see cref="T:System.String" />이 <see cref="T:System.DateTime" />의 인스턴스로 변환될 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-112">Determines if the specified <see cref="T:System.String" /> can be convert to an instance of <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="2fca7-113">값을 변환할 수 있으면 <see langword="true" />이고, 변환할 수 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-113"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fca7-114">이 구현은 항상 `true`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-114">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public override bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2fca7-115">변환을 위해 평가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-115">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="2fca7-116">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-116">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="2fca7-117">지정한 개체를 <see cref="T:System.String" />으로 변환할 수 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-117">Determines if the specified object can be converted to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="2fca7-118"><paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-118"><see langword="true" /> if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fca7-119">이 구현은 `true` 경우에만 전달 된 `value` 유형의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-119">This implementation returns `true` only if the passed `value` is of type <xref:System.DateTime>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public override object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="dateTimeValueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2fca7-120"><see cref="T:System.DateTime" />으로 변환할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-120">The string to convert into a <see cref="T:System.DateTime" />.</span></span></param>
        <param name="context"><span data-ttu-id="2fca7-121">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-121">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="2fca7-122"><see cref="T:System.String" />을 <see cref="T:System.DateTime" />으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-122">Converts a <see cref="T:System.String" /> into a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="2fca7-123">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.DateTime" />의 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-123">A new instance of <see cref="T:System.DateTime" /> based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fca7-124">빈 문자열이 반환 <xref:System.DateTime.MinValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-124">An empty string returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2fca7-125">현재 구현에서 사용 <xref:System.DateTime.Parse%2A> 그리고 내부적으로 다음을 사용 하 여 <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-125">The current implementation uses <xref:System.DateTime.Parse%2A> internally, and also uses the following <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2fca7-126"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-126"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public override string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="dateTimeValueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2fca7-127">문자열로 변환할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-127">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="2fca7-128">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-128">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="2fca7-129"><see cref="T:System.DateTime" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-129">Converts an instance of <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="2fca7-130">지정된 <see cref="T:System.DateTime" />의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-130">A string representation of the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fca7-131">`context` 이 구현에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-131">`context` is not used by this implementation.</span></span>  
  
 <span data-ttu-id="2fca7-132">XAML 값 처리에 있는 날짜에 대 한 문자열 표현을 기반으로 합니다 `en-US` 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-132">String representations for dates as found in XAML value processing are based on the `en-US` culture.</span></span> <span data-ttu-id="2fca7-133">문화권 정보에 대 한 처리 하는 XAML 컴파일 시간과 런타임 실행 단계 간에 개념적으로 분할 되 고 전체 알려진된 문자열 표현을 사용 해야 합니다 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-133">This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout.</span></span> <span data-ttu-id="2fca7-134">자세한 내용은 [WPF 전역화 및 지역화 개요](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-134">For more information, see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).</span></span>  
  
 <span data-ttu-id="2fca7-135">현재 구현 여부에 따라 조정 되는 형식 문자열을 사용 하 여 제공 된 측면 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-135">The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values.</span></span> <span data-ttu-id="2fca7-136">예를 들어의 값이 없는 경우 <xref:System.TimeSpan.TotalSeconds%2A>, 형식 문자열은 형식에서 `yyyy-MM-dd` 자세한 시간 구성 요소에 대 한 값 0 개 작성 하는 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="2fca7-136">For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2fca7-137"><paramref name="value" />가 <see cref="T:System.DateTime" />이 아니거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2fca7-137"><paramref name="value" /> is not a <see cref="T:System.DateTime" /> or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>