<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae931c958dae3132cfa810019a63792586fde5dd" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58696532" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9fa07-101"><see cref="T:System.Xml.XmlReader" /> 메서드를 사용하여 만든 <see cref="Overload:System.Xml.XmlReader.Create" /> 개체에서 지원할 기능 집합을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlReader" /> object created by the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-102">사용 된 <xref:System.Xml.XmlReader.Create%2A> 얻는 메서드를 <xref:System.Xml.XmlReader> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="9fa07-102">You use the <xref:System.Xml.XmlReader.Create%2A> method to obtain <xref:System.Xml.XmlReader> instances.</span></span> <span data-ttu-id="9fa07-103">이 메서드를 사용 합니다 <xref:System.Xml.XmlReaderSettings> 클래스에서 구현 하는 기능을 지정 하려면를 <xref:System.Xml.XmlReader> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-103">This method uses the <xref:System.Xml.XmlReaderSettings> class to specify which features to implement in the <xref:System.Xml.XmlReader> object it creates.</span></span>  
  
 <span data-ttu-id="9fa07-104">설명 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 고 <xref:System.Xml.XmlReader.Create%2A> 규칙 검사, 유효성 검사 및 기타 일반적인 시나리오에 사용 하는 설정에 대 한 정보에 대 한 페이지를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-104">See the Remarks sections of the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlReader.Create%2A> reference pages for information about which settings to use for conformance checks, validation, and other common scenarios.</span></span> <span data-ttu-id="9fa07-105">참조 된 <xref:System.Xml.XmlReaderSettings.%23ctor> 기본 설정 목록에 대 한 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-105">See the <xref:System.Xml.XmlReaderSettings.%23ctor> constructor for a list of default settings.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9fa07-106">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="9fa07-106">Security considerations</span></span>  
 <span data-ttu-id="9fa07-107">사용 하는 경우 다음 사항을 고려 합니다 <xref:System.Xml.XmlReaderSettings> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-107">Consider the following when using the <xref:System.Xml.XmlReaderSettings> class.</span></span>  
  
-   <span data-ttu-id="9fa07-108"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 개체의 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 및 <xref:System.Xml.XmlReaderSettings> 유효성 검사 플래그는 기본적으로 설정되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-108">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="9fa07-109">이 플래그를 설정하면 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 개체의 <xref:System.Xml.XmlReaderSettings>를 사용하여 <xref:System.Xml.XmlReader>에서 인스턴스 문서에 나타난 스키마 위치를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-109">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="9fa07-110">경우는 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 개체가 `null`, 스키마 위치는 확인 되지 않습니다 경우에 합니다 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 및 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 유효성 검사 플래그를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-110">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
  
-   <span data-ttu-id="9fa07-111">문서의 유효성을 검사하는 동안 스키마를 추가하면 새 형식이 추가되고 해당 문서에 대한 유효성 검사 결과가 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-111">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="9fa07-112">결과적으로 외부 스키마는 신뢰할 수 있는 소스에서만 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-112">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
-   <span data-ttu-id="9fa07-113">유효성 검사 오류 메시지는 중요 한 콘텐츠 모델 정보를 노출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-113">Validation error messages may expose sensitive content model information.</span></span> <span data-ttu-id="9fa07-114">유효성 검사 오류 및 경고 메시지를 사용 하 여 처리 됩니다는 <xref:System.Xml.Schema.ValidationEventHandler> 대리자 또는으로 노출 됩니다는 <xref:System.Xml.Schema.XmlSchemaValidationException> 이벤트 처리기가 제공 되는 경우를 <xref:System.Xml.XmlReaderSettings> 개체 (유효성 검사 경고 발생 하지 않습니다는 <xref:System.Xml.Schema.XmlSchemaValidationException> 를 throw).</span><span class="sxs-lookup"><span data-stu-id="9fa07-114">Validation error and warning messages are handled using the <xref:System.Xml.Schema.ValidationEventHandler> delegate, or are exposed as an <xref:System.Xml.Schema.XmlSchemaValidationException> if no event handler is provided to the <xref:System.Xml.XmlReaderSettings> object (validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span> <span data-ttu-id="9fa07-115">신뢰할 수 없는 시나리오에서이 콘텐츠 모델 정보를 노출 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-115">This content model information should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="9fa07-116">유효성 검사 경고 메시지는 기본적으로 표시 되지 않습니다 하 고 설정 하 여 보고 될 수는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-116">Validation warning messages are suppressed by default and can be reported by setting the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.</span></span>  
  
-   <span data-ttu-id="9fa07-117">합니다 <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 의 속성을 <xref:System.Xml.Schema.XmlSchemaValidationException> 예외를 발생 시킨 스키마 파일의 URI 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-117">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidationException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="9fa07-118"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 속성 신뢰할 수 없는 시나리오에서 노출 되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-118">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span>  
  
-   <span data-ttu-id="9fa07-119">사용 하지 않도록 설정 된 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 유효성 검사, 신뢰할 수 없는 큰 XML 문서의 많은 부분을 통해 id 제약 조건이 있는 스키마에 대해 가용성 우선 시나리오에서 설명 하는 경우 (기본적으로 사용) 플래그는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-119">Disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (enabled by default) is recommended when validating, untrusted, large XML documents in high availability scenarios against a schema with identity constraints over a large part of the document.</span></span>  
  
-   <span data-ttu-id="9fa07-120"><xref:System.Xml.XmlReaderSettings> 개체에는 사용자 자격 증명과 같은 중요한 정보가 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-120"><xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="9fa07-121"><xref:System.Xml.XmlReaderSettings> 개체를 캐시하거나 한 구성 요소에서 다른 구성 요소로 <xref:System.Xml.XmlReaderSettings> 개체를 전송할 때는 주의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-121">You should be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
  
-   <span data-ttu-id="9fa07-122">DTD 처리는 기본적으로 비활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-122">DTD processing is disabled by default.</span></span> <span data-ttu-id="9fa07-123">DTD 처리를 사용 하는 경우 가능한 서비스 거부 공격 및 신뢰할 수 없는 소스에서 Dtd를 포함 하 여 주의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-123">If you enable DTD processing, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</span></span> <span data-ttu-id="9fa07-124">사용 하 여는 <xref:System.Xml.XmlSecureResolver> 리소스를 제한 하는 <xref:System.Xml.XmlReader> 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-124">Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span>  
  
-   <span data-ttu-id="9fa07-125">신뢰할 수 없는 소스로부터 <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager> 및 <xref:System.Xml.XmlResolver> 개체 등의 지원 구성 요소를 받지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="9fa07-125">Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source.</span></span>  
  
-   <span data-ttu-id="9fa07-126"><xref:System.Xml.XmlReader>를 사용하는 응용 프로그램의 메모리 사용은 구문 분석된 XML 문서 크기와 상관 관계가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-126">Memory usage of an application that uses <xref:System.Xml.XmlReader> may have a correlation to the size of the parsed XML document.</span></span> <span data-ttu-id="9fa07-127">서비스 거부 공격의 한 예는 구문 분석하기에는 너무 큰 XML 문서를 제출하는 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-127">One form of denial of service attack is when excessively large XML documents are submitted to be parsed.</span></span> <span data-ttu-id="9fa07-128">설정 하 여 구문 분석할 수 있는 문서의 크기를 제한할 수는 <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> 속성을 설정 하 여 확장명 엔터티의 결과인 문자 수를 제한 한 다음는 <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-128">You can limit the size of the document that can be parsed by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property and then limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-129">다음 예제에서는 <xref:System.Xml.XmlReader> 를 사용 하는 <xref:System.Xml.XmlUrlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-129">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlUrlResolver> with the necessary credentials.</span></span>  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="9fa07-130">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="9fa07-130">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9fa07-131"><see cref="T:System.Xml.XmlReaderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-131">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fa07-132"><see cref="T:System.Xml.XmlReaderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-132">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-133">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Xml.XmlReaderSettings>합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-133">The following table shows initial property values for an instance of <xref:System.Xml.XmlReaderSettings>.</span></span>  
  
|<span data-ttu-id="9fa07-134">속성</span><span class="sxs-lookup"><span data-stu-id="9fa07-134">Property</span></span>|<span data-ttu-id="9fa07-135">초기 값</span><span class="sxs-lookup"><span data-stu-id="9fa07-135">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|<span data-ttu-id="9fa07-136">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-136">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|<span data-ttu-id="9fa07-137">`true`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-137">`true`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<span data-ttu-id="9fa07-138"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="9fa07-138"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|<span data-ttu-id="9fa07-139">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-139">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|<span data-ttu-id="9fa07-140">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-140">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|<span data-ttu-id="9fa07-141">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-141">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="9fa07-142">0.</span><span class="sxs-lookup"><span data-stu-id="9fa07-142">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="9fa07-143">0.</span><span class="sxs-lookup"><span data-stu-id="9fa07-143">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|<span data-ttu-id="9fa07-144">0 (확장명 엔터티의 결과인 문자 수를 제한 하지 않습니다).</span><span class="sxs-lookup"><span data-stu-id="9fa07-144">0 (there is no limit on the number of characters that result from expanding entities).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|<span data-ttu-id="9fa07-145">0 (무제한 XML 문서의 크기에).</span><span class="sxs-lookup"><span data-stu-id="9fa07-145">0 (there is no limit on the size of the XML document).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|<span data-ttu-id="9fa07-146">`null`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-146">`null`.</span></span>|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|<span data-ttu-id="9fa07-147">`true`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-147">`true`.</span></span> <span data-ttu-id="9fa07-148">이 속성은 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-148">This property is obsolete.</span></span> <span data-ttu-id="9fa07-149">대신 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="9fa07-149">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="9fa07-150">사용자가 설정한 경우 <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> 기본값으로 `true` 설정 <xref:System.Xml.XmlTextReader.DtdProcessing%2A> 하려면 `Prohibit`합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-150">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="9fa07-151">사용자가 설정한 경우 <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> 하 `false` 설정 <xref:System.Xml.XmlTextReader.DtdProcessing%2A> 에 `Parse`입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-151">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="9fa07-152">빈 <xref:System.Xml.Schema.XmlSchemaSet> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-152">An empty <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="9fa07-153"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span><span class="sxs-lookup"><span data-stu-id="9fa07-153"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<span data-ttu-id="9fa07-154"><xref:System.Xml.ValidationType.None>.</span><span class="sxs-lookup"><span data-stu-id="9fa07-154"><xref:System.Xml.ValidationType.None>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="9fa07-155">새 <xref:System.Xml.XmlUrlResolver> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-155">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-156">다음 처리 지침, 주석 및 불필요 한 공백을 제거 하는 판독기를 만드는 데 사용할 수 있는 설정 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-156">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver"><span data-ttu-id="9fa07-157">XML 확인자입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-157">The XML resolver.</span></span></param>
        <summary><span data-ttu-id="9fa07-158"><see cref="T:System.Xml.XmlReaderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-158">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-159">비동기 <see cref="T:System.Xml.XmlReader" /> 메서드를 특정 <see cref="T:System.Xml.XmlReader" /> 인스턴스에서 사용할 수 있는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-159">Gets or sets whether asynchronous <see cref="T:System.Xml.XmlReader" /> methods can be used on a particular <see cref="T:System.Xml.XmlReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="9fa07-160">비동기 메서드를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-160"><see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-161">이 값을 설정 해야 합니다 `true` 만들면 새 <xref:System.Xml.XmlReader> 하려는 경우 사용 하 여 비동기 인스턴스 <xref:System.Xml.XmlReader> 해당 인스턴스에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="9fa07-161">You must set this value to `true` when you create a new <xref:System.Xml.XmlReader> instance if you want to use asynchronous <xref:System.Xml.XmlReader> methods on that instance.</span></span> <span data-ttu-id="9fa07-162">후 합니다 <xref:System.Xml.XmlReader> 만들어지면이 인스턴스는 <xref:System.Xml.XmlReaderSettings.Async%2A> 속성은 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-162">After the <xref:System.Xml.XmlReader> instance is created, the <xref:System.Xml.XmlReaderSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="9fa07-163">이 속성의 기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-163">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="9fa07-164">이 플래그는 무시 합니다 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-164">This flag is ignored by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="9fa07-165">즉, 새로 만든 경우 <xref:System.Xml.XmlReader> 기존 기반으로 <xref:System.Xml.XmlReader>, 비동기 동작 입력에 따라 달라 집니다 <xref:System.Xml.XmlReader>를 사용할 수 없습니다는 <xref:System.Xml.XmlReaderSettings.Async%2A> 비동기 동작을 변경 하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-165">This means that if you create a new <xref:System.Xml.XmlReader> based on an existing <xref:System.Xml.XmlReader>, the async behavior depends on the input <xref:System.Xml.XmlReader>, and you cannot use the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="9fa07-166">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9fa07-166">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-167">문자 검사를 수행할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-167">Gets or sets a value indicating whether to do character checking.</span></span></summary>
        <value><span data-ttu-id="9fa07-168">문자 검사를 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-168"><see langword="true" /> to do character checking; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9fa07-169">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-169">The default is <see langword="true" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="9fa07-170">텍스트 데이터를 처리할 경우 <see cref="T:System.Xml.XmlReader" />는 이 속성의 설정에 상관없이 XML 이름 및 텍스트 콘텐츠의 유효성을 항상 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-170">If the <see cref="T:System.Xml.XmlReader" /> is processing text data, it always checks that the XML names and text content are valid, regardless of the property setting.</span></span> <span data-ttu-id="9fa07-171"><see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" />를 <see langword="false" />로 설정하면 문자 엔터티 참조에 대해 문자 검사가 수행되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-171">Setting <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> to <see langword="false" /> turns off character checking for character entity references.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-172">이 속성은 읽고 고 throw 된 XML 데이터에는 문자를 확인 하는 데 사용할 XML 판독기를 지시는 <xref:System.Xml.XmlException> 문자가 유효한 XML 문자 범위를 벗어난 경우.</span><span class="sxs-lookup"><span data-stu-id="9fa07-172">This property instructs the XML reader to check characters in the XML data it's reading and throw an <xref:System.Xml.XmlException> if any characters are outside the range of legal XML characters.</span></span> <span data-ttu-id="9fa07-173">문자 검사 기능을 사용하면 다음 사항을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-173">When character checking is enabled, you are ensured the following:</span></span>  
  
-   <span data-ttu-id="9fa07-174">정의 된 대로 유효한 XML 문자 범위 내에 문자를 [2.2 문자](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) W3C XML 1.0 Recommendation의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-174">Characters are within the range of legal XML characters, as defined by the [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.</span></span>  
  
-   <span data-ttu-id="9fa07-175">모든 XML 이름이 유효 하 여 정의 된 대로 합니다 [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) W3C XML 1.0 Recommendation의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-175">All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.</span></span>  
  
 <span data-ttu-id="9fa07-176">이 속성 설정 된 경우 `true`, 기본 설정 되는 <xref:System.Xml.XmlException> XML 파일에 잘못 된 문자 또는 잘못 된 XML 이름을 포함 하는 경우 예외가 throw 됩니다 (예를 들어 요소 이름이 숫자로 시작할).</span><span class="sxs-lookup"><span data-stu-id="9fa07-176">When this property is set to `true`, which is the default setting, an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fa07-177"><see cref="T:System.Xml.XmlReaderSettings" /> 인스턴스의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-177">Creates a copy of the <see cref="T:System.Xml.XmlReaderSettings" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9fa07-178">복제된 <see cref="T:System.Xml.XmlReaderSettings" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-178">The cloned <see cref="T:System.Xml.XmlReaderSettings" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-179">복제 된 <xref:System.Xml.XmlReaderSettings> 설정을 원래 개체에 영향을 주지 않고 개체를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-179">The cloned <xref:System.Xml.XmlReaderSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-180">판독기를 닫을 때 내부 스트림 또는 <see cref="T:System.IO.TextReader" />를 함께 닫을지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-180">Gets or sets a value indicating whether the underlying stream or <see cref="T:System.IO.TextReader" /> should be closed when the reader is closed.</span></span></summary>
        <value><span data-ttu-id="9fa07-181">판독기를 닫을 때 내부 스트림 또는 <see cref="T:System.IO.TextReader" />를 함께 닫으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-181"><see langword="true" /> to close the underlying stream or <see cref="T:System.IO.TextReader" /> when the reader is closed; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9fa07-182">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-182">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-183">이 설정은 때 스트림을 사용 됩니다 또는 <xref:System.IO.TextReader> 에 전달 되는 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9fa07-183">This setting is used when a stream or <xref:System.IO.TextReader> is passed to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="9fa07-184">경우 스트림 판독기가 만들어지면 URI 또는 외부 문서 유형 정의 열 때 항상 닫혀 판독기가 닫힐 때와 같은 자체 처리에 대 한 판독기에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-184">If a stream is created by the reader for its own processing, such as when the reader is created with a URI or when it opens an external document type definition, it is always closed when the reader is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-185"><see cref="T:System.Xml.XmlReader" />에 적용할 규칙 수준을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-185">Gets or sets the level of conformance which the <see cref="T:System.Xml.XmlReader" /> will comply.</span></span></summary>
        <value><span data-ttu-id="9fa07-186">XML 판독기를 적용할 규칙 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-186">One of the enumeration values that specifies the level of conformance that the XML reader will enforce.</span></span> <span data-ttu-id="9fa07-187">기본값은 <see cref="F:System.Xml.ConformanceLevel.Document" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-187">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-188">만든 XML 판독기를 <xref:System.Xml.XmlReader.Create%2A> 메서드는 기본적으로 다음 규정 준수 요구 사항을 충족 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-188">XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> method meet the following compliance requirements by default:</span></span>  
  
-   <span data-ttu-id="9fa07-189">새 줄 및 특성 값은 W3C에 따라 정규화 됩니다 [XML 1.0 권장 사항](https://www.w3.org/TR/2006/REC-xml-20060816/)합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-189">New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span>  
  
-   <span data-ttu-id="9fa07-190">모든 엔터티가 자동으로 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-190">All entities are automatically expanded.</span></span>  
  
-   <span data-ttu-id="9fa07-191">문서 종류 정의에서 선언 된 기본 특성 판독기 유효성을 검사 하지 않는 경우에 항상 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-191">Default attributes declared in the document type definition are always added even when the reader does not validate.</span></span>  
  
-   <span data-ttu-id="9fa07-192">올바른 XML 네임 스페이스 URI에 매핑되는 XML 접두사는 선언 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-192">Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</span></span>  
  
-   <span data-ttu-id="9fa07-193">표기법 이름을 단일에서 `NotationType` 특성 선언 하 고 `NmTokens` 단일에서 `Enumeration` 특성 선언에는 서로 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-193">The notation names in a single `NotationType` attribute declaration and `NmTokens` in a single `Enumeration` attribute declaration are distinct.</span></span>  
  
 <span data-ttu-id="9fa07-194">사용할 수는 <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 속성을 확인 하 고 읽는 중인 스트림이 올바른 형식의 XML 1.0 문서 또는 문서 조각에 대 한 규칙을 준수를 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-194">You can use the <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property to check and guarantee that the stream being read complies with the rules for a well-formed XML 1.0 document or document fragment.</span></span> <span data-ttu-id="9fa07-195">데이터를 준수 하지 않는 경우는 <xref:System.Xml.XmlException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-195">If the data doesn't comply, an <xref:System.Xml.XmlException> exception is thrown.</span></span> <span data-ttu-id="9fa07-196">기본값은 <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (문서 수준 규칙).</span><span class="sxs-lookup"><span data-stu-id="9fa07-196">The default is <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance).</span></span>  
  
 <span data-ttu-id="9fa07-197">세 가지 규칙 수준은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-197">The three conformance levels are:</span></span>  
  
|<span data-ttu-id="9fa07-198">설정</span><span class="sxs-lookup"><span data-stu-id="9fa07-198">Setting</span></span>|<span data-ttu-id="9fa07-199">설명</span><span class="sxs-lookup"><span data-stu-id="9fa07-199">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="9fa07-200">XML 데이터를 올바른 형식의 XML 1.0 문서에 대 한 규칙을 준수 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-200">Ensures that the XML data conforms to the rules for a well-formed XML 1.0 document.</span></span> <span data-ttu-id="9fa07-201">이 검사 수준은 프로세서로 읽히는 스트림을 사용할 수는 보장을 [올바른 형식의 XML 1.0 문서](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-201">This level of checking ensures that any processor can consume the stream being read as an [well-formed XML 1.0 document](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).</span></span><br /><br /> <span data-ttu-id="9fa07-202">판독기는 다음을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-202">The reader checks for the following:</span></span><br /><br /> <span data-ttu-id="9fa07-203">-최상위 항목에는 XML 선언, 문서 형식 정의 (DTD), 요소, 주석, 공백 또는 처리 명령 이외의 다른 노드가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-203">-   The top-level item must not have any nodes other than XML Declaration, document type definition (DTD), element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="9fa07-204">-XML 데이터에는 정확히 하나의 최상위 요소 노드가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-204">-   The XML data must have exactly one top-level element node.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="9fa07-205">XML 데이터는 올바른 형식의 XML 1.0 문서 조각에 대 한 규칙을 준수 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-205">Ensures that the XML data conforms to the rules for a well-formed XML 1.0 document fragment.</span></span><br /><br /> <span data-ttu-id="9fa07-206">이 설정은 여러 개의 루트 요소가 있는 XML 데이터나 최상위의 텍스트 노드를 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-206">This setting accepts XML data with multiple root elements, or text nodes at the top-level.</span></span> <span data-ttu-id="9fa07-207">이 검사 수준은 프로세서로 읽히는 스트림을 사용할 수는 보장을 [외부 엔터티를 구문 분석](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-207">This level of checking ensures that any processor can consume the stream being read as an [external parsed entity](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="9fa07-208">판독기는 수준의 규칙 검사 들어오는 데이터를 기반으로 하는지 확인 하도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-208">Specifies that the reader should determine the level of conformance checking based on the incoming data.</span></span><br /><br /> <span data-ttu-id="9fa07-209">XML 데이터가 DTD 정보를 포함하는 경우 문서 규칙 검사가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-209">Document conformance checking is applied if the XML data contains DTD information.</span></span><br /><br /> <span data-ttu-id="9fa07-210">XML 데이터가 다음 중 하나를 포함하는 경우 조각 규칙 검사가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-210">Fragment conformance checking is applied if the XML data contains one of following:</span></span><br /><br /> <span data-ttu-id="9fa07-211">루트 수준에서 텍스트, CDATA 또는 엔터티 참조 노드.</span><span class="sxs-lookup"><span data-stu-id="9fa07-211">-   Text, CDATA, or entity reference node at the root level.</span></span><br /><span data-ttu-id="9fa07-212">-루트 수준에서 둘 이상의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-212">-   More than one element at the root level.</span></span><br /><span data-ttu-id="9fa07-213">-루트 수준 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-213">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="9fa07-214">루트 수준에 텍스트 노드 및 DTD가 있는 경우와 같이 충돌이 있을 경우 <xref:System.Xml.XmlException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-214">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when there is a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="9fa07-215"><xref:System.Xml.XmlReader.Create%2A> 메서드를 사용하여 기존 <xref:System.Xml.XmlReader>에 기능을 추가할 때 래핑 시나리오에서 이 설정을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-215">This setting can be used in wrapping scenarios when the <xref:System.Xml.XmlReader.Create%2A> method is used to add additional features to an existing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="9fa07-216">이 경우 <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> 새 규칙 검사를 추가 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-216">In this case, <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> does not add any new conformance checking.</span></span> <span data-ttu-id="9fa07-217">규칙 검사는 래핑 중인 <xref:System.Xml.XmlReader>에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-217">Conformance checking is left to the <xref:System.Xml.XmlReader> that is being wrapped.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="9fa07-218">DTD가 있을 경우 XML 1.0 권장 사항에서는 문서 수준 규칙을 요구합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-218">The XML 1.0 recommendation requires document-level conformance when a DTD is present.</span></span> <span data-ttu-id="9fa07-219">따라서 판독기 지원 하도록 구성 된 경우 <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, 문서 형식 정의 (DTD)를 포함 하는 XML 데이터는 <xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-219">Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.</span></span>  
  
 <span data-ttu-id="9fa07-220">판독기 설정에 따라 특정 규칙 위반을 처리 하는 방법을 다음과 같습니다는 <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 속성:</span><span class="sxs-lookup"><span data-stu-id="9fa07-220">Here's how the reader handles specific conformance violations depending on the setting of the <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property:</span></span>  
  
|<span data-ttu-id="9fa07-221">조건</span><span class="sxs-lookup"><span data-stu-id="9fa07-221">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="9fa07-222">텍스트 또는 형식화 된 값에는 최상위 수준에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-222">Text or a typed value appears at the top level.</span></span>|<span data-ttu-id="9fa07-223"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-223"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-224">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-224">Not considered a violation for this setting.</span></span>|<span data-ttu-id="9fa07-225">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-225">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="9fa07-226">요소가 여러 개이거나 없는 최상위 수준에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-226">Multiple elements or no element appear at the top level.</span></span>|<span data-ttu-id="9fa07-227"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-227"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-228">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-228">Not considered a violation for this setting.</span></span>|<span data-ttu-id="9fa07-229">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-229">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="9fa07-230">최상위 항목은 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-230">Top-level item is white space.</span></span>|<span data-ttu-id="9fa07-231">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-231">Not considered a violation for this setting.</span></span>|<span data-ttu-id="9fa07-232">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-232">Not considered a violation for this setting.</span></span>|<span data-ttu-id="9fa07-233">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-233">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="9fa07-234">최상위 항목에는 특성 (텍스트 노드로 인식)입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-234">Top-level item is an attribute (recognized as a text node).</span></span>|<span data-ttu-id="9fa07-235"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-235"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-236">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-236">Not considered a violation for this setting.</span></span>|<span data-ttu-id="9fa07-237">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-237">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="9fa07-238">인접한 텍스트 노드가 여러 개 있을 경우</span><span class="sxs-lookup"><span data-stu-id="9fa07-238">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="9fa07-239">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-239">Not considered a violation for this setting.</span></span>|<span data-ttu-id="9fa07-240">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-240">Not considered a violation for this setting.</span></span>|<span data-ttu-id="9fa07-241">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-241">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="9fa07-242">동일한 네임 스페이스 접두사는 동일한 로컬 범위에서 두 번 선언 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-242">The same namespace prefix is declared twice in the same local scope.</span></span>|<span data-ttu-id="9fa07-243"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-243"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-244"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-244"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-245"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-245"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="9fa07-246">요소나 특성의 네임 스페이스는 로컬 범위에 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-246">The namespace in an element or attribute doesn't exist in the local scope.</span></span>|<span data-ttu-id="9fa07-247"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-247"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-248"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-248"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-249"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-249"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="9fa07-250">데이터는 네임 스페이스 접두사 일치를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-250">Data contains a prefix-namespace mismatch.</span></span>|<span data-ttu-id="9fa07-251"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-251"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-252"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-252"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-253"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-253"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="9fa07-254">`xml:space` 특성에 잘못 된 값을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-254">`xml:space` attribute contains an invalid value.</span></span>|<span data-ttu-id="9fa07-255"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-255"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-256"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-256"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-257"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-257"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="9fa07-258">잘못된 이름이 발견된 경우</span><span class="sxs-lookup"><span data-stu-id="9fa07-258">An invalid name is encountered.</span></span>|<span data-ttu-id="9fa07-259"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-259"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-260"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-260"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-261"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-261"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="9fa07-262">합니다 `xml` 접두사를 일치 하지 않습니다는 http://www.w3.org/XML/1998/namespace URI입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-262">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="9fa07-263"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-263"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-264"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-264"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="9fa07-265"><xref:System.Xml.XmlException> 이 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-265"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-266">다음 예제에서는 <xref:System.Xml.XmlReader> XML 조각을 읽는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-266">The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.</span></span>  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-267">DTD 처리를 결정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-267">Gets or sets a value that determines the processing of DTDs.</span></span></summary>
        <value><span data-ttu-id="9fa07-268">DTD 처리를 결정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-268">One of the enumeration values that determines the processing of DTDs.</span></span> <span data-ttu-id="9fa07-269">기본값은 <see cref="F:System.Xml.DtdProcessing.Prohibit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-269">The default is <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-270">문서 유형 정의 (DTD) 유효성 검사는 W3C에서 정의 된 유효성 제약 조건을 사용 하 여 구현 됩니다 [Extensible Markup Language (XML) 1.0 (1.0(fourth edition) 권장 사항](https://www.w3.org/TR/2006/REC-xml-20060816/)합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-270">Document type definition (DTD) validation is implemented by using the validity constraints defined in the W3C [Extensible Markup Language (XML) 1.0 (fourth edition) recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="9fa07-271">Dtd에서는 정식 문법을 사용 하 여 구조체와 호환 XML 문서 구문 설명 콘텐츠 및 XML 문서에 대 한 허용 값을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-271">DTDs use a formal grammar to describe the structure and syntax of compliant XML documents; they specify the content and values allowed for the XML document.</span></span>  
  
 <span data-ttu-id="9fa07-272">이 속성은 다음 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-272">This property can have one of the following values:</span></span>  
  
-   <span data-ttu-id="9fa07-273"><xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> DTD를 처리할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-273"><xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> to enable DTD processing.</span></span>  
  
-   <span data-ttu-id="9fa07-274"><xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> throw 하는 <xref:System.Xml.XmlException> DTD가 발견 하는 동안 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-274"><xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> to throw an <xref:System.Xml.XmlException> exception when a DTD is encountered.</span></span>  
  
-   <span data-ttu-id="9fa07-275"><xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> 경고 또는 예외 없이 처리 하는 DTD를 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-275"><xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> to disable DTD processing without warnings or exceptions.</span></span>  
  
 <span data-ttu-id="9fa07-276">DTD에 대한 유효성 검사를 수행하기 위해 <xref:System.Xml.XmlReader>에서는 XML 문서의 DOCTYPE 선언에 정의된 DTD를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-276">To perform validation against a DTD, the <xref:System.Xml.XmlReader> uses the DTD defined in the DOCTYPE declaration of an XML document.</span></span> <span data-ttu-id="9fa07-277">DOCTYPE 선언은 인라인 DTD를 가리키거나 외부 DTD 파일에 대한 참조가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-277">The DOCTYPE declaration can either point to an inline DTD or can be a reference to an external DTD file.</span></span> <span data-ttu-id="9fa07-278">DTD에 대 한 XML 파일 유효성을 검사 하려면:</span><span class="sxs-lookup"><span data-stu-id="9fa07-278">To validate an XML file against a DTD:</span></span>  
  
-   <span data-ttu-id="9fa07-279"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> 속성을 `DtdProcessing.Parse.`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-279">Set the <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> property to `DtdProcessing.Parse.`</span></span>  
  
-   <span data-ttu-id="9fa07-280"><xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> 속성을 `ValidationType.DTD`으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-280">Set the <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> property to `ValidationType.DTD`.</span></span>  
  
-   <span data-ttu-id="9fa07-281">DTD가 인증이 필요한 네트워크 리소스에 저장된 외부 파일인 경우 필요한 자격 증명과 함께 <xref:System.Xml.XmlResolver> 개체를 <xref:System.Xml.XmlReader.Create%2A> 메서드에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-281">If the DTD is an external file stored on a network resource that requires authentication, pass an <xref:System.Xml.XmlResolver> object with the necessary credentials to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9fa07-282">경우는 <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 속성이 <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>는 <xref:System.Xml.XmlReader> Dtd를 보고 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-282">If the <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, the <xref:System.Xml.XmlReader> will not report the DTDs.</span></span> <span data-ttu-id="9fa07-283">즉, DTD/DOCTYPE는 출력에서 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-283">This means that the DTD/DOCTYPE will be lost on output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-284">다음 예제에서는 DTD 파일을 사용하여 XML 파일의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-284">The following example validates an XML file using a DTD file.</span></span>  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="9fa07-285">입력</span><span class="sxs-lookup"><span data-stu-id="9fa07-285">Input</span></span>  
 <span data-ttu-id="9fa07-286">이 예제에서는 `itemDTD.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-286">The example uses the `itemDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-287">주석을 무시할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-287">Gets or sets a value indicating whether to ignore comments.</span></span></summary>
        <value><span data-ttu-id="9fa07-288">주석을 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-288"><see langword="true" /> to ignore comments; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9fa07-289">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-289">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-290">이 속성을 설정 `true` 판독기에서 반환 되는 여러 개의 인접 텍스트 노드에서 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-290">Setting this property to `true` can result in multiple contiguous text nodes being returned from the reader.</span></span> <span data-ttu-id="9fa07-291">유효성 검사에는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-291">This does not affect validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-292">다음 처리 지침, 주석 및 불필요 한 공백을 제거 하는 판독기를 만드는 데 사용할 수 있는 설정 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-292">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-293">처리 명령을 무시할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-293">Gets or sets a value indicating whether to ignore processing instructions.</span></span></summary>
        <value><span data-ttu-id="9fa07-294">처리 명령을 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-294"><see langword="true" /> to ignore processing instructions; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9fa07-295">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-295">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-296">이 속성을 설정 `true` 판독기에서 반환 되는 여러 개의 인접 텍스트 노드에서 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-296">Setting this property to `true` can result in multiple contiguous text nodes being returned from the reader.</span></span> <span data-ttu-id="9fa07-297">유효성 검사에는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-297">This does not affect validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-298">다음 처리 지침, 주석 및 불필요 한 공백을 제거 하는 판독기를 만드는 데 사용할 수 있는 설정 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-298">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-299">유효하지 않은 공백을 무시할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-299">Gets or sets a value indicating whether to ignore insignificant white space.</span></span></summary>
        <value><span data-ttu-id="9fa07-300">공백을 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-300"><see langword="true" /> to ignore white space; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9fa07-301">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-301">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-302">중요 한 것으로 간주 되지 않습니다는 공백 문자는 공백, 탭 및 가독성을 높이기 위해 태그를 구분 하는 데 사용 되는 빈 줄을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-302">White space that is not considered to be significant includes spaces, tabs, and blank lines used to set apart the markup for greater readability.</span></span> <span data-ttu-id="9fa07-303">이러한 예로 요소 내용에 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-303">An example of this is white space in element content.</span></span>  
  
 <span data-ttu-id="9fa07-304">이 속성 설정의 범위 내에서 발생 하는 공백 또는 혼합된 콘텐츠 모드를에서 태그 들 사이의 공백 영향을 주지 않습니다는 `xml:space='preserve'` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-304">This property setting does not affect white space between markup in a mixed content mode, or white space that occurs within the scope of an `xml:space='preserve'` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-305">다음 처리 지침, 주석 및 불필요 한 공백을 제거 하는 판독기를 만드는 데 사용할 수 있는 설정 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-305">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-306"><see cref="T:System.Xml.XmlReader" /> 개체의 줄 번호 오프셋을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-306">Gets or sets line number offset of the <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <value><span data-ttu-id="9fa07-307">줄 번호 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-307">The line number offset.</span></span> <span data-ttu-id="9fa07-308">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-308">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-309">합니다 <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> 시점을 확인 하는 설정 위치는 <xref:System.Xml.IXmlLineInfo.LineNumber%2A> 속성이 계산을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-309">The <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> setting determines the point where the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> property starts counting.</span></span> <span data-ttu-id="9fa07-310">XML 데이터를 더 큰 문서 내에 포함 된 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-310">This is useful if your XML data is embedded within a larger document.</span></span> <span data-ttu-id="9fa07-311">예를 들어, XML 데이터를 더 큰 문서에 포함 된 데이터는 101 문서의 줄에서 시작 하 고 판독기를 100 번 줄에서 시작 함을 지정 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-311">For example, if your XML data were embedded in a larger document, and your data started on line 101 of the document, you may want to specify that the reader start at line 100.</span></span> <span data-ttu-id="9fa07-312">따라서 판독기에서 XML의 첫 번째 줄을 구문 분석 하는 동안 예외가 발생 합니다 줄 1이 아닌 선 101, 줄 번호를 보고할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-312">Therefore, if the reader threw an exception while parsing the first line of the XML, it would report the line number as line 101, rather than line 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-313"><see cref="T:System.Xml.XmlReader" /> 개체의 줄 위치 오프셋을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-313">Gets or sets line position offset of the <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <value><span data-ttu-id="9fa07-314">선 위치 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-314">The line position offset.</span></span> <span data-ttu-id="9fa07-315">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-315">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-316">합니다 <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> 시점을 확인 하는 설정 위치는 <xref:System.Xml.IXmlLineInfo.LinePosition%2A> 속성이 계산을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-316">The <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> setting determines the point where the <xref:System.Xml.IXmlLineInfo.LinePosition%2A> property starts counting.</span></span> <span data-ttu-id="9fa07-317">XML 데이터를 더 큰 문서 내에 포함 된 XML의 시작 부분에 없는 새 줄이 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-317">This is useful if your XML data is embedded within a larger document and there is no new line at the beginning of the XML.</span></span> <span data-ttu-id="9fa07-318">이 경우 판독기가 XML을 구문 분석 하는 동안 예외를 throw 하는 경우 원하는 XML 조각을 상대적 뿐 아니라, 기본 문서를 기준으로 줄 위치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-318">In this case, if the reader throws an exception while parsing the XML, you want it to return the line position relative to the main document, not just relative to the XML fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-319">문서에서 엔터티 확장명 후의 최대 허용 문자 수를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-319">Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.</span></span></summary>
        <value><span data-ttu-id="9fa07-320">확장된 엔터티의 최대 허용 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-320">The maximum allowable number of characters from expanded entities.</span></span> <span data-ttu-id="9fa07-321">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-321">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-322">값 (0)에 확장명 엔터티의 결과인 문자 수에 제한이 없음을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-322">A zero (0) value means no limits on the number of characters that result from expanding entities.</span></span> <span data-ttu-id="9fa07-323">엔터티 확장에서 발생할 수 있는 문자의 최대 수를 지정 하는 0이 아닌 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-323">A non-zero value specifies the maximum number of characters that can result from expanding entities.</span></span>  
  
 <span data-ttu-id="9fa07-324">판독기가 확장 된 크기가이 속성을 초과 하는 엔터티가 포함 된 문서를 읽으려고 하는 경우는 <xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-324">If the reader attempts to read a document that contains entities such that the expanded size will exceed this property, an <xref:System.Xml.XmlException> will be thrown.</span></span>  
  
 <span data-ttu-id="9fa07-325">이 속성을 사용 하면 공격자가 엔터티 확장을 통해 메모리 한도 초과 하려고 하는 XML 문서를 제출 하는 경우 서비스 거부 공격을 완화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-325">This property allows you to mitigate denial of service attacks where the attacker submits XML documents that attempt to exceed memory limits via expanding entities.</span></span> <span data-ttu-id="9fa07-326">확장 된 엔터티의 결과인 문자를 제한 하 여 공격을 탐지 하 고 안정적으로 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-326">By limiting the characters that result from expanded entities, you can detect the attack and recover reliably.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-327">다음 코드는이 속성을 설정 하 고 설정 된 한계 보다 큰 크기로 확장 되는 엔터티가 포함 된 문서를 구문 분석 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-327">The following code sets this property, and then attempts to parse a document that contains an entity that expands to a size greater than the set limit.</span></span> <span data-ttu-id="9fa07-328">실제 시나리오에서 설정한이 한도 아직 유효한 문서를 처리 하기에 충분히 큰 값으로 악의적인 문서의 위협 제한 수 있을 만큼 적습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-328">In a real world scenario, you would set this limit to a value large enough to handle valid documents, yet small enough to limit the threat from malicious documents.</span></span>  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    "]>" + Environment.NewLine + _  
    "<Root>Content &anEntity;</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD  
settings.MaxCharactersFromEntities = 30  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 <span data-ttu-id="9fa07-329">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-329">This example produces the following output:</span></span>  
  
```  
There is an error in XML document (MaxCharactersFromEntities, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-330">XML 문서의 최대 허용 문자 수를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-330">Gets or sets a value indicating the maximum allowable number of characters in an XML document.</span></span> <span data-ttu-id="9fa07-331">값 0은 XML 문서 크기에 제한이 없음을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-331">A zero (0) value means no limits on the size of the XML document.</span></span> <span data-ttu-id="9fa07-332">0이 아닌 값은 최대 크기(문자 수)를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-332">A non-zero value specifies the maximum size, in characters.</span></span></summary>
        <value><span data-ttu-id="9fa07-333">XML 문서의 최대 허용 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-333">The maximum allowable number of characters in an XML document.</span></span> <span data-ttu-id="9fa07-334">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-334">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-335">0 (0) 값을 구문 분석 된 문서에는 문자 수에 제한이 없음을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-335">A zero (0) value means no limits on the number of characters in the parsed document.</span></span> <span data-ttu-id="9fa07-336">0이 아닌 값을 구문 분석할 수 있는 문자의 최대 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-336">A non-zero value specifies the maximum number of characters that can be parsed.</span></span>  
  
 <span data-ttu-id="9fa07-337">문서에 대 한 최대 문자 수를 확장 된 엔터티의 결과인 문자 수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-337">The maximum character count for the document includes the count of characters that result from expanded entities.</span></span>  
  
 <span data-ttu-id="9fa07-338">이 속성을 초과 하는 크기를 사용 하 여 문서를 읽는 판독기 하려고 시도 하는 경우는 <xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-338">If the reader attempts to read a document with a size that exceeds this property, an <xref:System.Xml.XmlException> will be thrown.</span></span>  
  
 <span data-ttu-id="9fa07-339">이 속성을 사용 하면 공격자가 매우 큰 XML 문서를 제출 하는 경우 서비스 거부 공격을 완화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-339">This property allows you to mitigate denial of service attacks where the attacker submits extremely large XML documents.</span></span> <span data-ttu-id="9fa07-340">문서 크기를 제한 하 여 공격을 탐지 하 고 안정적으로 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-340">By limiting the size of a document, you can detect the attack and recover reliably.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-341">다음 코드는이 속성을 설정 하 고 제한 보다 큰 문서를 구문 분석 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-341">The following code sets this property, and then attempts to parse a document larger than the limit.</span></span> <span data-ttu-id="9fa07-342">실제 시나리오에서 설정한이 한도 아직 유효한 문서를 처리 하기에 충분히 큰 값으로 악의적인 문서의 위협 제한 수 있을 만큼 적습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-342">In a real world scenario, you would set this limit to a value large enough to handle valid documents, yet small enough to limit the threat from malicious documents.</span></span>  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 <span data-ttu-id="9fa07-343">이 코드의 결과는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-343">This code produces the following output:</span></span>  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-344">원자화된 문자열을 비교하는 데 사용할 <see cref="T:System.Xml.XmlNameTable" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-344">Gets or sets the <see cref="T:System.Xml.XmlNameTable" /> used for atomized string comparisons.</span></span></summary>
        <value><span data-ttu-id="9fa07-345">이 <see cref="T:System.Xml.XmlNameTable" /> 개체를 사용하여 만든 모든 <see cref="T:System.Xml.XmlReader" /> 인스턴스에서 사용하는 원자화된 문자열 전체가 저장되는 <see cref="T:System.Xml.XmlReaderSettings" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-345">The <see cref="T:System.Xml.XmlNameTable" /> that stores all the atomized strings used by all <see cref="T:System.Xml.XmlReader" /> instances created using this <see cref="T:System.Xml.XmlReaderSettings" /> object.</span></span>  
  
<span data-ttu-id="9fa07-346">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-346">The default is <see langword="null" />.</span></span> <span data-ttu-id="9fa07-347">이 값이 <see langword="null" />이면 <see cref="T:System.Xml.XmlReader" /> 인스턴스는 비어 있는 새 <see cref="T:System.Xml.NameTable" />을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-347">The created <see cref="T:System.Xml.XmlReader" /> instance will use a new empty <see cref="T:System.Xml.NameTable" /> if this value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-348">이 속성을 설정 된 <xref:System.Xml.XmlNameTable> 모든 간에 공용 이름 테이블을 공유 하려는 경우 인스턴스 만들어진 <xref:System.Xml.XmlReader> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="9fa07-348">Set this property to an <xref:System.Xml.XmlNameTable> instance if you want to share a common name table among all the created <xref:System.Xml.XmlReader> instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9fa07-349"><xref:System.Xml.NameTable> 클래스는 스레드로부터 안전하지 않습니다</span><span class="sxs-lookup"><span data-stu-id="9fa07-349">The <xref:System.Xml.NameTable> class is not thread-safe.</span></span> <span data-ttu-id="9fa07-350">따라서 간에 공유할 수 없습니다 <xref:System.Xml.XmlReader> 서로 다른 스레드에서 동시에 실행 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-350">Therefore it cannot be shared between <xref:System.Xml.XmlReader> objects that run simultaneously in different threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-351">DTD(문서 형식 정의) 프로세스를 금지할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-351">Gets or sets a value indicating whether to prohibit document type definition (DTD) processing.</span></span> <span data-ttu-id="9fa07-352">이 속성은 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-352">This property is obsolete.</span></span> <span data-ttu-id="9fa07-353">대신 <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="9fa07-353">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span></span></summary>
        <value><span data-ttu-id="9fa07-354">DTD 프로세스를 금지하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-354"><see langword="true" /> to prohibit DTD processing; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9fa07-355">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-355">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-356">로 설정 하면 `true`서 <xref:System.Xml.XmlReader> throw는 <xref:System.Xml.XmlException> DTD 내용이 발생 시.</span><span class="sxs-lookup"><span data-stu-id="9fa07-356">When set to `true`, the <xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> when any DTD content is encountered.</span></span> <span data-ttu-id="9fa07-357">서비스 거부 문제가 염려되거나 신뢰할 수 없는 소스를 사용하는 경우 DTD 처리를 사용하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="9fa07-357">Do not enable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</span></span>  
  
 <span data-ttu-id="9fa07-358">DTD 처리를 활성화하는 경우 <xref:System.Xml.XmlSecureResolver>를 사용하여 <xref:System.Xml.XmlReader>가 액세스할 수 있는 리소스를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-358">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="9fa07-359">또한 응용 프로그램을 직접 디자인하여 XML 처리에 필요한 메모리 및 시간을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-359">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="9fa07-360">예를 들어, ASP.NET 응용 프로그램에서 시간 제한을 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-360">For example, configure time-out limits in your ASP.NET application.</span></span>  
  
 <span data-ttu-id="9fa07-361">이 속성은 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-361">This property is obsolete.</span></span> <span data-ttu-id="9fa07-362">대신 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="9fa07-362">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="9fa07-363">사용자가 설정한 경우 <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> 기본값으로 `true` 설정 <xref:System.Xml.XmlTextReader.DtdProcessing%2A> 하려면 `Prohibit`합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-363">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="9fa07-364">사용자가 설정한 경우 <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> 하 `false` 설정 <xref:System.Xml.XmlTextReader.DtdProcessing%2A> 에 `Parse`입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-364">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-365">다음 예제에서는 DTD를 사용 하 여 데이터의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-365">The following example validates data using a DTD.</span></span>  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 <span data-ttu-id="9fa07-366">이 예제에서는 입력으로 itemDTD.xml 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-366">The example uses the itemDTD.xml file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fa07-367">설정 클래스의 멤버를 해당 기본값으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-367">Resets the members of the settings class to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-368">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Xml.XmlReaderSettings>합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-368">The following table shows initial property values for an instance of <xref:System.Xml.XmlReaderSettings>.</span></span>  
  
|<span data-ttu-id="9fa07-369">속성</span><span class="sxs-lookup"><span data-stu-id="9fa07-369">Property</span></span>|<span data-ttu-id="9fa07-370">초기 값</span><span class="sxs-lookup"><span data-stu-id="9fa07-370">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|<span data-ttu-id="9fa07-371">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-371">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|<span data-ttu-id="9fa07-372">`true`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-372">`true`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<span data-ttu-id="9fa07-373"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="9fa07-373"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|<span data-ttu-id="9fa07-374">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-374">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|<span data-ttu-id="9fa07-375">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-375">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|<span data-ttu-id="9fa07-376">`false`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-376">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="9fa07-377">0.</span><span class="sxs-lookup"><span data-stu-id="9fa07-377">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="9fa07-378">0.</span><span class="sxs-lookup"><span data-stu-id="9fa07-378">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|<span data-ttu-id="9fa07-379">0 (확장명 엔터티의 결과인 문자 수를 제한 하지 않습니다).</span><span class="sxs-lookup"><span data-stu-id="9fa07-379">0 (there is no limit on the number of characters that result from expanding entities).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|<span data-ttu-id="9fa07-380">0 (무제한 XML 문서의 크기에).</span><span class="sxs-lookup"><span data-stu-id="9fa07-380">0 (there is no limit on the size of the XML document).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|<span data-ttu-id="9fa07-381">`null`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-381">`null`.</span></span>|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|<span data-ttu-id="9fa07-382">`true`.</span><span class="sxs-lookup"><span data-stu-id="9fa07-382">`true`.</span></span> <span data-ttu-id="9fa07-383">이 속성은 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-383">This property is obsolete.</span></span> <span data-ttu-id="9fa07-384">대신 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="9fa07-384">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="9fa07-385">사용자가 설정한 경우 <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> 기본값으로 `true` 설정 <xref:System.Xml.XmlTextReader.DtdProcessing%2A> 하려면 `Prohibit`합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-385">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="9fa07-386">사용자가 설정한 경우 <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> 하 `false` 설정 <xref:System.Xml.XmlTextReader.DtdProcessing%2A> 에 `Parse`입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-386">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="9fa07-387">빈 <xref:System.Xml.Schema.XmlSchemaSet> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-387">An empty <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="9fa07-388"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span><span class="sxs-lookup"><span data-stu-id="9fa07-388"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<span data-ttu-id="9fa07-389"><xref:System.Xml.ValidationType.None>.</span><span class="sxs-lookup"><span data-stu-id="9fa07-389"><xref:System.Xml.ValidationType.None>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="9fa07-390">새 <xref:System.Xml.XmlUrlResolver> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-390">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-391">스키마 유효성 검사를 수행할 때 사용할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-391">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to use when performing schema validation.</span></span></summary>
        <value><span data-ttu-id="9fa07-392">스키마 유효성 검사를 수행할 때 사용할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-392">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to use when performing schema validation.</span></span> <span data-ttu-id="9fa07-393">기본값은 빈 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-393">The default is an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   <span data-ttu-id="9fa07-394">알 수 없거나 신뢰할 수 없는 출처 또는 위치에서 스키마를 사용 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="9fa07-394">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="9fa07-395">이렇게 하면 코드의 보안이 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-395">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="9fa07-396">XML 스키마 (인라인 스키마 포함)는 서비스 거부 공격;에 기본적으로 취약 이러한 신뢰할 수 없는 시나리오에서 허용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-396">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="9fa07-397">스키마 유효성 검사 오류 메시지 및 예외 콘텐츠 모델 또는 스키마 파일에 URI 경로 대 한 중요 한 정보를 노출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-397">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="9fa07-398">신뢰할 수 없는 호출자에 게이 정보를 노출 하지 않도록 주의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-398">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="9fa07-399">자세한 내용은 "보안 고려 사항" 섹션을 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="9fa07-399">For additional information, see the "Security considerations" section.</span></span>  
  
 <span data-ttu-id="9fa07-400"><xref:System.Xml.Schema.XmlSchemaSet> 클래스에 XML 스키마 정의 언어 (XSD) 스키마만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-400">The <xref:System.Xml.Schema.XmlSchemaSet> class only supports XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="9fa07-401"><xref:System.Xml.XmlReader> 만든 인스턴스에 <xref:System.Xml.XmlReader.Create%2A> Xml-data Reduced (XDR) 스키마 유효성 검사를 사용 하도록 설정 하려면 메서드를 구성할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-401"><xref:System.Xml.XmlReader> instances created by the <xref:System.Xml.XmlReader.Create%2A> method cannot be configured to enable XML-Data Reduced (XDR) schema validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9fa07-402">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="9fa07-402">Security considerations</span></span>  
  
-   <span data-ttu-id="9fa07-403">알 수 없거나 신뢰할 수 없는 소스에서 스키마를 사용 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="9fa07-403">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="9fa07-404">이렇게 하면 코드의 보안이 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-404">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="9fa07-405"><xref:System.Xml.XmlUrlResolver> 클래스는 외부 스키마를 해결 하려면 기본적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-405">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="9fa07-406">포함, 가져오기의 해상도 사용 하지 않도록 설정 하 고 스키마의 요소를 다시 정의 설정 합니다 <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> 속성을 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-406">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="9fa07-407">사용 하 여 결과로 발생 하는 예외를 <xref:System.Xml.Schema.XmlSchemaSet> 클래스와 같이 <xref:System.Xml.Schema.XmlSchemaException> 클래스에는 신뢰할 수 없는 시나리오에서 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-407">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="9fa07-408">예를 들어를 <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 의 속성을 <xref:System.Xml.Schema.XmlSchemaException> 예외를 발생 시킨 스키마 파일의 URI 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-408">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="9fa07-409"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 속성 신뢰할 수 없는 시나리오에서 노출 되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-409">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="9fa07-410">신뢰할 수 없는 시나리오에서 중요 한 정보가 노출 되지 않습니다 있도록 예외가 제대로 처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-410">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-411">사용 하 여 아래 예제는 <xref:System.Xml.XmlReaderSettings> 개체 및 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> XML 문서를 사용 하 여 스키마를 연결 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-411">The example below uses the <xref:System.Xml.XmlReaderSettings> object and the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to associate a schema with an XML document.</span></span> <span data-ttu-id="9fa07-412">스키마에 추가 됩니다는 <xref:System.Xml.XmlReaderSettings.Schemas%2A> 의 속성을 <xref:System.Xml.XmlReaderSettings> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-412">The schema is added to the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="9fa07-413">값을 <xref:System.Xml.XmlReaderSettings.Schemas%2A> 속성이 <xref:System.Xml.Schema.XmlSchemaSet> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-413">The value of the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property is an <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span> <span data-ttu-id="9fa07-414">스키마는 XML 문서 스키마 콘텐츠 모델에 맞는지 유효성을 검사 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-414">The schema is used to validate that the XML document conforms to the schema content model.</span></span> <span data-ttu-id="9fa07-415">스키마 유효성 검사 오류 및 경고에서 처리 됩니다는 <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> 에 정의 된 <xref:System.Xml.XmlReaderSettings> 개체.</span><span class="sxs-lookup"><span data-stu-id="9fa07-415">Schema validation errors and warnings are handled by the <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> defined in the <xref:System.Xml.XmlReaderSettings> object.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="9fa07-416">이 예제에서는 인수로 books.xml 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-416">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="9fa07-417">이 예제에서는 입력으로 books.xsd 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-417">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-418">판독기에서 유효성 검사 오류가 발견되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-418">Occurs when the reader encounters validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-419">이러한 이벤트가 발생 하는 경우 XML 인스턴스 문서를 읽는 동안 합니다 <xref:System.Xml.XmlReaderSettings.ValidationType%2A> 로 설정 되어 <xref:System.Xml.ValidationType.DTD> 또는 <xref:System.Xml.ValidationType.Schema>합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-419">These events occur while reading an XML instance document if the <xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to either <xref:System.Xml.ValidationType.DTD> or <xref:System.Xml.ValidationType.Schema>.</span></span> <span data-ttu-id="9fa07-420">경우는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> 설정에서 활성화 되는 <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 속성 유효성 검사 경고가 발생 하는 경우에 이러한 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-420">If the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> setting has been enabled on the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property these events also occur when any validation warnings are encountered.</span></span>  
  
 <span data-ttu-id="9fa07-421">유효성 검사에 대 한 판독기를 구성 및 유효성 검사 이벤트 처리기를 설정한 경우는 <xref:System.Xml.Schema.XmlSchemaValidationException> 모든 유효성 검사 오류에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-421">If the reader is configured for validation and no validation event handler has been set, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all validation errors.</span></span> <span data-ttu-id="9fa07-422">(유효성 검사 경고 발생 하지는 <xref:System.Xml.Schema.XmlSchemaValidationException> throw) 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-422">(Validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9fa07-423">유효성 검사 오류 메시지는 중요 한 콘텐츠 모델 정보를 노출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-423">Validation error messages may expose sensitive content model information.</span></span> <span data-ttu-id="9fa07-424">유효성 검사 오류 및 경고 메시지를 사용 하 여 처리 됩니다는 <xref:System.Xml.Schema.ValidationEventHandler> 대리자 또는으로 노출 됩니다는 <xref:System.Xml.Schema.XmlSchemaValidationException> 이벤트 처리기가 제공 되는 경우를 <xref:System.Xml.XmlReaderSettings> 개체 (유효성 검사 경고 발생 하지 않습니다는 <xref:System.Xml.Schema.XmlSchemaValidationException> 를 throw).</span><span class="sxs-lookup"><span data-stu-id="9fa07-424">Validation error and warning messages are handled using the <xref:System.Xml.Schema.ValidationEventHandler> delegate, or are exposed as an <xref:System.Xml.Schema.XmlSchemaValidationException> if no event handler is provided to the <xref:System.Xml.XmlReaderSettings> object (validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span> <span data-ttu-id="9fa07-425">신뢰할 수 없는 시나리오에서이 콘텐츠 모델 정보를 노출 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-425">This content model information should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="9fa07-426">유효성 검사 경고 메시지는 기본적으로 표시 되지 않습니다 하 고 설정 하 여 보고 될 수는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-426">Validation warning messages are suppressed by default and can be reported by setting the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.</span></span>  
>   
>  <span data-ttu-id="9fa07-427">합니다 <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 의 속성을 <xref:System.Xml.Schema.XmlSchemaValidationException> 예외를 발생 시킨 스키마 파일의 URI 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-427">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidationException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="9fa07-428"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 속성 신뢰할 수 없는 시나리오에서 노출 되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-428">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-429">다음 예제에서는 인라인 스키마를 사용 하 여 유효성을 검사 하 고 또한 유효성 검사 경고를 표시 하는 판독기를 만들려면를 지정 하는 설정을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-429">The following example shows the settings to specify to create a reader that validates using an inline schema and that also displays validation warnings.</span></span> <span data-ttu-id="9fa07-430">유효성 검사 이벤트 처리기를 사용 하 여 <xref:System.Xml.Schema.XmlSeverityType> 경고 및 오류를 구별 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-430">The validation event handler uses the <xref:System.Xml.Schema.XmlSeverityType> enumeration to differentiate between warnings and errors.</span></span>  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-431">스키마 유효성 검사 설정을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-431">Gets or sets a value indicating the schema validation settings.</span></span> <span data-ttu-id="9fa07-432">이 설정은 스키마(<see langword="ValidationType.Schema" />로 설정된 <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> 속성) 유효성 검사를 하는 <see cref="T:System.Xml.XmlReader" /> 개체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-432">This setting applies to <see cref="T:System.Xml.XmlReader" /> objects that validate schemas (<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> property set to <see langword="ValidationType.Schema" />).</span></span></summary>
        <value><span data-ttu-id="9fa07-433">유효성 검사 옵션을 지정 하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-433">A bitwise combination of enumeration values that specify validation options.</span></span> <span data-ttu-id="9fa07-434"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> 및 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />는 기본적으로 사용되고</span><span class="sxs-lookup"><span data-stu-id="9fa07-434"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> are enabled by default.</span></span> <span data-ttu-id="9fa07-435"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> 및 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />는 기본적으로 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-435"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />, and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> are disabled by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9fa07-436"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 개체의 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 및 <xref:System.Xml.XmlReaderSettings> 유효성 검사 플래그는 기본적으로 설정되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-436">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="9fa07-437">이 플래그를 설정하면 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 개체의 <xref:System.Xml.XmlReaderSettings>를 사용하여 <xref:System.Xml.XmlReader>에서 인스턴스 문서에 나타난 스키마 위치를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-437">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="9fa07-438">경우는 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 개체가 `null`, 스키마 위치는 확인 되지 않습니다 경우에 합니다 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 및 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 유효성 검사 플래그를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-438">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
>   
>  <span data-ttu-id="9fa07-439">문서의 유효성을 검사하는 동안 스키마를 추가하면 새 형식이 추가되고 해당 문서에 대한 유효성 검사 결과가 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-439">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="9fa07-440">결과적으로 외부 스키마는 신뢰할 수 있는 소스에서만 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-440">As a result, external schemas should only be resolved from trusted sources.</span></span>  
>   
>  <span data-ttu-id="9fa07-441">사용 하지 않도록 설정 된 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 유효성 검사, 신뢰할 수 없는 큰 XML 문서의 많은 부분을 통해 id 제약 조건이 있는 스키마에 대해 가용성 우선 시나리오에서 설명 하는 경우 (기본적으로 사용) 플래그는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-441">Disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (enabled by default) is recommended when validating, untrusted, large XML documents in high availability scenarios against a schema with identity constraints over a large part of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-442">다음 예제에서는 인라인 XML 스키마에 대 한 XML 파일을 사용 하 여 유효성을 검사 합니다 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-442">The following example validates an XML file against an inline XML Schema by enabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> setting.</span></span> <span data-ttu-id="9fa07-443">유효성 검사 경고를 표시 하는 XML 판독기를 구성, sp 볼 수도 예상 되는 경고의 루트 요소에 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-443">The XML reader is configured to display validation warnings, sp you also see the expected warning on the root element.</span></span>  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="9fa07-444">입력</span><span class="sxs-lookup"><span data-stu-id="9fa07-444">Input</span></span>  
 <span data-ttu-id="9fa07-445">이 예제에서는 inlineSchema.xml 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-445">The example uses the inlineSchema.xml file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a><span data-ttu-id="9fa07-446">Output</span><span class="sxs-lookup"><span data-stu-id="9fa07-446">Output</span></span>  
 <span data-ttu-id="9fa07-447">경고:   일치 하는 스키마를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-447">Warning:   Matching schema not found.</span></span> <span data-ttu-id="9fa07-448">유효성 검사가 실행되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-448">No validation occurred.</span></span> <span data-ttu-id="9fa07-449">'root' 요소에 대한 스키마 정보를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-449">Could not find schema information for the element 'root'.</span></span>  
  
 <span data-ttu-id="9fa07-450">유효성 검사 오류:   'XsdHeadCount:HeadCount' 요소에는 '부서' 잘못 된 자식 요소가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-450">Validation error:   The element 'xsdHeadCount:HeadCount' has invalid child element 'division'.</span></span> <span data-ttu-id="9fa07-451">'ID'가 있어야 합니다."</span><span class="sxs-lookup"><span data-stu-id="9fa07-451">Expected 'ID'.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-452"><see cref="T:System.Xml.XmlReader" />가 읽는 동안 유효성 검사 또는 형식 할당을 수행할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-452">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> will perform validation or type assignment when reading.</span></span></summary>
        <value><span data-ttu-id="9fa07-453">XmlReader가 판독 시 유효성 검사나 형식 할당을 수행하는지 여부를 나타내는 <see cref="T:System.Xml.ValidationType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-453">One of the <see cref="T:System.Xml.ValidationType" /> values that indicates whether XmlReader will perform validation or type assignment when reading.</span></span> <span data-ttu-id="9fa07-454">기본값은 <see langword="ValidationType.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-454">The default is <see langword="ValidationType.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-455">다음 표에서 <xref:System.Xml.ValidationType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-455">The following table describes the <xref:System.Xml.ValidationType> values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9fa07-456">합니다 <xref:System.Xml.ValidationType.Auto> 및 <xref:System.Xml.ValidationType.XDR> 열거형 값은.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-456">The <xref:System.Xml.ValidationType.Auto> and <xref:System.Xml.ValidationType.XDR> enumeration values are obsolete in .NET Framework version 2.0.</span></span>  
  
|<span data-ttu-id="9fa07-457">ValidationType</span><span class="sxs-lookup"><span data-stu-id="9fa07-457">ValidationType</span></span>|<span data-ttu-id="9fa07-458">설명</span><span class="sxs-lookup"><span data-stu-id="9fa07-458">Description</span></span>|  
|--------------------|-----------------|  
|`DTD`|<span data-ttu-id="9fa07-459">유효성 검사는 문서 형식 정의 (DTD)를 사용 하 여 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-459">Validation is performed using a document type definition (DTD).</span></span> <span data-ttu-id="9fa07-460">**참고:**  합니다 <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 속성 설정 해야 <xref:System.Xml.DtdProcessing.Parse>합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-460">**Note:**  The <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property must also be set to <xref:System.Xml.DtdProcessing.Parse>.</span></span>|  
|`None`|<span data-ttu-id="9fa07-461"><xref:System.Xml.XmlReader> 모든 형식 할당을 수행 하거나 데이터의 유효성을 검사 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-461">The <xref:System.Xml.XmlReader> does not validate data, or perform any type assignment.</span></span>|  
|`Schema`|<span data-ttu-id="9fa07-462">유효성 검사 및 형식 할당은 XML 스키마 정의 언어 (XSD) 스키마를 사용 하 여 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-462">Validation and type assignment is performed using an XML Schema definition language (XSD) schema.</span></span> <span data-ttu-id="9fa07-463">판독기는 다음을 사용 하 여 XML 스키마에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-463">The reader accesses the XML Schema using the following:</span></span><br /><br /> <span data-ttu-id="9fa07-464">-사용 된 <xref:System.Xml.XmlReaderSettings.Schemas%2A> 속성에 액세스를 <xref:System.Xml.Schema.XmlSchemaSet> 이 판독기와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-464">-   Uses the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property to access the <xref:System.Xml.Schema.XmlSchemaSet> object associated with this reader.</span></span><br /><span data-ttu-id="9fa07-465">-XML 인스턴스 문서에 포함 된 인라인 스키마를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-465">-   Uses the in-line schema contained in the XML instance document.</span></span> <span data-ttu-id="9fa07-466">(의 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 옵션이 설정 되어야 합니다.)</span><span class="sxs-lookup"><span data-stu-id="9fa07-466">(The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> option must be enabled.)</span></span><br /><span data-ttu-id="9fa07-467">--스키마 위치 힌트에서 지정한 XML 스키마를 사용 하는 중 (`xsi:schemaLocation` 또는 `xsi:noNamespaceSchemaLocation` 특성) XML 인스턴스 문서에서 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-467">-   Uses the XML Schema specified by schema location hints (`xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute) found in the XML instance document.</span></span> <span data-ttu-id="9fa07-468">(의 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 옵션이 설정 되어야 합니다.)</span><span class="sxs-lookup"><span data-stu-id="9fa07-468">(The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> option must be enabled.)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-469">다음 예제에서 저장 된 스키마를 사용 하 여 유효성을 검사 합니다 <xref:System.Xml.Schema.XmlSchemaSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-469">The following example validates using a schema stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 <span data-ttu-id="9fa07-470">이 샘플에서는 다음 입력된 파일 사용:</span><span class="sxs-lookup"><span data-stu-id="9fa07-470">The sample uses the following input files:</span></span>  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fa07-471">외부 문서에 액세스하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-471">Sets the <see cref="T:System.Xml.XmlResolver" /> used to access external documents.</span></span></summary>
        <value><span data-ttu-id="9fa07-472">외부 문서에 액세스하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-472">An <see cref="T:System.Xml.XmlResolver" /> used to access external documents.</span></span> <span data-ttu-id="9fa07-473">값을 <see langword="null" />로 설정하면 <see cref="T:System.Xml.XmlException" />가 외부 리소스에 액세스하려고 할 때 <see cref="T:System.Xml.XmlReader" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-473">If set to <see langword="null" />, an <see cref="T:System.Xml.XmlException" /> is thrown when the <see cref="T:System.Xml.XmlReader" /> tries to access an external resource.</span></span> <span data-ttu-id="9fa07-474">기본값은 자격 증명이 없는 새 <see cref="T:System.Xml.XmlUrlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-474">The default is a new <see cref="T:System.Xml.XmlUrlResolver" /> with no credentials.</span></span>  <span data-ttu-id="9fa07-475">.NET Framework 4.5.2부터이 설정에 기본값은 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-475">Starting with the .NET Framework 4.5.2, this setting has a default value of <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fa07-476"><xref:System.Xml.XmlResolver> 되을 찾거나 XML 인스턴스 문서를 열 또는 XML 인스턴스 문서에 참조 된 외부 리소스를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-476">The <xref:System.Xml.XmlResolver> is used to locate and open an XML instance document, or to locate and open any external resources referenced by the XML instance document.</span></span> <span data-ttu-id="9fa07-477">이 엔터티, DTD 또는 스키마에 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-477">This can include entities, DTD, or schemas.</span></span> <span data-ttu-id="9fa07-478"><xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> 네트워크 인증에 필요한 자격 증명을 지정 하려면 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-478">The <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property can be used to specify any credentials required for network authentication.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9fa07-479">때문에 합니다 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 포함 될 수 있습니다 사용자 자격 증명과 같은 중요 한 정보가 주의 해야 캐싱 <xref:System.Xml.XmlReaderSettings> 개체를 전달 하는 경우 또는 <xref:System.Xml.XmlReaderSettings> 다른 하나는 구성 요소에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-479">Because the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> can contain sensitive information such as user credentials, you should be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
>   
>  <span data-ttu-id="9fa07-480"><xref:System.Xml.XmlSecureResolver> 외부 문서에 액세스 하는 데 사용 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-480">An <xref:System.Xml.XmlSecureResolver> can be used to access external documents.</span></span> <span data-ttu-id="9fa07-481"><xref:System.Xml.XmlSecureResolver> 클래스의 다른 구현을 보호 하는 데 도움이 <xref:System.Xml.XmlResolver> 래핑하여를 <xref:System.Xml.XmlResolver> 개체 및 리소스를 제한 하는 기본 <xref:System.Xml.XmlResolver> 에 액세스할 수 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-481">The <xref:System.Xml.XmlSecureResolver> class helps to secure another implementation of <xref:System.Xml.XmlResolver> by wrapping the <xref:System.Xml.XmlResolver> object and restricting the resources that the underlying <xref:System.Xml.XmlResolver> has access to.</span></span>  
>   
>  <span data-ttu-id="9fa07-482"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 개체의 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 및 <xref:System.Xml.XmlReaderSettings> 유효성 검사 플래그는 기본적으로 설정되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-482">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="9fa07-483">이 플래그를 설정하면 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 개체의 <xref:System.Xml.XmlReaderSettings>를 사용하여 <xref:System.Xml.XmlReader>에서 인스턴스 문서에 나타난 스키마 위치를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-483">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="9fa07-484">경우는 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 개체가 `null`, 스키마 위치는 확인 되지 않습니다 경우에 합니다 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 및 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 유효성 검사 플래그를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-484">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
>   
>  <span data-ttu-id="9fa07-485">문서의 유효성을 검사하는 동안 스키마를 추가하면 새 형식이 추가되고 해당 문서에 대한 유효성 검사 결과가 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-485">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="9fa07-486">결과적으로 외부 스키마는 신뢰할 수 있는 소스에서만 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-486">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fa07-487">다음 예제에서는 <xref:System.Xml.XmlReader> 를 사용 하는 <xref:System.Xml.XmlSecureResolver> 기본 자격 증명을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="9fa07-487">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlSecureResolver> with default credentials.</span></span>  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>