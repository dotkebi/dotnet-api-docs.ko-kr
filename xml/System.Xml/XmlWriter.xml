<Type Name="XmlWriter" FullName="System.Xml.XmlWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73874220e105f9d3a007e45890b6120e85b91e29" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59354372" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XmlWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e373c-101">XML 데이터가 포함된 스트림 또는 파일을 생성할 수 있도록 빠르고, 앞으로만 이동 가능하고, 캐시되지 않은 방법을 제공하는 작성기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-101">Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-102"><xref:System.Xml.XmlWriter> 클래스는 XML 데이터 스트림, 파일, 텍스트 판독기 또는 문자열에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-102">The <xref:System.Xml.XmlWriter> class writes XML data to a stream, file, text reader, or string.</span></span> <span data-ttu-id="e373c-103">W3C 지원 [Extensible Markup Language (XML) 1.0 (1.0(fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) 하 고 [XML 1.0에서 네임 스페이스 (세 번째 버전)](https://www.w3.org/TR/REC-xml-names/) 권장 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-103">It supports the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="e373c-104">멤버는 <xref:System.Xml.XmlWriter> 클래스를 사용 하면 수:</span><span class="sxs-lookup"><span data-stu-id="e373c-104">The members of the <xref:System.Xml.XmlWriter> class enable you to:</span></span>  
  
-   <span data-ttu-id="e373c-105">문자가 올바른 XML 문자인지와 요소 및 특성 이름이 유효한 XML 이름인지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-105">Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</span></span>  
  
-   <span data-ttu-id="e373c-106">XML 문서가 제대로 구성되었는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-106">Verify that the XML document is well-formed.</span></span>  
  
-   <span data-ttu-id="e373c-107">이진 바이트를 Base64 또는 BinHex로 인코딩하고 결과 텍스트를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-107">Encode binary bytes as Base64 or BinHex, and write out the resulting text.</span></span>  
  
-   <span data-ttu-id="e373c-108">수동으로 값 변환을 수행할 필요가 없도록 하려면 공용 언어 런타임 형식 문자열을 대신 사용 하 여 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-108">Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</span></span>  
  
-   <span data-ttu-id="e373c-109">출력 스트림 하나에 문서를 여러 개 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-109">Write multiple documents to one output stream.</span></span>  
  
-   <span data-ttu-id="e373c-110">올바른 이름, 정규화된 이름, 이름 토큰을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-110">Write valid names, qualified names, and name tokens.</span></span>  
  
 <span data-ttu-id="e373c-111">섹션 내용</span><span class="sxs-lookup"><span data-stu-id="e373c-111">In this section:</span></span>  
  
 <span data-ttu-id="e373c-112">[XML 작성기 만들기](#create) </span><span class="sxs-lookup"><span data-stu-id="e373c-112">[Creating an XML writer](#create) </span></span>  
 <span data-ttu-id="e373c-113">[출력 형식 지정](#output) </span><span class="sxs-lookup"><span data-stu-id="e373c-113">[Specifying the output format](#output) </span></span>  
 <span data-ttu-id="e373c-114">[데이터 규칙](#conformance) </span><span class="sxs-lookup"><span data-stu-id="e373c-114">[Data conformance](#conformance) </span></span>  
 <span data-ttu-id="e373c-115">[요소 작성](#writing_elements) </span><span class="sxs-lookup"><span data-stu-id="e373c-115">[Writing elements](#writing_elements) </span></span>  
 <span data-ttu-id="e373c-116">[특성 작성](#writing_attributes) </span><span class="sxs-lookup"><span data-stu-id="e373c-116">[Writing attributes](#writing_attributes) </span></span>  
 <span data-ttu-id="e373c-117">[네임 스페이스 처리](#handling_ns) </span><span class="sxs-lookup"><span data-stu-id="e373c-117">[Handling namespaces](#handling_ns) </span></span>  
 <span data-ttu-id="e373c-118">[형식화 된 데이터 작성](#writing_types) </span><span class="sxs-lookup"><span data-stu-id="e373c-118">[Writing typed data](#writing_types) </span></span>  
 <span data-ttu-id="e373c-119">[XML 작성기를 닫기](#close) </span><span class="sxs-lookup"><span data-stu-id="e373c-119">[Closing the XML writer](#close) </span></span>  
 <span data-ttu-id="e373c-120">[비동기 프로그래밍](#async) </span><span class="sxs-lookup"><span data-stu-id="e373c-120">[Asynchronous programming](#async) </span></span>  
 [<span data-ttu-id="e373c-121">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="e373c-121">Security considerations</span></span>](#security)  
  
<a name="create"></a>   
## <a name="creating-an-xml-writer"></a><span data-ttu-id="e373c-122">XML 작성기 만들기</span><span class="sxs-lookup"><span data-stu-id="e373c-122">Creating an XML writer</span></span>  
 <span data-ttu-id="e373c-123">만들려는 <xref:System.Xml.XmlWriter> 인스턴스를 사용 하 여는 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-123">To create an <xref:System.Xml.XmlWriter> instance, use the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e373c-124">XML 작성기에서 사용 하도록 설정 하려는 기능의 집합을 지정 하려면를 <xref:System.Xml.XmlWriterSettings> 에 <xref:System.Xml.XmlWriter.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-124">To specify the set of features you want to enable on the XML writer, pass an <xref:System.Xml.XmlWriterSettings> to the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="e373c-125">그렇지 않은 경우 기본 설정이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-125">Otherwise, default settings are used.</span></span> <span data-ttu-id="e373c-126">참조 된 <xref:System.Xml.XmlWriter.Create%2A> 세부 정보에 대 한 페이지를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-126">See the <xref:System.Xml.XmlWriter.Create%2A> reference pages for details.</span></span>  
  
<a name="output"></a>   
## <a name="specifying-the-output-format"></a><span data-ttu-id="e373c-127">출력 형식 지정</span><span class="sxs-lookup"><span data-stu-id="e373c-127">Specifying the output format</span></span>  
 <span data-ttu-id="e373c-128">합니다 <xref:System.Xml.XmlWriterSettings> 클래스를 제어 하는 몇 가지 속성을 포함 하는 방법을 <xref:System.Xml.XmlWriter> 출력 서식을 지정:</span><span class="sxs-lookup"><span data-stu-id="e373c-128">The <xref:System.Xml.XmlWriterSettings> class includes several properties that control how <xref:System.Xml.XmlWriter> output is formatted:</span></span>  
  
|<span data-ttu-id="e373c-129">속성</span><span class="sxs-lookup"><span data-stu-id="e373c-129">Property</span></span>|<span data-ttu-id="e373c-130">설명</span><span class="sxs-lookup"><span data-stu-id="e373c-130">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="e373c-131">사용할 텍스트 인코딩을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-131">Specifies the text encoding to use.</span></span> <span data-ttu-id="e373c-132">기본값은 `Encoding.UTF8`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-132">The default is `Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="e373c-133">요소를 들여쓸 것인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-133">Indicates whether to indent elements.</span></span> <span data-ttu-id="e373c-134">기본값은 `false` (들여쓰기 없음).</span><span class="sxs-lookup"><span data-stu-id="e373c-134">The default is `false` (no indentation).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="e373c-135">들여쓰기할 때 사용할 문자열을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-135">Specifies the character string to use when indenting.</span></span> <span data-ttu-id="e373c-136">기본값은 공백 두 개입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-136">The default is two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="e373c-137">줄 바꿈에 사용할 문자열을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-137">Specifies the character string to use for line breaks.</span></span> <span data-ttu-id="e373c-138">기본값은 `\r\n`(캐리지 리턴, 줄 바꿈)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-138">The default is `\r\n` (carriage return, line feed).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="e373c-139">줄 바꿈 문자를 처리 하는 방법을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-139">Specifies how to handle newline characters.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="e373c-140">특성을 새 줄에 쓸지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-140">Indicates whether to write attributes on a new line.</span></span> <span data-ttu-id="e373c-141">이 속성을 사용하는 경우 <xref:System.Xml.XmlWriterSettings.Indent%2A>를 `true`로 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-141"><xref:System.Xml.XmlWriterSettings.Indent%2A> should be set to `true` when using this property.</span></span> <span data-ttu-id="e373c-142">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-142">The default is `false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="e373c-143">XML 선언을 작성할 것인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-143">Indicates whether to write an XML declaration.</span></span> <span data-ttu-id="e373c-144">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-144">The default is `false`.</span></span>|  
  
 <span data-ttu-id="e373c-145"><xref:System.Xml.XmlWriterSettings.Indent%2A> 및 <xref:System.Xml.XmlWriterSettings.IndentChars%2A> 속성은 무효 공백 서식이 지정되는 방법을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-145">The <xref:System.Xml.XmlWriterSettings.Indent%2A> and <xref:System.Xml.XmlWriterSettings.IndentChars%2A> properties control how insignificant white space is formatted.</span></span> <span data-ttu-id="e373c-146">예를 들어, 요소 노드를 들여쓰려면</span><span class="sxs-lookup"><span data-stu-id="e373c-146">For example, to indent element nodes:</span></span>  
  
 [!code-csharp[XmlWriter_v2#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#8)]
 [!code-vb[XmlWriter_v2#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#8)]  
  
 <span data-ttu-id="e373c-147">사용 된 <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> 한 수준 들여쓰기가 추가 사용 하 여 새 줄에 각 특성을 작성 하려면:</span><span class="sxs-lookup"><span data-stu-id="e373c-147">Use the <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> to write each attribute on a new line with one extra level of indentation:</span></span>  
  
 [!code-csharp[XmlWriter_v2#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#9)]
 [!code-vb[XmlWriter_v2#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#9)]  
  
<a name="conformance"></a>   
## <a name="data-conformance"></a><span data-ttu-id="e373c-148">데이터 규칙</span><span class="sxs-lookup"><span data-stu-id="e373c-148">Data conformance</span></span>  
 <span data-ttu-id="e373c-149">두 개의 속성을 사용 하는 XML 작성기는 <xref:System.Xml.XmlWriterSettings> 클래스에 대 한 데이터 규칙 확인 하려면:</span><span class="sxs-lookup"><span data-stu-id="e373c-149">An XML writer uses two properties from the <xref:System.Xml.XmlWriterSettings> class to check for data conformance:</span></span>  
  
-   <span data-ttu-id="e373c-150">합니다 <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> 속성에는 XML 작성기입니다. 문자를 확인 하 고 throw 하도록 지시를 <xref:System.Xml.XmlException> 문자가 W3C에서 정의 된 대로 올바른 범위를 벗어나는 경우 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-150">The <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property instructs the XML writer to check characters and throw an <xref:System.Xml.XmlException> exception if any characters are outside the legal range, as defined by the W3C.</span></span>  
  
-   <span data-ttu-id="e373c-151"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> 속성에는 W3C에서 정의 된 대로 올바른 형식의 XML 1.0 문서 또는 문서 조각에 대 한 규칙을 사용 하 여 작성 중인 스트림이 준수 하는지 확인 하려면 XML 작성기를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-151">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</span></span> <span data-ttu-id="e373c-152">세 가지 규칙 수준은 다음 표에 설명 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-152">The three conformance levels are described in the following table.</span></span> <span data-ttu-id="e373c-153">기본값은 <xref:System.Xml.ConformanceLevel.Document>입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-153">The default is <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="e373c-154">자세한 내용은 참조는 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> 속성 및 <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-154">For details, see the <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property and the <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> enumeration.</span></span>  
  
    |<span data-ttu-id="e373c-155">수준</span><span class="sxs-lookup"><span data-stu-id="e373c-155">Level</span></span>|<span data-ttu-id="e373c-156">설명</span><span class="sxs-lookup"><span data-stu-id="e373c-156">Description</span></span>|  
    |-----------|-----------------|  
    |<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="e373c-157">XML 출력을 올바른 형식의 XML 1.0 문서에 대 한 규칙을 준수 하기 및 표준에 맞는 모든 프로세서에서 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-157">The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="e373c-158">XML 출력을 올바른 형식의 XML 1.0 문서 조각에 대 한 규칙을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-158">The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="e373c-159">XML 작성기 conformation 적용할 검사 (문서 또는 조각) 들어오는 데이터를 기반으로 수준을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-159">The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</span></span>|  
  
<a name="writing_elements"></a>   
## <a name="writing-elements"></a><span data-ttu-id="e373c-160">요소 작성</span><span class="sxs-lookup"><span data-stu-id="e373c-160">Writing elements</span></span>  
 <span data-ttu-id="e373c-161">다음을 사용할 수 있습니다 <xref:System.Xml.XmlWriter> 요소 노드를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-161">You can use the following <xref:System.Xml.XmlWriter> methods to write element nodes.</span></span> <span data-ttu-id="e373c-162">예를 들어 나열 된 메서드를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="e373c-162">For examples, see the methods listed.</span></span>  
  
|<span data-ttu-id="e373c-163">기능</span><span class="sxs-lookup"><span data-stu-id="e373c-163">Use</span></span>|<span data-ttu-id="e373c-164">대상</span><span class="sxs-lookup"><span data-stu-id="e373c-164">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteElementString%2A>|<span data-ttu-id="e373c-165">문자열 값을 포함 하 여 전체 요소 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-165">Write an entire element  node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>|<span data-ttu-id="e373c-166">여러 메서드를 사용 하 여 요소 값을 쓰기 위해 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-166">To write an element value by using multiple method calls.</span></span>  <span data-ttu-id="e373c-167">예를 들어, <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출하여 입력된 값을 작성하고, <xref:System.Xml.XmlWriter.WriteCharEntity%2A>를 호출하여 문자 엔터티를 작성하고, <xref:System.Xml.XmlWriter.WriteAttributeString%2A>을 호출하여 특성을 작성하거나 자식 요소를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-167">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value, <xref:System.Xml.XmlWriter.WriteCharEntity%2A> to write a character entity, <xref:System.Xml.XmlWriter.WriteAttributeString%2A> to write an attribute, or you can write a child element.</span></span> <span data-ttu-id="e373c-168">이 버전의 고급 버전 이기는 <xref:System.Xml.XmlWriter.WriteElementString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-168">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="e373c-169">호출 하면 요소를 닫으려면 합니다 <xref:System.Xml.XmlWriter.WriteEndElement%2A> 또는 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-169">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteNode%2A>|<span data-ttu-id="e373c-170">현재 위치에서 찾은 요소 노드를 복사 하는 <xref:System.Xml.XmlReader> 또는 <xref:System.Xml.XPath.XPathNavigator> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-170">To copy an element node found at the current position of an <xref:System.Xml.XmlReader> or <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="e373c-171">이 메서드를 호출하면 소스 개체의 모든 항목이 <xref:System.Xml.XmlWriter> 인스턴스에 복사됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-171">When called, it copies everything from the source object to the <xref:System.Xml.XmlWriter> instance.</span></span>|  
  
<a name="writing_attributes"></a>   
## <a name="writing-attributes"></a><span data-ttu-id="e373c-172">특성 작성</span><span class="sxs-lookup"><span data-stu-id="e373c-172">Writing attributes</span></span>  
 <span data-ttu-id="e373c-173">다음을 사용할 수 있습니다 <xref:System.Xml.XmlWriter> 요소 노드에서 특성을 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-173">You can use the following <xref:System.Xml.XmlWriter> methods to write attributes on element nodes.</span></span> <span data-ttu-id="e373c-174">이러한 메서드 데도 사용할 수 있습니다 요소에 네임 스페이스 선언을 만들려면 다음 섹션에 설명 된 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-174">These methods can also be used to create namespace declarations on an element, as discussed in the next section.</span></span>  
  
|<span data-ttu-id="e373c-175">기능</span><span class="sxs-lookup"><span data-stu-id="e373c-175">Use</span></span>|<span data-ttu-id="e373c-176">대상</span><span class="sxs-lookup"><span data-stu-id="e373c-176">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteAttributeString%2A>|<span data-ttu-id="e373c-177">문자열 값을 포함 하 여 전체 특성 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-177">To write an entire attribute node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|<span data-ttu-id="e373c-178">여러 메서드를 사용 하 여 특성 값을 쓸 다음을 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-178">To write the attribute value using multiple method calls.</span></span> <span data-ttu-id="e373c-179">예를 들어, 호출할 수 있습니다 <xref:System.Xml.XmlWriter.WriteValue%2A> 형식화 된 값을 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-179">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value.</span></span> <span data-ttu-id="e373c-180">이 버전의 고급 버전 이기는 <xref:System.Xml.XmlWriter.WriteElementString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-180">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="e373c-181">호출 하면 요소를 닫으려면는 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-181">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteAttributes%2A>|<span data-ttu-id="e373c-182">현재 위치에서 찾은 모든 특성을 복사 하는 <xref:System.Xml.XmlReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-182">To copy all the attributes found at the current position of an <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="e373c-183">기록 되는 특성에 판독기가 현재 위치한 노드의 형식에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-183">The attributes that are written depend on the type of node the reader is currently positioned on:</span></span><br /><br /> <span data-ttu-id="e373c-184">-특성 노드를 기록 현재 특성을 특성의 나머지 부분을 및 닫는 태그 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-184">-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</span></span><br /><span data-ttu-id="e373c-185">-요소 노드를 기록 요소에 포함 된 모든 특성.</span><span class="sxs-lookup"><span data-stu-id="e373c-185">-   For an element node, it writes all attributes contained by the element.</span></span><br /><span data-ttu-id="e373c-186">-XML 선언 노드에 대 한 선언에서 특성을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-186">-   For an XML declaration node, it writes all the attributes in the declaration.</span></span><br /><span data-ttu-id="e373c-187">-메서드는 다른 모든 노드 유형에 대해 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-187">-   For all other node types, the method throws an exception.</span></span>|  
  
<a name="handling_ns"></a>   
## <a name="handling-namespaces"></a><span data-ttu-id="e373c-188">네임 스페이스 처리</span><span class="sxs-lookup"><span data-stu-id="e373c-188">Handling namespaces</span></span>  
 <span data-ttu-id="e373c-189">네임스페이스는 XML 문서에서 요소 및 특성 이름을 정규화하는 데 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-189">Namespaces are used to qualify element and attribute names in an XML document.</span></span> <span data-ttu-id="e373c-190">Namespace 접두사에 대 한 URI 참조와 연결 된 네임 스페이스를 사용 하 여 특성과 해당 요소를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-190">Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</span></span> <span data-ttu-id="e373c-191">네임스페이스는 XML 문서에서 요소 및 특성 이름을 고유하게 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-191">Namespaces create element and attribute name uniqueness in an XML document.</span></span>  
  
 <span data-ttu-id="e373c-192"><xref:System.Xml.XmlWriter> 현재 네임 스페이스 범위에 정의 된 모든 네임 스페이스에 해당 하는 네임 스페이스 스택을 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-192">The <xref:System.Xml.XmlWriter> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</span></span> <span data-ttu-id="e373c-193">요소와 특성을 작성할 때 다음과 같은 방법으로 네임스페이스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-193">When writing elements and attributes you can utilize namespaces in the following ways:</span></span>  
  
-   <span data-ttu-id="e373c-194">사용 하 여 수동으로 네임 스페이스를 선언 합니다 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-194">Declare namespaces manually by using the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method.</span></span> <span data-ttu-id="e373c-195">이 기능은 네임스페이스 선언 수를 최적화하는 방법을 알 경우에 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-195">This can be useful when you know how to best optimize the number of namespace declarations.</span></span> <span data-ttu-id="e373c-196">예를 들어 참조 된 <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-196">For an example, see the <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
-   <span data-ttu-id="e373c-197">현재 네임스페이스 선언을 새 네임스페이스로 재정의</span><span class="sxs-lookup"><span data-stu-id="e373c-197">Override the current namespace declaration with a new namespace.</span></span> <span data-ttu-id="e373c-198">다음 코드에서를 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 메서드 네임 스페이스 URI를 변경에 대 한는 `"x"` 에서 접두사 `"123"` 에 `"abc"`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-198">In the following code, the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method changes the namespace URI for the `"x"` prefix from `"123"` to `"abc"`.</span></span>  
  
     [!code-csharp[XmlWriter_v2#18](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#18)]
     [!code-vb[XmlWriter_v2#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#18)]  
  
     <span data-ttu-id="e373c-199">이 코드는 다음 XML 문자열을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-199">The code generates the following XML string:</span></span>  
  
    ```xml  
    <x:root xmlns:x="123">  
      <item xmlns:x="abc" />  
    </x:root>  
    ```  
  
-   <span data-ttu-id="e373c-200">특성 또는 요소를 작성할 때 네임스페이스 접두사를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-200">Specify a namespace prefix when writing attributes or elements.</span></span> <span data-ttu-id="e373c-201">대부분의 요소 및 특성을 쓰는 데 메서드를 사용이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-201">Many of the methods used to write element and attributes enable you to do this.</span></span> <span data-ttu-id="e373c-202">예를 들어를 <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> 메서드 시작 태그를 쓰고 지정 된 네임 스페이스 및 접두사를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-202">For example, the <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> method writes a start tag and associates it with a specified namespace and prefix.</span></span>  
  
<a name="writing_types"></a>   
## <a name="writing-typed-data"></a><span data-ttu-id="e373c-203">형식화 된 데이터 작성</span><span class="sxs-lookup"><span data-stu-id="e373c-203">Writing typed data</span></span>  
 <span data-ttu-id="e373c-204"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드는 공용 언어 런타임 (CLR) 개체를 수락, 입력된 값은 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙에 따라 해당 문자열 표현으로 변환 및 사용 하 여 작성 된 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-204">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="e373c-205">이 메서드를 사용 하 여 보다 쉽게는 <xref:System.Xml.XmlConvert> 형식화 된 데이터를 작성 하기 전에 문자열 값으로 변환 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-205">This is easier than using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="e373c-206">형식화 된 값을 텍스트에 쓸 때 사용 하 여 텍스트도 serialize 되는 <xref:System.Xml.XmlConvert> 해당 스키마 형식에 대 한 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-206">When writing to text, the typed value is serialized to text by using the <xref:System.Xml.XmlConvert> rules for that schema type.</span></span>  
  
 <span data-ttu-id="e373c-207">CLR 형식에 해당 하는 기본 XSD 데이터 형식에 대 한 참조를 <xref:System.Xml.XmlWriter.WriteValue%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-207">For default XSD data types that correspond to CLR types, see the <xref:System.Xml.XmlWriter.WriteValue%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-208"><xref:System.Xml.XmlWriter> XML 데이터 저장소에 쓸 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-208">The <xref:System.Xml.XmlWriter> can also be used to write to an XML data store.</span></span> <span data-ttu-id="e373c-209">예를 들어, <xref:System.Xml.XPath.XPathNavigator> 클래스는 <xref:System.Xml.XmlWriter> 개체를 만들어 <xref:System.Xml.XmlDocument> 개체에 대한 노드를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-209">For example, the <xref:System.Xml.XPath.XPathNavigator> class can create an <xref:System.Xml.XmlWriter> object to create nodes for an <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="e373c-210">데이터 저장소를 사용 가능한 스키마 정보가 있으면는 <xref:System.Xml.XmlWriter.WriteValue%2A> 메서드에서 허용 되지 않는 형식으로 변환 하려고 하면 예외가 throw 됩니다. 데이터 저장소를 사용 가능한 스키마 정보가 없으면 합니다 <xref:System.Xml.XmlWriter.WriteValue%2A> 메서드는 모든 값으로 처리는 `xsd:anySimpleType` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-210">If the data store has schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method throws an exception if you try to convert to a type that is not allowed.If the data store does not have schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method treats all values as an `xsd:anySimpleType` type.</span></span>  
  
<a name="close"></a>   
## <a name="closing-the-xml-writer"></a><span data-ttu-id="e373c-211">XML 작성기를 닫기</span><span class="sxs-lookup"><span data-stu-id="e373c-211">Closing the XML writer</span></span>  
 <span data-ttu-id="e373c-212">사용 하는 경우 <xref:System.Xml.XmlWriter> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 않습니다는 <xref:System.Xml.XmlWriter.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-212">When you use <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes are not written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="e373c-213">예를 들어, 사용 중인 경우 <xref:System.Xml.XmlWriter> 채우는 데는 <xref:System.Xml.XmlDocument> 개체를 닫을 때까지 작성 된 요소와 대상 문서에 특성을 볼 수 없습니다는 <xref:System.Xml.XmlWriter> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-213">For example, if you are using <xref:System.Xml.XmlWriter> to populate an <xref:System.Xml.XmlDocument> object, you won't be able to see the written elements and attributes in the target document until you close the <xref:System.Xml.XmlWriter> instance.</span></span>  
  
<a name="async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="e373c-214">비동기 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="e373c-214">Asynchronous programming</span></span>  
 <span data-ttu-id="e373c-215">대부분의 <xref:System.Xml.XmlWriter> 메서드는 "Async" 메서드 이름의 끝에 있는 비동기 버전이 있으며 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-215">Most of the <xref:System.Xml.XmlWriter> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="e373c-216">예를 들어, 비동기 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 는 <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-216">For example, the asynchronous equivalent of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> is <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
 <span data-ttu-id="e373c-217">에 대 한 합니다 <xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 비동기는 대응 사용자, 반환 값을 문자열로 변환 하 고 사용 하지 않습니다는 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-217">For the <xref:System.Xml.XmlWriter.WriteValue%2A> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method instead.</span></span>  
  
<a name="security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="e373c-218">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="e373c-218">Security considerations</span></span>  
 <span data-ttu-id="e373c-219">작업할 때 다음 사항을 고려 합니다 <xref:System.Xml.XmlWriter> 클래스:</span><span class="sxs-lookup"><span data-stu-id="e373c-219">Consider the following when working with the <xref:System.Xml.XmlWriter> class:</span></span>  
  
-   <span data-ttu-id="e373c-220">throw 된 예외는 <xref:System.Xml.XmlWriter> 앱에 버블링 하지 않을 경로 정보가 노출 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-220">Exceptions thrown by the <xref:System.Xml.XmlWriter> can disclose path information that you do not want bubbled up to the app.</span></span> <span data-ttu-id="e373c-221">응용 프로그램 예외를 catch 하 고 적절 하 게 처리 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-221">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="e373c-222"><xref:System.Xml.XmlWriter> 에 전달 되는 모든 데이터의 유효성을 검사 하지 않습니다 합니다 <xref:System.Xml.XmlWriter.WriteDocType%2A> 또는 <xref:System.Xml.XmlWriter.WriteRaw%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-222"><xref:System.Xml.XmlWriter> does not validate any data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> or <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="e373c-223">임의의 데이터를 이러한 메서드에 전달 해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-223">You should not pass arbitrary data to these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-224">다음 예제 코드에서는 비동기 API를 사용 하 여 XML을 생성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-224">The following example code shows how to use the asynchronous API to generate XML.</span></span>  
  
```csharp  
async Task TestWriter(Stream stream)   
{  
    XmlWriterSettings settings = new XmlWriterSettings();  
    settings.Async = true;  
  
    using (XmlWriter writer = XmlWriter.Create(stream, settings)) {  
        await writer.WriteStartElementAsync("pf", "root", "http://ns");  
        await writer.WriteStartElementAsync(null, "sub", null);  
        await writer.WriteAttributeStringAsync(null, "att", null, "val");  
        await writer.WriteStringAsync("text");  
        await writer.WriteEndElementAsync();  
        await writer.WriteProcessingInstructionAsync("pName", "pValue");  
        await writer.WriteCommentAsync("cValue");  
        await writer.WriteCDataAsync("cdata value");  
        await writer.WriteEndElementAsync();  
        await writer.FlushAsync();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="e373c-225">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="e373c-225">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-226"><see cref="T:System.Xml.XmlWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-226">Initializes a new instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-227">파생 클래스에서 재정의되면 이 스트림 및 내부 스트림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-227">When overridden in a derived class, closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-228">모든 요소 또는 특성 열려 자동으로 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-228">Any elements or attributes left open are automatically closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e373c-229">사용 하는 경우는 <xref:System.Xml.XmlWriter> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <xref:System.Xml.XmlWriter.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-229">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="e373c-230">예를 들어, 채우는 XmlWriter를 사용 하는 경우는 <xref:System.Xml.XmlDocument>닫을 때까지는 <xref:System.Xml.XmlWriter>, 작성 된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-230">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-231">다음 예제에서는 XML 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-231">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-232"><see langword="Close" />가 호출된 후 호출하여 더 많은 출력을 작성하거나 이 호출 결과가 잘못된 XML 문서인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-232">A call is made to write more output after <see langword="Close" /> has been called or the result of this call is an invalid XML document.</span></span>

<span data-ttu-id="e373c-233">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-233">-or-</span></span>

<span data-ttu-id="e373c-234">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-234">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-235">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-235">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e373c-236">새 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-236">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-237">일부를 <xref:System.Xml.XmlWriter.Create%2A> 오버 로드 포함을 `settings` 허용 하는 매개 변수는 <xref:System.Xml.XmlWriterSettings> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-237">Some of the <xref:System.Xml.XmlWriter.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlWriterSettings> object.</span></span> <span data-ttu-id="e373c-238">이 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-238">You can use this object to:</span></span>  
  
-   <span data-ttu-id="e373c-239">만들어진 지원 하려는 기능 지정 <xref:System.Xml.XmlWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-239">Specify which features you want supported on the created <xref:System.Xml.XmlWriter> object.</span></span>  
  
-   <span data-ttu-id="e373c-240">재사용을 <xref:System.Xml.XmlWriterSettings> 여러 작성기 개체를 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-240">Reuse the <xref:System.Xml.XmlWriterSettings> object to create multiple writer objects.</span></span> <span data-ttu-id="e373c-241"><xref:System.Xml.XmlWriterSettings> 개체가 복사되고 생성된 각 작성기에 대해 읽기 전용으로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-241">The <xref:System.Xml.XmlWriterSettings> object is copied and marked read-only for each created writer.</span></span> <span data-ttu-id="e373c-242"><xref:System.Xml.XmlWriterSettings> 인스턴스에서 설정을 변경해도 설정이 같은 기존 작성기에는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-242">Changes to the settings on an <xref:System.Xml.XmlWriterSettings> instance do not affect existing writers with the same settings.</span></span> <span data-ttu-id="e373c-243">그러므로 같은 설정을 사용하면 같은 기능을 갖춘 여러 작성기를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-243">Thus, you can use the same settings to create multiple writers with the same functionality.</span></span> <span data-ttu-id="e373c-244">또는 <xref:System.Xml.XmlWriterSettings> 인스턴스에서 설정을 수정하고 다른 기능 집합이 포함된 새 작성기를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-244">Or, you can modify the settings on an <xref:System.Xml.XmlWriterSettings> instance and create a new writer with a different set of features.</span></span>  
  
-   <span data-ttu-id="e373c-245">기존 XML 작성기에 기능을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-245">Add features to an existing XML writer.</span></span> <span data-ttu-id="e373c-246"><xref:System.Xml.XmlWriter.Create%2A> 메서드는 다른 <xref:System.Xml.XmlWriter> 개체를 허용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-246">The <xref:System.Xml.XmlWriter.Create%2A> method can accept another <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="e373c-247">내부 <xref:System.Xml.XmlWriter> 개체를 정적으로 생성 하는 XML 작성기를 사용할 필요가 없습니다 <xref:System.Xml.XmlWriter.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-247">The underlying <xref:System.Xml.XmlWriter> object does not have to be an XML writer created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="e373c-248">예를 들어, 추가 기능을 추가 하려면 사용자 정의 XML 작성기를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-248">For example, you can specify a user-defined XML writer to add additional features to.</span></span>  
  
-   <span data-ttu-id="e373c-249">향상 된 규칙 검사에 대 한 규정 준수 등의 기능을 최대한 활용 합니다 [XML 1.0 권장 사항](https://www.w3.org/TR/2006/REC-xml-20060816/) 에서만 사용할 수 있는 <xref:System.Xml.XmlWriter> 정적으로 생성 된 개체 <xref:System.Xml.XmlWriter.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-249">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/) that are available only on <xref:System.Xml.XmlWriter> objects created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-250">사용 하는 경우는 <xref:System.Xml.XmlWriter.Create%2A> 받지 않은 오버 로드는 <xref:System.Xml.XmlWriterSettings> 개체를 다음 기본 작성기 설정이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-250">If you use a <xref:System.Xml.XmlWriter.Create%2A> overload that doesn't accept an <xref:System.Xml.XmlWriterSettings> object, the following default writer settings are used:</span></span>  
  
|<span data-ttu-id="e373c-251">설정</span><span class="sxs-lookup"><span data-stu-id="e373c-251">Setting</span></span>|<span data-ttu-id="e373c-252">기본값</span><span class="sxs-lookup"><span data-stu-id="e373c-252">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="e373c-253">공백 두 개</span><span class="sxs-lookup"><span data-stu-id="e373c-253">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="e373c-254"><xref:System.Xml.NamespaceHandling.Default> (제거 없음)</span><span class="sxs-lookup"><span data-stu-id="e373c-254"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="e373c-255">`\r\n`(캐리지 리턴, 줄 바꿈)</span><span class="sxs-lookup"><span data-stu-id="e373c-255">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
> [!NOTE]
>  <span data-ttu-id="e373c-256">.NET Framework에 포함 되어 있지만 합니다 <xref:System.Xml.XmlTextWriter> 구체적인 구현인 클래스의를 <xref:System.Xml.XmlWriter> 만드는 것을 권장 클래스 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-256">Although the .NET Framework includes the <xref:System.Xml.XmlTextWriter> class, which is a concrete implementation of the <xref:System.Xml.XmlWriter> class, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-257">작성하려는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-257">The stream to which you want to write.</span></span> <span data-ttu-id="e373c-258"><see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 스트림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-258">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <summary><span data-ttu-id="e373c-259">지정된 스트림을 사용하여 새 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-259">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified stream.</span></span></summary>
        <returns><span data-ttu-id="e373c-260"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-260">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-261">이 오버 로드를 사용 하는 경우는 <xref:System.Xml.XmlWriterSettings> 다음 기본 설정 사용 하 여 개체를 XML 작성기를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-261">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with the following default settings is used to create the XML writer:</span></span>  
  
|<span data-ttu-id="e373c-262">설정</span><span class="sxs-lookup"><span data-stu-id="e373c-262">Setting</span></span>|<span data-ttu-id="e373c-263">기본값</span><span class="sxs-lookup"><span data-stu-id="e373c-263">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="e373c-264">공백 두 개</span><span class="sxs-lookup"><span data-stu-id="e373c-264">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="e373c-265"><xref:System.Xml.NamespaceHandling.Default> (제거 없음)</span><span class="sxs-lookup"><span data-stu-id="e373c-265"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="e373c-266">`\r\n`(캐리지 리턴, 줄 바꿈)</span><span class="sxs-lookup"><span data-stu-id="e373c-266">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="e373c-267">만들어진된 작성기에서 지원할 기능을 지정 하려는 경우 사용 하는 오버 로드는 <xref:System.Xml.XmlWriterSettings> 해당 인수의 하나로 개체를 전달는 <xref:System.Xml.XmlWriterSettings> 사용자 지정 설정 사용 하 여 개체.</span><span class="sxs-lookup"><span data-stu-id="e373c-267">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 <span data-ttu-id="e373c-268">또한 XmlWriter 항상 바이트 순서 표시 (BOM) 기본 데이터 스트림에 씁니다. 그러나 일부 스트림에 BOM 없어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-268">Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="e373c-269">BOM을 생략할를 새로 만듭니다 <xref:System.Xml.XmlWriterSettings> 개체 및 인코딩 속성을 새 설정 <xref:System.Text.UTF8Encoding> false로 설정 하는 생성자에서 부울 값을 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-269">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-270">다음 예제에서는 XML 조각을 메모리 스트림으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-270">The following example writes an XML fragment to a memory stream.</span></span> <span data-ttu-id="e373c-271">(사용 된 <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> 새 XML 기록기 인스턴스에서 설정을 구성 하는 오버 로드 합니다.)</span><span class="sxs-lookup"><span data-stu-id="e373c-271">(It uses the <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> overload, which also configures the settings on the new XML writer instance.)</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-272"><paramref name="stream" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-272">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-273">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-273">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="e373c-274"><see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 <see cref="T:System.IO.TextWriter" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-274">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <summary><span data-ttu-id="e373c-275">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 새 <see cref="T:System.IO.TextWriter" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-275">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="e373c-276"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-276">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-277">이 오버 로드를 사용 하는 경우는 <xref:System.Xml.XmlWriterSettings> 기본 설정 사용 하 여 개체를 XML 작성기를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-277">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="e373c-278">설정</span><span class="sxs-lookup"><span data-stu-id="e373c-278">Setting</span></span>|<span data-ttu-id="e373c-279">기본값</span><span class="sxs-lookup"><span data-stu-id="e373c-279">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="e373c-280">공백 두 개</span><span class="sxs-lookup"><span data-stu-id="e373c-280">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="e373c-281"><xref:System.Xml.NamespaceHandling.Default> (제거 없음)</span><span class="sxs-lookup"><span data-stu-id="e373c-281"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="e373c-282">`\r\n`(캐리지 리턴, 줄 바꿈)</span><span class="sxs-lookup"><span data-stu-id="e373c-282">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="e373c-283">만들어진된 작성기에서 지원할 기능을 지정 하려는 경우 사용 하는 오버 로드는 <xref:System.Xml.XmlWriterSettings> 해당 인수의 하나로 개체를 전달는 <xref:System.Xml.XmlWriterSettings> 사용자 지정 설정 사용 하 여 개체.</span><span class="sxs-lookup"><span data-stu-id="e373c-283">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-284">다음 예제에서는 콘솔에 출력 하는 작성기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-284">The following example creates a writer that outputs to the console.</span></span>  
  
 [!code-csharp[XmlWriter_v2#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#3)]
 [!code-vb[XmlWriter_v2#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-285"><paramref name="text" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-285">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="e373c-286">쓰기에 사용할 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-286">The file to which you want to write.</span></span> <span data-ttu-id="e373c-287"><see cref="T:System.Xml.XmlWriter" />는 지정된 경로에 파일을 만들어 XML 1.0 텍스트 구문으로 해당 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-287">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="e373c-288"><paramref name="outputFileName" />은 파일 시스템 경로여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-288">The <paramref name="outputFileName" /> must be a file system path.</span></span></param>
        <summary><span data-ttu-id="e373c-289">지정된 파일 이름을 사용하여 새 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-289">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified filename.</span></span></summary>
        <returns><span data-ttu-id="e373c-290"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-290">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-291">이 오버 로드를 사용 하는 경우는 <xref:System.Xml.XmlWriterSettings> 기본 설정 사용 하 여 개체를 XML 작성기를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-291">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="e373c-292">설정</span><span class="sxs-lookup"><span data-stu-id="e373c-292">Setting</span></span>|<span data-ttu-id="e373c-293">기본값</span><span class="sxs-lookup"><span data-stu-id="e373c-293">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="e373c-294">공백 두 개</span><span class="sxs-lookup"><span data-stu-id="e373c-294">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="e373c-295"><xref:System.Xml.NamespaceHandling.Default> (제거 없음)</span><span class="sxs-lookup"><span data-stu-id="e373c-295"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="e373c-296">`\r\n`(캐리지 리턴, 줄 바꿈)</span><span class="sxs-lookup"><span data-stu-id="e373c-296">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="e373c-297">사용 하는 오버 로드를 사용 하 여 만들어진된 XML 작성기에서 지원할 기능을 지정 하려는 경우는 <xref:System.Xml.XmlWriterSettings> 해당 인수의 하나로 개체를 전달를 <xref:System.Xml.XmlWriterSettings> 사용자 지정 설정 사용 하 여 개체.</span><span class="sxs-lookup"><span data-stu-id="e373c-297">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-298">다음 예제에서는 <xref:System.Xml.XmlWriter> 개체 및 책 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-298">The following example creates an <xref:System.Xml.XmlWriter> object and writes a book node.</span></span>  
  
 [!code-csharp[XmlWriter_v2#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#2)]
 [!code-vb[XmlWriter_v2#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-299"><paramref name="url" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-299">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-300">쓰기에 사용할 <see cref="T:System.Text.StringBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-300">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="e373c-301"><see cref="T:System.Xml.XmlWriter" />가 쓰는 콘텐츠는 <see cref="T:System.Text.StringBuilder" />에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-301">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="e373c-302">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 새 <see cref="T:System.Text.StringBuilder" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-302">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="e373c-303"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-303">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-304">이 오버 로드를 사용 하는 경우는 <xref:System.Xml.XmlWriterSettings> 기본 설정 사용 하 여 개체를 XML 작성기를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-304">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="e373c-305">설정</span><span class="sxs-lookup"><span data-stu-id="e373c-305">Setting</span></span>|<span data-ttu-id="e373c-306">기본값</span><span class="sxs-lookup"><span data-stu-id="e373c-306">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="e373c-307">공백 두 개</span><span class="sxs-lookup"><span data-stu-id="e373c-307">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="e373c-308"><xref:System.Xml.NamespaceHandling.Default> (제거 없음)</span><span class="sxs-lookup"><span data-stu-id="e373c-308"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="e373c-309">`\r\n`(캐리지 리턴, 줄 바꿈)</span><span class="sxs-lookup"><span data-stu-id="e373c-309">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="e373c-310">사용 하는 오버 로드를 사용 하 여 만들어진된 XML 작성기에서 지원할 기능을 지정 하려는 경우는 <xref:System.Xml.XmlWriterSettings> 해당 인수의 하나로 개체를 전달를 <xref:System.Xml.XmlWriterSettings> 사용자 지정 설정 사용 하 여 개체.</span><span class="sxs-lookup"><span data-stu-id="e373c-310">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-311"><paramref name="builder" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-311">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-312">내부 작성기로 사용할 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-312">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <summary><span data-ttu-id="e373c-313">지정된 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-313">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></summary>
        <returns><span data-ttu-id="e373c-314">지정된 <see cref="T:System.Xml.XmlWriter" /> 개체를 래핑하는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-314">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-315">이 메서드는 기본 기능을 사용 하면 <xref:System.Xml.XmlWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-315">This method allows you add features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="e373c-316">내부 <xref:System.Xml.XmlWriter> 개체에 의해 생성 된 개체 수를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 또는 사용 하 여 만든 개체는 <xref:System.Xml.XmlTextWriter> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-316">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 <span data-ttu-id="e373c-317">이 오버 로드를 사용 하는 경우는 <xref:System.Xml.XmlWriterSettings> 기본 설정 사용 하 여 개체를 XML 작성기를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-317">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="e373c-318">설정</span><span class="sxs-lookup"><span data-stu-id="e373c-318">Setting</span></span>|<span data-ttu-id="e373c-319">기본값</span><span class="sxs-lookup"><span data-stu-id="e373c-319">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="e373c-320">공백 두 개</span><span class="sxs-lookup"><span data-stu-id="e373c-320">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="e373c-321"><xref:System.Xml.NamespaceHandling.Default> (제거 없음)</span><span class="sxs-lookup"><span data-stu-id="e373c-321"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="e373c-322">`\r\n`(캐리지 리턴, 줄 바꿈)</span><span class="sxs-lookup"><span data-stu-id="e373c-322">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="e373c-323">사용 하는 오버 로드를 사용 하 여 만들어진된 XML 작성기에서 지원할 기능을 지정 하려는 경우는 <xref:System.Xml.XmlWriterSettings> 해당 인수의 하나로 개체를 전달를 <xref:System.Xml.XmlWriterSettings> 사용자 지정 설정 사용 하 여 개체.</span><span class="sxs-lookup"><span data-stu-id="e373c-323">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-324"><paramref name="writer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-324">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-325">작성하려는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-325">The stream to which you want to write.</span></span> <span data-ttu-id="e373c-326"><see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 스트림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-326">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <param name="settings"><span data-ttu-id="e373c-327">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-327">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="e373c-328">값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-328">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="e373c-329"><see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-329">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="e373c-330">이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-330">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="e373c-331">스트림과 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-331">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the stream and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="e373c-332"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-332">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-333">XmlWriter 항상 바이트 순서 표시 (BOM) 기본 데이터 스트림에 씁니다. 그러나 일부 스트림에 BOM 없어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-333">XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="e373c-334">BOM을 생략할를 새로 만듭니다 <xref:System.Xml.XmlWriterSettings> 개체 및 인코딩 속성을 새 설정 <xref:System.Text.UTF8Encoding> false로 설정 하는 생성자에서 부울 값을 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-334">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-335">다음 예제에서는 XML 조각을 메모리 스트림으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-335">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-336"><paramref name="stream" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-336">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-337">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-337">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="e373c-338"><see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 <see cref="T:System.IO.TextWriter" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-338">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <param name="settings"><span data-ttu-id="e373c-339">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-339">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="e373c-340">값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-340">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="e373c-341"><see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-341">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="e373c-342">이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-342">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="e373c-343"><see cref="T:System.Xml.XmlWriter" /> 및 <see cref="T:System.IO.TextWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-343">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="e373c-344"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-344">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e373c-345">다음 예제에서는 XML 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-345">The following example writes out an XML string.</span></span>  
  
 [!code-csharp[XmlWriter_v2#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#4)]
 [!code-vb[XmlWriter_v2#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-346"><paramref name="text" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-346">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (outputFileName, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="e373c-347">쓰기에 사용할 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-347">The file to which you want to write.</span></span> <span data-ttu-id="e373c-348"><see cref="T:System.Xml.XmlWriter" />는 지정된 경로에 파일을 만들어 XML 1.0 텍스트 구문으로 해당 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-348">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="e373c-349"><paramref name="outputFileName" />은 파일 시스템 경로여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-349">The <paramref name="outputFileName" /> must be a file system path.</span></span></param>
        <param name="settings"><span data-ttu-id="e373c-350">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-350">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="e373c-351">값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-351">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="e373c-352"><see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-352">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="e373c-353">이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-353">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="e373c-354">파일 이름과 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-354">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the filename and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="e373c-355"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-355">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e373c-356">다음 예제에서는 <xref:System.Xml.XmlWriter> 정의 된 설정 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-356">The following example creates an <xref:System.Xml.XmlWriter> object with the defined settings.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-357"><paramref name="url" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-357">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-358">쓰기에 사용할 <see cref="T:System.Text.StringBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-358">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="e373c-359"><see cref="T:System.Xml.XmlWriter" />가 쓰는 콘텐츠는 <see cref="T:System.Text.StringBuilder" />에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-359">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <param name="settings"><span data-ttu-id="e373c-360">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-360">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="e373c-361">값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-361">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="e373c-362"><see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-362">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="e373c-363">이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-363">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="e373c-364"><see cref="T:System.Xml.XmlWriter" /> 및 <see cref="T:System.Text.StringBuilder" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-364">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.Text.StringBuilder" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="e373c-365"><see cref="T:System.Xml.XmlWriter" /> 개체</span><span class="sxs-lookup"><span data-stu-id="e373c-365">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-366"><paramref name="builder" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-366">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="e373c-367">내부 작성기로 사용할 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-367">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <param name="settings"><span data-ttu-id="e373c-368">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-368">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="e373c-369">값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-369">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="e373c-370"><see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-370">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="e373c-371">이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-371">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="e373c-372">지정된 <see cref="T:System.Xml.XmlWriter" /> 및 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-372">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="e373c-373">지정된 <see cref="T:System.Xml.XmlWriter" /> 개체를 래핑하는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-373">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-374">이 메서드는 기본 추가 기능을 사용 하면 <xref:System.Xml.XmlWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-374">This method allows you add additional features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="e373c-375">내부 <xref:System.Xml.XmlWriter> 개체에 의해 생성 된 개체 수를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 또는 사용 하 여 만든 개체는 <xref:System.Xml.XmlTextWriter> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-375">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-376"><paramref name="writer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-376">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-377">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-377">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-378">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-378">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-379"><see cref="T:System.Xml.XmlWriter" /> 클래스에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-379">Releases the resources used by the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-380"><see cref="T:System.Xml.XmlWriter" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-380">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-381">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-381">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-382">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-382">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="e373c-383">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-383"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e373c-384"><see cref="T:System.Xml.XmlWriter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-384">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-385">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-385">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-386">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-386">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="xmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-387">파생 클래스에서 재정의되면 버퍼에 있는 항목을 내부 스트림으로 플러시하고 내부 스트림도 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-387">When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-388">대신 이것을 <xref:System.Xml.XmlWriter.Close%2A> 버퍼에 있는 내용을 손실 하지 않고 내부 스트림에 자세히 작성 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="e373c-388">This is called instead of <xref:System.Xml.XmlWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
 <span data-ttu-id="e373c-389">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.FlushAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-389">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.FlushAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-390">다음 예제에서는 두 개의 XML 조각을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-390">The following example writes two XML fragments.</span></span>  
  
 [!code-cpp[XmlWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Flush/CPP/write2docs_v2.cpp#1)]
 [!code-csharp[XmlWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Flush/CS/write2docs_v2.cs#1)]
 [!code-vb[XmlWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Flush/VB/write2docs_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-391">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-391">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-392">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-392">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-393">버퍼에 있는 모든 내용을 내부 스트림으로 비동기적으로 플러시하고 내부 스트림도 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-393">Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <returns><span data-ttu-id="e373c-394">비동기 <see langword="Flush" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-394">The task that represents the asynchronous <see langword="Flush" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-395">비동기 버전이 <xref:System.Xml.XmlWriter.Flush%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-395">This is the asynchronous version of <xref:System.Xml.XmlWriter.Flush%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-396">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-396">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-397">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-397">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-398">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-398">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-399">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-399">-or-</span></span>

<span data-ttu-id="e373c-400"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-400">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-401">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-401">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-402">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-402">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public abstract string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string" Usage="xmlWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="e373c-403">찾으려는 접두사를 가진 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-403">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="e373c-404">파생 클래스에서 재정의되면 네임스페이스 URI의 현재 네임스페이스 범위에 정의된 가장 비슷한 접두사를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-404">When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="e373c-405">일치하는 접두사이거나 현재 범위에 일치하는 네임스페이스 URI가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-405">The matching prefix or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e373c-406">다음 예제에서는 책을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-406">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-407"><paramref name="ns" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-407"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-408">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-408">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-409">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-409">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlWriterSettings ^ Settings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlWriterSettings" Usage="System.Xml.XmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e373c-410">이 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-410">Gets the <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value><span data-ttu-id="e373c-411">이 작성기 인스턴스를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriterSettings" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-411">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this writer instance.</span></span> <span data-ttu-id="e373c-412"><see cref="Overload:System.Xml.XmlWriter.Create" /> 메서드를 사용하여 작성기를 만들지 않은 경우 이 속성은 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-412">If this writer was not created using the <see cref="Overload:System.Xml.XmlWriter.Create" /> method, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-413"><xref:System.Xml.XmlWriterSettings> 클래스를 만든된 작성기 인스턴스에에서 지원할 기능 집합을 지정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-413">The <xref:System.Xml.XmlWriterSettings> class is used to specify the set of features to support on the created writer instance.</span></span> <span data-ttu-id="e373c-414">합니다 <xref:System.Xml.XmlWriterSettings> 에서 반환 된 개체는 <xref:System.Xml.XmlWriter.Settings%2A> 속성을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-414">The <xref:System.Xml.XmlWriterSettings> object returned by the <xref:System.Xml.XmlWriter.Settings%2A> property cannot be modified.</span></span> <span data-ttu-id="e373c-415">예외가 throw 되 고 개별 설정을 결과 변경 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-415">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-416">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-416">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-417">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-417">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-418">이 멤버에 대한 설명은 <see cref="M:System.IDisposable.Dispose" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e373c-418">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e373c-419">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e373c-419">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e373c-420"><xref:System.Xml.XmlWriter> 인스턴스가 <xref:System.IDisposable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-420">It can be used only when the <xref:System.Xml.XmlWriter> instance is cast to an <xref:System.IDisposable> interface.</span></span>

<span data-ttu-id="e373c-421">이 멤버는 이식 가능한 클래스 라이브러리 프로젝트에서 사용 될 경우 다르게 동작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-421">This member may behave differently when it is used in a Portable Class Library project.</span></span> <span data-ttu-id="e373c-422">자세한 내용은 [이식 가능한 클래스 라이브러리의 API 차이점](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-422">For more information, see [API Differences in Portable Class Library](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributes">
      <MemberSignature Language="C#" Value="public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttributes(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttributes (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttributes(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributes : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteAttributes : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteAttributes (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e373c-423">특성을 복사할 원본 <see langword="XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-423">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr"><span data-ttu-id="e373c-424"><see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-424"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e373c-425">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XmlReader" />의 현재 위치에 있는 모든 특성을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-425">When overridden in a derived class, writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-426">판독기가 위치에 `element` 노드 `WriteAttributes` 포함 된 모든 특성을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-426">If the reader is positioned on an `element` node `WriteAttributes` copies all the contained attributes.</span></span> <span data-ttu-id="e373c-427">판독기가 위치에 `attribute` 노드를이 메서드는 현재 특성을 다음 나머지 특성 작성을 작성 요소의 닫는 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-427">If the reader is positioned on an `attribute` node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</span></span> <span data-ttu-id="e373c-428">판독기가 위치에 `XmlDeclaration` 노드를이 메서드는 선언에서 모든 특성을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-428">If the reader is positioned on an `XmlDeclaration` node, this method writes all the attributes in the declaration.</span></span> <span data-ttu-id="e373c-429">이 메서드에서 throw 하는 다른 노드 형식에 판독기가 배치 하는 경우는 <xref:System.Xml.XmlException>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-429">If the reader is positioned on any other node type this method throws an <xref:System.Xml.XmlException>.</span></span>  
  
 <span data-ttu-id="e373c-430">이 메서드를 사용 하 여 호출 하면 <xref:System.Xml.XmlValidatingReader>을 작성 하는 경우 모든 콘텐츠 (엔터티에서 확장 되었습니다) 문서가 잘못 될 수 있는 교체 하는 올바른 형식의 XML을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-430">If this method is called using <xref:System.Xml.XmlValidatingReader>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</span></span> <span data-ttu-id="e373c-431">예를 들어, 특성에는 `&gt;` 엔터티는 확장 된, 잘 구성 된 문서를 확장 하도록 >는 사용 하 여 작성 하는 경우 대체 `&gt;`합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-431">For example, if an attribute includes an `&gt;` entity that has been expanded, to ensure a well-formed document the expanded > is replaced when written out with `&gt;`.</span></span>  
  
 <span data-ttu-id="e373c-432">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-432">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-433">다음 예제에서는 출력에 모든 요소를 복사, 태그 이름을 대문자로 변경 및 변경 되지 않은 모든 특성을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-433">The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributes#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributes/CPP/writeattrs_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributes/CS/writeattrs_v2.cs#1)]
 [!code-vb[XmlWriter.WriteAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributes/VB/writeattrs_v2.vb#1)]  
  
 <span data-ttu-id="e373c-434">이 예제에서는 파일을 사용 하 여 `test1.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-434">The example uses the file, `test1.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteAttributes#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteAttributes/XML/test1.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-435"><paramref name="reader" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-435"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="e373c-436">판독기가 <see langword="element" />, <see langword="attribute" /> 또는 <see langword="XmlDeclaration" /> 노드에 배치되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-436">The reader is not positioned on an <see langword="element" />, <see langword="attribute" /> or <see langword="XmlDeclaration" /> node.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-437">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-437">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-438">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-438">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAttributesAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAttributesAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAttributesAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributesAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e373c-439">특성을 복사할 원본 <see langword="XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-439">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr"><span data-ttu-id="e373c-440"><see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-440"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e373c-441"><see cref="T:System.Xml.XmlReader" />의 현재 위치에서 찾은 모든 특성을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-441">Asynchronously writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="e373c-442">비동기 <see langword="WriteAttributes" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-442">The task that represents the asynchronous <see langword="WriteAttributes" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-443">비동기 버전이 <xref:System.Xml.XmlWriter.WriteAttributes%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-443">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributes%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-444">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-444">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-445">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-445">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-446">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-446">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-447">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-447">-or-</span></span>

<span data-ttu-id="e373c-448"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-448">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-449">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-449">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-450">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-450">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttributeString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-451">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-451">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-452">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-452">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-453">파생 클래스에서 재정의되면 지정된 값이 있는 특성을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-453">When overridden in a derived class, writes an attribute with the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-454">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-454">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-455">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-455">The local name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-456">특성 값</span><span class="sxs-lookup"><span data-stu-id="e373c-456">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-457">파생 클래스에서 재정의되면 지정된 로컬 이름 및 값이 있는 특성을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-457">When overridden in a derived class, writes out the attribute with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-458">`WriteAttributeString`에서는 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-458">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="e373c-459">특성 값을 작은따옴표를 포함 하는 경우 사용 하 여 바뀝니다 `&quot;` 고 `&apos;` 각각.</span><span class="sxs-lookup"><span data-stu-id="e373c-459">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="e373c-460">작성 하는 경우는 `xml:space` 특성 작성기 특성 값이 유효한 지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-460">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="e373c-461">(유효한 값은 `preserve` 또는 `default`.)</span><span class="sxs-lookup"><span data-stu-id="e373c-461">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="e373c-462">작성 하는 경우는 `xml:lang` 특성 작성기 특성 값이 있는 W3C XML 1.0 권장 사항에 따라 유효 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-462">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="e373c-463">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-463">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-464">다음 예제에서는 책을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-464">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-465">판독기 상태가 <see langword="WriteState.Element" />가 아니거나 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-465">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="e373c-466">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-466">-or-</span></span>

<span data-ttu-id="e373c-467">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-467">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-468">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-468">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-469"><see langword="xml:space" /> 또는 <see langword="xml:lang" /> 특성 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-469">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-470">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-470">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-471">특성에 연결할 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-471">The namespace URI to associate with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-472">특성 값</span><span class="sxs-lookup"><span data-stu-id="e373c-472">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-473">파생 클래스에서 재정의되면 지정된 로컬 이름, 네임스페이스 URI 및 값을 갖는 특성을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-473">When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-474">이 메서드는 사용자 정의 된 네임 스페이스 접두사가 포함 된 특성을 작성 하 고 지정된 된 네임 스페이스를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-474">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="e373c-475">경우 `localName` "xmlns" 이면이 메서드에서 처리 하는이 네임 스페이스 선언으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-475">If `localName` is "xmlns" then this method also treats this as a namespace declaration.</span></span> <span data-ttu-id="e373c-476">이 경우에 `ns` 인수로 사용할 수 있습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-476">In this case, the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="e373c-477">`WriteAttributeString`에서는 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-477">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="e373c-478">특성 값을 작은따옴표를 포함 하는 경우 사용 하 여 바뀝니다 `&quot;` 고 `&apos;` 각각.</span><span class="sxs-lookup"><span data-stu-id="e373c-478">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="e373c-479">작성 하는 경우는 `xml:space` 특성 작성기 특성 값이 유효한 지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-479">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="e373c-480">(유효한 값은 `preserve` 또는 `default`.)</span><span class="sxs-lookup"><span data-stu-id="e373c-480">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="e373c-481">작성 하는 경우는 `xml:lang` 특성 작성기 특성 값이 있는 W3C XML 1.0 권장 사항에 따라 유효 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-481">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="e373c-482">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-482">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-483">다음 예제에서는 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 네임 스페이스 선언을 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-483">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-484">판독기 상태가 <see langword="WriteState.Element" />가 아니거나 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-484">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="e373c-485">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-485">-or-</span></span> 
<span data-ttu-id="e373c-486">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-486">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-487">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-487">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-488"><see langword="xml:space" /> 또는 <see langword="xml:lang" /> 특성 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-488">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-489">특성의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-489">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-490">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-490">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-491">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-491">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-492">특성 값</span><span class="sxs-lookup"><span data-stu-id="e373c-492">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-493">파생 클래스에서 재정의되면 지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 갖는 특성을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-493">When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-494">이 메서드는 사용자 정의 된 네임 스페이스 접두사가 포함 된 특성을 작성 하 고 지정된 된 네임 스페이스를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-494">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="e373c-495">접두사 "xmlns"는 경우 다음이 네임 스페이스 선언으로 처리 하는이 메서드와 URI에 지정 된 특성 값을 제공 하는 네임 스페이스를 사용 하 여 선언 된 접두사에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-495">If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</span></span> <span data-ttu-id="e373c-496">이 경우에 `ns` 인수로 사용할 수 있습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-496">In this case the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="e373c-497">`WriteAttributeString`에서는 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-497">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="e373c-498">특성 값을 작은따옴표를 포함 하는 경우 사용 하 여 바뀝니다 `&quot;` 고 `&apos;` 각각.</span><span class="sxs-lookup"><span data-stu-id="e373c-498">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="e373c-499">작성 하는 경우는 `xml:space` 특성 작성기 특성 값이 유효한 지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-499">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="e373c-500">(유효한 값은 `preserve` 또는 `default`.)</span><span class="sxs-lookup"><span data-stu-id="e373c-500">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="e373c-501">작성 하는 경우는 `xml:lang` 특성 작성기 특성 값이 있는 W3C XML 1.0 권장 사항에 따라 유효 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-501">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="e373c-502">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-502">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-503">다음 예제에서는 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 네임 스페이스 선언을 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-503">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-504">판독기 상태가 <see langword="WriteState.Element" />가 아니거나 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-504">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="e373c-505">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-505">-or-</span></span> 
<span data-ttu-id="e373c-506">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-506">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-507">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-507">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-508"><see langword="xml:space" /> 또는 <see langword="xml:lang" /> 특성 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-508">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="e373c-509"><paramref name="localName" /> 또는 <paramref name="ns" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-509">The <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAttributeStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAttributeStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAttributeStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributeStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-510">특성의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-510">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-511">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-511">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-512">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-512">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-513">특성 값</span><span class="sxs-lookup"><span data-stu-id="e373c-513">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-514">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 특성을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-514">Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="e373c-515">비동기 <see langword="WriteAttributeString" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-515">The task that represents the asynchronous <see langword="WriteAttributeString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-516">비동기 버전이 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-516">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-517">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-517">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-518">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-518">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-519">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-519">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-520">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-520">-or-</span></span> 
<span data-ttu-id="e373c-521"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-521">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-522">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-522">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-523">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-523">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public abstract void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-524">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-524">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-525">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-525">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-526">쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-526">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="e373c-527">파생 클래스에서 재정의되면 지정된 이진 바이트를 Base64로 인코딩하고 결과 텍스트를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-527">When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-528">예를 들어, 바이트 버퍼 GIF 이미지의 이진 콘텐츠를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-528">For example, the byte buffer may contain the binary contents of a GIF image.</span></span> <span data-ttu-id="e373c-529">명확 하 게 하지 않는 것이 올바른 XML입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-529">This clearly would not be valid XML.</span></span> <span data-ttu-id="e373c-530">`Base64` 65 US-ASCII 문자 구성 텍스트 형태로 임의 바이트 시퀀스를 나타내도록은 인코딩 ([z0-9 + =])는 각 문자 이진 데이터의 6 비트를 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-530">The `Base64` encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</span></span> <span data-ttu-id="e373c-531">자세한 내용은 참조 요청에 대 한 주석 (RFC)에 있는 1521 합니다 [의견 웹 사이트에 대 한 요청](https://www.rfc-editor.org)합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-531">For more information, see Requests for Comments (RFC) 1521 located on the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="e373c-532">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteBase64Async%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-532">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-533">다음 예제에서는 합니다 <xref:System.Xml.XmlWriter.WriteBase64%2A> 메서드를 `Base64` 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-533">The following example uses the <xref:System.Xml.XmlWriter.WriteBase64%2A> method to write `Base64` data.</span></span> <span data-ttu-id="e373c-534">`Base64` 내에 포함 된 데이터는 `<image>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-534">The `Base64` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#3)]
 [!code-vb[XmlReader_Read_Write_Binary#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-535"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-535"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e373c-536"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-536"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e373c-537">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-537">-or-</span></span> 
<span data-ttu-id="e373c-538">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-538">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-539">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-539">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-540">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-540">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-541">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-541">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-542">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-542">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-543">쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-543">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="e373c-544">지정된 바이너리 바이트를 Base64로 비동기적으로 인코딩하고 결과 텍스트를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-544">Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="e373c-545">비동기 <see langword="WriteBase64" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-545">The task that represents the asynchronous <see langword="WriteBase64" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-546">비동기 버전이 <xref:System.Xml.XmlWriter.WriteBase64%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-546">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-547">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-547">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-548">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-548">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-549">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-549">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-550">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-550">-or-</span></span>

<span data-ttu-id="e373c-551"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-551">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-552">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-552">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-553">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-553">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public virtual void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHex : byte[] * int * int -&gt; unit&#xA;override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-554">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-554">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-555">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-555">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-556">쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-556">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="e373c-557">파생 클래스에서 재정의되면 지정된 이진 바이트를 <see langword="BinHex" />로 인코딩하고 결과 텍스트를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-557">When overridden in a derived class, encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-558">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-558">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-559">다음 예제에서는 합니다 <xref:System.Xml.XmlWriter.WriteBinHex%2A> 메서드를 `BinHex` 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-559">The following example uses the <xref:System.Xml.XmlWriter.WriteBinHex%2A> method to write `BinHex` data.</span></span> <span data-ttu-id="e373c-560">`BinHex` 내에 포함 된 데이터는 `<image>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-560">The `BinHex` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#1)]
 [!code-vb[XmlReader_Read_Write_Binary#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-561"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-561"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-562">작성기가 닫혀 있거나 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-562">The writer is closed or in error state.</span></span>
<span data-ttu-id="e373c-563">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-563">-or-</span></span>

<span data-ttu-id="e373c-564">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-564">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-565">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-565">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e373c-566"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-566"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e373c-567">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-567">-or-</span></span> 
<span data-ttu-id="e373c-568">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-568">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-569">인코딩할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-569">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-570">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-570">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-571">쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-571">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="e373c-572">지정된 바이너리 바이트를 <see langword="BinHex" />로 비동기적으로 인코딩하고 결과 텍스트를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-572">Asynchronously encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="e373c-573">비동기 <see langword="WriteBinHex" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-573">The task that represents the asynchronous <see langword="WriteBinHex" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-574">비동기 버전이 <xref:System.Xml.XmlWriter.WriteBinHex%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-574">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-575">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-575">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-576">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-576">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-577">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-577">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-578">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-578">-or-</span></span>

<span data-ttu-id="e373c-579"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-579">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-580">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-580">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-581">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-581">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public abstract void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCData : string -&gt; unit" Usage="xmlWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e373c-582">CDATA 블록 내부에 배치할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-582">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="e373c-583">파생 클래스에서 재정의되면 지정된 텍스트가 포함된 &lt;![CDATA[...]]&gt; 블록을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-583">When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-584">하는 경우 `text` 중 하나는 `null` 또는 `String.Empty`,이 메서드는 빈 CDATA 블록을 예를 들어 씁니다 \<! [ CDATA]</span><span class="sxs-lookup"><span data-stu-id="e373c-584">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-585">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-585">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-586">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-586">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-587">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-587">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCDataAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCDataAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCDataAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCDataAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCDataAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCDataAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e373c-588">CDATA 블록 내부에 배치할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-588">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="e373c-589">지정된 텍스트를 포함하는 &lt;![CDATA[...]]&gt; 블록을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-589">Asynchronously writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="e373c-590">비동기 <see langword="WriteCData" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-590">The task that represents the asynchronous <see langword="WriteCData" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-591">비동기 버전이 <xref:System.Xml.XmlWriter.WriteCData%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-591">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCData%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-592">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-592">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-593">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-593">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-594">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-594">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-595">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-595">-or-</span></span>

<span data-ttu-id="e373c-596"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-596">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-597">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-597">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-598">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-598">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntity : char -&gt; unit" Usage="xmlWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="e373c-599">문자 엔터티를 생성할 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-599">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="e373c-600">파생 클래스에서 재정의되면 지정된 유니코드 문자 값의 문자 엔터티를 생성하게 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-600">When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-601">이 메서드는 16 진수 문자 엔터티 참조 형식에서 유니코드 문자를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-601">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
 <span data-ttu-id="e373c-602">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-602">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-603">참조 <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> 이 메서드를 사용 하는 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-603">See <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-604">문자가 서로게이트 쌍 문자 범위 <see langword="0xd800" /> - <see langword="0xdfff" />에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-604">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-605">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-605">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-606">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-606">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharEntityAsync(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharEntityAsync (ch As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharEntityAsync(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharEntityAsync ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="e373c-607">문자 엔터티를 생성할 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-607">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="e373c-608">지정된 유니코드 문자 값에 대한 문자 엔터티가 비동기적으로 생성되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-608">Asynchronously forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <returns><span data-ttu-id="e373c-609">비동기 <see langword="WriteCharEntity" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-609">The task that represents the asynchronous <see langword="WriteCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-610">비동기 버전이 <xref:System.Xml.XmlWriter.WriteCharEntity%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-610">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-611">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-611">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-612">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-612">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-613">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-613">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-614">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-614">-or-</span></span>

<span data-ttu-id="e373c-615"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-615">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-616">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-616">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-617">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-617">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public abstract void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteChars : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-618">쓸 텍스트가 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-618">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-619">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-619">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-620">쓸 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-620">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e373c-621">파생 클래스에서 재정의되면 한 번에 한 버퍼씩 텍스트를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-621">When overridden in a derived class, writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-622">이 메서드 한 번에 많은 양의 텍스트 하나의 버퍼를 쓰는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-622">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="e373c-623">특수 한 처리 되도록 해야 합니다 `WriteChars` 메서드가 여러 버퍼 쓰기 서로게이트 쌍 문자가 분할 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-623">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="e373c-624">XML 사양 서로게이트 쌍에 대 한 유효한 범위를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-624">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="e373c-625">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-625">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-626"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-626"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e373c-627"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-627"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e373c-628">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-628">-or-</span></span> 
<span data-ttu-id="e373c-629">버퍼 길이에서 <paramref name="index" />를 뺀 값이 <paramref name="count" />보다 작고, 호출한 결과 서로게이트 쌍 문자가 분할되거나 잘못된 서로게이트 쌍이 작성되는 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-629">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-630"><paramref name="buffer" /> 매개 변수 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-630">The <paramref name="buffer" /> parameter value is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-631">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-631">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-632">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-632">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharsAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharsAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharsAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharsAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-633">쓸 텍스트가 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-633">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-634">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-634">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-635">쓸 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-635">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e373c-636">한 번에 한 버퍼씩 텍스트를 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-636">Asynchronously writes text one buffer at a time.</span></span></summary>
        <returns><span data-ttu-id="e373c-637">비동기 <see langword="WriteChars" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-637">The task that represents the asynchronous <see langword="WriteChars" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-638">비동기 버전이 <xref:System.Xml.XmlWriter.WriteChars%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-638">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteChars%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-639">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-639">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-640">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-640">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-641">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-641">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-642">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-642">-or-</span></span>

<span data-ttu-id="e373c-643"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-643">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-644">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-644">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-645">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-645">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public abstract void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteComment : string -&gt; unit" Usage="xmlWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e373c-646">주석 내에 배치할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-646">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="e373c-647">파생 클래스에서 재정의되면 지정된 텍스트가 포함된 주석 &lt;!--...--&gt;을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-647">When overridden in a derived class, writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-648">하는 경우 `text` 중 하나는 `null` 또는 `String.Empty`, 예를 들어이 메서드는 데이터 콘텐츠가 없는 사용 하 여 주석을 작성 \<!---> 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-648">If `text` is either `null` or `String.Empty`, this method writes a comment with no data content, for example \<!---->.</span></span>  
  
 <span data-ttu-id="e373c-649">경우 `text` 대시 두 개에 잘못 된 시퀀스를 포함 "-"는 <xref:System.Xml.XmlWriter> throw 하거나 수는 <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> 개체) 또는 대시 사이 공백을 삽입 "--" 텍스트는 올바른 XML 주석 되도록 (<xref:System.Xml.XmlWriter> 가 만든 개체는 <xref:System.Xml.XmlWriter.Create%2A> 메서드).</span><span class="sxs-lookup"><span data-stu-id="e373c-649">If `text` contains an invalid sequence of two dashes "--" the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="e373c-650">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-650">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-651">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-651">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-652">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-652">The text would result in a non-well-formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-653">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-653">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-654">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-654">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCommentAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCommentAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCommentAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCommentAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCommentAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCommentAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e373c-655">주석 내에 배치할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-655">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="e373c-656">지정된 텍스트를 포함하는 주석 &lt;!--...--&gt;을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-656">Asynchronously writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="e373c-657">비동기 <see langword="WriteComment" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-657">The task that represents the asynchronous <see langword="WriteComment" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-658">비동기 버전이 <xref:System.Xml.XmlWriter.WriteComment%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-658">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteComment%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-659">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-659">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-660">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-660">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-661">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-661">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-662">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-662">-or-</span></span>

<span data-ttu-id="e373c-663"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-663">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-664">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-664">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-665">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-665">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocType : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-666">DOCTYPE의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-666">The name of the DOCTYPE.</span></span> <span data-ttu-id="e373c-667">이 이름은 비어 있지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-667">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="e373c-668">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <paramref name="pubid" />와 <paramref name="sysid" />는 지정된 인수 값으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-668">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="e373c-669"><paramref name="pubid" />가 <see langword="null" />이고 <paramref name="sysid" />가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <paramref name="sysid" />는 이 인수 값으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-669">If <paramref name="pubid" /> is <see langword="null" /> and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="e373c-670">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-670">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="e373c-671">파생 클래스에서 재정의되면 지정된 이름 및 선택적 특성이 있는 DOCTYPE 선언을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-671">When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-672">이 메서드는 잘못 된 문자에 대 한 확인 되지 `pubid`하십시오 `sysid` 또는 `subset`합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-672">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="e373c-673">또한 확인 하지 않습니다 잘 구성 된 내부 하위 집합 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-673">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e373c-674">합니다 <xref:System.Xml.XmlWriter> 에 전달 되는 데이터의 유효성을 검사 하지 않습니다는 <xref:System.Xml.XmlWriter.WriteDocType%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-674">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="e373c-675">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-675">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="e373c-676">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-676">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-677">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-677">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-678">이 메서드가 루트 요소 다음의 프롤로그 외부에서 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-678">This method was called outside the prolog (after the root element).</span></span>

<span data-ttu-id="e373c-679">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-679">-or-</span></span>

<span data-ttu-id="e373c-680">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-680">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-681">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-681">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-682"><paramref name="name" />의 값이 잘못된 XML이 되는 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-682">The value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteDocTypeAsync(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteDocTypeAsync (name As String, pubid As String, sysid As String, subset As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteDocTypeAsync(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteDocTypeAsync (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pubid" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sysid" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subset" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-683">DOCTYPE의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-683">The name of the DOCTYPE.</span></span> <span data-ttu-id="e373c-684">이 이름은 비어 있지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-684">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="e373c-685">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <paramref name="pubid" />와 <paramref name="sysid" />는 지정된 인수 값으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-685">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="e373c-686"><paramref name="pubid" />가 <see langword="null" />이고 <paramref name="sysid" />가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <paramref name="sysid" />는 이 인수 값으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-686">If <paramref name="pubid" /> is <see langword="null" /> and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="e373c-687">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-687">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="e373c-688">지정된 이름과 선택적 특성을 사용하여 DOCTYPE 선언을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-688">Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <returns><span data-ttu-id="e373c-689">비동기 <see langword="WriteDocType" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-689">The task that represents the asynchronous <see langword="WriteDocType" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-690">비동기 버전이 <xref:System.Xml.XmlWriter.WriteDocType%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-690">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteDocType%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-691">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-691">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-692">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-692">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-693">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-693">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-694">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-694">-or-</span></span>

<span data-ttu-id="e373c-695"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-695">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-696">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-696">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-697">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-697">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-698">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-698">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-699">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-699">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-700">문자열 값이 포함된 요소를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-700">Writes an element containing a string value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-701">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-701">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-702">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-702">The local name of the element.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-703">요소의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-703">The value of the element.</span></span></param>
        <summary><span data-ttu-id="e373c-704">지정된 로컬 이름 및 값을 사용하여 요소를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-704">Writes an element with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-705">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-705">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-706">다음 예제에서는 XML 조각을 만들려면 몇 가지 쓰기 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-706">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-707"><paramref name="localName" /> 값이 <see langword="null" /> 또는 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-707">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="e373c-708">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-708">-or-</span></span> 
<span data-ttu-id="e373c-709">매개 변수 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-709">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-710">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-710">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-711">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-711">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-712">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-712">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-713">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-713">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-714">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-714">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-715">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-715">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-716">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-716">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-717">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-717">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-718">요소와 연결할 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-718">The namespace URI to associate with the element.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-719">요소의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-719">The value of the element.</span></span></param>
        <summary><span data-ttu-id="e373c-720">지정된 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-720">Writes an element with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-721">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-721">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-722">다음 예제에서는 XML 조각을 만들려면 몇 가지 쓰기 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-722">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-723"><paramref name="localName" /> 값이 <see langword="null" /> 또는 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-723">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="e373c-724">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-724">-or-</span></span> 
<span data-ttu-id="e373c-725">매개 변수 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-725">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-726">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-726">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-727">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-727">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-728">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-728">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-729">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-729">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-730">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-730">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-731">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-731">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-732">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-732">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-733">요소의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-733">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-734">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-734">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-735">요소의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-735">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-736">요소의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-736">The value of the element.</span></span></param>
        <summary><span data-ttu-id="e373c-737">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-737">Writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-738">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-738">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-739"><paramref name="localName" /> 값이 <see langword="null" /> 또는 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-739">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="e373c-740">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-740">-or-</span></span> 
<span data-ttu-id="e373c-741">매개 변수 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-741">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-742">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-742">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-743">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-743">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-744">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-744">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-745">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-745">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-746">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-746">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-747">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-747">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-748">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-748">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteElementStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteElementStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteElementStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteElementStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-749">요소의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-749">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-750">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-750">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-751">요소의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-751">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="e373c-752">요소의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-752">The value of the element.</span></span></param>
        <summary><span data-ttu-id="e373c-753">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-753">Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="e373c-754">비동기 <see langword="WriteElementString" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-754">The task that represents the asynchronous <see langword="WriteElementString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-755">비동기 버전이 <xref:System.Xml.XmlWriter.WriteElementString%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-755">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteElementString%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-756">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-756">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-757">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-757">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-758">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-758">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-759">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-759">-or-</span></span>

<span data-ttu-id="e373c-760"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-760">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-761">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-761">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-762">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-762">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttribute : unit -&gt; unit" Usage="xmlWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-763">파생 클래스에서 재정의되면 이전 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 호출을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-763">When overridden in a derived class, closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-764">호출 하는 경우 `WriteStartAttribute`,이 메서드를 사용 하 여 특성을 닫을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-764">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="e373c-765">호출 하 여 특성을 닫을 수도 있습니다 `WriteStartAttribute` 다시 호출 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>를 호출 하거나 <xref:System.Xml.XmlWriter.WriteEndElement%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-765">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlWriter.WriteEndElement%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e373c-766">사용 하는 경우는 <xref:System.Xml.XmlWriter> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <xref:System.Xml.XmlWriter.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-766">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="e373c-767">예를 들어, 채우는 XmlWriter를 사용 하는 경우는 <xref:System.Xml.XmlDocument>닫을 때까지는 <xref:System.Xml.XmlWriter>, 작성 된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-767">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="e373c-768">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-768">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-769">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-769">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-770">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-770">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndAttributeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteEndAttributeAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndAttributeAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndAttributeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-771">이전 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 호출을 비동기적으로 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-771">Asynchronously closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <returns><span data-ttu-id="e373c-772">비동기 <see langword="WriteEndAttribute" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-772">The task that represents the asynchronous <see langword="WriteEndAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-773">비동기 버전이 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-773">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-774">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-774">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-775">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-775">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-776">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-776">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-777">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-777">-or-</span></span>

<span data-ttu-id="e373c-778"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-778">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-779">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-779">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-780">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-780">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocument : unit -&gt; unit" Usage="xmlWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-781">파생 클래스에서 재정의되면 열려 있는 모든 요소나 특성을 닫고 작성기를 다시 시작 상태로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-781">When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e373c-782">사용 하는 경우는 <xref:System.Xml.XmlWriter> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <xref:System.Xml.XmlWriter.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-782">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="e373c-783">예를 들어, 채우는 XmlWriter를 사용 하는 경우는 <xref:System.Xml.XmlDocument>닫을 때까지는 <xref:System.Xml.XmlWriter>, 작성 된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-783">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="e373c-784">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-784">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-785">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-785">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-786">XML 문서가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-786">The XML document is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-787">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-787">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-788">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-788">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-789">열려 있는 모든 요소나 특성을 비동기적으로 닫고 작성기를 시작 상태로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-789">Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <returns><span data-ttu-id="e373c-790">비동기 <see langword="WriteEndDocument" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-790">The task that represents the asynchronous <see langword="WriteEndDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-791">비동기 버전이 <xref:System.Xml.XmlWriter.WriteEndDocument%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-791">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-792">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-792">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-793">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-793">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-794">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-794">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-795">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-795">-or-</span></span>

<span data-ttu-id="e373c-796"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-796">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-797">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-797">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-798">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-798">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElement : unit -&gt; unit" Usage="xmlWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-799">파생 클래스에서 재정의되면 한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-799">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-800">짧은 끝 태그 요소에 콘텐츠가 없는 경우 "/ >" 작성 됩니다. 그렇지 않은 경우 전체 끝 태그를 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-800">If the element contains no content, a short end tag "/>" is written; otherwise, a full end tag is written.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e373c-801">사용 하는 경우는 <xref:System.Xml.XmlWriter> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <xref:System.Xml.XmlWriter.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-801">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="e373c-802">예를 들어, 채우는 XmlWriter를 사용 하는 경우는 <xref:System.Xml.XmlDocument>닫을 때까지는 <xref:System.Xml.XmlWriter>, 작성 된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-802">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="e373c-803">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-803">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-804">다음 예제에서는 합니다 <xref:System.Xml.XmlWriter.WriteEndElement%2A> 하며 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-804">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-805">이로 인해 XML 문서가 잘못되는 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-805">This results in an invalid XML document.</span></span>

<span data-ttu-id="e373c-806">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-806">-or-</span></span>

<span data-ttu-id="e373c-807">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-807">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-808">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-808">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-809">한 요소를 비동기적으로 닫고 해당 네임스페이스 범위를 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-809">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="e373c-810">비동기 <see langword="WriteEndElement" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-810">The task that represents the asynchronous <see langword="WriteEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-811">비동기 버전이 <xref:System.Xml.XmlWriter.WriteEndElement%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-811">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-812">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-812">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-813">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-813">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-814">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-814">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-815">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-815">-or-</span></span>

<span data-ttu-id="e373c-816"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-816">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-817">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-817">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-818">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-818">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public abstract void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRef : string -&gt; unit" Usage="xmlWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-819">엔터티 참조의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-819">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="e373c-820">파생 클래스에서 재정의되면 <see langword="&amp;name;" /> 같이 엔터티 참조를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-820">When overridden in a derived class, writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-821">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-821">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-822">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-822">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-823"><paramref name="name" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-823"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-824">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-824">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-825">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-825">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRefAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEntityRefAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEntityRefAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEntityRefAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEntityRefAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-826">엔터티 참조의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-826">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="e373c-827">엔터티 참조를 <see langword="&amp;name;" />으로 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-827">Asynchronously writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <returns><span data-ttu-id="e373c-828">비동기 <see langword="WriteEntityRef" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-828">The task that represents the asynchronous <see langword="WriteEntityRef" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-829">비동기 버전이 <xref:System.Xml.XmlWriter.WriteEntityRef%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-829">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEntityRef%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-830">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-830">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-831">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-831">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-832">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-832">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-833">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-833">-or-</span></span>

<span data-ttu-id="e373c-834"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-834">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-835">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-835">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-836">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-836">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElement : unit -&gt; unit" Usage="xmlWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-837">파생 클래스에서 재정의되면 한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-837">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-838">이 메서드는 항상 전체 끝 태그를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-838">This method always writes the full end tag.</span></span> <span data-ttu-id="e373c-839">전체 끝 태그를 포함 해야 하는 요소를 처리할 때 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-839">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="e373c-840">브라우저에서 HTML 스크립트 블록을 사용 하 여 닫아야를 예상 하는 예를 들어, "\<스크립트/>"입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-840">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
 <span data-ttu-id="e373c-841">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-841">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-842">다음 예제에서는 합니다 <xref:System.Xml.XmlWriter.WriteEndElement%2A> 하며 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-842">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-843">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-843">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-844">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-844">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFullEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFullEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteFullEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteFullEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-845">한 요소를 비동기적으로 닫고 해당 네임스페이스 범위를 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-845">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="e373c-846">비동기 <see langword="WriteFullEndElement" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-846">The task that represents the asynchronous <see langword="WriteFullEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-847">비동기 버전이 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-847">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-848">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-848">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-849">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-849">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-850">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-850">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-851">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-851">-or-</span></span>

<span data-ttu-id="e373c-852"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-852">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-853">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-853">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-854">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-854">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public virtual void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteName : string -&gt; unit&#xA;override this.WriteName : string -&gt; unit" Usage="xmlWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-855">작성할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-855">The name to write.</span></span></param>
        <summary><span data-ttu-id="e373c-856">파생 클래스에서 재정의되면 W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 이름이 되도록 지정된 이름을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-856">When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-857">하는 경우 <xref:System.Xml.XmlTextWriter.Namespaces%2A> 로 설정 된 `true`, `WriteName` 는 이름을 사용 하는 유효한 XML 권장 사항의 W3C 네임 스페이스에 따라 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-857">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 <span data-ttu-id="e373c-858">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteNameAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-858">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNameAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-859"><paramref name="name" />이 올바른 XML 이름이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-859"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-860">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-860">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-861">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-861">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNameAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNameAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNameAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNameAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNameAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNameAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNameAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-862">작성할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-862">The name to write.</span></span></param>
        <summary><span data-ttu-id="e373c-863">W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 이름이 되도록 지정된 이름을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-863">Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="e373c-864">비동기 <see langword="WriteName" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-864">The task that represents the asynchronous <see langword="WriteName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-865">비동기 버전이 <xref:System.Xml.XmlWriter.WriteName%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-865">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteName%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-866">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-866">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-867">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-867">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-868">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-868">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-869">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-869">-or-</span></span>

<span data-ttu-id="e373c-870"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-870">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-871">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-871">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-872">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-872">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public virtual void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmToken : string -&gt; unit&#xA;override this.WriteNmToken : string -&gt; unit" Usage="xmlWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-873">작성할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-873">The name to write.</span></span></param>
        <summary><span data-ttu-id="e373c-874">파생 클래스에서 재정의되면 W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 NmToken이 되도록 지정된 이름을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-874">When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-875">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-875">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-876"><paramref name="name" />이 올바른 NmToken이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-876"><paramref name="name" /> is not a valid NmToken; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-877">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-877">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-878">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-878">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNmTokenAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNmTokenAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNmTokenAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNmTokenAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-879">작성할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-879">The name to write.</span></span></param>
        <summary><span data-ttu-id="e373c-880">W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 NmToken이 되도록 지정된 이름을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-880">Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="e373c-881">비동기 <see langword="WriteNmToken" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-881">The task that represents the asynchronous <see langword="WriteNmToken" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-882">비동기 버전이 <xref:System.Xml.XmlWriter.WriteNmToken%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-882">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNmToken%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-883">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-883">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-884">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-884">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-885">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-885">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-886">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-886">-or-</span></span>

<span data-ttu-id="e373c-887"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-887">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-888">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-888">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-889">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-889">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-890">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-890">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-891">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-891">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-892">소스 개체 전체를 현재 작성기 인스턴스에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-892">Copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-893">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-893">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteNode (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e373c-894">읽을 소스 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-894">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr"><span data-ttu-id="e373c-895"><see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-895"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e373c-896">파생 클래스에서 재정의되면 판독기에서 작성기로 모든 항목을 복사하고 판독기를 다음 형제 노드의 시작 부분으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-896">When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-897">다음 표에서이 메서드는 지원 되는 노드 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-897">The following table shows the supported node types for this method.</span></span>  
  
|<span data-ttu-id="e373c-898">노드 형식</span><span class="sxs-lookup"><span data-stu-id="e373c-898">NodeType</span></span>|<span data-ttu-id="e373c-899">WriteNode 동작</span><span class="sxs-lookup"><span data-stu-id="e373c-899">WriteNode Behavior</span></span>|  
|--------------|------------------------|  
|`None`|<span data-ttu-id="e373c-900">형식에 관계 없이 모든 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-900">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="e373c-901">즉, 작성기를 사용 합니다 <xref:System.Xml.XmlReader> 특성, 처리 명령, 주석 및 등에 비롯 하 여 노드를 모두 작성 읽고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-901">That is, the writer consumes the <xref:System.Xml.XmlReader> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</span></span><br /><br /> <span data-ttu-id="e373c-902">이러한 상황이 발생할 때를 <xref:System.Xml.XmlReader> 초기 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-902">This situation occurs when the <xref:System.Xml.XmlReader> is in an initial state.</span></span> <span data-ttu-id="e373c-903">(합니다 <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> 속성이 반환 `ReaderState.Initial`).</span><span class="sxs-lookup"><span data-stu-id="e373c-903">(The <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> property returns `ReaderState.Initial`).</span></span>|  
|`Element`|<span data-ttu-id="e373c-904">요소 노드 및 특성 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-904">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="e373c-905">작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-905">No operation.</span></span> <span data-ttu-id="e373c-906">대신 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 또는 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="e373c-906">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="e373c-907">텍스트 노드를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-907">Writes out the text node.</span></span>|  
|`CDATA`|<span data-ttu-id="e373c-908">CDATA 섹션 노드를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-908">Writes out the CDATA section node.</span></span>|  
|`EntityReference`|<span data-ttu-id="e373c-909">엔터티 참조 노드를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-909">Writes out the entity reference node.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="e373c-910">처리 명령 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-910">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="e373c-911">주석 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-911">Writes out the comment node.</span></span>|  
|`DocumentType`|<span data-ttu-id="e373c-912">문서 형식 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-912">Writes out the document type node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="e373c-913">유효 공백 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-913">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="e373c-914">공백 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-914">Writes out the white space node.</span></span>|  
|`EndElement`|<span data-ttu-id="e373c-915">끝 요소 태그를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-915">Writes out the end element tag.</span></span>|  
|`EndEntity`|<span data-ttu-id="e373c-916">작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-916">No operation.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="e373c-917">XML 선언 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-917">Writes out the XML declaration node.</span></span>|  
  
 <span data-ttu-id="e373c-918">판독기 초기 상태에 있으면이 메서드는 파일의 끝으로 판독기를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-918">If the reader is in the initial state, this method moves the reader to the end of file.</span></span> <span data-ttu-id="e373c-919">이면 판독기 이미 닫힌된 상태 또는 파일의 끝에서이 메서드는 작동 하지.</span><span class="sxs-lookup"><span data-stu-id="e373c-919">If the reader is already at the end of file or in a closed state, this method is non-operational.</span></span>  
  
 <span data-ttu-id="e373c-920">다음 C# 코드는 콘솔에는 전체 XML 입력된 문서를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-920">The following C# code copies an entire XML input document to the console:</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
XmlWriter writer = XmlWriter.Create(Console.Out);  
writer.WriteNode(reader, false);  
```  
  
 <span data-ttu-id="e373c-921">루트 노드로 이동 하 고 다음 C# 예제에서는 노드 올바르게 작성 문서의 다른 위치에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-921">If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
reader.Read(); // Read PI  
reader.Read(); // Read Comment  
reader.Read(); // Read DOCType  
XmlWriter writer = XmlWriter.Create(Console.Out);  
while (!reader.EOF){  
  writer.WriteNode(reader, false);  
 }  
```  
  
 <span data-ttu-id="e373c-922">출력을 들여쓰기 구성 된 경우 공백을 반환 하도록 판독기를 구성 하 고 작성기가 `WriteNode` 이상한 결과가 만들어질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-922">If the reader is configured to return white space and the writer has is configured to indent output, `WriteNode` may produce strange output.</span></span> <span data-ttu-id="e373c-923">기본적으로 발생 double 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-923">You will essentially be getting double formatting.</span></span>  
  
 <span data-ttu-id="e373c-924">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-924">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-925">다음 예제에서는 콘솔에 첫 번째 및 마지막 책 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-925">The following example writes the first and last book nodes out to the console.</span></span>  
  
 [!code-cpp[XmlWriter.WriteNode#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteNode/CPP/writenode.cpp#1)]
 [!code-csharp[XmlWriter.WriteNode#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteNode/CS/writenode.cs#1)]
 [!code-vb[XmlWriter.WriteNode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteNode/VB/writenode.vb#1)]  
  
 <span data-ttu-id="e373c-926">이 예제에서는 파일을 사용 하 여 `books.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-926">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteNode#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteNode/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-927"><paramref name="reader" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-927"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-928"><paramref name="reader" />에 잘못된 문자가 들어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-928"><paramref name="reader" /> contains invalid characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-929">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-929">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-930">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-930">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (navigator As XPathNavigator, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit" Usage="xmlWriter.WriteNode (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="e373c-931">복사할 원본 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-931">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr"><span data-ttu-id="e373c-932">기본 특성을 복사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-932"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e373c-933"><see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 전체를 작성기에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-933">Copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="e373c-934"><see cref="T:System.Xml.XPath.XPathNavigator" /> 위치는 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-934">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-935">지원 되는 다음 표에 `XPath` 이 메서드에 대 한 노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-935">The following table shows the supported `XPath` node types for this method.</span></span>  
  
|<span data-ttu-id="e373c-936">XPathNodeType</span><span class="sxs-lookup"><span data-stu-id="e373c-936">XPathNodeType</span></span>|<span data-ttu-id="e373c-937">WriteNode 동작</span><span class="sxs-lookup"><span data-stu-id="e373c-937">WriteNode Behavior</span></span>|  
|-------------------|------------------------|  
|`Root`|<span data-ttu-id="e373c-938">형식에 관계 없이 모든 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-938">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="e373c-939">즉, 작성기를 사용 합니다 <xref:System.Xml.XPath.XPathNavigator> 루트 노드 (특성, 처리 명령, 주석 등 포함)에서 모든 노드를 작성 하 고</span><span class="sxs-lookup"><span data-stu-id="e373c-939">That is, the writer consumes the <xref:System.Xml.XPath.XPathNavigator> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</span></span>|  
|`Element`|<span data-ttu-id="e373c-940">요소 노드 및 특성 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-940">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="e373c-941">작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-941">No operation.</span></span> <span data-ttu-id="e373c-942">대신 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 또는 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="e373c-942">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="e373c-943">텍스트 노드를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-943">Writes out the text node.</span></span>|  
|`Namespace`|<span data-ttu-id="e373c-944">작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-944">No operation.</span></span> <span data-ttu-id="e373c-945">사용 된 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 또는 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 네임 스페이스 선언을 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-945">Use the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write the namespace declaration.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="e373c-946">처리 명령 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-946">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="e373c-947">주석 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-947">Writes out the comment node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="e373c-948">유효 공백 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-948">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="e373c-949">공백 노드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-949">Writes out the white space node.</span></span>|  
  
 <span data-ttu-id="e373c-950">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-950">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-951">다음 예제에서는 <xref:System.Xml.XmlWriter.WriteNode%2A> 방법 문서에서 첫 번째 book 노드로 복사 하 고 콘솔에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-951">The following example uses the <xref:System.Xml.XmlWriter.WriteNode%2A> method to copy the first book node from a document and write it to the console.</span></span>  
  
 [!code-csharp[XmlWriteNode_nav#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriteNode_nav/CS/XmlWriteNode_nav.cs#1)]
 [!code-vb[XmlWriteNode_nav#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriteNode_nav/VB/XmlWriteNode_nav.vb#1)]  
  
 <span data-ttu-id="e373c-952">이 예제에서는 인수로 books.xml 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-952">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#1](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/books.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-953"><paramref name="navigator" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-953"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-954">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-954">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-955">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-955">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNodeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-956"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-956">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-957">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-957">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="e373c-958">소스 개체 전체를 현재 작성기 인스턴스에 비동기적으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-958">Asynchronously copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-959">비동기 버전이 <xref:System.Xml.XmlWriter.WriteNode%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-959">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-960">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-960">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-961">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-961">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e373c-962">읽을 소스 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-962">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr"><span data-ttu-id="e373c-963"><see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-963"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e373c-964">파생 클래스에서 재정의되면 판독기에서 작성기로 모든 항목을 비동기적으로 복사하고 판독기를 다음 형제 노드의 시작 부분으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-964">Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <returns><span data-ttu-id="e373c-965">비동기 <see langword="WriteNode" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-965">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-966">비동기 버전이 <xref:System.Xml.XmlWriter.WriteNode%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-966">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-967">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-967">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-968">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-968">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-969">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-969">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-970">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-970">-or-</span></span>

<span data-ttu-id="e373c-971"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-971">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-972">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-972">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-973">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-973">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (navigator As XPathNavigator, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="e373c-974">복사할 원본 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-974">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr"><span data-ttu-id="e373c-975">기본 특성을 복사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-975"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e373c-976"><see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 모든 항목을 작성기에 비동기적으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-976">Asynchronously copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="e373c-977"><see cref="T:System.Xml.XPath.XPathNavigator" /> 위치는 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-977">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <returns><span data-ttu-id="e373c-978">비동기 <see langword="WriteNode" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-978">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-979">비동기 버전이 <xref:System.Xml.XmlWriter.WriteNode%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-979">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-980">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-980">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-981">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-981">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-982">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-982">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-983">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-983">-or-</span></span>

<span data-ttu-id="e373c-984"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-984">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-985">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-985">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-986">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-986">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-987">처리 명령의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-987">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="e373c-988">처리 명령에 포함할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-988">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="e373c-989">파생 클래스에서 재정의되면 &lt;?name text?&gt; 같이 이름과 텍스트 사이에 공백이 있는 처리 명령을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-989">When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-990">이 메서드를 사용 하 여 XML 선언을 쓸 수 있습니다 (대신 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>).</span><span class="sxs-lookup"><span data-stu-id="e373c-990">This method can be used to write the XML declaration (rather than <xref:System.Xml.XmlWriter.WriteStartDocument%2A>).</span></span> <span data-ttu-id="e373c-991">이 제대로 작성 되지 인코딩 특성이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-991">This could result in the encoding attribute being incorrectly written.</span></span> <span data-ttu-id="e373c-992">예를 들어 다음 C# 코드 기본 인코딩은 u t F-8 때문에 잘못 된 XML 문서에서 초래 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-992">For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</span></span>  
  
```csharp  
XmlWriter writer = XmlWriter.Create("output.xml");  
writer.WriteProcessingInstruction("xml", "version='1.0' encoding='UTF-16'");  
writer.WriteStartElement("root");  
writer.Close();  
```  
  
 <span data-ttu-id="e373c-993">경우 `text` 은 `null` 또는 `String.Empty`,이 메서드는 작성을 `ProcessingInstruction` 예를 들어 콘텐츠, 데이터가 없는 \<? 이름? >.</span><span class="sxs-lookup"><span data-stu-id="e373c-993">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
 <span data-ttu-id="e373c-994">텍스트에 잘못 된 시퀀스를 포함 하는 경우 "? >", <xref:System.Xml.XmlWriter> throw 하거나 수를 <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> 개체) 또는 공백을 삽입 "?</span><span class="sxs-lookup"><span data-stu-id="e373c-994">If text contains an invalid sequence of "?>", the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space "?</span></span> <span data-ttu-id="e373c-995">> "잘못 된 XML을 작성 하지 않으려면 (<xref:System.Xml.XmlWriter> 개체에 의해 생성 된 <xref:System.Xml.XmlWriter.Create%2A> 메서드).</span><span class="sxs-lookup"><span data-stu-id="e373c-995">>" to avoid writing invalid XML (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="e373c-996">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-996">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-997">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-997">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-998">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-998">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="e373c-999"><paramref name="name" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-999"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
<span data-ttu-id="e373c-1000"><see cref="M:System.Xml.XmlWriter.WriteStartDocument" />가 이미 호출된 후 이 메서드를 사용하여 XML 선언을 만드는 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1000">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> has already been called.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1001">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1001">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1002">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1002">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstructionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteProcessingInstructionAsync(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteProcessingInstructionAsync (name As String, text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteProcessingInstructionAsync(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteProcessingInstructionAsync (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e373c-1003">처리 명령의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1003">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="e373c-1004">처리 명령에 포함할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1004">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="e373c-1005">이름과 텍스트 사이의 공백을 사용하여 처리 명령을 비동기적으로 씁니다(예: &lt;?name text?&gt;).</span><span class="sxs-lookup"><span data-stu-id="e373c-1005">Asynchronously writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <returns><span data-ttu-id="e373c-1006">비동기 <see langword="WriteProcessingInstruction" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1006">The task that represents the asynchronous <see langword="WriteProcessingInstruction" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1007">비동기 버전이 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1007">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1008">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1008">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1009">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1009">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1010">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1010">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1011">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1011">-or-</span></span>

<span data-ttu-id="e373c-1012"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1012">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1013">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1013">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1014">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1014">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedName : string * string -&gt; unit&#xA;override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-1015">작성할 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1015">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1016">이름의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1016">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="e373c-1017">파생 클래스에서 재정의되면 네임스페이스로 한정된 이름을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1017">When overridden in a derived class, writes out the namespace-qualified name.</span></span> <span data-ttu-id="e373c-1018">이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1018">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1019">경우 `ns` 매핑되는 현재 기본 네임 스페이스 접두사가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1019">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="e373c-1020">특성 값을 작성할 때이 메서드는 경우 접두사를 생성 하는 `ns` 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1020">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="e373c-1021">요소 콘텐츠를 작성할 때 예외가 발생 하는 경우 `ns` 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1021">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e373c-1022">파생 된 클래스는 <xref:System.Xml.XmlWriter> 이 메서드를 재정의 하지 않습니다 `localName` 유효한 W3C XML 이름으로 선택 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="e373c-1022">If a class derived from the <xref:System.Xml.XmlWriter> does not override this method `localName` is not checked to be a valid W3C XML name.</span></span> <span data-ttu-id="e373c-1023">이 경우이 메서드를 호출 하기 전에 문자열의 유효성을 검사 여 확인할 수 있습니다 <xref:System.Xml.XmlReader.IsName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1023">In such case, before calling this method, the validity of the string can be checked by <xref:System.Xml.XmlReader.IsName%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1024">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1024">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1025">이 예제에서는 다음 요소를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1025">The example writes the following element:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
  <item href="#x:test"/>  
</root>  
```  
  
 [!code-csharp[XmlWriter_v2#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#5)]
 [!code-vb[XmlWriter_v2#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1026"><paramref name="localName" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1026"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="e373c-1027"><paramref name="localName" />이 올바른 이름이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1027"><paramref name="localName" /> is not a valid name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1028">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1028">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1029">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1029">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteQualifiedNameAsync(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQualifiedNameAsync (localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteQualifiedNameAsync(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteQualifiedNameAsync (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-1030">작성할 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1030">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1031">이름의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1031">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="e373c-1032">네임스페이스로 한정된 이름을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1032">Asynchronously writes out the namespace-qualified name.</span></span> <span data-ttu-id="e373c-1033">이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1033">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <returns><span data-ttu-id="e373c-1034">비동기 <see langword="WriteQualifiedName" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1034">The task that represents the asynchronous <see langword="WriteQualifiedName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1035">비동기 버전이 <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1035">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1036">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1036">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1037">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1037">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1038">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1038">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1039">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1039">-or-</span></span>

<span data-ttu-id="e373c-1040"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1040">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1041">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1041">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1042">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1042">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1043">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1043">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1044">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1044">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-1045">파생 클래스에서 재정의되면 원시 태그를 직접 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1045">When overridden in a derived class, writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1046">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteRawAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1046">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : string -&gt; unit" Usage="xmlWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e373c-1047">작성할 텍스트를 포함하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1047">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1048">파생 클래스에서 재정의되면 문자열에서 원시 태그를 직접 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1048">When overridden in a derived class, writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1049">이 메서드는 특수 문자를 이스케이프 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1049">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e373c-1050">합니다 <xref:System.Xml.XmlWriter> 에 전달 되는 데이터의 유효성을 검사 하지 않습니다는 <xref:System.Xml.XmlWriter.WriteRaw%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1050">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="e373c-1051">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1051">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="e373c-1052">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteRawAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1052">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1053">참조 <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> 이 메서드를 사용 하는 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1053">See <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1054"><paramref name="data" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1054"><paramref name="data" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1055">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1055">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1056">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1056">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-1057">쓸 텍스트가 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1057">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-1058">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1058">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-1059">쓸 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1059">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1060">파생 클래스에서 재정의되면 문자 버퍼에서 원시 태그를 직접 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1060">When overridden in a derived class, writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1061">이 메서드는 특수 문자를 이스케이프 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1061">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e373c-1062">합니다 <xref:System.Xml.XmlWriter> 에 전달 되는 데이터의 유효성을 검사 하지 않습니다는 <xref:System.Xml.XmlWriter.WriteRaw%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1062">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="e373c-1063">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1063">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="e373c-1064">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteRawAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1064">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-1065"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1065"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e373c-1066"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1066"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e373c-1067">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1067">-or-</span></span> 
<span data-ttu-id="e373c-1068">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1068">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1069">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1069">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1070">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1070">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRawAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1071"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1071">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1072">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1072">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="e373c-1073">직접 원시 태그를 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1073">Asynchronously writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1074">비동기 버전이 <xref:System.Xml.XmlWriter.WriteRaw%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1074">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1075">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1075">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1076">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1076">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (data As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e373c-1077">작성할 텍스트를 포함하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1077">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1078">문자열에서 직접 원시 태그를 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1078">Asynchronously writes raw markup manually from a string.</span></span></summary>
        <returns><span data-ttu-id="e373c-1079">비동기 <see langword="WriteRaw" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1079">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1080">비동기 버전이 <xref:System.Xml.XmlWriter.WriteRaw%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1080">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1081">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1081">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1082">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1082">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1083">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1083">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1084">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1084">-or-</span></span>

<span data-ttu-id="e373c-1085"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1085">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1086">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1086">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1087">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1087">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e373c-1088">쓸 텍스트가 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1088">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="e373c-1089">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1089">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="e373c-1090">쓸 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1090">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1091">문자 버퍼에서 직접 원시 태그를 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1091">Asynchronously writes raw markup manually from a character buffer.</span></span></summary>
        <returns><span data-ttu-id="e373c-1092">비동기 <see langword="WriteRaw" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1092">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1093">비동기 버전이 <xref:System.Xml.XmlWriter.WriteRaw%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1093">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1094">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1094">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1095">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1095">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1096">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1096">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1097">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1097">-or-</span></span>

<span data-ttu-id="e373c-1098"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1098">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1099">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1099">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1100">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1100">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1101">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1101">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1102">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1102">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-1103">파생 클래스에서 재정의될 때 특성의 시작을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1103">When overridden in a derived class, writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1104">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1104">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string -&gt; unit" Usage="xmlWriter.WriteStartAttribute localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-1105">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1105">The local name of the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-1106">지정된 로컬 이름을 사용하여 특성의 시작 부분을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1106">Writes the start of an attribute with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1107">이 메서드를 사용 하면 여러 쓰기 메서드를 사용 하 여 값을 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1107">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="e373c-1108">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1108">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1109">작성기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1109">The writer is closed.</span></span>

<span data-ttu-id="e373c-1110">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1110">-or-</span></span>

<span data-ttu-id="e373c-1111">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1111">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1112">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1112">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-1113">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1113">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-1114">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1114">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-1115">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1115">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-1116">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1116">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-1117">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1117">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-1118">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1118">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1119">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1119">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-1120">지정된 로컬 이름과 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1120">Writes the start of an attribute with the specified local name and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1121">고급 버전 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 와 같은 여러 write 메서드를 사용 하 여 특성 값을 작성할 수 있도록 <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>등입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1121">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, and so on.</span></span>  
  
 <span data-ttu-id="e373c-1122">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1122">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1123">참조 <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> 이 메서드를 사용 하는 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1123">See <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-1124">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1124">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-1125">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1125">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-1126">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1126">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-1127">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1127">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-1128">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1128">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1129">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1129">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1130">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1130">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-1131">특성의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1131">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-1132">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1132">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1133">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1133">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-1134">파생 클래스에서 재정의되면 지정된 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1134">When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1135">이 메서드를 사용 하면 여러 쓰기 메서드를 사용 하 여 값을 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1135">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="e373c-1136">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1136">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-1137">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1137">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-1138">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1138">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-1139">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1139">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-1140">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1140">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-1141">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1141">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1142">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1142">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1143">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1143">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartAttributeAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteStartAttributeAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartAttributeAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartAttributeAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-1144">특성의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1144">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-1145">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1145">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1146">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1146">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="e373c-1147">지정된 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 특성의 시작 부분을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1147">Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="e373c-1148">비동기 <see langword="WriteStartAttribute" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1148">The task that represents the asynchronous <see langword="WriteStartAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1149">비동기 버전이 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1149">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1150">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1150">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1151">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1151">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1152">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1152">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1153">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1153">-or-</span></span>

<span data-ttu-id="e373c-1154"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1154">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1155">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1155">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1156">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1156">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1157">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1157">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1158">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1158">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-1159">파생 클래스에서 재정의되면 XML 선언을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1159">When overridden in a derived class, writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1160">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1160">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : unit -&gt; unit" Usage="xmlWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-1161">파생 클래스에서 재정의되면 버전이 "1.0"인 XML 선언을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1161">When overridden in a derived class, writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1162">문서의 인코딩 수준은 작성기 구현 방법으로 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1162">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="e373c-1163">예를 들어 경우는 <xref:System.Text.Encoding> 개체에 지정 된는 `XmlTextWriter` 생성자가 인코딩 특성의 값을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1163">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="e373c-1164">이 메서드는 독립 실행형 특성을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1164">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="e373c-1165">때 `WriteStartDocument` 라고 기록기를 작성 하는 올바른 형식의 XML 문서 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1165">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="e373c-1166">예를 들어, XML 선언이 첫 번째 노드 하나 및 루트 수준 요소가 하나만 있고 등 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1166">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="e373c-1167">이 메서드를 호출 하지 않으면 경우 작성기 가정 XML 조각을 쓰고 없습니다 루트 수준 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1167">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="e373c-1168">하는 경우 `WriteStartDocument` 를 호출한 다음는 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> 메서드는 다른 XML 선언을 만드는 데, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1168">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="e373c-1169">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1169">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1170">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1170">This is not the first write method called after the constructor.</span></span>

<span data-ttu-id="e373c-1171">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1171">-or-</span></span>

<span data-ttu-id="e373c-1172">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1172">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1173">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1173">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : bool -&gt; unit" Usage="xmlWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="e373c-1174"><see langword="true" />이면 "standalone=yes"로 작성하고, <see langword="false" />이면 "standalone=no"로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1174">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="e373c-1175">파생 클래스에서 재정의되면 버전이 "1.0"이고 독립형 특성이 포함된 XML 선언을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1175">When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1176">문서의 인코딩 수준은 작성기 구현 방법으로 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1176">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="e373c-1177">예를 들어 경우는 <xref:System.Text.Encoding> 개체에 지정 된는 `XmlTextWriter` 생성자가 인코딩 특성의 값을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1177">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="e373c-1178">때 `WriteStartDocument` 는 호출 작성기의 유효성을 검사 작성 하는 올바른 형식의 XML 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1178">When `WriteStartDocument` is called, the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="e373c-1179">예를 들어, XML 선언이 첫 번째 노드 하나 및 루트 수준 요소가 하나만 있고 등 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1179">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="e373c-1180">이 메서드를 호출 하지 않으면 경우 작성기 가정 XML 조각을 쓰고 없습니다 루트 수준 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1180">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="e373c-1181">하는 경우 `WriteStartDocument` 를 호출한 다음는 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> 메서드는 다른 XML 선언을 만드는 데, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1181">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="e373c-1182">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1182">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1183">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1183">This is not the first write method called after the constructor.</span></span>

<span data-ttu-id="e373c-1184">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1184">-or-</span></span>

<span data-ttu-id="e373c-1185">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1185">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1186">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1186">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocumentAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1187"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1187">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1188">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1188">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="e373c-1189">XML 선언을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1189">Asynchronously writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1190">비동기 버전이 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1190">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1191">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1191">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1192">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1192">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e373c-1193">버전 "1.0"을 사용하여 XML 선언을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1193">Asynchronously writes the XML declaration with the version "1.0".</span></span></summary>
        <returns><span data-ttu-id="e373c-1194">비동기 <see langword="WriteStartDocument" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1194">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1195">비동기 버전이 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1195">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1196">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1196">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1197">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1197">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1198">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1198">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1199">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1199">-or-</span></span>

<span data-ttu-id="e373c-1200"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1200">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1201">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1201">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1202">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1202">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync (standalone As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="e373c-1203"><see langword="true" />이면 "standalone=yes"로 작성하고, <see langword="false" />이면 "standalone=no"로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1203">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="e373c-1204">버전 "1.0"과 독립형 특성을 사용하여 XML 선언을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1204">Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <returns><span data-ttu-id="e373c-1205">비동기 <see langword="WriteStartDocument" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1205">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1206">비동기 버전이 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1206">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1207">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1207">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1208">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1208">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1209">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1209">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1210">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1210">-or-</span></span>

<span data-ttu-id="e373c-1211"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1211">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1212">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1212">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1213">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1213">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1214">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1214">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1215">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1215">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-1216">파생된 클래스에서 재정의되면 지정된 시작 태그를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1216">When overridden in a derived class, writes the specified start tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1217">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1217">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string -&gt; unit" Usage="xmlWriter.WriteStartElement localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-1218">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1218">The local name of the element.</span></span></param>
        <summary><span data-ttu-id="e373c-1219">파생 클래스에서 재정의되면 지정된 로컬 이름을 사용하여 시작 태그를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1219">When overridden in a derived class, writes out a start tag with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1220">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1220">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1221">다음 예제에서는 XML 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1221">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1222">작성기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1222">The writer is closed.</span></span>

<span data-ttu-id="e373c-1223">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1223">-or-</span></span>

<span data-ttu-id="e373c-1224">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1224">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1225">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1225">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-1226">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1226">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-1227">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1227">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-1228">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1228">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-1229">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1229">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-1230">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1230">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e373c-1231">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1231">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1232">요소와 연결할 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1232">The namespace URI to associate with the element.</span></span> <span data-ttu-id="e373c-1233">이 네임스페이스가 이미 범위에 있고 관련된 접두사가 있는 경우 작성기는 해당 접두사도 자동으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1233">If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="e373c-1234">파생된 클래스에서 재정의되면 지정된 시작 태그를 작성하고 지정된 네임스페이스에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1234">When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1235">특성을 작성 하거나 만들려면이 메서드를 호출한 후 사용 하 여 콘텐츠 <xref:System.Xml.XmlWriter.WriteComment%2A>하십시오 <xref:System.Xml.XmlWriter.WriteString%2A>, 또는 `WriteStartElement` 자식 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1235">After calling this method you can either write attributes, or create content using <xref:System.Xml.XmlWriter.WriteComment%2A>, <xref:System.Xml.XmlWriter.WriteString%2A>, or `WriteStartElement` for child elements.</span></span> <span data-ttu-id="e373c-1236">사용 하 여 요소를 닫아도 <xref:System.Xml.XmlWriter.WriteEndElement%2A> 또는 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1236">You can close the element with either <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>.</span></span> <span data-ttu-id="e373c-1237">예를 들어 다음 C# 코드:</span><span class="sxs-lookup"><span data-stu-id="e373c-1237">For example, the following C# code:</span></span>  
  
```csharp  
writer.WriteStartElement("item",null);  
writer.WriteString("some text");  
writer.WriteEndElement();  
```  
  
 <span data-ttu-id="e373c-1238">다음 출력이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1238">Generates the following output:</span></span>  
  
```xml  
<item>some text</item>  
```  
  
 <span data-ttu-id="e373c-1239">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1239">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1240">작성기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1240">The writer is closed.</span></span>

<span data-ttu-id="e373c-1241">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1241">-or-</span></span>

<span data-ttu-id="e373c-1242">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1242">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1243">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1243">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-1244">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1244">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-1245">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1245">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-1246">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1246">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-1247">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1247">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-1248">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1248">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElement : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-1249">요소의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1249">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-1250">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1250">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1251">요소와 연결할 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1251">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="e373c-1252">파생 클래스에서 재정의되면 지정된 시작 태그를 작성하고 지정된 네임스페이스 및 접두사에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1252">When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1253">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1253">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1254">다음 예제에서는 XML 조각을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1254">The following example writes out an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1255">작성기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1255">The writer is closed.</span></span>

<span data-ttu-id="e373c-1256">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1256">-or-</span></span>

<span data-ttu-id="e373c-1257">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1257">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1258">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1258">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e373c-1259">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1259">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="e373c-1260">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1260">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="e373c-1261">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1261">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="e373c-1262">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1262">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="e373c-1263">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1263">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartElementAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartElementAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartElementAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartElementAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e373c-1264">요소의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1264">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="e373c-1265">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1265">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="e373c-1266">요소와 연결할 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1266">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="e373c-1267">지정된 시작 태그를 비동기적으로 작성하고 주어진 네임스페이스 및 접두사와 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1267">Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <returns><span data-ttu-id="e373c-1268">비동기 <see langword="WriteStartElement" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1268">The task that represents the asynchronous <see langword="WriteStartElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1269">비동기 버전이 <xref:System.Xml.XmlWriter.WriteStartElement%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1269">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartElement%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1270">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1270">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1271">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1271">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1272">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1272">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1273">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1273">-or-</span></span>

<span data-ttu-id="e373c-1274"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1274">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1275">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1275">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1276">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1276">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e373c-1277">파생 클래스에서 재정의되면 작성기의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1277">When overridden in a derived class, gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="e373c-1278"><see cref="T:System.Xml.WriteState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1278">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1279">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1279">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1280">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1280">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public abstract void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteString : string -&gt; unit" Usage="xmlWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e373c-1281">쓸 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1281">The text to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1282">파생 클래스에서 재정의되면 지정된 텍스트 콘텐츠를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1282">When overridden in a derived class, writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1283">`WriteString`에서는 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1283">`WriteString` does the following:</span></span>  
  
-   <span data-ttu-id="e373c-1284">문자 `&`, `<`, 및 `>` 바뀝니다 `&amp;`를 `&lt;`, 및 `&gt;`, 각각.</span><span class="sxs-lookup"><span data-stu-id="e373c-1284">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="e373c-1285">기본 동작을 <xref:System.Xml.XmlWriter> 사용 하 여 만든 <xref:System.Xml.XmlWriter.Create%2A> throw 하는 것을 <xref:System.ArgumentException> 범위 0-0x1f (공백 문자 0x9, 0xA 및 0xD)에서 문자 값을 작성 하려고 할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1285">The default behavior of an <xref:System.Xml.XmlWriter> created using <xref:System.Xml.XmlWriter.Create%2A> is to throw an <xref:System.ArgumentException> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</span></span> <span data-ttu-id="e373c-1286">만들어 잘못 된 XML 문자를 쓸 수는 <xref:System.Xml.XmlWriter> 사용 하 여는 <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> 속성으로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1286">These invalid XML characters can be written by creating the <xref:System.Xml.XmlWriter> with the <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property set to `false`.</span></span> <span data-ttu-id="e373c-1287">그렇게 하면 숫자 엔터티로 대체 되는 문자에서 (&\#0 통해; & #0x1F).</span><span class="sxs-lookup"><span data-stu-id="e373c-1287">Doing so will result in the characters being replaced with numeric character entities (&\#0; through &#0x1F).</span></span> <span data-ttu-id="e373c-1288">또한 프로그램 <xref:System.Xml.XmlTextWriter> 사용 하 여 만든는 `new` 연산자 기본적으로 숫자 문자 엔터티를 사용 하 여 잘못 된 문자에 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1288">Additionally, an <xref:System.Xml.XmlTextWriter> created with the `new` operator will replace the invalid characters with numeric character entities by default.</span></span>  
  
 <span data-ttu-id="e373c-1289">**참고** Microsoft 실제로 많은 응용 프로그램 XML을 사용 하는 잘못 된 문자를 처리 하도록 설계 되지 하므로 잘못 된 XML 문자를 작성 하는 것을 권장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1289">**Note** Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</span></span>  
  
-   <span data-ttu-id="e373c-1290">하는 경우 `WriteString` 라고 특성 값의 컨텍스트에서 사용 하 여 큰따옴표와 작은따옴표 바뀝니다 `&quot;` 고 `&apos;` 각각.</span><span class="sxs-lookup"><span data-stu-id="e373c-1290">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="e373c-1291">이 문자열을 입력 하는 예를 들어 `test<item>test` 으로 기록 됩니다</span><span class="sxs-lookup"><span data-stu-id="e373c-1291">For example, this input string `test<item>test` is written out as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="e373c-1292">경우 `text` 중 하나는 `null` 또는 `String.Empty`,이 메서드가 데이터 콘텐츠가 없는 텍스트 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1292">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
 <span data-ttu-id="e373c-1293">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteStringAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1293">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1294">다음 예제에서는 XML 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1294">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1295">텍스트 문자열에 잘못된 서로게이트 쌍이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1295">The text string contains an invalid surrogate pair.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1296">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1296">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1297">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1297">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStringAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStringAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStringAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteStringAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStringAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStringAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e373c-1298">쓸 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1298">The text to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1299">주어진 텍스트 콘텐츠를 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1299">Asynchronously writes the given text content.</span></span></summary>
        <returns><span data-ttu-id="e373c-1300">비동기 <see langword="WriteString" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1300">The task that represents the asynchronous <see langword="WriteString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1301">비동기 버전이 <xref:System.Xml.XmlWriter.WriteString%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1301">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteString%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1302">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1302">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1303">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1303">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1304">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1304">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1305">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1305">-or-</span></span>

<span data-ttu-id="e373c-1306"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1306">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1307">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1307">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1308">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1308">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="e373c-1309">하위 서로게이트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1309">The low surrogate.</span></span> <span data-ttu-id="e373c-1310">이 값은 0xDC00에서 0xDFFF 사이에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1310">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="e373c-1311">상위 서로게이트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1311">The high surrogate.</span></span> <span data-ttu-id="e373c-1312">이 값은 0xD800에서 0xDBFF 사이에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1312">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="e373c-1313">파생 클래스에서 재정의되면 서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 생성하고 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1313">When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1314">이 메서드는 utf-16 인코딩을 사용 하는 시스템에 적용할 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1314">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="e373c-1315">서로게이트 문자 엔터티는 16 진수 형식으로 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1315">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="e373c-1316">서로게이트 문자에 대 한 범위 #x에서 # x10ffff 사이입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1316">The range for surrogate characters is #x10000 to #x10FFFF.</span></span> <span data-ttu-id="e373c-1317">다음 수식을 사용 하는 서로게이트 문자 엔터티를 생성할: (`highChar` -이 0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000</span><span class="sxs-lookup"><span data-stu-id="e373c-1317">The following formula is used to generate the surrogate character entity: (`highChar` -0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000</span></span>  
  
 <span data-ttu-id="e373c-1318">HTML 및 XML을 문서 문자 집합 (및 따라서 숫자 문자 참조의 표기) 기반으로 UCS [ISO 10646] 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1318">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="e373c-1319">원본 문서에 대 한 단일 숫자 문자 참조 (high surrogate 및 하위 서로게이트) 문자열에서 두 명의 16 비트 장치에 해당할 경우에 따라 따라서 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1319">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="e373c-1320">이러한 16 비트 단위 서로게이트 쌍 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1320">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="e373c-1321">문자나 서로게이트에 대 한 자세한 내용은 섹션 3.7 유니코드 표준 3.0 유니코드 2.0에 있는 참조 <https://www.unicode.org>, 또는 [W3C XML 1.0 Recommendation의 2.2 섹션](https://www.w3.org/TR/REC-xml#charsets)합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1321">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <https://www.unicode.org>, or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>  
  
 <span data-ttu-id="e373c-1322">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1322">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1323">잘못된 서로게이트 문자 쌍이 전달된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1323">An invalid surrogate character pair was passed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1324">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1324">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1325">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1325">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteSurrogateCharEntityAsync(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteSurrogateCharEntityAsync (lowChar As Char, highChar As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteSurrogateCharEntityAsync(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteSurrogateCharEntityAsync (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="highChar" Type="System.Char" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="e373c-1326">하위 서로게이트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1326">The low surrogate.</span></span> <span data-ttu-id="e373c-1327">이 값은 0xDC00에서 0xDFFF 사이에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1327">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="e373c-1328">상위 서로게이트입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1328">The high surrogate.</span></span> <span data-ttu-id="e373c-1329">이 값은 0xD800에서 0xDBFF 사이에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1329">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="e373c-1330">서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 비동기적으로 생성하고 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1330">Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <returns><span data-ttu-id="e373c-1331">비동기 <see langword="WriteSurrogateCharEntity" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1331">The task that represents the asynchronous <see langword="WriteSurrogateCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1332">비동기 버전이 <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1332">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1333">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1333">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1334">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1334">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1335">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1335">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1336">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1336">-or-</span></span>

<span data-ttu-id="e373c-1337"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1337">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1338">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1338">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1339">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1339">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteValue">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1340">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1340">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1341">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1341">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="e373c-1342">단순 형식의 단일 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1342">Writes a single simple-typed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1343">합니다 <xref:System.Xml.XmlWriter.WriteValue%2A> 공용 언어 런타임 (CLR) 단순 형식의 값을 허용, XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙에 따라 해당 문자열 표현으로 변환 합니다 및 축소를 사용 하 여 씁니다 메서드는 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1343">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="e373c-1344">이렇게 하면 최소한의 구문 오버 헤드 간에 데이터를 전달할 때 사용 하 여 단순 형식 값을 파이프라인 하 <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.XmlReader>, 및 <xref:System.Xml.XmlWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1344">This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.XmlReader>, and <xref:System.Xml.XmlWriter> objects.</span></span> <span data-ttu-id="e373c-1345">이 기능은 CLR 단순 형식을 다룰 때와 <xref:System.Xml.XmlWriter> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1345">This ability is also useful when dealing with CLR simple-types and an <xref:System.Xml.XmlWriter> instance.</span></span> <span data-ttu-id="e373c-1346">호출할 수 있습니다 합니다 <xref:System.Xml.XmlWriter.WriteValue%2A> 의 메서드를 사용 하는 대신 형식화 된 값을 쓸 메서드는 <xref:System.Xml.XmlConvert> 형식화 된 데이터를 작성 하기 전에 문자열 값으로 변환 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1346">You can call the <xref:System.Xml.XmlWriter.WriteValue%2A> method to write the typed value instead of using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="e373c-1347">비동기 작업의 반환 값으로 변환 <xref:System.Xml.XmlWriter.WriteValue%2A> 문자열을 사용 하는 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1347">For asynchronous operations, convert the return value of <xref:System.Xml.XmlWriter.WriteValue%2A> to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1348">다음 표에서 기본 CLR 형식에 해당 하는 XSD 데이터 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1348">The following table shows the default XSD data types that correspond to CLR types.</span></span>  
  
 <span data-ttu-id="e373c-1349">CLR 개체가 <xref:System.Collections.IEnumerable> 또는 <xref:System.Collections.IList>, <xref:System.Collections.ICollection> 같은 목록 형식인 경우 값 형식의 배열로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1349">If the CLR object is a list type, such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span>  
  
|<span data-ttu-id="e373c-1350">CLR 형식</span><span class="sxs-lookup"><span data-stu-id="e373c-1350">CLR type</span></span>|<span data-ttu-id="e373c-1351">기본 XSD 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="e373c-1351">Default XSD data type</span></span>|  
|--------------|---------------------------|  
|<xref:System.Boolean?displayProperty=nameWithType>|<span data-ttu-id="e373c-1352">xsd:boolean</span><span class="sxs-lookup"><span data-stu-id="e373c-1352">xsd:boolean</span></span>|  
|<xref:System.Byte?displayProperty=nameWithType>**|<span data-ttu-id="e373c-1353">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="e373c-1353">xsd:integer</span></span>|  
|<span data-ttu-id="e373c-1354"><xref:System.Byte?displayProperty=nameWithType> 배열</span><span class="sxs-lookup"><span data-stu-id="e373c-1354"><xref:System.Byte?displayProperty=nameWithType> array</span></span>|<span data-ttu-id="e373c-1355">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="e373c-1355">xsd:base64Binary</span></span>|  
|<xref:System.Char?displayProperty=nameWithType>**|<span data-ttu-id="e373c-1356">xsd:string</span><span class="sxs-lookup"><span data-stu-id="e373c-1356">xsd:string</span></span>|  
|<xref:System.DateTime?displayProperty=nameWithType>|<span data-ttu-id="e373c-1357">xsd:dateTime</span><span class="sxs-lookup"><span data-stu-id="e373c-1357">xsd:dateTime</span></span>|  
|<xref:System.Decimal?displayProperty=nameWithType>|<span data-ttu-id="e373c-1358">xsd:decimal</span><span class="sxs-lookup"><span data-stu-id="e373c-1358">xsd:decimal</span></span>|  
|<xref:System.Double?displayProperty=nameWithType>|<span data-ttu-id="e373c-1359">xsd:double</span><span class="sxs-lookup"><span data-stu-id="e373c-1359">xsd:double</span></span>|  
|<xref:System.Int16?displayProperty=nameWithType>**|<span data-ttu-id="e373c-1360">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="e373c-1360">xsd:integer</span></span>|  
|<xref:System.Int32?displayProperty=nameWithType>|<span data-ttu-id="e373c-1361">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="e373c-1361">xsd:integer</span></span>|  
|<xref:System.Int64?displayProperty=nameWithType>|<span data-ttu-id="e373c-1362">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="e373c-1362">xsd:integer</span></span>|  
|<xref:System.Single?displayProperty=nameWithType>|<span data-ttu-id="e373c-1363">xsd:float</span><span class="sxs-lookup"><span data-stu-id="e373c-1363">xsd:float</span></span>|  
|<xref:System.String?displayProperty=nameWithType>|<span data-ttu-id="e373c-1364">xsd:string</span><span class="sxs-lookup"><span data-stu-id="e373c-1364">xsd:string</span></span>|  
|<xref:System.IO.TextReader?displayProperty=nameWithType>|<span data-ttu-id="e373c-1365">xsd:string</span><span class="sxs-lookup"><span data-stu-id="e373c-1365">xsd:string</span></span>|  
|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|<span data-ttu-id="e373c-1366">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="e373c-1366">xsd:base64Binary</span></span>|  
  
 <span data-ttu-id="e373c-1367">\*\*이 형식은 CLS 규격이 아니며</span><span class="sxs-lookup"><span data-stu-id="e373c-1367">\*\*These types are not CLS-compliant.</span></span> <span data-ttu-id="e373c-1368">해당 없는 <xref:System.Xml.XmlWriter.WriteValue%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1368">They do not have corresponding <xref:System.Xml.XmlWriter.WriteValue%2A> methods.</span></span>  
  
 <span data-ttu-id="e373c-1369"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1369">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1370">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1370">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : bool -&gt; unit&#xA;override this.WriteValue : bool -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1371">쓸 <see cref="T:System.Boolean" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1371">The <see cref="T:System.Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1372"><see cref="T:System.Boolean" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1372">Writes a <see cref="T:System.Boolean" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1373">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1373">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1374"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 호출하면 <xref:System.Xml.XmlWriter>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드를 사용하여 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1374">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1375"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1375">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1376">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1376">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1377">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1377">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1378">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1378">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1379">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1379">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1380">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1380">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1381">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1381">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1382">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1382">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTime -&gt; unit&#xA;override this.WriteValue : DateTime -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1383">쓸 <see cref="T:System.DateTime" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1383">The <see cref="T:System.DateTime" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1384"><see cref="T:System.DateTime" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1384">Writes a <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1385">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1385">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1386"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 호출하면 <xref:System.Xml.XmlWriter>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드를 사용하여 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1386">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1387"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1387">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1388">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1388">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1389">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1389">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1390">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1390">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1391">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1391">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1392">다음 예에서는 형식화 된 데이터를 사용 하 여 책 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1392">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1393">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1393">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1394">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1394">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1395">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1395">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTimeOffset -&gt; unit&#xA;override this.WriteValue : DateTimeOffset -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1396">쓸 <see cref="T:System.DateTimeOffset" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1396">The <see cref="T:System.DateTimeOffset" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1397"><see cref="T:System.DateTimeOffset" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1397">Writes a <see cref="T:System.DateTimeOffset" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1398">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1398">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1399">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1399">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1400">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1400">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : decimal -&gt; unit&#xA;override this.WriteValue : decimal -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1401">쓸 <see cref="T:System.Decimal" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1401">The <see cref="T:System.Decimal" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1402"><see cref="T:System.Decimal" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1402">Writes a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1403">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1403">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1404"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 호출하면 <xref:System.Xml.XmlWriter>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드를 사용하여 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1404">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1405"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1405">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1406">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1406">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1407">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1407">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1408">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1408">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1409">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1409">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1410">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1410">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1411">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1411">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1412">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1412">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : double -&gt; unit&#xA;override this.WriteValue : double -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1413">쓸 <see cref="T:System.Double" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1413">The <see cref="T:System.Double" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1414"><see cref="T:System.Double" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1414">Writes a <see cref="T:System.Double" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1415">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1415">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1416"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 호출하면 <xref:System.Xml.XmlWriter>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드를 사용하여 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1416">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1417"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1417">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1418">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1418">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1419">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1419">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1420">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1420">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1421">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1421">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e373c-1422">다음 예에서는 형식화 된 데이터를 사용 하 여 책 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1422">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1423">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1423">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1424">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1424">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1425">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1425">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int -&gt; unit&#xA;override this.WriteValue : int -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1426">쓸 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1426">The <see cref="T:System.Int32" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1427"><see cref="T:System.Int32" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1427">Writes a <see cref="T:System.Int32" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1428">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1428">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1429"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 호출하면 <xref:System.Xml.XmlWriter>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드를 사용하여 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1429">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1430"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1430">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1431">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1431">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1432">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1432">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1433">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1433">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1434">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1434">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1435">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1435">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1436">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1436">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1437">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1437">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int64 -&gt; unit&#xA;override this.WriteValue : int64 -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1438">쓸 <see cref="T:System.Int64" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1438">The <see cref="T:System.Int64" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1439"><see cref="T:System.Int64" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1439">Writes a <see cref="T:System.Int64" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1440">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1440">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1441"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 호출하면 <xref:System.Xml.XmlWriter>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드를 사용하여 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1441">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1442"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1442">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1443">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1443">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1444">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1444">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1445">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1445">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1446">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1446">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1447">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1447">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1448">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1448">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1449">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1449">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit&#xA;override this.WriteValue : obj -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1450">쓸 개체 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1450">The object value to write.</span></span>  
  
 <span data-ttu-id="e373c-1451">**참고** .NET Framework 3.5 릴리스에서 이 메서드는 <see cref="T:System.DateTimeOffset" />을 매개 변수로 받습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1451">**Note** With the release of the .NET Framework 3.5, this method accepts <see cref="T:System.DateTimeOffset" /> as a parameter.</span></span></param>
        <summary><span data-ttu-id="e373c-1452">개체 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1452">Writes the object value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1453">이 메서드는 공용 언어 런타임 (CLR) 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1453">This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1454">CLR 개체를 목록 형식 인지와 같은 <xref:System.Collections.IEnumerable>하십시오 <xref:System.Collections.IList>, 또는 <xref:System.Collections.ICollection>, 값 형식의 배열로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1454">If the CLR object is a list type such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span> <span data-ttu-id="e373c-1455">합니다 <xref:System.Xml.XmlWriter> 변환 값 XSD (XML 스키마) 데이터 형식에 따라 해당 문자열 표현으로 규칙 및 사용 하 여 씁니다는 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1455">The <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1456">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1456">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1457">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1457">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1458">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1458">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e373c-1459"><paramref name="value" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1459">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1460">작성기가 닫혀 있거나 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1460">The writer is closed or in error state.</span></span>

<span data-ttu-id="e373c-1461">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1461">-or-</span></span>

<span data-ttu-id="e373c-1462">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1462">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1463">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1463">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : single -&gt; unit&#xA;override this.WriteValue : single -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1464">쓸 단정밀도 부동 소수점 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1464">The single-precision floating-point number to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1465">단정밀도 부동 소수점 숫자를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1465">Writes a single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1466">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1466">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1467"><xref:System.Xml.XmlWriter.WriteValue%2A> 메서드를 호출하면 <xref:System.Xml.XmlWriter>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드를 사용하여 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1467">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="e373c-1468"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1468">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1469">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1469">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1470">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1470">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1471">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1471">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1472">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1472">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1473">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1473">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1474">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1474">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1475">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1475">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : string -&gt; unit&#xA;override this.WriteValue : string -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e373c-1476">쓸 <see cref="T:System.String" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1476">The <see cref="T:System.String" /> value to write.</span></span></param>
        <summary><span data-ttu-id="e373c-1477"><see cref="T:System.String" /> 값을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1477">Writes a <see cref="T:System.String" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1478">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1478">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="e373c-1479"><xref:System.Xml.XmlWriter.WriteValue%2A>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1479">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="e373c-1480">공백을 넣으려면 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>를 호출하는 사이에 <xref:System.Xml.XmlWriter.WriteValue%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1480">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="e373c-1481">배열 형식에 전달 된 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 고유 값의 배열을 작성 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1481">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="e373c-1482">이 메서드가 호출 되는 경우는 <xref:System.Xml.XmlWriter> 텍스트 전용 형식화 된 값을 텍스트로 serialize 되는 출력 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="e373c-1482">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="e373c-1483">비동기 작업을 사용 합니다 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e373c-1483">For asynchronous operations, use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1484">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1484">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1485">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1485">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1486">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1486">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public abstract void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespace : string -&gt; unit" Usage="xmlWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="e373c-1487">공백 문자의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1487">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="e373c-1488">파생 클래스에서 재정의되면 지정된 공백을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1488">When overridden in a derived class, writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1489">이 메서드는 수동으로 문서 서식을 지정 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1489">This method is used to manually format your document.</span></span>  
  
 <span data-ttu-id="e373c-1490">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1490">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e373c-1491">문자열에 공백이 아닌 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e373c-1491">The string contains non-white space characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1492">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1492">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1493">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1493">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteWhitespaceAsync(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteWhitespaceAsync (ws As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteWhitespaceAsync(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteWhitespaceAsync ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="e373c-1494">공백 문자의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1494">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="e373c-1495">주어진 공백을 비동기적으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1495">Asynchronously writes out the given white space.</span></span></summary>
        <returns><span data-ttu-id="e373c-1496">비동기 <see langword="WriteWhitespace" /> 작업(operation)을 나타내는 작업(task)입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1496">The task that represents the asynchronous <see langword="WriteWhitespace" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1497">비동기 버전이 <xref:System.Xml.XmlWriter.WriteWhitespace%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1497">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteWhitespace%2A>, with the same functionality.</span></span> <span data-ttu-id="e373c-1498">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlWriterSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1498">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1499">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1499">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1500">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1500">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="e373c-1501">또는</span><span class="sxs-lookup"><span data-stu-id="e373c-1501">-or-</span></span>

<span data-ttu-id="e373c-1502"><see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1502">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="e373c-1503">이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1503">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="e373c-1504">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e373c-1504">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e373c-1505">파생 클래스에서 재정의되면 현재 <see langword="xml:lang" /> 범위를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1505">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="e373c-1506">현재 <see langword="xml:lang" /> 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1506">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1507">이 속성에는 한 구성 요소를 내 다른 구성 요소가 기록기를 유지 하는 상태를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1507">This property allows one component to find out in what state another component has left the writer.</span></span> <span data-ttu-id="e373c-1508">예를 들어, 아마도 하나의 구성 요소 하려고 생성 언어 도움말 텍스트는 다른 지시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1508">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="e373c-1509">언어 정보를 작성 하 여 전달 되는 `xml:lang` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1509">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1510">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1510">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1511">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1511">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e373c-1512">파생 클래스에서 재정의되면 현재 <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1512">When overridden in a derived class, gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="e373c-1513">현재 <see langword="XmlSpace" /> 범위를 나타내는 <see langword="xml:space" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1513">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e373c-1514">값</span><span class="sxs-lookup"><span data-stu-id="e373c-1514">Value</span></span> 
 </term><description> <span data-ttu-id="e373c-1515">의미</span><span class="sxs-lookup"><span data-stu-id="e373c-1515">Meaning</span></span> 
 </description></listheader><item><term><see langword="None" /></term><description> <span data-ttu-id="e373c-1516"><see langword="xml:space" /> 범위가 없는 경우 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1516">This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 </description></item><item><term><see langword="Default" /></term><description> <span data-ttu-id="e373c-1517">현재 범위가 <see langword="xml:space" />="default"입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1517">The current scope is <see langword="xml:space" />="default".</span></span>  
  
 </description></item><item><term><see langword="Preserve" /></term><description> <span data-ttu-id="e373c-1518">현재 범위가 <see langword="xml:space" />="preserve"입니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1518">The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e373c-1519">이렇게 하면 하나의 구성 요소 상태 다른 구성 요소가 유지 한 기록기에 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1519">This allows one component to find out what state another component has left the writer in.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e373c-1520">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1520">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="e373c-1521">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e373c-1521">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>