<Type Name="NameTable" FullName="System.Xml.NameTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c2f4d18766fc4196defa4c8ea155c30d540a272" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58711636" /></Metadata><TypeSignature Language="C#" Value="public class NameTable : System.Xml.XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameTable extends System.Xml.XmlNameTable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.NameTable" />
  <TypeSignature Language="VB.NET" Value="Public Class NameTable&#xA;Inherits XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameTable : System::Xml::XmlNameTable" />
  <TypeSignature Language="F#" Value="type NameTable = class&#xA;    inherit XmlNameTable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNameTable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0cef9-101">단일 스레드 <see cref="T:System.Xml.XmlNameTable" />을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-101">Implements a single-threaded <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-102">와 같은 몇 가지 클래스 <xref:System.Xml.XmlDocument> 및 <xref:System.Xml.XmlReader>를 사용 하 여는 `NameTable` 특성 및 요소 이름을 저장 하는 내부적으로 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `NameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="0cef9-103">XML 문서에서 요소나 특성 이름이 여러 번 나오더라도 `NameTable`에는 한 번만 저장되며,</span><span class="sxs-lookup"><span data-stu-id="0cef9-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `NameTable`.</span></span>  
  
 <span data-ttu-id="0cef9-104">이름은 CLR(공용 언어 런타임) 개체 형식으로 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="0cef9-105">따라서 비용이 많이 드는 문자열 비교를 수행하지 않고도 이 문자열에 대해 개체 비교를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="0cef9-106">이러한 문자열 개체 원자화 된 문자열 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-106">These string objects are referred to as atomized strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cef9-107">다음 예제에서는 두 개의 요소 이름을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-107">The following example compares two element names.</span></span>  
  
 [!code-cpp[NameTable#1](~/samples/snippets/cpp/VS_Snippets_Data/NameTable/CPP/nametable.cpp#1)]
 [!code-csharp[NameTable#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable/CS/nametable.cs#1)]
 [!code-vb[NameTable#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cef9-108"><see langword="NameTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-108">Initializes a new instance of the <see langword="NameTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-109">빈 NameTable를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-109">Constructs an empty NameTable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cef9-110">지정된 문자열을 원자화하여 이를 <see langword="NameTable" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-110">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-111">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.NameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0cef9-111">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override string Add (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Add(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Add(System::String ^ key);" />
      <MemberSignature Language="F#" Value="override this.Add : string -&gt; string" Usage="nameTable.Add key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0cef9-112">추가할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-112">The string to add.</span></span></param>
        <summary><span data-ttu-id="0cef9-113">지정된 문자열을 원자화하여 이를 <see langword="NameTable" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-113">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <returns><span data-ttu-id="0cef9-114">원자화된 문자열이거나 <see langword="NameTable" />에 이미 있을 경우 기존 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-114">The atomized string or the existing string if it already exists in the <see langword="NameTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-115">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.NameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0cef9-115">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cef9-116"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-116"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override string Add (char[] key, int start, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Add(char[] key, int32 start, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (key As Char(), start As Integer, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Add(cli::array &lt;char&gt; ^ key, int start, int len);" />
      <MemberSignature Language="F#" Value="override this.Add : char[] * int * int -&gt; string" Usage="nameTable.Add (key, start, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0cef9-117">추가할 문자열이 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-117">The character array containing the string to add.</span></span></param>
        <param name="start"><span data-ttu-id="0cef9-118">문자열의 첫 번째 문자를 지정하는 배열의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-118">The zero-based index into the array specifying the first character of the string.</span></span></param>
        <param name="len"><span data-ttu-id="0cef9-119">문자열에 있는 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-119">The number of characters in the string.</span></span></param>
        <summary><span data-ttu-id="0cef9-120">지정된 문자열을 원자화하여 이를 <see langword="NameTable" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-120">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <returns><span data-ttu-id="0cef9-121">원자화된 문자열이거나 <see langword="NameTable" />에 이미 있을 경우 기존 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-121">The atomized string or the existing string if one already exists in the <see langword="NameTable" />.</span></span> <span data-ttu-id="0cef9-122"><paramref name="len" />가 0이면 String.Empty가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-122">If <paramref name="len" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-123">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.NameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0cef9-123">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0cef9-124">0 &gt; <paramref name="start" /></span><span class="sxs-lookup"><span data-stu-id="0cef9-124">0 &gt; <paramref name="start" /></span></span>  
  
<span data-ttu-id="0cef9-125">또는</span><span class="sxs-lookup"><span data-stu-id="0cef9-125">-or-</span></span> 
 <span data-ttu-id="0cef9-126"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cef9-126"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span></span> 
<span data-ttu-id="0cef9-127">또는</span><span class="sxs-lookup"><span data-stu-id="0cef9-127">-or-</span></span> 
 <span data-ttu-id="0cef9-128"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cef9-128"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span></span> 
<span data-ttu-id="0cef9-129">위의 경우 <paramref name="len" /> =0이면 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-129">The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0cef9-130"><paramref name="len" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="0cef9-130"><paramref name="len" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cef9-131">원자화된 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-131">Gets the atomized string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-132">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.NameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0cef9-132">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override string Get (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Get(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Get(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Get : string -&gt; string" Usage="nameTable.Get value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0cef9-133">찾을 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-133">The name to find.</span></span></param>
        <summary><span data-ttu-id="0cef9-134">지정된 값을 가진 원자화된 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-134">Gets the atomized string with the specified value.</span></span></summary>
        <returns><span data-ttu-id="0cef9-135">원자화된 문자열이거나 문자열이 이미 원자화되지 않은 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-135">The atomized string object or <see langword="null" /> if the string has not already been atomized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-136">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.NameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0cef9-136">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cef9-137"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-137"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override string Get (char[] key, int start, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Get(char[] key, int32 start, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (key As Char(), start As Integer, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Get(cli::array &lt;char&gt; ^ key, int start, int len);" />
      <MemberSignature Language="F#" Value="override this.Get : char[] * int * int -&gt; string" Usage="nameTable.Get (key, start, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0cef9-138">찾을 이름이 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-138">The character array containing the name to find.</span></span></param>
        <param name="start"><span data-ttu-id="0cef9-139">이름의 첫 번째 문자를 지정하는 배열의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-139">The zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="len"><span data-ttu-id="0cef9-140">이름에 있는 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-140">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="0cef9-141">주어진 배열의 지정된 문자 범위와 같은 문자가 포함된 원자화된 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-141">Gets the atomized string containing the same characters as the specified range of characters in the given array.</span></span></summary>
        <returns><span data-ttu-id="0cef9-142">문자열이 이미 원자화되지 않은 경우 원자화된 문자열 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span> <span data-ttu-id="0cef9-143"><paramref name="len" />가 0이면 String.Empty가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-143">If <paramref name="len" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cef9-144">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.NameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0cef9-144">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0cef9-145">0 &gt; <paramref name="start" /></span><span class="sxs-lookup"><span data-stu-id="0cef9-145">0 &gt; <paramref name="start" /></span></span>  
  
<span data-ttu-id="0cef9-146">또는</span><span class="sxs-lookup"><span data-stu-id="0cef9-146">-or-</span></span> 
 <span data-ttu-id="0cef9-147"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cef9-147"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span></span> 
<span data-ttu-id="0cef9-148">또는</span><span class="sxs-lookup"><span data-stu-id="0cef9-148">-or-</span></span> 
 <span data-ttu-id="0cef9-149"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cef9-149"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span></span> 
<span data-ttu-id="0cef9-150">위의 경우 <paramref name="len" /> =0이면 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0cef9-150">The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0cef9-151"><paramref name="len" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="0cef9-151"><paramref name="len" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>