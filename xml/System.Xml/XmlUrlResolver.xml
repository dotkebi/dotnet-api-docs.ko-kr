<Type Name="XmlUrlResolver" FullName="System.Xml.XmlUrlResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d406a90f389de7cb0ab9bea84dc62b5716b660a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703128" /></Metadata><TypeSignature Language="C#" Value="public class XmlUrlResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlUrlResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlUrlResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlUrlResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlUrlResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlUrlResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1f5c6-101">URI(Uniform Resource Identifier)로 명명된 외부 XML 리소스를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-101">Resolves external XML resources named by a Uniform Resource Identifier (URI).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5c6-102"><xref:System.Xml.XmlUrlResolver> 엔터티, 문서 형식 정의 (Dtd) 또는 스키마와 같은 외부 XML 리소스를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-102"><xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.</span></span> <span data-ttu-id="1f5c6-103">에 사용 되는 것도 프로세스 등 언어 XSL (Extensible StyleSheet) 스타일 시트 또는 XML 스키마 정의 언어 (XSD) 스키마에 있는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-103">It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</span></span>  
  
 <span data-ttu-id="1f5c6-104"><xref:System.Xml.XmlUrlResolver> 가 모든 클래스에 대 한 기본 확인자를 <xref:System.Xml> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-104"><xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace.</span></span> <span data-ttu-id="1f5c6-105">`file://` 및 `http://` 프로토콜을 지원하고 <xref:System.Net.WebRequest> 클래스에서 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-105">It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f5c6-106"><xref:System.Xml.XmlUrlResolver> 개체에는 사용자 자격 증명과 같은 중요한 정보가 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-106"><xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="1f5c6-107">캐시할 경우 주의 해야 <xref:System.Xml.XmlUrlResolver> 개체를 전달 해서는 안 <xref:System.Xml.XmlUrlResolver> 신뢰할 수 없는 구성 요소에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-107">You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component.</span></span>  
  
## <a name="resolving-dtds"></a><span data-ttu-id="1f5c6-108">Dtd를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-108">Resolving DTDs</span></span>  
 <span data-ttu-id="1f5c6-109">경우 XML 판독기 (<xref:System.Xml.XmlReader>) 외부 DTD가 포함 된 XML 파일을 읽고, 호출 된 <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType> DTD의 스트림 표현을 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-109">If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType> method to get a stream representation of the DTD.</span></span> <span data-ttu-id="1f5c6-110">XML 판독기를 호출 하는 경우 DTD의 URI가 상대 URI를를 <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType> 메서드에 대 한 절대 URI를 반환 하 고는 지정 된 `relativeUri` 및 `baseURi` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-110">If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters.</span></span> <span data-ttu-id="1f5c6-111">경우는 <xref:System.Xml.XmlUrlResolver> URI를 확인 하는 방법을 모르는 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-111">If the <xref:System.Xml.XmlUrlResolver> doesn't know how to resolve the URI, it returns `null`.</span></span>  
  
 <span data-ttu-id="1f5c6-112"><xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> 메서드는 <xref:System.Xml.XmlUrlResolver.Credentials%2A> 속성의 정보를 적절히 사용하여 리소스에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-112">The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource.</span></span> <span data-ttu-id="1f5c6-113">보안상 이유로 이 속성에는 `get` 접근자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-113">There is no `get` accessor to this property for security reasons.</span></span> <span data-ttu-id="1f5c6-114">덮어쓸 때 <xref:System.Xml.XmlResolver>, **GetEntity** 에서 자격 증명 정보를 활용 하는 방법은 합니다 **자격 증명** 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-114">When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property.</span></span>  
  
 <span data-ttu-id="1f5c6-115">다른 모든 XML 리소스를 확인하는 것은 DTD를 확인하는 것과 매우 유사합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-115">Resolving all other XML resources is very similar to resolving DTDs.</span></span> <span data-ttu-id="1f5c6-116"><xref:System.Xml.XmlResolver> 외부 리소스와의 연결을 협상 하 고 반환을 <xref:System.IO.Stream> 콘텐츠의 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-116"><xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content.</span></span> <span data-ttu-id="1f5c6-117">호출 하는 개체 <xref:System.Xml.XmlResolver> 스트림 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-117">The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.</span></span>  
  
## <a name="extending-the-xmlurlresolver-class"></a><span data-ttu-id="1f5c6-118">XmlUrlResolver 클래스 확장</span><span class="sxs-lookup"><span data-stu-id="1f5c6-118">Extending the XmlUrlResolver class</span></span>  
 <span data-ttu-id="1f5c6-119"><xref:System.Xml.XmlUrlResolver> 클래스의 기본 동작은 캐시가 아닌 해당 소스에서 XML 데이터 리소스를 확인하는 것입니다</span><span class="sxs-lookup"><span data-stu-id="1f5c6-119">The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache.</span></span> <span data-ttu-id="1f5c6-120">경우에 따라 캐시에서 데이터 리소스를 확인하면 데이터 리소스의 서버로 이동하는 시간이 절약되므로 응용 프로그램 성능이 향상될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-120">In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.</span></span> <span data-ttu-id="1f5c6-121">성능 향상을 최신 내용의 필요성과 비교하여 검토해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-121">The performance gains here must be weighed against the need for up-to-date content.</span></span>  
  
 <span data-ttu-id="1f5c6-122">다음 예제에서는 확장 <xref:System.Xml.XmlUrlResolver> 새 클래스를 작성 하 고 `XmlCachingResolver`를 캐시에서 리소스를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-122">The following example extends <xref:System.Xml.XmlUrlResolver> and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache.</span></span> <span data-ttu-id="1f5c6-123">이 작업은 <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> 속성 및 <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> 메서드를 재정의하여 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-123">This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]
 [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]  
  
 <span data-ttu-id="1f5c6-124">`XmlCachingResolver` 클래스의 캐시 동작은 `GetEntity` 메서드에서 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-124">The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method.</span></span> <span data-ttu-id="1f5c6-125">이 작업은 새 <xref:System.Net.WebRequest> 및 <xref:System.Net.Cache.HttpRequestCachePolicy> 개체를 만들어서 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-125">This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects.</span></span> <span data-ttu-id="1f5c6-126"><xref:System.Net.Cache.HttpRequestCachePolicy> 개체는 <xref:System.Net.Cache.HttpRequestCacheLevel.Default> 열거형의 <xref:System.Net.Cache.HttpRequestCacheLevel> 멤버를 사용하여 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-126">The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel.Default> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration.</span></span>  
  
 <span data-ttu-id="1f5c6-127"><xref:System.Net.WebRequest.CachePolicy%2A> 개체의 <xref:System.Net.WebRequest> 속성은 <xref:System.Net.Cache.HttpRequestCachePolicy> 개체로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-127">The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object.</span></span>  
  
 <span data-ttu-id="1f5c6-128">`XmlCachingResolver` 클래스의 인스턴스는 `Boolean` `enableHttpCaching`을 사용하여 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-128">An instance of the `XmlCachingResolver` class is created with the `Boolean` `enableHttpCaching`.</span></span> <span data-ttu-id="1f5c6-129">이 값 설정 하면 `true`, 인스턴스 가능한 경우 기본 캐시에서 리소스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-129">When this value is set to `true`, the instance resolves a resource from the default cache if possible.</span></span> <span data-ttu-id="1f5c6-130">때 `enableHttpCaching` 로 설정 된 `false`, 인스턴스는 기본 동작을 사용 하 고 해당 원본에서 리소스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-130">When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f5c6-131">이 예제에서는.NET Framework의 XML 클래스 확장성을 활용합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-131">This example leverages the extensibility of the XML classes in the .NET Framework.</span></span> <span data-ttu-id="1f5c6-132">특정 응용 프로그램의 필요성을 만족시키기 위해 다른 클래스를 확장하고 사용자 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-132">Other classes can be extended and customized to suit the needs of a particular application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5c6-133">다음 예제에서는 <xref:System.Xml.XmlReader> 를 사용 하는 <xref:System.Xml.XmlUrlResolver> 기본 자격 증명을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-133">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlUrlResolver> with default credentials.</span></span>  
  
 [!code-csharp[XmlResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#1)]
 [!code-vb[XmlResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="1f5c6-134">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="1f5c6-134">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlUrlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlUrlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f5c6-135"><see cref="T:System.Xml.XmlUrlResolver" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-135">Initializes a new instance of the <see cref="T:System.Xml.XmlUrlResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy {  void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy" Usage="System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f5c6-136">내부 <see cref="T:System.Net.WebRequest" /> 개체에 대한 캐시 정책을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-136">Gets or sets the cache policy for the underlying <see cref="T:System.Net.WebRequest" /> object.</span></span></summary>
        <value><span data-ttu-id="1f5c6-137">내부 웹 요청에 대한 캐시 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-137">The cache policy for the underlying web request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlUrlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f5c6-138">웹 요청을 인증하는 데 사용된 자격 증명을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-138">Sets credentials used to authenticate web requests.</span></span></summary>
        <value><span data-ttu-id="1f5c6-139">웹 요청을 인증하는 데 사용하는 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-139">The credentials to be used to authenticate web requests.</span></span> <span data-ttu-id="1f5c6-140">이 속성이 설정되지 않으면 기본적으로 값은 <see langword="null" />로 설정됩니다. 즉, <see langword="XmlUrlResolver" />에 사용자 자격 증명이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-140">If this property is not set, the value defaults to <see langword="null" />; that is, the <see langword="XmlUrlResolver" /> has no user credentials.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5c6-141">가상 디렉터리에는 인증이 필요 하지 않은, 하는 경우이 속성이 필요는 없습니다 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-141">If the virtual directory does not require authentication, this property does not need to be set.</span></span> <span data-ttu-id="1f5c6-142">그렇지 않으면 사용자의 자격 증명이 제공 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-142">Otherwise, the credentials of the user must be supplied.</span></span>  
  
 <span data-ttu-id="1f5c6-143">다른 Uri를 사용 하 여 다른 자격 증명을 연결 하 고 캐시에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-143">You can associate different credentials with different URIs and add them to a cache.</span></span> <span data-ttu-id="1f5c6-144">다음 XML의 원래 소스에 관계 없이 다른 Uri에 대 한 인증을 확인 하려면 자격 증명을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-144">You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.</span></span>  
  
 <span data-ttu-id="1f5c6-145">다음 C# 코드를 설정 하는 방법을 보여 줍니다는 <xref:System.Xml.XmlUrlResolver.Credentials%2A> 자격 증명 캐시에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-145">The following C# code shows how to set the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property to a credential cache.</span></span>  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 <span data-ttu-id="1f5c6-146">다음 예제에서는 <xref:System.Xml.XmlUrlResolver> 자격 증명을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-146">The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials.</span></span> <span data-ttu-id="1f5c6-147"><xref:System.Xml.XmlReader> 에서 자격 증명을 사용 하는 <xref:System.Xml.XmlUrlResolver> 네트워크 리소스에 액세스 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-147">The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.</span></span>  
  
 [!code-csharp[XmlResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#2)]
 [!code-vb[XmlResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlUrlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="1f5c6-148"><see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-148">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="1f5c6-149">현재 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-149">Currently not used.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="1f5c6-150">반환할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-150">The type of object to return.</span></span> <span data-ttu-id="1f5c6-151">현재 구현에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-151">The current implementation only returns <see cref="T:System.IO.Stream" /> objects.</span></span></param>
        <summary><span data-ttu-id="1f5c6-152">실제 리소스가 포함된 개체로 URI를 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-152">Maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="1f5c6-153">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-153">A stream object or <see langword="null" /> if a type other than stream is specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5c6-154">이 메서드는 호출자가 URI가 나타내는 리소스를 포함 하는 개체에 지정된 된 URI에 매핑할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-154">This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.</span></span>  
  
 <span data-ttu-id="1f5c6-155">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-155">For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f5c6-156">응용 프로그램 메모리에 대 한 서비스 거부를 완화할 수는 <xref:System.Xml.XmlUrlResolver.GetEntity%2A> IStream을 구현 하 여 메서드 <xref:System.Runtime.InteropServices.ComTypes.IStream> 읽은 바이트 수를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-156">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream <xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read.</span></span> <span data-ttu-id="1f5c6-157">이렇게 하면 악성 코드가 무한 바이트 스트림을를 전달 하려고 시도 하는 위치는 상황에 대 한 보호를 <xref:System.Xml.XmlUrlResolver.GetEntity%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-157">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5c6-158">다음 예제는 `GetEntity` 고 <xref:System.Xml.XmlResolver.ResolveUri%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-158">The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="1f5c6-159"><paramref name="ofObjectToReturn" />이 <see langword="null" /> 또는 <see langword="Stream" /> 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="1f5c6-159"><paramref name="ofObjectToReturn" /> is neither <see langword="null" /> nor a <see langword="Stream" /> type.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="1f5c6-160">지정된 URI가 절대 URI가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="1f5c6-160">The specified URI is not an absolute URI.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f5c6-161"><paramref name="absoluteUri" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-161"><paramref name="absoluteUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="1f5c6-162">런타임 오류(예: 중단된 서버 연결)가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="1f5c6-162">There is a runtime error (for example, an interrupted server connection).</span></span></exception>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlUrlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="role" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="1f5c6-163"><see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-163">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="1f5c6-164">현재 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-164">Currently not used.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="1f5c6-165">반환할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-165">The type of object to return.</span></span> <span data-ttu-id="1f5c6-166">현재 구현에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-166">The current implementation only returns <see cref="T:System.IO.Stream" /> objects.</span></span></param>
        <summary><span data-ttu-id="1f5c6-167">실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-167">Asynchronously maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="1f5c6-168">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-168">A stream object or <see langword="null" /> if a type other than stream is specified.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy {  void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy" Usage="System.Xml.XmlUrlResolver.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f5c6-169">기본 <see cref="T:System.Net.WebRequest" /> 개체에 대한 캐시 정책을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-169">Gets or sets the network proxy for the underlying <see cref="T:System.Net.WebRequest" /> object.</span></span></summary>
        <value><span data-ttu-id="1f5c6-170">인터넷 리소스에 액세스하기 위해 사용할 <see cref="T:System.Net.IWebProxy" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-170">The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlUrlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="1f5c6-171">상대 URI를 확인하는 데 사용된 기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-171">The base URI used to resolve the relative URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="1f5c6-172">확인할 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-172">The URI to resolve.</span></span> <span data-ttu-id="1f5c6-173">절대 URI나 상대 URI일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-173">The URI can be absolute or relative.</span></span> <span data-ttu-id="1f5c6-174">절대 URI인 경우 이 값은 <paramref name="baseUri" /> 값을 효율적으로 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-174">If absolute, this value effectively replaces the <paramref name="baseUri" /> value.</span></span> <span data-ttu-id="1f5c6-175">상대 URI인 경우 <paramref name="baseUri" />와 결합하여 절대 URI를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-175">If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</span></span></param>
        <summary><span data-ttu-id="1f5c6-176">기본 및 상대 URI에서 절대 URI를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-176">Resolves the absolute URI from the base and relative URIs.</span></span></summary>
        <returns><span data-ttu-id="1f5c6-177">절대 URI이거나, 상대 URI를 확인할 수 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-177">The absolute URI, or <see langword="null" /> if the relative URI cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5c6-178">절대 URI이이 URI와 관련 된 엔터티에 대 한 후속 요청에 대 한 기본 URI로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-178">The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f5c6-179"><paramref name="baseUri" />가 <see langword="null" />이거나 <paramref name="relativeUri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1f5c6-179"><paramref name="baseUri" /> is <see langword="null" /> or <paramref name="relativeUri" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1f5c6-180">이 메서드는 상속 요청.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-180">This method has an inheritance demand.</span></span> <span data-ttu-id="1f5c6-181">재정의 하려면 완전 신뢰가 필요 합니다 <see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1f5c6-181">Full trust is required to override the <see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /> method.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>