<Type Name="XmlValidatingReader" FullName="System.Xml.XmlValidatingReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1a5a72d68ea2a238f520b9a9949bd0db2d6418c" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56793047" /></Metadata><TypeSignature Language="C#" Value="public class XmlValidatingReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlValidatingReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlValidatingReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlValidatingReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlValidatingReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlValidatingReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="66291-101">DTD(문서 종류 정의), XDR(XML-Data Reduced) 스키마 및 XSD(XML 스키마 정의 언어)의 유효성 검사를 제공하는 판독기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="66291-101">Represents a reader that provides document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) validation.</span></span>  
  
<span data-ttu-id="66291-102">이 클래스는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-102">This class is obsolete.</span></span> <span data-ttu-id="66291-103">.NET Framework 2.0으로 시작하여 유효성 검사 XML 판독기를 만들려면 <see cref="T:System.Xml.XmlReaderSettings" /> 클래스 및 <see cref="Overload:System.Xml.XmlReader.Create" /> 메서드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-103">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReaderSettings" /> class and the <see cref="Overload:System.Xml.XmlReader.Create" /> method to create a validating XML reader.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-104">`XmlValidatingReader` 구현 된 <xref:System.Xml.XmlReader> 클래스 및 데이터 유효성 검사에 대 한 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-104">`XmlValidatingReader` implements the <xref:System.Xml.XmlReader> class and provides support for data validation.</span></span> <span data-ttu-id="66291-105">사용 합니다 <xref:System.Xml.XmlValidatingReader.Schemas%2A> 속성에 캐시 된 스키마 파일을 사용 하 여 유효성 검사 판독기는 <xref:System.Xml.Schema.XmlSchemaCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-105">Use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to have the reader validate by using schema files that are cached in an <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span> <span data-ttu-id="66291-106"><xref:System.Xml.XmlValidatingReader.ValidationType%2A> 속성은 판독기가 수행할 유효성 검사의 유형을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-106">The <xref:System.Xml.XmlValidatingReader.ValidationType%2A> property specifies what type of validation the reader should perform.</span></span> <span data-ttu-id="66291-107">유효성 검사 없는 판독기를 만듭니다 ValidationType.None 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-107">Setting the property to ValidationType.None creates a non-validating reader.</span></span>  
  
 <span data-ttu-id="66291-108"><xref:System.Xml.XmlValidatingReader> throw는 <xref:System.Xml.XmlException> xml 구문 분석 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-108"><xref:System.Xml.XmlValidatingReader> throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="66291-109">예외가 throw 된 후 판독기의 상태 예측 가능한 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="66291-109">After an exception is thrown the state of the reader is not predictable.</span></span> <span data-ttu-id="66291-110">예를 들어, 보고 된 노드 유형을 현재 노드의 실제 노드 형식과 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-110">For example, the reported node type may be different than the actual node type of the current node.</span></span> <span data-ttu-id="66291-111">사용 된 <xref:System.Xml.XmlValidatingReader.ReadState%2A> 판독기가 오류 상태 인지 여부를 확인할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-111">Use the <xref:System.Xml.XmlValidatingReader.ReadState%2A> property to check whether a reader is in error state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-112">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-112">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-113">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-113">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-114">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-114">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="66291-115">이 클래스는 상속 요청이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-115">This class has an inheritance demand.</span></span> <span data-ttu-id="66291-116">완전 신뢰에서 상속 해야 <see langword="XmlValidatingReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-116">Full trust is required to inherit from <see langword="XmlValidatingReader" />.</span></span></para></block>
    <altmember cref="T:System.Xml.XmlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66291-117"><see langword="XmlValidatingReader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-117">Initializes a new instance of the <see langword="XmlValidatingReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.Xml.XmlReader -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="66291-118">유효성을 검사하는 동안 읽을 <see langword="XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-118">The <see langword="XmlReader" /> to read from while validating.</span></span> <span data-ttu-id="66291-119">현재 구현은 <see cref="T:System.Xml.XmlTextReader" />만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-119">The current implementation supports only <see cref="T:System.Xml.XmlTextReader" />.</span></span></param>
        <summary><span data-ttu-id="66291-120">주어진 <see cref="T:System.Xml.XmlReader" />에서 반환된 콘텐츠의 유효성을 검사하는 <see langword="XmlValidatingReader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-120">Initializes a new instance of the <see langword="XmlValidatingReader" /> class that validates the content returned from the given <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-121">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-121">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-122">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-122">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-123">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-123">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-124">반환 된 모든 노드는 지정 된 `XmlReader` 진행에서 정보 손실 없이 이므로 유효성 검사 판독기에서 반환도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-124">All nodes returned from the given `XmlReader` are also returned from this validating reader, so there is no information loss in the process.</span></span> <span data-ttu-id="66291-125">새 노드를 기본 판독기에서 반환 되지 않습니다 (예를 들어, 기본 특성 및 엔터티 참조의 자식)이이 판독기에서 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-125">New nodes not returned from the underlying reader may be added by this reader (for example, default attributes and the children of an entity reference).</span></span> <span data-ttu-id="66291-126">에 설정 된 모든 속성을 지정 `XmlTextReader` 이 유효성 검사 판독기에도 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-126">Any properties set on the given `XmlTextReader` also apply to this validating reader.</span></span> <span data-ttu-id="66291-127">예를 들어 제공 된 판독기 WhitespaceHandling.None 집합 있으면이 유효성 검사 판독기 공백을 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-127">For example, if the supplied reader had WhitespaceHandling.None set, this validating reader also ignores white space.</span></span>  
  
 <span data-ttu-id="66291-128">외부 문서 유형 정의 (Dtd) 또는 스키마 유효성 검사를 위해 필요한 경우는 <xref:System.Xml.XmlValidatingReader.XmlResolver%2A> 속성 집합을 <xref:System.Xml.XmlResolver> 외부 리소스 확인에 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-128">When external document type definitions (DTDs) or schemas are needed for validation, the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A> property sets the <xref:System.Xml.XmlResolver> object to use for resolving external resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-129">다음 예제에서는 두 개의 문서를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-129">The following example validates two documents.</span></span>  
  
 [!code-cpp[XmlValidatingReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.Cctor/CPP/valid_xsd2.cpp#1)]
 [!code-csharp[XmlValidatingReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.Cctor/CS/valid_xsd2.cs#1)]
 [!code-vb[XmlValidatingReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.Cctor/VB/valid_xsd2.vb#1)]  
  
 <span data-ttu-id="66291-130">이 샘플에서는 다음 입력된 파일 사용:</span><span class="sxs-lookup"><span data-stu-id="66291-130">The sample uses the following input files:</span></span>  
  
 `notValidXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/notvalidxsd.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.Cctor#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/books.xsd#3)]  
  
 `inlineXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#4](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/inlinexsd.xml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66291-131">지정된 판독기가 <see langword="XmlTextReader" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="66291-131">The reader specified is not an <see langword="XmlTextReader" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlTextReader" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="66291-132">구문 분석할 XML 조각을 포함하는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-132">The stream containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="66291-133">XML 조각의 <see cref="T:System.Xml.XmlNodeType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-133">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="66291-134">이 매개 변수는 조각에 포함되는 내용을 결정합니다(아래 표 참조).</span><span class="sxs-lookup"><span data-stu-id="66291-134">This determines what the fragment can contain (see table below).</span></span></param>
        <param name="context"><span data-ttu-id="66291-135">XML 조각을 구문 분석할 <see cref="T:System.Xml.XmlParserContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-135">The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed.</span></span> <span data-ttu-id="66291-136">사용할 <see cref="T:System.Xml.XmlNameTable" />, 인코딩, 네임스페이스 범위, 현재 <see langword="xml:lang" /> 및 <see langword="xml:space" /> 범위가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-136">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, current <see langword="xml:lang" />, and <see langword="xml:space" /> scope.</span></span></param>
        <summary><span data-ttu-id="66291-137">지정된 값을 사용하여 <see langword="XmlValidatingReader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-137">Initializes a new instance of the <see langword="XmlValidatingReader" /> class with the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-138">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-138">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-139">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-139">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-140">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-140">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-141">이 생성자는 XML 조각으로 지정 된 문자열을 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-141">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="66291-142">XML 조각 요소 또는 특성 이면 올바른 형식의 XML 문서에 대 한 루트 수준 규칙을 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-142">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span>  
  
 <span data-ttu-id="66291-143">다음 표에 대 한 유효한 값 `fragType` 판독기 다른 노드 형식 구문 분석 하는 방법 및 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-143">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="66291-144">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="66291-144">XmlNodeType</span></span>|<span data-ttu-id="66291-145">조각에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-145">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="66291-146">요소</span><span class="sxs-lookup"><span data-stu-id="66291-146">Element</span></span>|<span data-ttu-id="66291-147">모든 유효한 요소 내용 (예를 들어, 요소, 주석, 처리 명령, cdata, 텍스트 및 엔터티 참조의 모든 조합)입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-147">Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</span></span>|  
|<span data-ttu-id="66291-148">특성</span><span class="sxs-lookup"><span data-stu-id="66291-148">Attribute</span></span>|<span data-ttu-id="66291-149">값 특성 (따옴표 내 부분)입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-149">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="66291-150">문서</span><span class="sxs-lookup"><span data-stu-id="66291-150">Document</span></span>|<span data-ttu-id="66291-151">전체 XML 문서의 내용 이 문서 수준 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-151">The contents of an entire XML document; this enforces document level rules.</span></span>|  
  
 <span data-ttu-id="66291-152">판독기 스트림의 인코딩을 결정 하려면 다음 단계를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-152">The reader uses the following steps to determine the encoding of the stream:</span></span>  
  
1.  <span data-ttu-id="66291-153">확인 된 <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> 인코딩을 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-153">Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span>  
  
2.  <span data-ttu-id="66291-154">경우는 `Encoding` 속성은 `null`, 판독기가 스트림의 시작 부분에서 바이트 순서 표시를 위한 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-154">If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.</span></span>  
  
3.  <span data-ttu-id="66291-155">경우는 `Encoding` 속성은 `null`, 바이트 순서 표시가 없는 발견 되 고 판독기 스트림이 u t F-8에서 인코딩된 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-155">If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</span></span>  
  
 <span data-ttu-id="66291-156">이 판독기 유효성을 검사할 문서 형식 정의 (DTD)를 사용 하는 경우 (즉, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> validationtype.dtd로 또는 ValidationType.Auto로 설정), `XmlParserContext` 에 지정 된 생성자는 필요한 모든 DocumentType 정보를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-156">If this reader will be validating using document type definition (DTD) (that is, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> is set to ValidationType.DTD or ValidationType.Auto), the `XmlParserContext` specified in the constructor must supply all the necessary DocumentType information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-157">DTD를 사용 하 여 조각 유효성을 검사 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-157">It is not possible to validate a fragment by using a DTD.</span></span> <span data-ttu-id="66291-158">정의 따라 DTD 유효성 검사에 대 한 로드 되도록 전체 문서가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-158">By definition a DTD requires an entire document to be loaded for validation.</span></span>  
  
 <span data-ttu-id="66291-159">이 판독기는 Xml-data Reduced (XDR) 또는 XML 스키마 정의 언어 (XSD) 스키마를 사용 하 여 유효성을 검사 하는, 하는 경우 사용 하 여는 <xref:System.Xml.XmlValidatingReader.Schemas%2A> 속성을 지정 합니다 <xref:System.Xml.Schema.XmlSchemaCollection> 스키마를 포함 하는 (즉,는 `XmlParserContext` 제공할 필요가 없습니다를 DocumentType 정보)입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-159">If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to specify the <xref:System.Xml.Schema.XmlSchemaCollection> that contains the schemas (that is, the `XmlParserContext` does not need to supply the DocumentType information).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="66291-160"><paramref name="fragType" />가 아래 표에 나열된 노드 형식 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="66291-160"><paramref name="fragType" /> is not one of the node types listed in the table below.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="66291-161">구문 분석할 XML 조각을 포함하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-161">The string containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="66291-162">XML 조각의 <see cref="T:System.Xml.XmlNodeType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-162">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="66291-163">이 매개 변수는 조각에 포함되는 내용도 결정합니다(아래 표 참조).</span><span class="sxs-lookup"><span data-stu-id="66291-163">This also determines what the fragment string can contain (see table below).</span></span></param>
        <param name="context"><span data-ttu-id="66291-164">XML 조각을 구문 분석할 <see cref="T:System.Xml.XmlParserContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-164">The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed.</span></span> <span data-ttu-id="66291-165">사용할 <see cref="T:System.Xml.NameTable" />, 인코딩, 네임스페이스 범위, 현재 xml:lang 및 xml:space 범위가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-165">This includes the <see cref="T:System.Xml.NameTable" /> to use, encoding, namespace scope, current xml:lang, and xml:space scope.</span></span></param>
        <summary><span data-ttu-id="66291-166">지정된 값을 사용하여 <see langword="XmlValidatingReader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-166">Initializes a new instance of the <see langword="XmlValidatingReader" /> class with the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-167">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-167">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-168">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-168">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-169">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-169">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-170">이 생성자는 XML 조각으로 지정 된 문자열을 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-170">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="66291-171">XML 조각 요소 또는 특성 이면 올바른 형식의 XML 문서에 대 한 루트 수준 규칙을 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-171">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span> <span data-ttu-id="66291-172">이 생성자에서 반환 된 문자열을 처리할 수 <xref:System.Xml.XmlReader.ReadInnerXml%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-172">This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span></span>  
  
 <span data-ttu-id="66291-173">다음 표에 대 한 유효한 값 `fragType` 판독기 다른 노드 형식 구문 분석 하는 방법 및 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-173">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="66291-174">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="66291-174">XmlNodeType</span></span>|<span data-ttu-id="66291-175">조각에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-175">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="66291-176">요소</span><span class="sxs-lookup"><span data-stu-id="66291-176">Element</span></span>|<span data-ttu-id="66291-177">모든 유효한 요소 내용 (예를 들어, 요소, 주석, 처리 명령, cdata, 텍스트 및 엔터티 참조의 모든 조합)입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-177">Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</span></span>|  
|<span data-ttu-id="66291-178">특성</span><span class="sxs-lookup"><span data-stu-id="66291-178">Attribute</span></span>|<span data-ttu-id="66291-179">값 특성 (따옴표 내 부분)입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-179">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="66291-180">문서</span><span class="sxs-lookup"><span data-stu-id="66291-180">Document</span></span>|<span data-ttu-id="66291-181">전체 XML 문서의 내용 이 문서 수준 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-181">The contents of an entire XML document; this enforces document level rules.</span></span>|  
  
 <span data-ttu-id="66291-182">이 판독기 문서 형식 정의 (DTD)를 사용 하 여 유효성을 검사할 경우 (즉, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> validationtype.dtd로 또는 ValidationType.Auto로 설정), `XmlParserContext` 에 지정 된 생성자는 필요한 모든 DocumentType 정보를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-182">If this reader will be validating by using document type definition (DTD) (that is, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> is set to ValidationType.DTD or ValidationType.Auto), the `XmlParserContext` specified in the constructor must supply all the necessary DocumentType information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-183">DTD를 사용 하 여 조각 유효성을 검사 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-183">It is not possible to validate a fragment by using DTD.</span></span> <span data-ttu-id="66291-184">정의 따라 DTD 유효성 검사에 대 한 로드 되도록 전체 문서가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-184">By definition DTD requires an entire document to be loaded for validation.</span></span>  
  
 <span data-ttu-id="66291-185">이 판독기는 Xml-data Reduced (XDR) 또는 XML 스키마 정의 언어 (XSD) 스키마를 사용 하 여 유효성을 검사 하는, 하는 경우 사용 하 여는 <xref:System.Xml.XmlValidatingReader.Schemas%2A> 속성을 지정 합니다 <xref:System.Xml.Schema.XmlSchemaCollection> 스키마를 포함 하는 (는 `XmlParserContext` DocumentType 제공할 필요가 없습니다 정보)입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-185">If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to specify the <xref:System.Xml.Schema.XmlSchemaCollection> that contains the schemas (the `XmlParserContext` does not need to supply the DocumentType information).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-186">다음 예제에서는 XML 조각을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-186">The following example reads an XML fragment.</span></span> <span data-ttu-id="66291-187">사용 하 여는 `XmlParserContext` 고 <xref:System.Xml.XmlNamespaceManager> 네임 스페이스와 일치 하는 처리 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-187">It uses an `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace matching.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="66291-188"><paramref name="fragType" />가 아래 표에 나열된 노드 형식 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="66291-188"><paramref name="fragType" /> is not one of the node types listed in the table below.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-189">현재 노드의 특성 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-189">Gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="66291-190">현재 노드에 포함된 특성의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-190">The number of attributes on the current node.</span></span> <span data-ttu-id="66291-191">이 수에는 기본 특성이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-191">This number includes default attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-192">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-192">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-193">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-193">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-194">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-194">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-195">이 속성이 관련이 `Element`, `DocumentType`, 및 `XmlDeclaration` 노드만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-195">This property is relevant to `Element`, `DocumentType`, and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="66291-196">(다른 노드 형식 특성이 없습니다.)</span><span class="sxs-lookup"><span data-stu-id="66291-196">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-197">다음 예제에서는 루트 노드의 모든 요소를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-197">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlValidatingReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-198">현재 노드의 기본 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-198">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="66291-199">현재 노드의 기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-199">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-200">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-200">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-201">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-201">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-202">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-202">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-203">네트워크에 연결 된 XML 문서를 World Wide Web Consortium (W3C)에서 제공 하는 다양 한 표준 포함 메커니즘을 사용 하 여 집계 된 데이터의 청크 이루어져 및 서로 다른 위치에서 제공 되는 노드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-203">A networked XML document is comprised of chunks of data aggregated by using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="66291-204">문서 유형 정의 (DTD) 엔터티는이 예가 있지만이 Dtd에 제한 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-204">document type definition (DTD) entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="66291-205">기본 URI 알려 이러한 노드를 가져온 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-205">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="66291-206">반환 되는 노드에 대 한 기본 URI 인지 (예를 들어, 구문 분석 된 경우 메모리 내 문자열에서), String.Empty가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-206">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), String.Empty is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-207">다음 예제에서는 파일의 구문 분석 하 고 각 노드의 기본 URI를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-207">The following example parses a file and displays the base URI of each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-208">이 예제에서는 파일을 사용 하 여 `uri.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-208">The example uses the file, `uri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/XML/source.xml#2)]  
  
 <span data-ttu-id="66291-209">합니다 `style.xml` XML 텍스트를 포함 하는 파일 `<style>hardcover</style>`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-209">The `style.xml` file contains the XML text `<style>hardcover</style>`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-210"><see cref="T:System.Xml.XmlValidatingReader" />가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-210">Gets a value indicating whether the <see cref="T:System.Xml.XmlValidatingReader" /> implements the binary content read methods.</span></span></summary>
        <value><span data-ttu-id="66291-211">이진 콘텐츠 읽기 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-211"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span> <span data-ttu-id="66291-212"><see cref="T:System.Xml.XmlValidatingReader" /> 클래스는 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-212">The <see cref="T:System.Xml.XmlValidatingReader" /> class returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-213">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-213">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-214">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-214">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-215">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-215">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="66291-216">이진 콘텐츠 읽기 메서드를 포함 합니다 <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>를 <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>, 및 <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-216">The binary content read methods include the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-217">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-217">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value><span data-ttu-id="66291-218">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-218"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="66291-219"><see langword="XmlValidatingReader" />는 항상 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-219"><see langword="XmlValidatingReader" /> always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-220">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-220">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-221">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-221">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-222">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-222">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlValidatingReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-223"><see cref="P:System.Xml.XmlReader.ReadState" />를 Closed로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-223">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to Closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-224">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-224">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-225">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-225">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-226">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-226">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-227">이 메서드는 또한 읽는 동안 보유 한 모든 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-227">This method also releases any resources held while reading.</span></span> <span data-ttu-id="66291-228">이 판독기를 사용 하 여 생성 된 경우는 <xref:System.Xml.XmlTextReader>, 또한이 메서드 호출 `Close` 는 내부 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-228">If this reader was constructed by using an <xref:System.Xml.XmlTextReader>, this method also calls `Close` on the underlying reader.</span></span> <span data-ttu-id="66291-229">이 판독기에는 스트림을 사용 하 여 생성 된 경우이 메서드 호출 `Close` 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-229">If this reader was constructed by using a stream, this method also calls `Close` on the underlying stream.</span></span>  
  
 <span data-ttu-id="66291-230">경우 `Close` 이미 호출 조치가 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-230">If `Close` has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlValidatingReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-231">XML 문서에서 현재 노드의 수준을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-231">Gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="66291-232">XML 문서의 현재 노드 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-232">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-233">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-233">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-234">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-234">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-235">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-235">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-236">다음 예에서는 수준, 줄 번호 및 줄 위치를 포함 하 여 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-236">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[IXmlLineInfo#1](~/samples/snippets/cpp/VS_Snippets_Data/IXmlLineInfo/CPP/lineinfo.cpp#1)]
 [!code-csharp[IXmlLineInfo#1](~/samples/snippets/csharp/VS_Snippets_Data/IXmlLineInfo/CS/lineinfo.cs#1)]
 [!code-vb[IXmlLineInfo#1](~/samples/snippets/visualbasic/VS_Snippets_Data/IXmlLineInfo/VB/lineinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlValidatingReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-237">문서의 인코딩 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-237">Gets the encoding attribute for the document.</span></span></summary>
        <value><span data-ttu-id="66291-238">인코딩 값입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-238">The encoding value.</span></span> <span data-ttu-id="66291-239">인코딩 특성이 없는 경우 바이트 순서 표시가 없으면 기본값은 UTF-8로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-239">If no encoding attribute exists, and there is not byte-order mark, this defaults to UTF-8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-240">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-240">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-241">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-241">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-242">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-242">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-243">(예: 문서 형식 정의 (DTD) 파일에서 엔터티를 확장 또는 스키마 파일을 읽는 동안) 모든 외부 참조를 읽을 때 인코딩 속성이 외부 참조를 인코딩 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-243">When any external reference is read (such as expanding an entity in a document type definition (DTD) file or reading a schema file) the encoding property is set to the encoding value of the external reference.</span></span> <span data-ttu-id="66291-244">외부 참조에는 인코딩이 지정 되지 않은 경우 바이트 순서 표시가 없으면 기본값은 u t F-8로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-244">If encoding is not specified in the external reference, and there is no byte-order mark, this defaults to UTF-8.</span></span>  
  
 <span data-ttu-id="66291-245">기본 운영 체제가 지 원하는 모든 인코딩 표준은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-245">All the encoding standards that the underlying operating system supports are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-246">판독기가 엔터티를 처리하는 방법을 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-246">Gets or sets a value that specifies how the reader handles entities.</span></span></summary>
        <value><span data-ttu-id="66291-247"><see cref="T:System.Xml.EntityHandling" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-247">One of the <see cref="T:System.Xml.EntityHandling" /> values.</span></span> <span data-ttu-id="66291-248"><see langword="EntityHandling" />이 지정되지 않으면 기본값은 EntityHandling.ExpandEntities로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-248">If no <see langword="EntityHandling" /> is specified, it defaults to EntityHandling.ExpandEntities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-249">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-249">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-250">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-250">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-251">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-251">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-252">이 속성을 변경할 수 있습니다 및 적용 한 다음 이후 <xref:System.Xml.XmlValidatingReader.Read%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-252">This property can be changed and takes effect after the next <xref:System.Xml.XmlValidatingReader.Read%2A> call.</span></span>  
  
 <span data-ttu-id="66291-253">때 `EntityHandling` 로 설정 된 `ExpandCharEntities`, 특성 값만 부분적으로 정규화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-253">When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized.</span></span> <span data-ttu-id="66291-254">판독기는 인접 한 엔터티 참조 노드 내용에서 독립적으로 각 개별 텍스트 노드를 정규화합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-254">The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</span></span>  
  
 <span data-ttu-id="66291-255">엔터티 간의 차이점을 설명 하기 위해 처리 모드는 다음 XML을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-255">To illustrate the difference between the entity handling modes consider the following XML:</span></span>  
  
```xml  
<!DOCTYPE doc [<!ENTITY num "123">]>  
 <doc> &#65; &num; </doc>  
```  
  
 <span data-ttu-id="66291-256">때 `EntityHandling` 로 설정 된 `ExpandEntities` "doc" 요소 노드 확장된 엔터티 텍스트를 사용 하 여 하나의 텍스트 노드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-256">When `EntityHandling` is set to `ExpandEntities` the "doc" element node contains one text node with the expanded entity text:</span></span>  
  
|<span data-ttu-id="66291-257">깊이</span><span class="sxs-lookup"><span data-stu-id="66291-257">Depth</span></span>|<span data-ttu-id="66291-258">노드 형식</span><span class="sxs-lookup"><span data-stu-id="66291-258">NodeType</span></span>|<span data-ttu-id="66291-259">name</span><span class="sxs-lookup"><span data-stu-id="66291-259">Name</span></span>|<span data-ttu-id="66291-260">값</span><span class="sxs-lookup"><span data-stu-id="66291-260">Value</span></span>|  
|-----------|--------------|----------|-----------|  
|<span data-ttu-id="66291-261">1</span><span class="sxs-lookup"><span data-stu-id="66291-261">1</span></span>|<span data-ttu-id="66291-262">텍스트</span><span class="sxs-lookup"><span data-stu-id="66291-262">Text</span></span>||<span data-ttu-id="66291-263">A 123</span><span class="sxs-lookup"><span data-stu-id="66291-263">A 123</span></span>|  
  
 <span data-ttu-id="66291-264">때 `EntityHandling` 로 설정 된 `ExpandCharEntites`, 및 <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> "doc" 유효 또는,로 설정 된 문자 엔터티를 확장 하 고 노드로 일반 엔터티를 반환 하는 요소:</span><span class="sxs-lookup"><span data-stu-id="66291-264">When `EntityHandling` is set to `ExpandCharEntites`, and <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> is set to Significant or All, the "doc" element expands the character entity and returns the general entity as a node:</span></span>  
  
|<span data-ttu-id="66291-265">깊이</span><span class="sxs-lookup"><span data-stu-id="66291-265">Depth</span></span>|<span data-ttu-id="66291-266">노드 형식</span><span class="sxs-lookup"><span data-stu-id="66291-266">NodeType</span></span>|<span data-ttu-id="66291-267">name</span><span class="sxs-lookup"><span data-stu-id="66291-267">Name</span></span>|<span data-ttu-id="66291-268">값</span><span class="sxs-lookup"><span data-stu-id="66291-268">Value</span></span>|  
|-----------|--------------|----------|-----------|  
|<span data-ttu-id="66291-269">1</span><span class="sxs-lookup"><span data-stu-id="66291-269">1</span></span>|<span data-ttu-id="66291-270">텍스트</span><span class="sxs-lookup"><span data-stu-id="66291-270">Text</span></span>||<span data-ttu-id="66291-271">A</span><span class="sxs-lookup"><span data-stu-id="66291-271">A</span></span>|  
|<span data-ttu-id="66291-272">1</span><span class="sxs-lookup"><span data-stu-id="66291-272">1</span></span>|<span data-ttu-id="66291-273">EntityReference</span><span class="sxs-lookup"><span data-stu-id="66291-273">EntityReference</span></span>|<span data-ttu-id="66291-274">num</span><span class="sxs-lookup"><span data-stu-id="66291-274">num</span></span>||  
|<span data-ttu-id="66291-275">1</span><span class="sxs-lookup"><span data-stu-id="66291-275">1</span></span>|<span data-ttu-id="66291-276">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="66291-276">SignificantWhitespace</span></span>|||  
  
   
  
## Examples  
 <span data-ttu-id="66291-277">다음 예제에서는 `ResolveEntity` 일반 엔터티를 확장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-277">The following example uses the `ResolveEntity` method to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-278">이 예제에서는 파일을 사용 하 여 `book1.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-278">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66291-279">잘못된 값이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="66291-279">Invalid value was specified.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlValidatingReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-280">판독기가 스트림의 맨 끝에 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-280">Gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value><span data-ttu-id="66291-281">판독기가 스트림의 맨 끝에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-281"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-282">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-282">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-283">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-283">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-284">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-284">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66291-285">특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-285">Gets the value of an attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlValidatingReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="66291-286">특성의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-286">The index of the attribute.</span></span> <span data-ttu-id="66291-287">인덱스는 0부터 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-287">The index is zero-based.</span></span> <span data-ttu-id="66291-288">첫 번째 특성의 인덱스는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-288">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="66291-289">지정된 인덱스가 있는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-289">Gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="66291-290">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-290">The value of the specified attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-291">이 메서드는 판독기를 이동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-291">This method does not move the reader.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-292">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-292">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-293">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-293">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-294">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-294">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66291-295"><paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="66291-295">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlValidatingReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="66291-296">특성의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-296">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="66291-297">지정된 이름이 있는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-297">Gets the value of the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="66291-298">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-298">The value of the specified attribute.</span></span> <span data-ttu-id="66291-299">특성이 없으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-299">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-300">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-300">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-301">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-301">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-302">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-302">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-303">이 메서드는 판독기를 이동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-303">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="66291-304">판독기가 위치에 `DocumentType` 노드를이 메서드는 PUBLIC과 SYSTEM 리터럴, 예를 들어, 가져오는 데 사용할 수 있습니다 `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="66291-304">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-305">다음 예제에서는 ISBN 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-305">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-306">이 예제에서는 파일을 사용 하 여 `attrs.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-306">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.GetAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/XML/attrs.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlValidatingReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="66291-307">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-307">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="66291-308">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-308">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="66291-309">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-309">Gets the value of the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="66291-310">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-310">The value of the specified attribute.</span></span> <span data-ttu-id="66291-311">특성이 없으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-311">If the attribute is not found, <see langword="null" /> is returned.</span></span> <span data-ttu-id="66291-312">이 메서드는 판독기를 이동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-312">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-313">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-313">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-314">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-314">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-315">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-315">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-316">다음 XML 특정 네임 스페이스의 특성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-316">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="66291-317">조회할 수 있습니다는 `dt:type` (접두사와 로컬 이름)의 인수를 하나 또는 두 개의 인수 (로컬 이름 및 네임 스페이스 URI)를 사용 하 여 특성:</span><span class="sxs-lookup"><span data-stu-id="66291-317">You can look up the `dt:type` attribute by using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="66291-318">조회 하는 `xmlns:dt` 특성에 다음 인수 중 하나를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-318">To look up the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="66291-319">사용 하 여이 정보를 가져올 수도 있습니다는 <xref:System.Xml.XmlValidatingReader.Prefix%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-319">You can also get this information by using the <xref:System.Xml.XmlValidatingReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlValidatingReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-320">클래스에서 줄 정보를 반환할 수 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-320">Gets a value indicating whether the class can return line information.</span></span></summary>
        <returns><span data-ttu-id="66291-321">클래스에서 줄 정보를 반환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-321"><see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-322">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-322">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-323">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-323">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-324">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-324">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlValidatingReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-325">현재 노드에 String.Empty 이외의 <see cref="P:System.Xml.XmlValidatingReader.Value" />가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-325">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlValidatingReader.Value" /> other than String.Empty.</span></span></summary>
        <value><span data-ttu-id="66291-326">현재 판독기가 위치한 노드에 <see langword="Value" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-326"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-327">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-327">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-328">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-328">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-329">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-329">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-330">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="66291-330">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="66291-331">노드 형식</span><span class="sxs-lookup"><span data-stu-id="66291-331">Node Type</span></span>|<span data-ttu-id="66291-332">값</span><span class="sxs-lookup"><span data-stu-id="66291-332">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="66291-333">특성 값</span><span class="sxs-lookup"><span data-stu-id="66291-333">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="66291-334">CDATA 섹션 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-334">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="66291-335">주석의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-335">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="66291-336">내부 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-336">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="66291-337">대상을 제외한 전체 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-337">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="66291-338">혼합된 콘텐츠 모델의 태그 간 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-338">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="66291-339">텍스트 노드의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-339">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="66291-340">태그 사이의 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-340">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="66291-341">선언 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-341">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="66291-342">다음 예제에서는 XML에서 다양 한 데이터 형식으로 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-342">The following example reads in XML with various data types and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlValidatingReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-343">현재 노드가 DTD(문서 종류 정의) 또는 스키마에서 정의한 기본값에서 생성된 특성인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-343">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.</span></span></summary>
        <value><span data-ttu-id="66291-344">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <see langword="true" />이고, 특성 값이 명시적으로 설정되었으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-344"><see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-345">특성 노드에만이 속성이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-345">This property applies only to an attribute node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-346">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-346">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-347">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-347">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-348">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-348">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-349">다음 예제에서는 루트 요소에서 모든 특성 노드를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-349">The following example displays all attributes nodes on the root element.</span></span>  
  
 [!code-cpp[XmlValidatingReader.IsDefault#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CPP/readdefattr.cpp#1)]
 [!code-csharp[XmlValidatingReader.IsDefault#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CS/readdefattr.cs#1)]
 [!code-vb[XmlValidatingReader.IsDefault#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.IsDefault/VB/readdefattr.vb#1)]  
  
 <span data-ttu-id="66291-350">이 예제에서는 입력으로 다음 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-350">The example uses the following files as input.</span></span>  
  
 `book4.xml`  
  
 [!code-xml[XmlValidatingReader.IsDefault#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book4.xml#2)]  
  
 `book.dtd`  
  
 [!code-xml[XmlValidatingReader.IsDefault#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-351">현재 노드가 빈 요소(예: <c>&lt;MyElement/&gt;</c>)인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-351">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value><span data-ttu-id="66291-352"><see langword="true" /> 현재 노드가 요소 이면 (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> equals <see langword="XmlNodeType.Element" />)로 끝나는 <c>/ &gt;</c>고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-352"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-353">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-353">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-354">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-354">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-355">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-355">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-356">이 속성을 사용하여 다음 간의 차이를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-356">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="66291-357">`<item num="123"/>` (`IsEmptyElement` 는 `true`).</span><span class="sxs-lookup"><span data-stu-id="66291-357">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="66291-358">`<item num="123">` (`IsEmptyElement` 는 `false`요소 내용이 비어 있지만).</span><span class="sxs-lookup"><span data-stu-id="66291-358">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="66291-359">해당 `EndElement` 빈 요소에 대 한 노드 생성 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-359">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="66291-360">기본 콘텐츠 스키마 유효성 검사로 인해 요소에 추가한 경우 `IsEmptyElement` 그대로 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-360">If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`.</span></span> <span data-ttu-id="66291-361">요소에는 기본값이 여부에 관계가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-361">It has no bearing on whether or not the element has a default value.</span></span> <span data-ttu-id="66291-362">즉, `IsEmptyElement` 원본 문서의 요소 했습니다 끝 요소 태그가 있는지 여부를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-362">In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-363">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-363">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-364">이 예제에서는 파일을 사용 하 여 `elems.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-364">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlValidatingReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-365">현재 줄 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-365">Gets the current line number.</span></span></summary>
        <value><span data-ttu-id="66291-366">현재 줄 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-366">The current line number.</span></span> <span data-ttu-id="66291-367">이 속성의 시작 값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-367">The starting value for this property is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-368">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-368">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-369">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-369">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-370">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-370">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-371">이 속성은 오류 보고를 위해 가장 많이 사용 되지만 언제 든 지 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-371">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="66291-372">이 속성의 시작 값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-372">The starting value for this property is 1.</span></span> <span data-ttu-id="66291-373">함께 <xref:System.Xml.XmlValidatingReader.LinePosition%2A>, 1, 1은 문서의 시작을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="66291-373">Combined with <xref:System.Xml.XmlValidatingReader.LinePosition%2A>, a value of 1,1 indicates the start of the document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlValidatingReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-374">현재 줄 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-374">Gets the current line position.</span></span></summary>
        <value><span data-ttu-id="66291-375">현재 줄 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-375">The current line position.</span></span> <span data-ttu-id="66291-376">이 속성의 시작 값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-376">The starting value for this property is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-377">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-377">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-378">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-378">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-379">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-379">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-380">이 속성은 오류 보고를 위해 가장 많이 사용 되지만 언제 든 지 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-380">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="66291-381">이 속성에 대 한 값의 시작 `1`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-381">The starting value for this property is `1`.</span></span>  
  
 <span data-ttu-id="66291-382">표시 되는 위치에는 태그에서 텍스트의 첫 번째 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-382">The position indicated is the first character of text in the markup.</span></span>  
  
```xml  
<root>  
 abc<tag/>  
</root>  
```  
  
 <span data-ttu-id="66291-383">앞의 XML 텍스트의 첫 번째 줄에는 `LinePosition` 의 `2` 문자에 해당 하 `r`; 두 번째 줄에는 `LinePosition` 의 `5` 문자에 해당 `t`; 및 세 번째 줄을 `LinePosition` 의 `3` 문자에 해당 `r`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-383">On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.</span></span>  
  
 <span data-ttu-id="66291-384">결합할 <xref:System.Xml.XmlValidatingReader.LineNumber%2A>, 값 `1,1` 문서의 시작을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="66291-384">Combined with <xref:System.Xml.XmlValidatingReader.LineNumber%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlValidatingReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-385">현재 노드의 로컬 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-385">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="66291-386">접두사를 제거한 현재 노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-386">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="66291-387">예를 들어 <see langword="LocalName" /> 됩니다 <see langword="book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-387">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="66291-388">이름이 없는 노드 형식(예: <see langword="Text" />, <see langword="Comment" /> 등)의 경우, 이 속성은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-388">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-389">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-389">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-390">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-390">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-391">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-391">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-392">다음 예제에서는 XML 조각을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-392">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlValidatingReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="66291-393">확인하려는 네임스페이스 URI(Uniform Resource Identifier)의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-393">The prefix whose namespace Uniform Resource Identifier (URI) you want to resolve.</span></span> <span data-ttu-id="66291-394">기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-394">To match the default namespace, pass an empty string.</span></span></param>
        <summary><span data-ttu-id="66291-395">현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-395">Resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="66291-396">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-396">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-397">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-397">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-398">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-398">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-399">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-399">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="66291-400">다음 XML 문자열에서 판독기가 배치 하는 경우에 `href` 특성을 접두사 `a` 호출 하 여 해결 될 `reader.LookupNamespace("a", true)`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-400">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a", true)`.</span></span> <span data-ttu-id="66291-401">반환 된 문자열은 `urn:456`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-401">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66291-402">지정된 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-402">Moves to the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlValidatingReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="66291-403">특성의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-403">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="66291-404">지정된 인덱스가 있는 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-404">Moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-405">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-405">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-406">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-406">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-407">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-407">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-408">다음 예제에서는 루트 노드의 모든 요소를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-408">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66291-409"><paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlReader.AttributeCount" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="66291-409">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="66291-410">특성의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-410">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="66291-411">지정된 이름이 있는 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-411">Moves to the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="66291-412">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-412"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="66291-413"><see langword="false" />이면 판독기 위치가 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-413">If <see langword="false" />, the position of the reader does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-414">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-414">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-415">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-415">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-416">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-416">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-417">이 메서드를 호출한 후 합니다 <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, 및 <xref:System.Xml.XmlValidatingReader.Prefix%2A> 속성 특성의 속성을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-417">After calling this method, the <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, and <xref:System.Xml.XmlValidatingReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-418">다음 예제에서는 텍스트 및 엔터티 참조 노드를 사용 하 여 특성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-418">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="66291-419">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-419">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="66291-420">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-420">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="66291-421">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-421">Moves to the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="66291-422">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-422"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="66291-423"><see langword="false" />이면 판독기 위치가 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-423">If <see langword="false" />, the position of the reader does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-424">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-424">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-425">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-425">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-426">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-426">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-427">이 메서드를 호출한 후 합니다 <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, 및 <xref:System.Xml.XmlValidatingReader.Prefix%2A> 속성 특성의 속성을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-427">After calling this method, the <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, and <xref:System.Xml.XmlValidatingReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlValidatingReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-428">현재 특성 노드가 포함된 요소로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-428">Moves to the element that contains the current attribute node.</span></span></summary>
        <returns><span data-ttu-id="66291-429">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <see langword="true" />이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-429"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-430">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-430">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-431">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-431">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-432">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-432">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-433">이 메서드를 사용 하 여 해당 특성을 통해 이동한 후 요소 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="66291-433">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="66291-434">이 메서드는 다음 노드 형식 중 하나에 판독기를 이동 합니다. `Element`, `DocumentType`, 또는 `XmlDeclaration`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-434">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-435">다음 예제에서는 루트 노드의 모든 요소를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-435">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-436">첫 번째 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-436">Moves to the first attribute.</span></span></summary>
        <returns><span data-ttu-id="66291-437">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <see langword="true" />이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-437"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-438">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-438">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-439">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-439">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-440">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-440">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-441">다음 예제에서는 XML 조각을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-441">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-442">다음 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-442">Moves to the next attribute.</span></span></summary>
        <returns><span data-ttu-id="66291-443">다음 특성이 있으면 <see langword="true" />이고, 더 이상 특성이 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-443"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-444">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-444">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-445">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-445">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-446">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-446">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-447">현재 노드가 요소 노드인 경우이 메서드는 <xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-447">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="66291-448">하는 경우 `MoveToNextAttribute` 반환 `true`, 판독기의 위치가 바뀌지 않으면이 고, 그렇지 않으면 다음 특성으로 판독기를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-448">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-449">다음 예제에서는 XML 조각을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-449">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlValidatingReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-450">현재 노드의 정규화된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-450">Gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="66291-451">현재 노드의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-451">The qualified name of the current node.</span></span> <span data-ttu-id="66291-452">예를 들어 <see langword="Name" /> 됩니다 <see langword="bk:book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-452">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="66291-453">반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlValidatingReader.NodeType" />에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="66291-453">The name returned is dependent on the <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> of the node.</span></span> <span data-ttu-id="66291-454">다음 노드 형식은 나열된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-454">The following node types return the listed values.</span></span> <span data-ttu-id="66291-455">기타 모든 노드 형식은 빈 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-455">All other node types return an empty string.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="66291-456">노드 형식</span><span class="sxs-lookup"><span data-stu-id="66291-456">Node Type</span></span> 
 </term><description> <span data-ttu-id="66291-457">name</span><span class="sxs-lookup"><span data-stu-id="66291-457">Name</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="66291-458">특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-458">The name of the attribute.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="66291-459">문서 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-459">The document type name.</span></span>  
  
 </description></item><item><term><see langword="Element" /></term><description> <span data-ttu-id="66291-460">태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-460">The tag name.</span></span>  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> <span data-ttu-id="66291-461">참조된 엔터티의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-461">The name of the entity referenced.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="66291-462">처리 명령의 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-462">The target of the processing instruction.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="66291-463">리터럴 문자열 <see langword="xml" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-463">The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-464">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-464">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-465">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-465">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-466">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-466">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-467">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-467">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-468">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-468">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlValidatingReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-469">네임스페이스 지원 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-469">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="66291-470">네임스페이스를 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-470"><see langword="true" /> to do namespace support; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="66291-471">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-471">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-472">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-472">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-473">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-473">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-474">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-474">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-475">W3C(World Wide Web 컨소시엄) 네임스페이스 사양에서 정의된 것처럼 판독기가 있는 노드의 네임스페이스 URI(Uniform Resource Identifier)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-475">Gets the namespace Uniform Resource Identifier (URI) (as defined in the World Wide Web Consortium (W3C) Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="66291-476">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-476">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-477">이 속성이 관련이 `Element` 고 `Attribute` 노드만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-477">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-478">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-478">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-479">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-479">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-480">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-480">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-481">다음 예제에서는 XML 조각을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-481">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlValidatingReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-482">이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-482">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="66291-483">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <see langword="XmlNameTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-483"><see langword="XmlNameTable" /> that enables you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-484">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-484">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-485">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-485">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-486">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-486">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-487">반환 된 모든 노드 및 특성 이름은 <xref:System.Xml.XmlValidatingReader> 를 사용 하 여 원자화 되는 `NameTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-487">All node and attribute names returned from <xref:System.Xml.XmlValidatingReader> are atomized by using the `NameTable`.</span></span> <span data-ttu-id="66291-488">이름이 같은 여러 번에 반환 될 때 (예를 들어 `Customer`)를 동일한 `String` 해당 이름의 개체가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-488">When the same name is returned multiple times (for example, `Customer`), the same `String` object will be returned for that name.</span></span> <span data-ttu-id="66291-489">이렇게 하면 개체에 비용이 많이 드는 문자열 비교 대신 이러한 문자열 비교를 수행 하는 효율적인 코드를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-489">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlValidatingReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-490">현재 노드의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-490">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="66291-491">현재 노드의 형식을 나타내는 <see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-491">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-492">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-492">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-493">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-493">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-494">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-494">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-495">이 속성은 다음을 반환 하지 않습니다 `XmlNodeType` 형식: `Document`를 `DocumentFragment`합니다 `Entity`, 또는 `Notation`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-495">This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, or `Notation`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-496">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-496">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-497">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-497">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlValidatingReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-498">현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-498">Gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="66291-499">현재 노드와 관련된 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-499">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-500">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-500">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-501">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-501">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-502">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-502">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-503">다음 예제에서는 XML 조각을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-503">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-504">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-504">Gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="66291-505">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-505">The quotation mark character (" or ') used to enclose the value of an attribute node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-506">특성 노드에만이 속성이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-506">This property applies only to an attribute node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-507">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-507">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-508">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-508">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-509">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-509">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlValidatingReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-510">스트림에서 다음 노드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-510">Reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="66291-511">다음 노드를 읽었으면 <see langword="true" />이고, 더 이상 읽을 노드가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-511"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-512">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-512">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-513">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-513">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-514">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-514">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-515">먼저 판독기가 만들어지고 초기화 됩니다을 하는 경우 정보가 없는 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-515">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="66291-516">호출 해야 `Read` 첫 번째 노드를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-516">You must call `Read` to read the first node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-517">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-517">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-518">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-518">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlValidatingReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-519">특성 값을 하나 이상의 <see langword="Text" />, <see langword="EntityReference" /> 또는 <see langword="EndEntity" /> 노드로 구문 분석합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-519">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns><span data-ttu-id="66291-520">반환할 노드가 있는 경우 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-520"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="66291-521">처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-521"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
<span data-ttu-id="66291-522"><c>misc=""</c>와 같은 빈 특성은 <see langword="true" />를 반환하며 이것은 단일 노드가 String.Empty의 값을 갖는 것을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-522">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-523">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-523">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-524">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-524">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-525">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-525">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-526">이 메서드를 사용 하 여 호출한 후 <xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A> 특성 값을 구성 하는 텍스트 또는 엔터티 참조 노드를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-526">Use this method after calling <xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="66291-527"><xref:System.Xml.XmlReader.Depth%2A> 특성 값 노드 1을 더한 특성 노드의 깊이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-527">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node.</span></span> <span data-ttu-id="66291-528">`Depth` 증가 하 고 내부 및 외부로 일반 엔터티 참조를 단계별로 실행할 때 1 씩 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-528">The `Depth` increments and decrements by one when you step into and out of general entity references.</span></span>  
  
 <span data-ttu-id="66291-529">예를 들어, 다음 xml을 사용 합니다. `<test name="a &b; c"/>`</span><span class="sxs-lookup"><span data-stu-id="66291-529">For example, suppose you have the following XML: `<test name="a &b; c"/>`</span></span>  
  
 <span data-ttu-id="66291-530">여기서 엔터티가 `b` 문서 형식 정의 (DTD)에서 다음과 같이 정의 됩니다. `<!ENTITY b "123">`</span><span class="sxs-lookup"><span data-stu-id="66291-530">where the entity `b` is defined in the document type definition (DTD) as follows: `<!ENTITY b "123">`</span></span>  
  
 <span data-ttu-id="66291-531">경우 <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> 로 설정 된 `ExpandCharEntities`, C# 코드를 다음 두 개의 텍스트 노드와 하나의 엔터티 참조 노드 특성 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-531">If <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> is set to `ExpandCharEntities`, the following C# code returns the attribute value as two text nodes and one entity reference node:</span></span>  
  
```csharp  
reader.MoveToAttribute("name");  
  while (reader.ReadAttributeValue())  
  {  
  if (reader.NodeType == XmlNodeType.Text)  
  {  
  // at this point reader.Value == "a " or " c"  
  }  
  else if (reader.NodeType == XmlNodeType.EntityReference)  
  {  
  // at this point reader.Name == "b"  
  reader.ResolveEntity();  
  while (reader.ReadAttributeValue() &&  
  reader.NodeType != XmlNodeType.EndEntity)  
  {  
  // reader.Value == "123"  
  }  
  }  
    }  
```  
  
   
  
## Examples  
 <span data-ttu-id="66291-532">다음 예제에서는 텍스트 및 엔터티 참조 노드를 사용 하 여 특성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-532">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66291-533">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-533">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="66291-534">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-534">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="66291-535">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-535">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="66291-536">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-536">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="66291-537">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-537">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="66291-538">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-538">Reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="66291-539">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-539">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-540">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-540">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-541">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-541">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-542">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-542">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="66291-543">이 메서드는 콘텐츠를 Base64 내용을 디코딩합니다 고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-543">This method streams the content, decodes the Base64 content, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="66291-544">포함 된 텍스트의 큰 스트림을 읽도록 연속적으로이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-544">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="66291-545">자세한 내용은 RFC 1521을 참조 하세요. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘".</span><span class="sxs-lookup"><span data-stu-id="66291-545">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="66291-546">Rfc를 구할 수는 [의견 웹 사이트에 대 한 요청](https://www.rfc-editor.org)합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-546">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-547">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야 합니다 <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 메서드 값 0을 반환할 때까지 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-547">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="66291-548">이 메서드에 다음과 같은 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-548">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="66291-549"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 작동 하 던 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-549"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="66291-550">판독기는 첫 번째 비 콘텐츠 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-550">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="66291-551">더 적은 묻는 경우 바이트 스트림 판독기 남아 보다 정확한 수를 현재 위치에 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-551">If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="66291-552"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 다음 XML 노드 형식에서 지원 되지 않습니다: 요소, XmlDeclaration, None, 문서, DocumentType, Notation, 엔터티 및 DocumentFragment 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-552"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66291-553"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-553">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66291-554"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-554"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66291-555">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="66291-555">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66291-556">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-556">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="66291-557">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-557">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="66291-558">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-558">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="66291-559">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-559">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="66291-560">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-560">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="66291-561">내용을 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-561">Reads the content and returns the BinHex decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="66291-562">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-562">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-563">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-563">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-564">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-564">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-565">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-565">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="66291-566">이 메서드는 콘텐츠, BinHex 내용을 디코딩합니다 및 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-566">This method streams the content, decodes the BinHex content, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span> <span data-ttu-id="66291-567">포함 된 텍스트의 큰 스트림을 읽도록 연속적으로이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-567">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-568">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야 합니다 <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 메서드 값 0을 반환할 때까지 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-568">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="66291-569">이 메서드에 다음과 같은 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-569">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="66291-570"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 작동 하 던 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-570"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="66291-571">판독기는 첫 번째 비 콘텐츠 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-571">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="66291-572">더 적은 묻는 경우 바이트 스트림 판독기 남아 보다 정확한 수를 현재 위치에 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-572">If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="66291-573"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 다음 XML 노드 형식에서 지원 되지 않습니다: 요소, XmlDeclaration, None, 문서, DocumentType, Notation, 엔터티 및 DocumentFragment 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-573"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66291-574"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-574">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66291-575"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-575"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66291-576">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="66291-576">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66291-577">구현된 <see cref="T:System.Xml.XmlValidatingReader" />에서 이 메서드를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-577">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66291-578">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-578">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="66291-579">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-579">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="66291-580">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-580">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="66291-581">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-581">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="66291-582">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-582">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="66291-583">요소를 읽고 Base64 콘텐츠를 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-583">Reads the element and decodes the Base64 content.</span></span></summary>
        <returns><span data-ttu-id="66291-584">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-584">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-585">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-585">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-586">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-586">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-587">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-587">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-588">이 메서드는 요소 내용을 읽고 Base64 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-588">This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="66291-589">자세한 내용은 RFC 1521을 참조 하세요. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘".</span><span class="sxs-lookup"><span data-stu-id="66291-589">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="66291-590">Rfc를 구할 수는 [의견 웹 사이트에 대 한 요청](https://www.rfc-editor.org)합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-590">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="66291-591">이 메서드는 단순 콘텐츠 요소에만 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-591">This method can read only simple-content elements.</span></span> <span data-ttu-id="66291-592">요소는 텍스트, 공백, 공백, CDATA 섹션, 주석 및 처리 명령을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-592">The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</span></span> <span data-ttu-id="66291-593">이 자동으로 확장 하는 엔터티 참조를 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-593">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="66291-594">요소는 자식 요소를 가질 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-594">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="66291-595">이 메서드는 매우 유사 합니다 <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 요소 노드 형식에 대해서만 한다는 점을 제외 하면 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-595">This method is very similar to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> method except that it can be called only on element node types.</span></span>  
  
 <span data-ttu-id="66291-596">경우는 `count` 문서에서 바이트의 수보다 큰 값은 문서에서 바이트의 수와 동일한 경우 또는 <xref:System.Xml.XmlValidatingReader> 문서의 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-596">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlValidatingReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="66291-597">다음 <xref:System.Xml.XmlValidatingReader> 메서드 호출 0을 반환 하 고 판독기를 노드 다음의 <xref:System.Xml.XmlNodeType.EndElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-597">The next <xref:System.Xml.XmlValidatingReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="66291-598">호출 하는 경우 <xref:System.Xml.XmlValidatingReader.Read%2A> 요소 내용을 모두 사용 하기 전에 판독기 겉으로 사용 된 첫 번째 콘텐츠 차례로 <xref:System.Xml.XmlValidatingReader.Read%2A> 메서드를 호출한 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-598">If you call <xref:System.Xml.XmlValidatingReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlValidatingReader.Read%2A> method was called.</span></span> <span data-ttu-id="66291-599">이 판독기가 끝 요소가 발견 될 때까지 모든 텍스트를 읽는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-599">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="66291-600">그런 다음 끝 태그 노드 읽기, 다음 노드를 읽을 하 고 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-600">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66291-601"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-601">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66291-602">현재 노드가 요소 노드가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="66291-602">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66291-603">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="66291-603">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66291-604">구현된 <see cref="T:System.Xml.XmlValidatingReader" />에서 이 메서드를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-604">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="66291-605">요소가 혼합 콘텐츠를 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-605">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="66291-606">요소를 요청한 형식으로 변환할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-606">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66291-607">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-607">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="66291-608">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-608">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="66291-609">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-609">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="66291-610">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-610">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="66291-611">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-611">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="66291-612">요소를 읽고 BinHex 콘텐츠를 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-612">Reads the element and decodes the BinHex content.</span></span></summary>
        <returns><span data-ttu-id="66291-613">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-613">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-614">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-614">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-615">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-615">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-616">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-616">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-617">이 메서드는 요소 내용을 읽고 BinHex 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-617">This method reads the element content, decodes it using BinHex encoding, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="66291-618">이 메서드는 단순 콘텐츠 요소에만 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-618">This method can read only simple-content elements.</span></span> <span data-ttu-id="66291-619">요소는 텍스트, 공백, 공백, CDATA 섹션, 주석 및 처리 명령을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-619">The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</span></span> <span data-ttu-id="66291-620">이 자동으로 확장 하는 엔터티 참조를 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-620">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="66291-621">요소는 자식 요소를 가질 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-621">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="66291-622">이 메서드는 매우 유사 합니다 <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 요소 노드 형식에 대해서만 한다는 점을 제외 하면 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-622">This method is very similar to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> method except that it can be called only on element node types.</span></span>  
  
 <span data-ttu-id="66291-623">경우는 `count` 문서에서 바이트의 수보다 큰 값은 문서에서 바이트의 수와 동일한 경우 또는 <xref:System.Xml.XmlValidatingReader> 문서의 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-623">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlValidatingReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="66291-624">다음 <xref:System.Xml.XmlValidatingReader> 메서드 호출 0을 반환 하 고 판독기를 노드 다음의 <xref:System.Xml.XmlNodeType.EndElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-624">The next <xref:System.Xml.XmlValidatingReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="66291-625">호출 하는 경우 <xref:System.Xml.XmlValidatingReader.Read%2A> 요소 내용을 모두 사용 하기 전에 판독기 겉으로 사용 된 첫 번째 콘텐츠 차례로 <xref:System.Xml.XmlValidatingReader.Read%2A> 메서드를 호출한 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-625">If you call <xref:System.Xml.XmlValidatingReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlValidatingReader.Read%2A> method was called.</span></span> <span data-ttu-id="66291-626">이 판독기가 끝 요소가 발견 될 때까지 모든 텍스트를 읽는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-626">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="66291-627">그런 다음 끝 태그 노드 읽기, 다음 노드를 읽을 하 고 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-627">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66291-628"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-628">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66291-629">현재 노드가 요소 노드가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="66291-629">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66291-630">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="66291-630">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66291-631">구현된 <see cref="T:System.Xml.XmlValidatingReader" />에서 이 메서드를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-631">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="66291-632">요소가 혼합 콘텐츠를 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-632">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="66291-633">요소를 요청한 형식으로 변환할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-633">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlReader ^ Reader { System::Xml::XmlReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Reader : System.Xml.XmlReader" Usage="System.Xml.XmlValidatingReader.Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-634">이 <see langword="XmlValidatingReader" />를 생성하는 데 사용된 <see cref="T:System.Xml.XmlReader" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-634">Gets the <see cref="T:System.Xml.XmlReader" /> used to construct this <see langword="XmlValidatingReader" />.</span></span></summary>
        <value><span data-ttu-id="66291-635">생성자에 지정된 <see langword="XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-635">The <see langword="XmlReader" /> specified in the constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-636">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-636">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-637">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-637">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-638">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-638">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-639">이 속성에는 사용자를 제공 된 판독기에 관련 된 속성에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-639">This property allows the user to access properties specific to the supplied reader.</span></span> <span data-ttu-id="66291-640">형식화 된 반환 `XmlReader`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-640">It returns a typed `XmlReader`.</span></span> <span data-ttu-id="66291-641">캐스팅 하기 전에 형식에 대 한 사용자를 쿼리해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-641">The user should query for the type before casting.</span></span>  
  
 <span data-ttu-id="66291-642">반환된 된 판독기 (예를 들어 읽기 메서드 호출 하나)의 상태를 변경 하면 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-642">Changing the state of the returned reader (for example, calling one of the read methods) can lead to unpredictable results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlValidatingReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-643">판독기의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-643">Gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="66291-644"><see cref="T:System.Xml.ReadState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-644">One of the <see cref="T:System.Xml.ReadState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-645">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-645">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-646">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-646">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-647">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-647">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlValidatingReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-648">요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-648">Reads the contents of an element or text node as a string.</span></span></summary>
        <returns><span data-ttu-id="66291-649">요소 또는 텍스트 노드의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-649">The contents of the element or text node.</span></span> <span data-ttu-id="66291-650">판독기가 요소 또는 텍스트 노드 이외의 위치에 있거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 이것은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-650">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="66291-651">텍스트 노드는 요소 또는 특성 텍스트 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-651">The text node can be either an element or an attribute text node.</span></span>  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-652">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-652">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-653">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-653">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-654">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-654">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-655">요소에 배치 되 면 `ReadString` 모든 텍스트, 유효 공백, 공백 및 CDATA 섹션 노드 유형은 함께 연결 하 고 요소 내용으로 연결 된 데이터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-655">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and CDATA section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="66291-656">판독기는 주석을 포함 하 고 처리 명령이 태그가 발견 되 면 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-656">The reader stops when any markup is encountered, including comments and processing instructions.</span></span> <span data-ttu-id="66291-657">이러한 동작은 혼합 내용 모델에서 발생하거나 요소 끝 태그를 읽을 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-657">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="66291-658">텍스트 노드에 있을 경우 `ReadString` 요소 끝 태그를 텍스트 노드에서 동일한 연결을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-658">If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="66291-659">판독기가 특성 텍스트 노드에 있을 경우 `ReadString`에는 판독기가 요소 시작 태그에 있을 때와 같은 기능이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-659">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="66291-660">연결된 모든 요소 텍스트 노드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-660">It returns all the concatenated element text nodes.</span></span>  
  
 <span data-ttu-id="66291-661"><xref:System.Xml.XmlValidatingReader.EntityHandling%2A> 속성에 따라 결정 하는 방법을 `ReadString` 다음과 같이 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-661">The <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property determines how `ReadString` works as follows:</span></span>  
  
|<span data-ttu-id="66291-662">값</span><span class="sxs-lookup"><span data-stu-id="66291-662">Value</span></span>|<span data-ttu-id="66291-663">설명</span><span class="sxs-lookup"><span data-stu-id="66291-663">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="66291-664">ExpandEntities</span><span class="sxs-lookup"><span data-stu-id="66291-664">ExpandEntities</span></span>|<span data-ttu-id="66291-665">확장 된 문자, 일반 엔터티를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-665">Returns expanded character and general entities.</span></span> <span data-ttu-id="66291-666">이 값이 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-666">This is the default.</span></span>|  
|<span data-ttu-id="66291-667">ExpandCharEntities</span><span class="sxs-lookup"><span data-stu-id="66291-667">ExpandCharEntities</span></span>|<span data-ttu-id="66291-668">일반 엔터티 참조를 포함 하지 않고 최대 텍스트 콘텐츠를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-668">Returns the text content up to but not including a general entity reference.</span></span> <span data-ttu-id="66291-669">이 일반 엔터티 발생을 중지 하려면 ReadString을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-669">This means a general entity causes ReadString to stop.</span></span> <span data-ttu-id="66291-670">호출 해야 `Read` 엔터티 참조를 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-670">You must call `Read` to step over the entity reference.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="66291-671">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-671">The following example displays the text content of each of the elements.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-672">이 예제에서는 파일을 사용 하 여 `elems.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-672">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadTypedValue">
      <MemberSignature Language="C#" Value="public object ReadTypedValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadTypedValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadTypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTypedValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadTypedValue();" />
      <MemberSignature Language="F#" Value="member this.ReadTypedValue : unit -&gt; obj" Usage="xmlValidatingReader.ReadTypedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-673">지정된 XSD(XML 스키마 정의 언어) 형식의 공용 언어 런타임 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-673">Gets the common language runtime type for the specified XML Schema definition language (XSD) type.</span></span></summary>
        <returns><span data-ttu-id="66291-674">지정된 XML 스키마 형식의 공용 언어 런타임 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-674">The common language runtime type for the specified XML Schema type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-675">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-675">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-676">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-676">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-677">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-677">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-678">예를 들어 스키마 형식으로 정의 됩니다 `xsd:int`, 런타임 형식 `int32` 개체에 대해 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-678">For example, if the schema type is defined as `xsd:int`, the runtime type `int32` is returned for the object.</span></span> <span data-ttu-id="66291-679">이 사용 하 여 테스트할 수는 <xref:System.Object.GetType%2A> 메서드와 캐스트 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-679">This can be tested using the <xref:System.Object.GetType%2A> method and cast accordingly.</span></span> <span data-ttu-id="66291-680">합니다 <xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A> 메서드는 항상에서 파생 된 형식을 반환 합니다 <xref:System.Object> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-680">The <xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A> method always returns a type that is derived from the <xref:System.Object> class.</span></span> <span data-ttu-id="66291-681">반환 하지 않습니다는 <xref:System.Object> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-681">It never returns the <xref:System.Object> type.</span></span>  
  
 <span data-ttu-id="66291-682">판독기가 특성에 배치,이 메서드는 런타임 형식화 된 개체를 반환 하지만 판독기의 위치가 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-682">If the reader is positioned on an attribute, this method returns the runtime typed object, but does not change the position of the reader.</span></span> <span data-ttu-id="66291-683">요소에 판독기가 배치 되 면 `ReadTypedValue` 런타임 형식의 개체를 반환 하 고 종료 태그에 판독기를 배치 CDATA, 텍스트, 공백, 유효 공백 문자 및 주석 노드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-683">If the reader is positioned on an element, `ReadTypedValue` reads any CDATA, text, white space, significant white space, and comment nodes, returns the runtime typed object and positions the reader on the end tag.</span></span> <span data-ttu-id="66291-684">없는 직접 매핑이 예를 들어 모든 형식을 `NMTOKENS`를 문자열로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-684">Any types that do not have a direct mapping, for example `NMTOKENS`, are returned as strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-685">경우 <xref:System.Xml.XmlValidatingReader.ValidationType%2A> 설정한 ValidationType.None, 데이터 형식 정보가 없습니다 스키마 또는 문서 유형 정의 (Dtd)에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-685">If <xref:System.Xml.XmlValidatingReader.ValidationType%2A> has been set to ValidationType.None, data type information is not provided from either schemas or document type definitions (DTDs).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="66291-686">호출한 후 <xref:System.Xml.XmlValidatingReader.Close%2A>하십시오 `ReadTypedValue` 돌아갑니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-686">After calling <xref:System.Xml.XmlValidatingReader.Close%2A>, `ReadTypedValue` will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-687">다음 예제에서는 XML 문서의 각 요소에 대 한 형식 정보를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-687">The following example displays the type information for each of the elements in the XML document.</span></span>  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 <span data-ttu-id="66291-688">이 예제에서는 다음 입력된 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-688">The example uses the following input files.</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlValidatingReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-689"><see langword="EntityReference" /> 노드에 대해 엔터티 참조를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-689">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-690">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-690">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-691">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-691">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-692">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-692">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-693">판독기가 위치에 `EntityReference` 노드 (`XmlNodeType.EntityReference`) 이면 <xref:System.Xml.XmlValidatingReader.Read%2A> 이 메서드를 엔터티 대체 텍스트를 구문 분석 하는 호출 후에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-693">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlValidatingReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="66291-694">엔터티 대체 텍스트를 완료 한 후는 `EndEntity` 노드가 엔터티 참조 범위를 닫습니다 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-694">After the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-695">이 메서드를 호출한 후 엔터티를 특성 값의 일부인 경우 호출 해야 <xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A> 엔터티 한 단계씩 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-695">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-696">다음 예제에서는 `ResolveEntity` 일반 엔터티를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-696">The following example uses `ResolveEntity` to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-697">이 예제에서는 파일을 사용 하 여 `book1.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-697">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66291-698">판독기가 <see langword="EntityReference" /> 노드에 배치되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="66291-698">The reader is not positioned on an <see langword="EntityReference" /> node.</span></span></exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollection Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCollection Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCollection ^ Schemas { System::Xml::Schema::XmlSchemaCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaCollection" Usage="System.Xml.XmlValidatingReader.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-699">유효성 검사에 사용할 <see cref="T:System.Xml.Schema.XmlSchemaCollection" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-699">Gets a <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> to use for validation.</span></span></summary>
        <value><span data-ttu-id="66291-700">유효성 검사에 사용할 <see langword="XmlSchemaCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-700">The <see langword="XmlSchemaCollection" /> to use for validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-701">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-701">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-702">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-702">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-703">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-703">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-704">`XmlSchemaCollection` 미리 로드 된 Xml-data Reduced (XDR) 및 XML 스키마 정의 언어 (XSD) 스키마를 보유 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-704">The `XmlSchemaCollection` holds pre-loaded XML-Data Reduced (XDR) and XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="66291-705">이 속성 스키마의 캐시에 읽기 권한자 액세스 권한을 제공 하 고 스키마를 다시 로드 될 때마다 필요 없이 유효성을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-705">This property gives the reader access to the cache of schemas and allows it to validate without having to re-load schemas every time.</span></span> <span data-ttu-id="66291-706">판독기에 아무 것도 추가 하지 않습니다는 `XmlSchemaCollection`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-706">The reader does not add anything to the `XmlSchemaCollection`.</span></span>  
  
 <span data-ttu-id="66291-707">경우는 `XmlSchemaCollection` 포함 된 XML 스키마 (XSD)를 포함 `include` 또는 `import` 유효성 검사를 위해서만 다른 네임 스페이스는 로드에 대 한 스키마를 다른 네임 스페이스를 참조 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-707">If the `XmlSchemaCollection` includes an XML schema (XSD) which contains `include` or `import` elements that reference other namespaces, the schemas for these other namespaces are loaded for validation purposes only.</span></span> <span data-ttu-id="66291-708">이러한 스키마는 스키마 컬렉션에 명시적으로 추가 된, 하지 않는 한 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-708">Unless these schemas were explicitly added to the schema collection, they will not be accessible using any of the collection methods or properties.</span></span> <span data-ttu-id="66291-709">예를 들어 스키마 파일을 포함 하는 컬렉션 `a.xsd`, 스키마 파일에 대 한 참조를 포함 하는 `b.xsd`를 추가 해야 합니다 `b.xsd` 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스 하려면 먼저 스키마 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-709">For example, if the collection contains the schema file `a.xsd`, which contains a reference to the schema file `b.xsd`, you must add `b.xsd` to the schema collection before you can access it using any of the collection methods or properties.</span></span>  
  
 <span data-ttu-id="66291-710">때를 `XmlSchemaCollection` 를 사용 하 여 액세스 하는 `Schemas` 속성을 <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType> 메서드를 <xref:System.Xml.XmlResolver> 에 지정 된를 <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="66291-710">When the `XmlSchemaCollection` is accessed using the `Schemas` property, the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType> method uses the <xref:System.Xml.XmlResolver> specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-711">스키마에 추가 해야 합니다 `XmlSchemaCollection` 첫 번째 `Read` 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-711">The schemas must be added to the `XmlSchemaCollection` before the first `Read` call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-712">다음 예제에서는 XmlSchemaCollection에 저장 된 스키마를 사용 하 여 세 개의 XML 파일의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-712">The following example validates three XML files using schemas stored in the XmlSchemaCollection.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-713">이 샘플에서는 다음과 같은 5 개의 입력된 파일 사용:</span><span class="sxs-lookup"><span data-stu-id="66291-713">The sample uses the following five input files:</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="SchemaType">
      <MemberSignature Language="C#" Value="public object SchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.SchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SchemaType { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaType : obj" Usage="System.Xml.XmlValidatingReader.SchemaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-714">스키마 형식 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-714">Gets a schema type object.</span></span></summary>
        <value><span data-ttu-id="66291-715">노드 값이 기본 제공 XSD(XML 스키마 정의 언어) 형식인지 사용자 정의 simpleType 또는 complexType인지 여부에 따라 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />입니다. 현재 노드에 스키마 형식이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-715"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, or <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> depending whether the node value is a built in XML Schema definition language (XSD) type or a user defined simpleType or complexType; <see langword="null" /> if the current node has no schema type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-716">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-716">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-717">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-717">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-718">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-718">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-719">사용자는 반환 된 형식에 대 한 테스트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-719">The user needs to test for the returned type.</span></span> <span data-ttu-id="66291-720">예를 들어 개체에 적용된</span><span class="sxs-lookup"><span data-stu-id="66291-720">For example,</span></span>  
  
```csharp  
object obj = vreader.SchemaType;  
 if (obj is XmlSchemaType)  
 {  
   XmlSchemaType st = (XmlSchemaType)obj;  
   // use XmlSchemaType object  
 }  
 if (obj is XmlSchemaDatatype)  
 {  
   XmlSchemaDatatype sd = (XmlSchemaDatatype)obj;  
   Type vt = sd.ValueType;  
   // use XmlSchemaDatatype object  
       }  
```  
  
 <span data-ttu-id="66291-721">XML 스키마 유효성 검사를 수행 하는 경우는 `XmlSchemaType` 또는 `XmlSchemaDatatype` 읽고 있는 현재 요소에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-721">If XML Schema validation is being performed, the `XmlSchemaType` or `XmlSchemaDatatype` corresponds to the current element being read.</span></span> <span data-ttu-id="66291-722">이 속성을 반환 하는 경우 문서 유형 정의 (DTD 유효성 검사)를 수행할 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-722">If document type definition (DTD validation) is being performed, this property returns `null`.</span></span>  
  
 <span data-ttu-id="66291-723">`XmlSchemaDatatype` 현재 요소 또는 특성에는 단순 유형 min 및 max와 같은 단순 형식에 대 한 특별 한 유효성 검사 제약 조건을 지정할 수 있는 경우 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-723">`XmlSchemaDatatype` is returned if the current element, or attribute, is a simple type that can specify special validation constraints on the simple types, like min and max.</span></span>  
  
 <span data-ttu-id="66291-724">`XmlSchemaSimpleType` 현재 요소 또는 특성을 사용자 정의 simpleType 경우 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-724">`XmlSchemaSimpleType` is returned if the current element, or attribute, is a user defined simpleType.</span></span>  
  
 <span data-ttu-id="66291-725">`XmlSchemaComplexType` 현재 요소 이면 사용자 정의 complexType 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-725">`XmlSchemaComplexType` is returned if the current element is a user defined complexType.</span></span> <span data-ttu-id="66291-726">이 형식은 특성으로 반환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-726">This type cannot be returned by attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-727">경우 <xref:System.Xml.XmlValidatingReader.ValidationType%2A> 설정한 ValidationType.None, 데이터 형식 정보가 없는 스키마 또는 Dtd에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-727">If <xref:System.Xml.XmlValidatingReader.ValidationType%2A> has been set to ValidationType.None, no data type information is provided from either schemas or DTDs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="66291-728">호출 후 <xref:System.Xml.XmlValidatingReader.Close%2A>, SchemaType Null이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-728">After calling <xref:System.Xml.XmlValidatingReader.Close%2A>, SchemaType will return Null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-729">다음 예제에서는 XML 문서의 각 요소에 대 한 형식 정보를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-729">The following example displays the type information for each of the elements in the XML document.</span></span>  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 <span data-ttu-id="66291-730">이 예제에서는 다음 입력된 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-730">The example uses the following input files.</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlValidatingReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-731">이 <see cref="T:System.Xml.XmlValidatingReader" /> 인스턴스를 만드는 데 사용된 <see cref="T:System.Xml.XmlReaderSettings" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-731">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object that was used to create this <see cref="T:System.Xml.XmlValidatingReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="66291-732"><see cref="T:System.Xml.XmlValidatingReader" /> 개체는 <see cref="T:System.Xml.XmlReaderSettings" /> 클래스 및 <see cref="Overload:System.Xml.XmlReader.Create" /> 메서드를 사용하여 인스턴스화되지 않기 때문에 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-732"><see langword="null" /> because <see cref="T:System.Xml.XmlValidatingReader" /> objects are not instantiated using the <see cref="T:System.Xml.XmlReaderSettings" /> class and the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="66291-733"><xref:System.Xml.XmlValidatingReader> 클래스는 .NET Framework 버전 2.0에서 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-733">The <xref:System.Xml.XmlValidatingReader> class is obsolete in .NET Framework version 2.0.</span></span> <span data-ttu-id="66291-734">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-734">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-735">자세한 내용은 [XmlReader 사용 하 여 XML 데이터 유효성 검사](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdf992b8(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-735">For more information, see [Validating XML Data with XmlReader](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdf992b8(v=vs.100)).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlLineInfo.HasLineInfo">
      <MemberSignature Language="C#" Value="bool IXmlLineInfo.HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Xml.IXmlLineInfo.HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlLineInfo#HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Function HasLineInfo () As Boolean Implements IXmlLineInfo.HasLineInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Xml.IXmlLineInfo.HasLineInfo() = System::Xml::IXmlLineInfo::HasLineInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66291-736">클래스에서 줄 정보를 반환할 수 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-736">Gets a value indicating whether the class can return line information.</span></span></summary>
        <returns><span data-ttu-id="66291-737"><see cref="P:System.Xml.IXmlLineInfo.LineNumber" />, <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-737"><see langword="true" /> if <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> can be provided; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="66291-738">판독기의 범위를 식별하는 <see cref="T:System.Xml.XmlNamespaceScope" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-738">An <see cref="T:System.Xml.XmlNamespaceScope" /> object that identifies the scope of the reader.</span></span></param>
        <summary><span data-ttu-id="66291-739">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-739">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span></span></summary>
        <returns><span data-ttu-id="66291-740">범위에서 네임스페이스를 식별하는 T:System.Collections.IDictionary 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-740">An T:System.Collections.IDictionary object that identifies the namespaces in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-741">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="66291-741">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="66291-742"><xref:System.Xml.XmlValidatingReader> 인스턴스가 <xref:System.Xml.IXmlNamespaceResolver> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-742">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="66291-743">네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-743">The namespace prefix.</span></span></param>
        <summary><span data-ttu-id="66291-744">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-744">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="66291-745">접두사와 관련된 네임스페이스 URI가 포함된 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-745">A string value that contains the namespace Uri that is associated with the prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-746">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="66291-746">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="66291-747"><xref:System.Xml.XmlValidatingReader> 인스턴스가 <xref:System.Xml.IXmlNamespaceResolver> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-747">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName"><span data-ttu-id="66291-748">접두사와 관련된 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-748">The namespace that is associated with the prefix.</span></span></param>
        <summary><span data-ttu-id="66291-749">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-749">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="66291-750"><paramref name="namespaceName" />과 관련된 네임스페이스 접두사가 포함된 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-750">A string value that contains the namespace prefix that is associated with the <paramref name="namespaceName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66291-751">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="66291-751">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="66291-752"><xref:System.Xml.XmlValidatingReader> 인스턴스가 <xref:System.Xml.IXmlNamespaceResolver> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-752">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlValidatingReader.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-753">DTD(언어 종류 정의), XDR(XML-Data Reduced) 스키마 및 XSD(XML 스키마 정의 언어) 스키마 유효성 검사 오류에 대한 정보를 받는 이벤트 처리기를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-753">Sets an event handler for receiving information about document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-754">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-754">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-755">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-755">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-756">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-756">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-757">이러한 이벤트 중에 발생 <xref:System.Xml.XmlValidatingReader.Read%2A> 경우에을 <xref:System.Xml.XmlValidatingReader.ValidationType%2A> DTD, XDR, 스키마 또는 자동 됩니다 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-757">These events occur during <xref:System.Xml.XmlValidatingReader.Read%2A> and only if a <xref:System.Xml.XmlValidatingReader.ValidationType%2A> of DTD, XDR, Schema, or Auto is specified.</span></span>  
  
 <span data-ttu-id="66291-758">없는 이벤트 처리기가 제공 하는 경우는 <xref:System.Xml.XmlException> (심각도 않으면) 첫 번째 유효성 검사 오류가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-758">If no event handler is provided, an <xref:System.Xml.XmlException> is thrown on the first validation error (Severity is equal to XmlSeverityType.Error).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66291-759">하지만 유효성 검사 오류를 보고 하는 요소, 해당 요소에 대 한 콘텐츠 모델의 나머지 부분에 유효성이 검사 되지 않은 경우 자식의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-759">If an element reports a validation error, the rest of the content model for that element is not validated, however, its children are validated.</span></span> <span data-ttu-id="66291-760">판독기는 지정된 된 요소에 대 한 첫 번째 오류만 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-760">The reader only reports the first error for a given element.</span></span>  
  
 <span data-ttu-id="66291-761">콜백 처리기를 사용할 수는 <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType> 속성 스키마를 XML 인스턴스 문서의 유효성을 검사할는 보장을 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-761">The callback handler can use the <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType> property to guarantee that an XML instance document is validated against a schema.</span></span> <span data-ttu-id="66291-762">`Severity` 속성을 사용 하면 심각한 오류 (심각도 않으면) 유효성 검사 오류 및 유효성 검사 경고가 (심각도 XmlSeverityType.Warning 같음)를 구분할 수 없는 스키마 정보가 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-762">The `Severity` property allows you to distinguish between validation errors (Severity is equal to XmlSeverityType.Error) that indicate a fatal error, and validation warnings (Severity is equal to XmlSeverityType.Warning) that indicate that no schema information is available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-763">다음 예제에서는 XML 스키마에 대해 파일의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-763">The following example validates a file against an XML Schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-764">이 샘플에서는 다음 두 개의 입력된 파일 사용:</span><span class="sxs-lookup"><span data-stu-id="66291-764">The sample uses the following two input files:</span></span>  
  
 <span data-ttu-id="66291-765">`notValidXSD.xml` (의 `xsi:schemaLocation` 판독기에 대 한 XML 스키마를 식별 하는 특성입니다.)</span><span class="sxs-lookup"><span data-stu-id="66291-765">`notValidXSD.xml` (The `xsi:schemaLocation` attribute identifies the XML Schema for the reader.)</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlValidatingReader.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-766">수행할 유효성 검사의 형식을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-766">Gets or sets a value indicating the type of validation to perform.</span></span></summary>
        <value><span data-ttu-id="66291-767"><see cref="T:System.Xml.ValidationType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-767">One of the <see cref="T:System.Xml.ValidationType" /> values.</span></span> <span data-ttu-id="66291-768">이 속성이 설정되지 않으면 기본값은 ValidationType.Auto로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-768">If this property is not set, it defaults to ValidationType.Auto.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-769">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-769">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-770">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-770">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-771">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-771">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-772">첫 번째 호출 하기 전에이 속성을 설정 해야 <xref:System.Xml.XmlValidatingReader.Read%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-772">This property must be set before the first call to <xref:System.Xml.XmlValidatingReader.Read%2A>.</span></span> <span data-ttu-id="66291-773">이 속성을 ValidationType.None 비검증 판독기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="66291-773">Setting this property to ValidationType.None creates a non-validating reader.</span></span>  
  
 <span data-ttu-id="66291-774">외부 문서 유형 정의 (Dtd) 또는 스키마 유효성 검사를 위해 필요한 경우는 <xref:System.Xml.XmlResolver> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-774">If external document type definitions (DTDs) or schemas are needed for validation, the <xref:System.Xml.XmlResolver> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-775">다음 예제에서는 두 파일의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-775">The following example validates two files.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-776">이 샘플에서는 다음 네 개의 입력된 파일 사용:</span><span class="sxs-lookup"><span data-stu-id="66291-776">The sample uses the following four input files:</span></span>  
  
 <span data-ttu-id="66291-777">`notValid.xml` (의 "x 스키마:" 접두사 판독기에 대 한 Xml-data Reduced (XDR) 스키마를 식별 합니다.)</span><span class="sxs-lookup"><span data-stu-id="66291-777">`notValid.xml` (The "x-schema:" prefix identifies the XML-Data Reduced (XDR) schema for the reader.)</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#2)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#3)]  
  
 `cdDTD.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#4)]  
  
 `book1.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66291-778">Read를 호출한 후 속성을 설정하는 경우</span><span class="sxs-lookup"><span data-stu-id="66291-778">Setting the property after a Read has been called.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlValidatingReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-779">현재 노드의 텍스트 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-779">Gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="66291-780">노드의 <see cref="P:System.Xml.XmlValidatingReader.NodeType" />에 따라 반환되는 값이 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="66291-780">The value returned depends on the <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> of the node.</span></span> <span data-ttu-id="66291-781">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="66291-781">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="66291-782">다른 모든 노드 형식은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-782">All other node types return String.Empty.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="66291-783">노드 형식</span><span class="sxs-lookup"><span data-stu-id="66291-783">Node Type</span></span> 
 </term><description> <span data-ttu-id="66291-784">값</span><span class="sxs-lookup"><span data-stu-id="66291-784">Value</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="66291-785">특성 값</span><span class="sxs-lookup"><span data-stu-id="66291-785">The value of the attribute.</span></span>  
  
 </description></item><item><term><see langword="CDATA" /></term><description> <span data-ttu-id="66291-786">CDATA 섹션 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-786">The content of the CDATA section.</span></span>  
  
 </description></item><item><term><see langword="Comment" /></term><description> <span data-ttu-id="66291-787">주석의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-787">The content of the comment.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="66291-788">내부 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-788">The internal subset.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="66291-789">대상을 제외한 전체 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-789">The entire content, excluding the target.</span></span>  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> <span data-ttu-id="66291-790">혼합된 콘텐츠 모델의 태그 간 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-790">The white space between markup in a mixed content model.</span></span>  
  
 </description></item><item><term><see langword="Text" /></term><description> <span data-ttu-id="66291-791">텍스트 노드의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-791">The content of the text node.</span></span>  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> <span data-ttu-id="66291-792">태그 사이의 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-792">The white space between markup.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="66291-793">선언 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-793">The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-794">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-794">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-795">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-795">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-796">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-796">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-797">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-797">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="66291-798">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-798">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlValidatingReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-799">현재 <see langword="xml:lang" /> 범위를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-799">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="66291-800">현재 <see langword="xml:lang" /> 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-800">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-801">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-801">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-802">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-802">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-803">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-803">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-804">이 속성은 현재 노드가 속해 있는 xml: lang 범위를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="66291-804">This property represents the xml:lang scope within which the current node resides.</span></span> <span data-ttu-id="66291-805">예를 들어, 사용 하 여 XML 조각을 같습니다 `xml:lang` 미국으로 설정 루트 요소에서 영어:</span><span class="sxs-lookup"><span data-stu-id="66291-805">For example, here is an XML fragment with `xml:lang` set to U.S. English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="66291-806">판독기가 배치 하는 경우는 `name` 요소인 미국의 범위에 있는지를 찾으려면이 속성을 사용할 수 있습니다 영어 `xml:lang` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-806">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a U.S. English `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-807">외부 DTD(Document Type Definition) 및 스키마 위치 참조를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-807">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving external document type definition (DTD) and schema location references.</span></span> <span data-ttu-id="66291-808">또한 <see langword="XmlResolver" />는 XSD(XML 스키마 정의 언어) 스키마에 있는 포함 요소 또는 가져오기 요소를 처리하는 데도 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-808">The <see langword="XmlResolver" /> is also used to handle any import or include elements found in XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="66291-809">사용할 <see langword="XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-809">The <see langword="XmlResolver" /> to use.</span></span> <span data-ttu-id="66291-810"><see langword="null" />로 설정되면 외부 리소스는 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-810">If set to <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="66291-811">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 버전 1.1에서는 완전히 신뢰할 수 있는 호출자만 <see langword="XmlResolver" />를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-811">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted to specify an <see langword="XmlResolver" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-812">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-812">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-813">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-813">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-814">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-814">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="66291-815">`XmlResolver` 모든 Dtd, 엔터티, 또는 유효성 검사 프로세스를 완료 하는 데 필요한 스키마를 로드 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-815">The `XmlResolver` is used to load any DTDs, entities, or schemas needed to complete the validation process.</span></span>  
  
 <span data-ttu-id="66291-816">언제 든 지가이 속성을 설정할 수 있습니다 및 다음 후에 반영 됩니다 <xref:System.Xml.XmlValidatingReader.Read%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-816">This property can be set at any time and takes affect after the next <xref:System.Xml.XmlValidatingReader.Read%2A> call.</span></span> <span data-ttu-id="66291-817">이 속성 설정 된 경우 `null`, 판독기는 외부 참조를 확인 하지 않으려는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-817">If this property is set to `null`, the reader assumes the user is not interested in resolving external references.</span></span> <span data-ttu-id="66291-818">이 경우 리소스가 있는 경우 판독기 내부 리소스에 대해 확인만 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-818">In this case, the reader only validates against internal resources, if the resource is present.</span></span>  
  
 <span data-ttu-id="66291-819">버전 1.1에서는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] ,이 속성을 설정 하지 않으면 애플리케이션의 신뢰 수준을 기본 동작을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-819">In version 1.1 of [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] , if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="66291-820">`Fully trusted code:` 기본값을 사용 하 여 판독기 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-820">`Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="66291-821">사용 하 여 네트워크 리소스에 액세스 하는 데 인증이 필요 합니다 `XmlResolver` 속성에 지정할는 `XmlResolver` 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-821">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="66291-822">`Semi-trusted code:` 합니다 `XmlResolver` 속성이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-822">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="66291-823">외부 리소스가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66291-823">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="66291-824">스키마를 사용 하 여 유효성을 검사 하는 경우 제공 하 여 비용이 많이 드는 로드 프로세스를 방지할 수 있습니다는 <xref:System.Xml.Schema.XmlSchemaCollection> 를 사용 하 여 <xref:System.Xml.XmlValidatingReader.Schemas%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="66291-824">When validating using schemas, you can avoid the expensive load process by providing an <xref:System.Xml.Schema.XmlSchemaCollection> using the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66291-825">다음 예제에서는 `XmlResolver` 속성 네트워크로 연결 된 DTD 파일에 액세스 하는 데 필요한 자격 증명을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-825">The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked DTD file.</span></span>  
  
 [!code-cpp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CPP/vrdr_resolver.cpp#1)]
 [!code-csharp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CS/vrdr_resolver.cs#1)]
 [!code-vb[XmlValidatingReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.XmlResolver/VB/vrdr_resolver.vb#1)]  
  
 <span data-ttu-id="66291-826">이 예제에서는 입력으로 다음 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-826">The example uses the following files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66291-827">현재 <see langword="xml:space" /> 범위를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66291-827">Gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="66291-828"><see cref="T:System.Xml.XmlSpace" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="66291-828">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="66291-829"><see langword="xml:space" /> 범위가 존재하지 않으면 이 속성은 기본적으로 <see langword="XmlSpace.None" />으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="66291-829">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="66291-830">합니다 <xref:System.Xml.XmlValidatingReader> 클래스에서 사용 되지 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="66291-830">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="66291-831">유효성 검사를 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="66291-831">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="66291-832">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="66291-832">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>