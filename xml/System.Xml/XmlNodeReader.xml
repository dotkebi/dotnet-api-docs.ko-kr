<Type Name="XmlNodeReader" FullName="System.Xml.XmlNodeReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="efe39fae1ea28a2fba697be64dc49da43fa7b5ea" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58453690" /></Metadata><TypeSignature Language="C#" Value="public class XmlNodeReader : System.Xml.XmlReader, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNodeReader extends System.Xml.XmlReader implements class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNodeReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNodeReader&#xA;Inherits XmlReader&#xA;Implements IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNodeReader : System::Xml::XmlReader, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlNodeReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d2ffc-101"><see cref="T:System.Xml.XmlNode" />의 XML 데이터에 대한 빠르고 캐시되지 않은 전방 액세스만 제공하는 판독기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-101">Represents a reader that provides fast, non-cached forward only access to XML data in an <see cref="T:System.Xml.XmlNode" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-102">사용 하는 대신 합니다 <xref:System.Xml.XmlNodeReader>를 만들어야 하는 것이 좋습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-102">Instead of using the <xref:System.Xml.XmlNodeReader>, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-103">이 옵션을 사용 하면 규칙 검사 및 XML 1.0 권장 사항 준수를 활용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-103">This enables you to take advantage of conformance checking and compliance to the XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="d2ffc-104">`XmlNodeReader` 는 XML DOM 하위 트리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-104">The `XmlNodeReader` has the ability to read an XML DOM subtree.</span></span> <span data-ttu-id="d2ffc-105">이 클래스는 문서 형식 정의 (DTD) 또는 스키마 유효성 검사를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-105">This class does not support document type definition (DTD) or schema validation.</span></span> <span data-ttu-id="d2ffc-106">만들 수 있습니다는 <xref:System.Xml.XmlReader> 주위를 래핑하는 개체를 <xref:System.Xml.XmlNodeReader> 에 저장 된 데이터의 유효성을 검사 하는 개체는 <xref:System.Xml.XmlNodeReader> 예제 단원에 나와 있는 것 처럼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-106">However, you can create an <xref:System.Xml.XmlReader> object that wraps around the <xref:System.Xml.XmlNodeReader> object to validate the data stored in the <xref:System.Xml.XmlNodeReader> object, as shown in Examples section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-107">다음 예제에서는 XML 파일을 XML 문서에 로드한 후 수정합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-107">In the following example, an XML file is loaded into an XML document and modified.</span></span> <span data-ttu-id="d2ffc-108">XML 문서가 <xref:System.Xml.XmlNodeReader>에 전달되고 나서 이 개체가 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 메서드에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-108">The XML document is passed to an <xref:System.Xml.XmlNodeReader>, which is then passed to the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d2ffc-109">유효성 검사 판독기에서 파일을 구문 분석할 때 XML 파일의 변경 내용에 대해 유효성을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-109">When the validating reader parses the file, it can validate any changes made to the XML file.</span></span>  
  
 [!code-csharp[XmlReader_Validate_DOM#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_DOM/CS/valid_dom.cs#1)]
 [!code-vb[XmlReader_Validate_DOM#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_DOM/VB/valid_dom.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="d2ffc-110">입력</span><span class="sxs-lookup"><span data-stu-id="d2ffc-110">Input</span></span>  
 <span data-ttu-id="d2ffc-111">다음 파일이 입력으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-111">The following files are used as input.</span></span>  
  
#### <a name="bookschemaxml"></a><span data-ttu-id="d2ffc-112">bookSchema.xml</span><span class="sxs-lookup"><span data-stu-id="d2ffc-112">bookSchema.xml</span></span>  
 [!code-xml[XML_Core_Files#8](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/booksschema.xml#8)]  
  
#### <a name="booksxsd"></a><span data-ttu-id="d2ffc-113">books.xsd</span><span class="sxs-lookup"><span data-stu-id="d2ffc-113">books.xsd</span></span>  
 [!code-xml[XML_Core_Files#9](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/books.xsd#9)]  
  
## <a name="output"></a><span data-ttu-id="d2ffc-114">출력</span><span class="sxs-lookup"><span data-stu-id="d2ffc-114">Output</span></span>  
 <span data-ttu-id="d2ffc-115">유효성 검사 오류: 'publisher' 특성이 선언되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-115">Validation Error: The 'publisher' attribute is not declared.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNodeReader (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNodeReader(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlNodeReader : System.Xml.XmlNode -&gt; System.Xml.XmlNodeReader" Usage="new System.Xml.XmlNodeReader node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="d2ffc-116">읽으려는 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-116">The <see langword="XmlNode" /> you want to read.</span></span></param>
        <summary><span data-ttu-id="d2ffc-117">지정된 <see cref="T:System.Xml.XmlNode" />를 사용하여 <see langword="XmlNodeReader" /> 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-117">Creates an instance of the <see langword="XmlNodeReader" /> class using the specified <see cref="T:System.Xml.XmlNode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-118">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-118">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-119">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-119">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-120">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-120">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-121">자세한 내용 및 예제를 만드는 데 사용 하는 코드의는 `XmlNodeReader`를 참조 하세요 <xref:System.Xml.XmlReader> 오버 로드 하 고는 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-121">For more information and examples of the code used to create an `XmlNodeReader`, see <xref:System.Xml.XmlReader> and overloads of the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlNodeReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-122">현재 노드의 특성 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-122">Gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-123">현재 노드에 포함된 특성의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-123">The number of attributes on the current node.</span></span> <span data-ttu-id="d2ffc-124">이 수에는 기본 특성이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-124">This number includes default attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-125">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-125">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-126">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-126">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-127">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-127">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-128">이 속성이 관련이 `Element`, `DocumentType` 및 `XmlDeclaration` 노드만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-128">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="d2ffc-129">(다른 노드 형식 특성이 없습니다.)</span><span class="sxs-lookup"><span data-stu-id="d2ffc-129">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-130">다음 예제에서는 루트 노드의 모든 특성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-130">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNodeReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-131">현재 노드의 기본 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-131">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-132">현재 노드의 기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-132">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-133">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-133">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-134">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-134">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-135">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-135">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-136">네트워크에 연결 된 XML 문서를 다양 한 W3C 표준 포함 메커니즘을 사용 하 여 집계 데이터의 청크 이루어집니다 및 서로 다른 위치에서 제공 되는 노드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-136">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="d2ffc-137">DTD 엔터티 예가이 있고이 Dtd에 제한 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-137">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="d2ffc-138">기본 URI 알려 이러한 노드를 가져온 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-138">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="d2ffc-139">반환 되는 노드에 대 한 기본 URI 인지 (예를 들어, 구문 분석 된 경우 메모리 내 문자열에서), String.Empty가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-139">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), String.Empty is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-140">다음 예제에서는 파일의 구문 분석 하 고 각 노드의 기본 URI를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-140">The following example parses a file and displays the base URI of each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d2ffc-141">이 예제에서는 파일을 사용 하 여 `uri.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-141">The example uses the file, `uri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/XML/source.xml#2)]  
  
 <span data-ttu-id="d2ffc-142">합니다 `style.xml` XML 텍스트를 포함 하는 파일 `<style>hardcover</style>`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-142">The `style.xml` file contains the XML text `<style>hardcover</style>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-143"><see cref="T:System.Xml.XmlNodeReader" />가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-143">Gets a value indicating whether the <see cref="T:System.Xml.XmlNodeReader" /> implements the binary content read methods.</span></span></summary>
        <value><span data-ttu-id="d2ffc-144">이진 콘텐츠 읽기 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-144"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span> <span data-ttu-id="d2ffc-145"><see cref="T:System.Xml.XmlNodeReader" /> 클래스는 항상 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-145">The <see cref="T:System.Xml.XmlNodeReader" /> class always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-146">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-146">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-147">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-147">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-148">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-148">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-149">이진 콘텐츠 읽기 메서드를 포함 합니다 <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A>를 <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A>, 및 <xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-149">The binary content read methods include the <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-150">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-150">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value><span data-ttu-id="d2ffc-151">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-151"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d2ffc-152"><see langword="XmlNodeReader" />는 항상 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-152"><see langword="XmlNodeReader" /> always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-153">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-153">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-154">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-154">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-155">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-155">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlNodeReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-156"><see cref="P:System.Xml.XmlNodeReader.ReadState" />를 <see langword="Closed" />로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-156">Changes the <see cref="P:System.Xml.XmlNodeReader.ReadState" /> to <see langword="Closed" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-157">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-157">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-158">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-158">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-159">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-159">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-160">이 메서드는 또한 읽는 동안 보유 한 모든 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-160">This method also releases any resources held while reading.</span></span> <span data-ttu-id="d2ffc-161">경우 `Close` 이미 호출 조치가 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-161">If `Close` has already been called, no action is performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-162">다음 예제에서는 파일의 구문 분석 하 고 판독기를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-162">The following example parses a file and closes the reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d2ffc-163">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-163">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlNodeReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-164">XML 문서에서 현재 노드의 수준을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-164">Gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="d2ffc-165">XML 문서의 현재 노드 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-165">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-166">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-166">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-167">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-167">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-168">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-168">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlNodeReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-169">판독기가 스트림의 맨 끝에 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-169">Gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value><span data-ttu-id="d2ffc-170">판독기가 스트림의 맨 끝에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-170"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-171">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-171">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-172">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-172">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-173">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-173">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d2ffc-174">특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-174">Gets the value of an attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (attributeIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlNodeReader.GetAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex"><span data-ttu-id="d2ffc-175">특성의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-175">The index of the attribute.</span></span> <span data-ttu-id="d2ffc-176">인덱스는 0부터 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-176">The index is zero-based.</span></span> <span data-ttu-id="d2ffc-177">첫 번째 특성의 인덱스는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-177">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="d2ffc-178">지정된 인덱스가 있는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-178">Gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-179">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-179">The value of the specified attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-180">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-180">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-181">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-181">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-182">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-182">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-183">이 메서드는 판독기를 이동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-183">This method does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ffc-184"><paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-184">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlNodeReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d2ffc-185">특성의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-185">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="d2ffc-186">지정된 이름이 있는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-186">Gets the value of the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-187">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-187">The value of the specified attribute.</span></span> <span data-ttu-id="d2ffc-188">특성이 없으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-188">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-189">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-189">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-190">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-190">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-191">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-191">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-192">이 메서드는 판독기를 이동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-192">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="d2ffc-193">판독기가 위치에 `DocumentType` 노드를이 메서드는 PUBLIC과 SYSTEM 리터럴, 예를 들어, 가져오는 데 사용할 수 있습니다 `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="d2ffc-193">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-194">다음 예제에서는 ISBN 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-194">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlNodeReader.GetAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d2ffc-195">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-195">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="d2ffc-196">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-196">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="d2ffc-197">지정된 로컬 이름과 네임스페이스 URI가 있는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-197">Gets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-198">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-198">The value of the specified attribute.</span></span> <span data-ttu-id="d2ffc-199">특성이 없으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-199">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-200">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-200">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-201">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-201">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-202">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-202">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-203">다음 XML 특정 네임 스페이스의 특성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-203">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="d2ffc-204">조회 수는 `dt:type` (접두사와 로컬 이름)의 인수를 하나 또는 두 개의 인수 (로컬 이름 및 네임 스페이스 URI)를 사용 하 여 특성:</span><span class="sxs-lookup"><span data-stu-id="d2ffc-204">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="d2ffc-205">조회 하는 `xmlns:dt` 특성에 다음 인수 중 하나를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-205">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="d2ffc-206">사용 하 여이 정보를 가져올 수도 있습니다는 <xref:System.Xml.XmlNodeReader.Prefix%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-206">You can also get this information using the <xref:System.Xml.XmlNodeReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public override bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlNodeReader.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-207">현재 노드에 특성이 있는지를 나타내는 값을 얻습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-207">Gets a value indicating whether the current node has any attributes.</span></span></summary>
        <value><span data-ttu-id="d2ffc-208">현재 노드에 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-208"><see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-209">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-209">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-210">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-210">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-211">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-211">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-212">다음 예제에서는 루트 노드의 모든 특성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-212">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlNodeReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-213">현재 노드에 <see cref="P:System.Xml.XmlNodeReader.Value" />가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-213">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlNodeReader.Value" />.</span></span></summary>
        <value><span data-ttu-id="d2ffc-214">현재 판독기가 위치한 노드에 <see langword="Value" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-214"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-215">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-215">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-216">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-216">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-217">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-217">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-218">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-218">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="d2ffc-219">노드 형식</span><span class="sxs-lookup"><span data-stu-id="d2ffc-219">Node Type</span></span>|<span data-ttu-id="d2ffc-220">값</span><span class="sxs-lookup"><span data-stu-id="d2ffc-220">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="d2ffc-221">특성 값</span><span class="sxs-lookup"><span data-stu-id="d2ffc-221">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="d2ffc-222">CDATA 섹션 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-222">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="d2ffc-223">주석의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-223">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="d2ffc-224">내부 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-224">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="d2ffc-225">대상을 제외한 전체 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-225">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="d2ffc-226">혼합된 콘텐츠 모델의 태그 간 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-226">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="d2ffc-227">텍스트 노드의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-227">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="d2ffc-228">태그 사이의 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-228">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="d2ffc-229">선언 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-229">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-230">다음 예제에서는 값을 가질 수 있는 모든 노드의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-230">The following example displays the value for every node which can have a value.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlNodeReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-231">현재 노드가 DTD(문서 종류 정의) 또는 스키마에서 정의한 기본값에서 생성된 특성인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-231">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.</span></span></summary>
        <value><span data-ttu-id="d2ffc-232">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <see langword="true" />이고, 특성 값이 명시적으로 설정되었으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-232"><see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-233">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-233">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-234">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-234">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-235">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-235">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-236">특성 노드에이 속성이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-236">This property applies to attribute nodes only.</span></span> <span data-ttu-id="d2ffc-237">이 속성을 반환 하는 경우는 판독기가 특성 노드에, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-237">If the reader is not positioned on an attribute node, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-238">현재 노드가 빈 요소(예: <c>&lt;MyElement/&gt;</c>)인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-238">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value><span data-ttu-id="d2ffc-239"><see langword="true" /> 현재 노드가 요소 이면 (<see cref="P:System.Xml.XmlNodeReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) 및 끝나는 <c>/ &gt;</c>고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-239"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlNodeReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) and it ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-240">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-240">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-241">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-241">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-242">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-242">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-243">이 속성을 사용하여 다음 간의 차이를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-243">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="d2ffc-244">`<item num="123"/>` (`IsEmptyElement` 는 `true`).</span><span class="sxs-lookup"><span data-stu-id="d2ffc-244">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="d2ffc-245">`<item num="123">` (`IsEmptyElement` 는 `false`요소 내용이 비어 있지만).</span><span class="sxs-lookup"><span data-stu-id="d2ffc-245">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="d2ffc-246">해당 `EndElement` 빈 요소에 대 한 노드 생성 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-246">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-247">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-247">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="d2ffc-248">특성의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-248">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="d2ffc-249">지정된 인덱스가 있는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-249">Gets the value of the attribute with the specified index.</span></span></summary>
        <value><span data-ttu-id="d2ffc-250">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-250">The value of the specified attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="d2ffc-251">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-251">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-252">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-252">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-253">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-253">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

<span data-ttu-id="d2ffc-254">이 속성은 판독기를 이동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-254">This property does not move the reader.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ffc-255"><paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-255">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</span></span></exception>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d2ffc-256">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-256">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="d2ffc-257">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-257">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="d2ffc-258">지정된 로컬 이름과 네임스페이스 URI가 있는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-258">Gets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <value><span data-ttu-id="d2ffc-259">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-259">The value of the specified attribute.</span></span> <span data-ttu-id="d2ffc-260">특성이 없으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-260">If the attribute is not found, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="d2ffc-261">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-261">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-262">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-262">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-263">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-263">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

<span data-ttu-id="d2ffc-264">이 속성은 판독기를 이동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-264">This property does not move the reader.</span></span>

]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNodeReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-265">현재 노드의 로컬 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-265">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-266">접두사를 제거한 현재 노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-266">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="d2ffc-267">예를 들어 <see langword="LocalName" /> 됩니다 <see langword="book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-267">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="d2ffc-268">이름이 없는 노드 형식(예: <see langword="Text" />, <see langword="Comment" /> 등)의 경우, 이 속성은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-268">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-269">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-269">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-270">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-270">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-271">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-271">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-272">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있을 경우, 접두사 및 네임 스페이스 URI 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-272">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlNodeReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="d2ffc-273">확인할 네임스페이스 URI의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-273">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="d2ffc-274">기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-274">To match the default namespace, pass an empty string.</span></span> <span data-ttu-id="d2ffc-275">이 문자열은 원자화할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-275">This string does not have to be atomized.</span></span></param>
        <summary><span data-ttu-id="d2ffc-276">현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-276">Resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-277">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-277">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-278">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-278">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-279">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-279">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-280">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-280">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-281">다음 XML 문자열에서 판독기가 배치 하는 경우에 `href` 특성을 접두사 `a` 호출 하 여 해결 될 `reader.LookupNamespace("a")`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-281">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="d2ffc-282">반환 된 문자열은 `urn:456`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-282">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d2ffc-283">지정된 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-283">Moves to the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (attributeIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlNodeReader.MoveToAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex"><span data-ttu-id="d2ffc-284">특성의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-284">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="d2ffc-285">지정된 인덱스가 있는 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-285">Moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-286">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-286">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-287">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-287">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-288">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-288">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-289">다음 예제에서는 루트 노드의 모든 특성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-289">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ffc-290"><paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlReader.AttributeCount" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-290">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d2ffc-291">특성의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-291">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="d2ffc-292">지정된 이름이 있는 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-292">Moves to the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-293">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-293"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d2ffc-294"><see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-294">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-295">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-295">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-296">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-296">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-297">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-297">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-298">이 메서드를 호출한 후 합니다 <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, 및 <xref:System.Xml.XmlNodeReader.Prefix%2A> 속성 특성의 속성을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-298">After calling this method, the <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, and <xref:System.Xml.XmlNodeReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d2ffc-299">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-299">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="d2ffc-300">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-300">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="d2ffc-301">지정된 로컬 이름과 네임스페이스 URI가 있는 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-301">Moves to the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-302">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-302"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d2ffc-303"><see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-303">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-304">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-304">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-305">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-305">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-306">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-306">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-307">이 메서드를 호출한 후 합니다 <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, 및 <xref:System.Xml.XmlNodeReader.Prefix%2A> 속성 특성의 속성을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-307">After calling this method, the <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, and <xref:System.Xml.XmlNodeReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlNodeReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-308">현재 특성 노드가 포함된 요소로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-308">Moves to the element that contains the current attribute node.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-309">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <see langword="true" />이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-309"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-310">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-310">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-311">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-311">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-312">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-312">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-313">이 메서드를 사용 하 여 해당 특성을 통해 이동한 후 요소 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-313">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="d2ffc-314">이 메서드는 다음 노드 형식 중 하나에 판독기를 이동 합니다. `Element`, `DocumentType`, 또는 `XmlDeclaration`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-314">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-315">다음 예제에서는 루트 노드의 모든 특성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-315">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-316">첫 번째 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-316">Moves to the first attribute.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-317">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <see langword="true" />이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-317"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-318">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-318">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-319">에 도입 된 새로운 모든 기능을 최대한 활용할 수 있습니다는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-319">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-320">다음 예제에서는 루트 노드의 첫 번째 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-320">The following example gets the value of the first attribute of the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-321">다음 특성으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-321">Moves to the next attribute.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-322">다음 특성이 있으면 <see langword="true" />이고, 더 이상 특성이 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-322"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-323">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-323">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-324">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-324">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-325">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-325">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-326">현재 노드에 특성 노드를 없는 경우이 메서드는 <xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-326">If the current node is not an attribute node, this method is equivalent to <xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="d2ffc-327">하는 경우 `MoveToNextAttribute` 반환 `true`, 판독기의 위치가 바뀌지 않으면이 고, 그렇지 않으면 다음 특성으로 판독기를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-327">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-328">다음 예제에서는 책을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-328">The following example reads a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNodeReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-329">현재 노드의 정규화된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-329">Gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-330">현재 노드의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-330">The qualified name of the current node.</span></span> <span data-ttu-id="d2ffc-331">예를 들어 <see langword="Name" /> 됩니다 <see langword="bk:book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-331">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="d2ffc-332">반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNodeReader.NodeType" />에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-332">The name returned is dependent on the <see cref="P:System.Xml.XmlNodeReader.NodeType" /> of the node.</span></span> <span data-ttu-id="d2ffc-333">다음 노드 형식은 나열된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-333">The following node types return the listed values.</span></span> <span data-ttu-id="d2ffc-334">기타 모든 노드 형식은 빈 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-334">All other node types return an empty string.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d2ffc-335">노드 형식</span><span class="sxs-lookup"><span data-stu-id="d2ffc-335">Node Type</span></span> 
 </term><description> <span data-ttu-id="d2ffc-336">name</span><span class="sxs-lookup"><span data-stu-id="d2ffc-336">Name</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="d2ffc-337">특성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-337">The name of the attribute.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="d2ffc-338">문서 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-338">The document type name.</span></span>  
  
 </description></item><item><term><see langword="Element" /></term><description> <span data-ttu-id="d2ffc-339">태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-339">The tag name.</span></span>  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> <span data-ttu-id="d2ffc-340">참조된 엔터티의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-340">The name of the entity referenced.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="d2ffc-341">처리 명령의 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-341">The target of the processing instruction.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="d2ffc-342">리터럴 문자열 <see langword="xml" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-342">The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-343">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-343">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-344">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-344">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-345">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-345">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-346">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-346">The following example reads an XML and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d2ffc-347">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-347">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-348">W3C 네임스페이스 사양에서 정의된 것처럼 판독기가 있는 노드의 네임스페이스 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-348">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="d2ffc-349">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-349">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-350">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-350">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-351">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-351">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-352">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-352">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-353">이 속성이 관련이 `Element` 고 `Attribute` 노드만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-353">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-354">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있을 경우, 접두사 및 네임 스페이스 URI 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-354">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlNodeReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-355">이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-355">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="d2ffc-356">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <see langword="XmlNameTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-356">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-357">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-357">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-358">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-358">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-359">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-359">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-360">이 클래스에서 반환 하는 모든 노드 및 특성 이름을 사용 하 여 원자화 되는 `NameTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-360">All node and attribute names returned from this class are atomized using the `NameTable`.</span></span> <span data-ttu-id="d2ffc-361">이름이 같은 여러 번에 반환 될 때 (예를 들어 `Customer`), 한 다음 동일한 `String` 해당 이름의 개체가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-361">When the same name is returned multiple times (for example, `Customer`), then the same `String` object is returned for that name.</span></span> <span data-ttu-id="d2ffc-362">이렇게 하면 개체에 비용이 많이 드는 문자열 비교 대신 이러한 문자열 비교를 수행 하는 효율적인 코드를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-362">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNodeReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-363">현재 노드의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-363">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-364">현재 노드의 형식을 나타내는 <see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-364">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-365">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-365">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-366">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-366">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-367">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-367">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-368">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-368">The following example reads an XML and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d2ffc-369">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-369">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlNodeReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-370">현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-370">Gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-371">현재 노드와 관련된 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-371">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-372">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-372">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-373">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-373">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-374">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-374">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-375">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있을 경우, 접두사 및 네임 스페이스 URI 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-375">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlNodeReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-376">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-376">Gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-377">XmlNodeReader 항상 큰따옴표 (")를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-377">XmlNodeReader always uses a double quote (").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
>  <span data-ttu-id="d2ffc-378">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-378">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-379">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-379">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-380">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-380">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlNodeReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-381">스트림에서 다음 노드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-381">Reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-382">다음 노드를 읽었으면 <see langword="true" />이고, 더 이상 읽을 노드가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-382"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-383">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-383">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-384">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-384">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-385">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-385">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-386">먼저 판독기가 만들어지고 초기화 됩니다을 하는 경우 정보가 없는 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-386">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="d2ffc-387">호출 해야 `Read` 첫 번째 노드를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-387">You must call `Read` to read the first node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-388">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-388">The following example reads an XML and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d2ffc-389">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-389">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlNodeReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-390">특성 값을 하나 이상의 <see langword="Text" />, <see langword="EntityReference" /> 또는 <see langword="EndEntity" /> 노드로 구문 분석합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-390">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-391">반환할 노드가 있는 경우 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-391"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="d2ffc-392">처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-392"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
<span data-ttu-id="d2ffc-393"><c>misc=""</c>와 같은 빈 특성은 <see langword="true" />를 반환하며 이것은 단일 노드가 String.Empty의 값을 갖는 것을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-393">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-394">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-394">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-395">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-395">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-396">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-396">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-397">이 메서드를 사용 하 여 호출한 후 <xref:System.Xml.XmlNodeReader.MoveToAttribute%2A> 특성 값을 구성 하는 텍스트 또는 엔터티 참조 노드를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-397">Use this method after calling <xref:System.Xml.XmlNodeReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="d2ffc-398"><xref:System.Xml.XmlNodeReader.Depth%2A> 특성 값 노드 1을 더한 특성 노드의 깊이 증가 하 고 내부 및 외부로 일반 엔터티 참조를 단계별로 실행할 때 1 씩 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-398">The <xref:System.Xml.XmlNodeReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-399">다음 예제에서는 텍스트 및 엔터티 참조 노드를 사용 하 여 특성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-399">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d2ffc-400">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-400">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="d2ffc-401">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-401">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="d2ffc-402">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-402">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="d2ffc-403">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-403">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="d2ffc-404">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-404">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="d2ffc-405">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-405">Reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-406">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-406">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-407">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-407">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-408">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-408">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-409">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-409">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-410">이 메서드는 콘텐츠를 Base64 내용을 디코딩합니다 고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-410">This method streams the content, decodes the Base64 content, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="d2ffc-411">포함 된 텍스트의 큰 스트림을 읽도록 연속적으로이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-411">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="d2ffc-412">자세한 내용은 RFC 1521을 참조 하세요. "MIME (Multipurpose Internet Mail Extensions) 파트 1: 메커니즘을 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 "입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-412">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="d2ffc-413">Rfc를 구할 수는 [의견 웹 사이트에 대 한 요청](https://www.rfc-editor.org)합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-413">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-414">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야 합니다 <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> 메서드 값 0을 반환할 때까지 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-414">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="d2ffc-415">이 메서드에 다음과 같은 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-415">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="d2ffc-416"><xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> 작동 하 던 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-416"><xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="d2ffc-417">판독기는 첫 번째 비 콘텐츠 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-417">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="d2ffc-418">더 적은 묻는 경우 남아 있는 것 보다는 스트림 판독기 바이트의 정확한 수를 현재 위치에 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-418">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="d2ffc-419"><xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> 다음 XML 노드 형식에서 지원 되지 않습니다. 요소를 XmlDeclaration, None, 문서, DocumentFragment, 엔터티, Notation, DocumentType 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-419"><xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d2ffc-420"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-420">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ffc-421"><see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-421"><see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ffc-422">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-422">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d2ffc-423">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-423">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="d2ffc-424">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-424">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="d2ffc-425">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-425">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="d2ffc-426">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-426">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="d2ffc-427">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-427">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="d2ffc-428">내용을 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-428">Reads the content and returns the BinHex decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-429">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-429">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-430">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-430">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-431">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-431">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-432">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-432">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-433">이 메서드는 콘텐츠, BinHex 내용을 디코딩합니다 및 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-433">This method streams the content, decodes the BinHex content, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span> <span data-ttu-id="d2ffc-434">포함 된 텍스트의 큰 스트림을 읽도록 연속적으로이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-434">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-435">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야 합니다 <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> 메서드 값 0을 반환할 때까지 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-435">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="d2ffc-436">이 메서드에 다음과 같은 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-436">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="d2ffc-437"><xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> 작동 하 던 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-437"><xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="d2ffc-438">판독기는 첫 번째 비 콘텐츠 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-438">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="d2ffc-439">더 적은 묻는 경우 남아 있는 것 보다는 스트림 판독기 바이트의 정확한 수를 현재 위치에 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-439">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="d2ffc-440"><xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> 다음 XML 노드 형식에서 지원 되지 않습니다. 요소를 XmlDeclaration, None, 문서, DocumentFragment, 엔터티, Notation, DocumentType 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-440"><xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d2ffc-441"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-441">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ffc-442"><see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-442"><see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ffc-443">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-443">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d2ffc-444">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-444">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="d2ffc-445">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-445">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="d2ffc-446">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-446">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="d2ffc-447">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-447">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="d2ffc-448">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-448">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="d2ffc-449">요소를 읽고 Base64 콘텐츠를 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-449">Reads the element and decodes the Base64 content.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-450">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-450">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-451">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-451">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-452">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-452">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-453">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-453">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-454">이 메서드는 내용을 읽고, Base64 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-454">This method reads the content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="d2ffc-455">자세한 내용은 RFC 1521을 참조 하세요. "MIME (Multipurpose Internet Mail Extensions) 파트 1: 메커니즘을 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 "입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-455">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="d2ffc-456">Rfc를 구할 수는 [의견 웹 사이트에 대 한 요청](https://www.rfc-editor.org)합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-456">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="d2ffc-457">이 메서드는 단순 콘텐츠 요소를 읽을 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-457">This method can only read simple-content elements.</span></span> <span data-ttu-id="d2ffc-458">요소는 텍스트, 공백, 유효 공백 문자를 CDATA 섹션, 주석과 처리 명령을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-458">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="d2ffc-459">이 자동으로 확장 하는 엔터티 참조를 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-459">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="d2ffc-460">요소는 자식 요소를 가질 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-460">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="d2ffc-461">이 메서드는 매우 비슷합니다는 <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> 한다는 점을 제외 하면 메서드는 요소 노드 형식에만 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-461">This method is very similar to the <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="d2ffc-462">개수 값을 문서에서 바이트의 수보다 큰 경우 또는 문서에서 바이트의 수와 동일한 경우를 <xref:System.Xml.XmlNodeReader> 문서의 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-462">If the count value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlNodeReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="d2ffc-463">다음 <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A> 메서드 호출 0을 반환 하 고 판독기를 노드 다음의 <xref:System.Xml.XmlNodeType.EndElement> 노드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-463">The next <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement> node.</span></span>  
  
 <span data-ttu-id="d2ffc-464">호출 하는 경우 <xref:System.Xml.XmlNodeReader.Read%2A> 요소 내용을 모두 사용 하기 전에 판독기 겉으로 사용 된 첫 번째 콘텐츠 차례로 <xref:System.Xml.XmlNodeReader.Read%2A> 메서드를 호출한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-464">If you call <xref:System.Xml.XmlNodeReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlNodeReader.Read%2A> method was called.</span></span> <span data-ttu-id="d2ffc-465">즉, 판독기 끝 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-465">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="d2ffc-466">끝 태그 노드를 읽을 하 고 노드를 읽고 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-466">It then reads the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-467">참조 <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> 에이 메서드를 사용 하는 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-467">See <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d2ffc-468"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-468">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ffc-469">현재 노드가 요소 노드가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-469">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ffc-470">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-470">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="d2ffc-471">요소가 혼합된 내용을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-471">The element contains mixed content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d2ffc-472">요소를 요청한 형식으로 변환할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-472">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d2ffc-473">결과 텍스트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-473">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="d2ffc-474">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-474">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="d2ffc-475">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-475">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="d2ffc-476">버퍼에 복사할 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-476">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="d2ffc-477">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-477">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="d2ffc-478">요소를 읽고 BinHex 콘텐츠를 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-478">Reads the element and decodes the BinHex content.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-479">버퍼에 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-479">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-480">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-480">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-481">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-481">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-482">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-482">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-483">이 메서드는 요소 내용을 읽고 BinHex 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-483">This method reads the element content, decodes it using BinHex encoding, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="d2ffc-484">이 메서드는 단순 콘텐츠 요소를 읽을 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-484">This method can only read simple-content elements.</span></span> <span data-ttu-id="d2ffc-485">요소는 텍스트, 공백, 유효 공백 문자를 CDATA 섹션, 주석과 처리 명령을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-485">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="d2ffc-486">이 자동으로 확장 하는 엔터티 참조를 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-486">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="d2ffc-487">요소는 자식 요소를 가질 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-487">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="d2ffc-488">이 메서드는 매우 비슷합니다는 <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> 한다는 점을 제외 하면 메서드는 요소 노드 형식에만 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-488">This method is very similar to the <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="d2ffc-489">개수 값을 문서에서 바이트의 수보다 큰 경우 또는 문서에서 바이트의 수와 동일한 경우를 <xref:System.Xml.XmlNodeReader> 문서의 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-489">If the count value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlNodeReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="d2ffc-490">다음 <xref:System.Xml.XmlNodeReader> 메서드 호출 0을 반환 하 고 판독기를 노드 다음의 <xref:System.Xml.XmlNodeType.EndElement> 노드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-490">The next <xref:System.Xml.XmlNodeReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement> node.</span></span>  
  
 <span data-ttu-id="d2ffc-491">호출 하는 경우 <xref:System.Xml.XmlNodeReader.Read%2A> 요소 내용을 모두 사용 하기 전에 판독기 겉으로 사용 된 첫 번째 콘텐츠 차례로 <xref:System.Xml.XmlNodeReader.Read%2A> 메서드를 호출한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-491">If you call <xref:System.Xml.XmlNodeReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlNodeReader.Read%2A> method was called.</span></span> <span data-ttu-id="d2ffc-492">즉, 판독기 끝 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-492">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="d2ffc-493">끝 태그 노드를 읽을 하 고 노드를 읽고 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-493">It then reads the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-494">참조 <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> 에이 메서드를 사용 하는 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-494">See <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d2ffc-495"><paramref name="buffer" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-495">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ffc-496">현재 노드가 요소 노드가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-496">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ffc-497">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-497">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="d2ffc-498">요소가 혼합된 내용을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-498">The element contains mixed content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d2ffc-499">요소를 요청한 형식으로 변환할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-499">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlNodeReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-500">판독기의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-500">Gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="d2ffc-501"><see cref="T:System.Xml.ReadState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-501">One of the <see cref="T:System.Xml.ReadState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-502">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-502">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-503">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-503">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-504">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-504">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlNodeReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-505">요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-505">Reads the contents of an element or text node as a string.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-506">element나 text와 유사한 노드(CDATA, Text 노드 등)의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-506">The contents of the element or text-like node (This can include CDATA, Text nodes, and so on).</span></span> <span data-ttu-id="d2ffc-507">판독기가 요소 또는 텍스트 노드 이외의 위치에 있거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 이것은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-507">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span></span>  
  
 <span data-ttu-id="d2ffc-508"><see langword="Note:" /> 텍스트 노드는 요소 또는 특성 텍스트 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-508"><see langword="Note:" /> The text node can be either an element or an attribute text node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-509">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-509">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-510">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-510">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-511">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-511">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-512">요소에 배치 되 면 `ReadString` 모든 텍스트, 유효 공백, 공백 및 CData 섹션 노드 유형은 함께 연결 하 고 요소 내용으로 연결 된 데이터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-512">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and CData section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="d2ffc-513">모든 태그 발견 될 때 중지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-513">It stops when any markup is encountered.</span></span> <span data-ttu-id="d2ffc-514">이러한 동작은 혼합 내용 모델에서 발생하거나 요소 끝 태그를 읽을 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-514">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="d2ffc-515">텍스트와 유사한 노드를 배치할 경우 `ReadString` 요소 끝 태그를 텍스트 노드에서 동일한 연결을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-515">If positioned on a text-like node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="d2ffc-516">판독기가 특성 텍스트 노드에 있을 경우 `ReadString`에는 판독기가 요소 시작 태그에 있을 때와 같은 기능이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-516">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="d2ffc-517">연결된 모든 요소 텍스트 노드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-517">It returns all the concatenated element text nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-518">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-518">The following example displays the text content of each of the elements.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlNodeReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-519"><see langword="EntityReference" /> 노드에 대해 엔터티 참조를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-519">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-520">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-520">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-521">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-521">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-522">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-522">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-523">판독기가 위치에 `EntityReference` 노드 (`XmlNodeType.EntityReference`) 이면 <xref:System.Xml.XmlNodeReader.Read%2A> 이 메서드를 엔터티 대체 텍스트를 구문 분석 하는 호출 후에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-523">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlNodeReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="d2ffc-524">엔터티 대체 텍스트를 마치면는 `EndEntity` 노드가 엔터티 참조 범위를 닫습니다 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-524">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-525">이 메서드를 호출한 후 엔터티를 특성 값의 일부인 경우 호출 해야 <xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A> 엔터티 한 단계씩 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-525">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-526">다음 예제에서는 `ResolveEntity` 일반 엔터티를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-526">The following example uses `ResolveEntity` to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ffc-527">판독기가 <see langword="EntityReference" /> 노드에 배치되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d2ffc-527">The reader is not positioned on an <see langword="EntityReference" /> node.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-528">현재 노드에 할당된 스키마 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-528">Gets the schema information that has been assigned to the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-529">현재 노드에 대한 스키마 정보를 포함하는 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-529">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the schema information for the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-530">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-530">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-531">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-531">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-532">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-532">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-533"><xref:System.Xml.Schema.IXmlSchemaInfo> 인터페이스는 스키마 유효성 검사 이후 정보 집합 PSVI () 기본 XML 노드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-533">The <xref:System.Xml.Schema.IXmlSchemaInfo> interface represents the Post Schema Validation Infoset (PSVI) of the underlying XML node.</span></span> <span data-ttu-id="d2ffc-534">이 속성의 PSVI 콘텐츠 노드의 유효성이 검사 된 후 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-534">The PSVI contents of this property are set after the node has been validated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlNodeReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ffc-535">현재 노드의 자식을 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-535">Skips the children of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-536">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-536">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-537">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-537">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-538">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-538">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-539">예를 들어, 다음 XML을 입력 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-539">For example, suppose you have the following XML input:</span></span>  
  
```xml  
<a name="bob" age="123">  
   <x/>abc<y/>  
 </a>  
 <b>  
...  
 </b>  
```  
  
 <span data-ttu-id="d2ffc-540">판독기가 위치에 "\<는 >" 노드 또는 해당 특성, 호출 `Skip` 판독기가 "\<b >" 노드.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-540">If the reader is positioned on the "\<a>" node or any of its attributes, calling `Skip` positions the reader to the "\<b>" node.</span></span>  
  
 <span data-ttu-id="d2ffc-541">이미 (예: 요소 "x" 또는 "abc" 텍스트 노드) 리프 노드에 판독기가 배치 되 면 호출 `Skip` 호출 동일 <xref:System.Xml.XmlNodeReader.Read%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-541">If the reader is positioned on a leaf node already (such as element "x" or the text node "abc"), calling `Skip` is the same as calling <xref:System.Xml.XmlNodeReader.Read%2A>.</span></span>  
  
 <span data-ttu-id="d2ffc-542">이 메서드는 올바른 형식의 XML에 대 한 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-542">This method checks for well-formed XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-543">다음 예제에서는 XML 문서의 가격 요소 노드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-543">The following example reads the price element node in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="d2ffc-544"><see cref="T:System.Xml.XmlNamespaceScope" /> 개체</span><span class="sxs-lookup"><span data-stu-id="d2ffc-544"><see cref="T:System.Xml.XmlNamespaceScope" /> object.</span></span></param>
        <summary><span data-ttu-id="d2ffc-545">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-545">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-546">범위에 있는 네임스페이스가 포함된 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-546"><see cref="T:System.Collections.IDictionary" /> object that contains the namespaces that are in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ffc-547">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="d2ffc-547">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d2ffc-548"><xref:System.Xml.XmlNodeReader> 인스턴스가 <xref:System.Xml.IXmlNamespaceResolver> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-548">It can be used only when the <xref:System.Xml.XmlNodeReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="d2ffc-549">네임스페이스 접두사가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-549"><see cref="T:System.String" /> that contains the namespace prefix.</span></span></param>
        <summary><span data-ttu-id="d2ffc-550">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-550">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-551">네임스페이스 이름이 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-551"><see cref="T:System.String" /> that contains the namespace name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ffc-552">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="d2ffc-552">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d2ffc-553"><xref:System.Xml.XmlNodeReader> 인스턴스가 <xref:System.Xml.IXmlNamespaceResolver> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-553">It can be used only when the <xref:System.Xml.XmlNodeReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="namespaceName"><span data-ttu-id="d2ffc-554">네임스페이스를 식별하는 <see cref="T:System.String" />개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-554"><see cref="T:System.String" /> object that identifies the namespace.</span></span></param>
        <summary><span data-ttu-id="d2ffc-555">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-555">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="d2ffc-556">네임스페이스 접두사가 포함된 <see cref="T:System.String" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-556"><see cref="T:System.String" /> object that contains the namespace prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ffc-557">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="d2ffc-557">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d2ffc-558"><xref:System.Xml.XmlNodeReader> 인스턴스가 <xref:System.Xml.IXmlNamespaceResolver> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-558">It can be used only when the <xref:System.Xml.XmlNodeReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlNodeReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-559">현재 노드의 텍스트 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-559">Gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="d2ffc-560">노드의 <see cref="P:System.Xml.XmlNodeReader.NodeType" />에 따라 반환되는 값이 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-560">The value returned depends on the <see cref="P:System.Xml.XmlNodeReader.NodeType" /> of the node.</span></span> <span data-ttu-id="d2ffc-561">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-561">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="d2ffc-562">다른 모든 노드 형식은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-562">All other node types return String.Empty.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d2ffc-563">노드 형식</span><span class="sxs-lookup"><span data-stu-id="d2ffc-563">Node Type</span></span> 
 </term><description> <span data-ttu-id="d2ffc-564">값</span><span class="sxs-lookup"><span data-stu-id="d2ffc-564">Value</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="d2ffc-565">특성 값</span><span class="sxs-lookup"><span data-stu-id="d2ffc-565">The value of the attribute.</span></span>  
  
 </description></item><item><term><see langword="CDATA" /></term><description> <span data-ttu-id="d2ffc-566">CDATA 섹션 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-566">The content of the CDATA section.</span></span>  
  
 </description></item><item><term><see langword="Comment" /></term><description> <span data-ttu-id="d2ffc-567">주석의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-567">The content of the comment.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="d2ffc-568">내부 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-568">The internal subset.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="d2ffc-569">대상을 제외한 전체 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-569">The entire content, excluding the target.</span></span>  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> <span data-ttu-id="d2ffc-570">혼합된 콘텐츠 모델의 태그 간 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-570">The white space between markup in a mixed content model.</span></span>  
  
 </description></item><item><term><see langword="Text" /></term><description> <span data-ttu-id="d2ffc-571">텍스트 노드의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-571">The content of the text node.</span></span>  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> <span data-ttu-id="d2ffc-572">태그 사이의 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-572">The white space between markup.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="d2ffc-573">선언 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-573">The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-574">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-574">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-575">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-575">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-576">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-576">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ffc-577">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-577">The following example reads an XML and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d2ffc-578">이 예제에서는 파일을 사용 하 여 `items.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-578">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlNodeReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-579">현재 <see langword="xml:lang" /> 범위를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-579">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="d2ffc-580">현재 <see langword="xml:lang" /> 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-580">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-581">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-581">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-582">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-582">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-583">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-583">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="d2ffc-584">이 속성은 현재 노드가 속해 있는 xml: lang 범위를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-584">This property represents the xml:lang scope within which the current node resides.</span></span> <span data-ttu-id="d2ffc-585">예를 들어, 사용 하 여 XML 조각을 같습니다 `xml:lang` 루트 요소에서 영어 (미국)로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-585">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="d2ffc-586">판독기가 배치 하는 경우는 `name` 요소에는 영어 (미국)의 범위에는이 속성을 사용할 수 있습니다 `xml:lang` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-586">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
 <span data-ttu-id="d2ffc-587">반환 된 문자열은 또한에 <xref:System.Xml.XmlNodeReader.NameTable%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-587">The string returned is also in <xref:System.Xml.XmlNodeReader.NameTable%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlNodeReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ffc-588">현재 <see langword="xml:space" /> 범위를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-588">Gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="d2ffc-589"><see cref="T:System.Xml.XmlSpace" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-589">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="d2ffc-590"><see langword="xml:space" /> 범위가 존재하지 않으면 이 속성은 기본적으로 <see langword="XmlSpace.None" />으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-590">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d2ffc-591">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]에서는 <xref:System.Xml.XmlReader> 클래스와 <xref:System.Xml.XmlReaderSettings> 메서드를 사용하여 <xref:System.Xml.XmlReader.Create%2A> 인스턴스를 만드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-591">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="d2ffc-592">그러면 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 새로운 기능을 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-592">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d2ffc-593">자세한 내용은 주의 섹션을 참조 합니다 <xref:System.Xml.XmlReader> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d2ffc-593">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>