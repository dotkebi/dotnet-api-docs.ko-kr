<Type Name="XmlNamespaceManager" FullName="System.Xml.XmlNamespaceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca566491b31e0446d7f9ca81f23f16bf954db7ec" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721717" /></Metadata><TypeSignature Language="C#" Value="public class XmlNamespaceManager : System.Collections.IEnumerable, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamespaceManager extends System.Object implements class System.Collections.IEnumerable, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNamespaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamespaceManager&#xA;Implements IEnumerable, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamespaceManager : System::Collections::IEnumerable, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlNamespaceManager = class&#xA;    interface IXmlNamespaceResolver&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d1823-101">컬렉션에 대한 네임스페이스를 확인, 추가 및 제거하고 이 네임스페이스에 대한 범위 관리를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-101">Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-102">네임 스페이스 선언 되 고 XML 문서에 사용 되는 방법에 대 한 일반적인 정보를 참조 하세요 [XML 문서의 네임 스페이스 관리](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-102">For general information about how namespaces are declared and used in XML documents, see [Managing Namespaces in an XML Document](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="d1823-103"><xref:System.Xml.XmlNamespaceManager> 문자열로 접두사 및 네임 스페이스를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-103"><xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings.</span></span> <span data-ttu-id="d1823-104">다음은이 클래스를 사용 하 여 수행할 수 있습니다 관리 및 조회 작업의 요약입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-104">Here's a summary of management and lookup tasks you can perform with this class.</span></span> <span data-ttu-id="d1823-105">자세한 내용 및 예제는 각 메서드 또는 속성의 참조 페이지에 대한 링크를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d1823-105">For more information and examples, follow the links to the reference page for each method or property.</span></span>  
  
|<span data-ttu-id="d1823-106">대상</span><span class="sxs-lookup"><span data-stu-id="d1823-106">To</span></span>|<span data-ttu-id="d1823-107">기능</span><span class="sxs-lookup"><span data-stu-id="d1823-107">Use</span></span>|  
|--------|---------|  
|<span data-ttu-id="d1823-108">네임스페이스 추가</span><span class="sxs-lookup"><span data-stu-id="d1823-108">Add a namespace</span></span>|<span data-ttu-id="d1823-109"><xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="d1823-109"><xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method</span></span>|  
|<span data-ttu-id="d1823-110">네임스페이스 제거</span><span class="sxs-lookup"><span data-stu-id="d1823-110">Remove a namespace</span></span>|<span data-ttu-id="d1823-111"><xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="d1823-111"><xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method</span></span>|  
|<span data-ttu-id="d1823-112">기본 네임스페이스에 대한 URI 찾기</span><span class="sxs-lookup"><span data-stu-id="d1823-112">Find the URI for the default namespace</span></span>|<span data-ttu-id="d1823-113"><xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="d1823-113"><xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property</span></span>|  
|<span data-ttu-id="d1823-114">네임스페이스 접두사에 대한 URI 찾기</span><span class="sxs-lookup"><span data-stu-id="d1823-114">Find the URI for a namespace prefix</span></span>|<span data-ttu-id="d1823-115"><xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="d1823-115"><xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method</span></span>|  
|<span data-ttu-id="d1823-116">네임스페이스 URI에 대한 접두사 찾기</span><span class="sxs-lookup"><span data-stu-id="d1823-116">Find the prefix for a namespace URI</span></span>|<span data-ttu-id="d1823-117"><xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="d1823-117"><xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method</span></span>|  
|<span data-ttu-id="d1823-118">현재 노드의 네임스페이스 목록 가져오기</span><span class="sxs-lookup"><span data-stu-id="d1823-118">Get a list of namespaces in the current node</span></span>|<span data-ttu-id="d1823-119"><xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="d1823-119"><xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method</span></span>|  
|<span data-ttu-id="d1823-120">네임스페이스 범위 지정</span><span class="sxs-lookup"><span data-stu-id="d1823-120">Scope a namespace</span></span>|<span data-ttu-id="d1823-121"><xref:System.Xml.XmlNamespaceManager.PushScope%2A> 및 <xref:System.Xml.XmlNamespaceManager.PopScope%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="d1823-121"><xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods</span></span>|  
|<span data-ttu-id="d1823-122">접두사가 현재 범위에서 정의되어 있는지 확인</span><span class="sxs-lookup"><span data-stu-id="d1823-122">Check whether a prefix is defined in the current scope</span></span>|<span data-ttu-id="d1823-123"><xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="d1823-123"><xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method</span></span>|  
|<span data-ttu-id="d1823-124">접두사와 URI를 찾는 데 사용된 이름 테이블 가져오기</span><span class="sxs-lookup"><span data-stu-id="d1823-124">Get the name table used to look up prefixes and URIs</span></span>|<span data-ttu-id="d1823-125"><xref:System.Xml.XmlNamespaceManager.NameTable%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="d1823-125"><xref:System.Xml.XmlNamespaceManager.NameTable%2A> property</span></span>|  
  
 <span data-ttu-id="d1823-126">만든 네임 스페이스에 네임 스페이스 관리자를 추가 하는 <xref:System.Xml.XmlNamespaceManager> 개체를 사용 하 여는 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d1823-126">To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method.</span></span> <span data-ttu-id="d1823-127">기본 접두사 및 네임스페이스 쌍은 네임스페이스 관리자를 만들 때 자동으로 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-127">Default prefix and namespace pairs are automatically added to the namespace manager on creation.</span></span>  
  
 <span data-ttu-id="d1823-128">네임 스페이스 관리자를 만들 때 이름 테이블을 지정할 수 있습니다 합니다 <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, 또는 <xref:System.Xml.XmlDocument> 클래스를 사용 하 여는 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 네임 스페이스를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-128">When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces.</span></span>  
  
 <span data-ttu-id="d1823-129">제공할 수 있습니다는 <xref:System.Xml.XmlNamespaceManager> 개체를 매개 변수로 합니다 <xref:System.Xml.XmlNode.SelectNodes%2A> 또는 <xref:System.Xml.XmlNode.SelectSingleNode%2A> 메서드의 <xref:System.Xml.XmlDocument> 네임 스페이스 정규화 요소 및 특성 이름을 참조 하는 XPath 쿼리 식을 실행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-129">You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names.</span></span>  
  
 <span data-ttu-id="d1823-130">네임 스페이스 관리자는 접두사 및 네임 스페이스가 이미 확인 및 준수를 가정 합니다 [W3C 네임 스페이스](https://www.w3.org/TR/REC-xml-names/) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-130">The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](https://www.w3.org/TR/REC-xml-names/) specification.</span></span> <span data-ttu-id="d1823-131">네임 스페이스 관리자는 모든 유효성 검사를 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-131">The namespace manager does not perform any validation.</span></span>  
  
 <span data-ttu-id="d1823-132">네임 스페이스 관리자를 사용 하 여 추가 될 때 문자열을 분해 합니다 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 메서드 및 사용 하 여 조회를 수행 하는 경우는 <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> 또는 <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d1823-132">The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method.</span></span>  
  
 <span data-ttu-id="d1823-133">네임스페이스 관리자는 네임스페이스 추가, 검색뿐 아니라 열거 지원을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-133">The namespace manager implements enumeration support in addition to adding and retrieving namespaces.</span></span> <span data-ttu-id="d1823-134">사용 하 여 네임 스페이스 관리자에 저장 된 정보를 통해 루프 수를 `foreach` 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-134">You can loop through the information saved in the namespace manager by using the `foreach` construct.</span></span> <span data-ttu-id="d1823-135">예를 들어 네임 스페이스를 만들면 관리자 이름의 `nsmanager`를 사용 하 여 테이블을 반복할 수 있습니다 `foreach (String prefix in nsmanager)`합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-135">For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`.</span></span>  
  
 <span data-ttu-id="d1823-136">네임스페이스 관리자는 접두사와 네임스페이스의 문자열 비교를 개체로 제공하므로, 네임스페이스 관리자를 사용하면 직접적인 문자열 비교에 비해 성능이 향상됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-136">Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.</span></span>  
  
 <span data-ttu-id="d1823-137">다음 코드 예제에서는 접두사를 바인딩하는 방법을 보여 줍니다 `xsd` 네임 스페이스 URI 사용 하 여의 `http://www.w3.org/2001/XMLSchema` 네임 스페이스 관리자에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-137">The following code example shows how to bind the prefix `xsd` with the namespace URI of `http://www.w3.org/2001/XMLSchema` and add it to the namespace manager:</span></span>  
  
```vb  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema")  
```  
  
```csharp  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema");  
```  
  
 <span data-ttu-id="d1823-138">네임 스페이스를 사용 하 여 찾을 수 있습니다는 <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> 메서드:</span><span class="sxs-lookup"><span data-stu-id="d1823-138">You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:</span></span>  
  
```vb  
nsmgr.LookupNamespace("xsd")  
```  
  
```csharp  
nsmgr.LookupNamespace("xsd");  
```  
  
 <span data-ttu-id="d1823-139">다음 예제에서는 <xref:System.Xml.XmlNamespaceManager> XML 판독기에서 이름 테이블을 사용 하 여:</span><span class="sxs-lookup"><span data-stu-id="d1823-139">The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:</span></span>  
  
```vb  
Dim reader As New XmlTextReader("myfile.xml")  
Dim nsmanager As New XmlNamespaceManager(reader.NameTable)  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books")  
nsmanager.PushScope()  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store")  
While reader.Read()  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix)  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  
End While  
```  
  
```csharp  
XmlTextReader reader = new XmlTextReader("myfile.xml");  
XmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books");  
nsmanager.PushScope();  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store");  
while (reader.Read())  
{  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix);  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-140">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-140">XML Documents and Data</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-141">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-141">Managing Namespaces in an XML Document</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNamespaceManager (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNamespaceManager(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlNamespaceManager : System.Xml.XmlNameTable -&gt; System.Xml.XmlNamespaceManager" Usage="new System.Xml.XmlNamespaceManager nameTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="d1823-142">사용할 <see cref="T:System.Xml.XmlNameTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-142">The <see cref="T:System.Xml.XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="d1823-143">지정된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-143">Initializes a new instance of the <see cref="T:System.Xml.XmlNamespaceManager" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-144">접두사와 네임 스페이스를 조회 하는 이름 테이블을 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-144">The name table is used to look up prefixes and namespaces.</span></span> <span data-ttu-id="d1823-145">생성자의 사전 원자화 된 문자열을 사용 하 여 기존 이름 테이블을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-145">An existing name table with pre-atomized strings can be specified in the constructor.</span></span> <span data-ttu-id="d1823-146">이 과정에서 장점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-146">There are several advantages in doing so.</span></span> <span data-ttu-id="d1823-147">예를 들어 경우의 이름 테이블을 <xref:System.Xml.XmlReader> 개체를 사용할 각 이름 테이블에 밀어 넣는 문자열 접두사를 읽고, 모든 네임 스페이스 후 다시 사용할 수 있습니다 하 여 <xref:System.Xml.XmlNamespaceManager>입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-147">For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.</span></span>  
  
 <span data-ttu-id="d1823-148">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d1823-148">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1823-149">기존 이름 테이블을 지정 하면 이름 테이블의 모든 네임 스페이스는 자동으로 추가 되지 <xref:System.Xml.XmlNamespaceManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-149">If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="d1823-150">사용 해야 합니다 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 고 <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> 를 추가 하 여 네임 스페이스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-150">You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1823-151">다음 예제에서는 <xref:System.Xml.XmlNamespaceManager> 판독기의 이름 테이블을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-151">The following example creates an <xref:System.Xml.XmlNamespaceManager> using the name table of the reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="d1823-152">생성자에게 <see langword="null" />가 전달되는 경우</span><span class="sxs-lookup"><span data-stu-id="d1823-152"><see langword="null" /> is passed to the constructor</span></span></exception>
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-153">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-153">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-154">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-154">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddNamespace">
      <MemberSignature Language="C#" Value="public virtual void AddNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member AddNamespace : string * string -&gt; unit&#xA;override this.AddNamespace : string * string -&gt; unit" Usage="xmlNamespaceManager.AddNamespace (prefix, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="d1823-155">추가할 네임스페이스와 관련된 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-155">The prefix to associate with the namespace being added.</span></span> <span data-ttu-id="d1823-156">기본 네임스페이스를 추가하려면 String.Empty를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-156">Use String.Empty to add a default namespace.</span></span>  
  
 <span data-ttu-id="d1823-157">**참고** XPath(XML Path Language) 식에서 네임스페이스를 확인하는 데 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용할 경우에는 접두사를 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-157">**Note**If the <see cref="T:System.Xml.XmlNamespaceManager" /> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified.</span></span> <span data-ttu-id="d1823-158">XPath 식에 접두사가 없으면 네임스페이스 URI(Uniform Resource Identifier)를 빈 네임스페이스로 간주합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-158">If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.</span></span> <span data-ttu-id="d1823-159">XPath 식 및 <see cref="T:System.Xml.XmlNamespaceManager" />에 대한 자세한 내용은 <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> 및 <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> 메서드를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d1823-159">For more information about XPath expressions and the <see cref="T:System.Xml.XmlNamespaceManager" />, refer to the <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> and <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> methods.</span></span></param>
        <param name="uri"><span data-ttu-id="d1823-160">추가할 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-160">The namespace to add.</span></span></param>
        <summary><span data-ttu-id="d1823-161">지정된 네임스페이스를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-161">Adds the given namespace to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-162"><xref:System.Xml.XmlNamespaceManager> 확인 하지 않습니다 `prefix` 고 `uri` 규칙에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-162"><xref:System.Xml.XmlNamespaceManager> does not check `prefix` and `uri` for conformance.</span></span>  
  
 <span data-ttu-id="d1823-163"><xref:System.Xml.XmlReader> 이름, 접두사 및 네임 스페이스를 포함 하 여 World Wide Web Consortium (W3C)에 따라 유효한 XML 이름 확인 검사 [네임 스페이스 사양](https://www.w3.org/TR/REC-xml-names/)합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-163"><xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](https://www.w3.org/TR/REC-xml-names/).</span></span> <span data-ttu-id="d1823-164"><xref:System.Xml.XmlNamespaceManager> 내부적으로 사용 됩니다 <xref:System.Xml.XmlReader>을 피하고, 중복을 방지 하도록 <xref:System.Xml.XmlNamespaceManager> 모든 접두사와 네임 스페이스는 유효한 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-164"><xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid.</span></span>  
  
 <span data-ttu-id="d1823-165">접두사 및 네임 스페이스를 이미 있는 경우 현재 범위 내에서 새 네임 스페이스 및 접두사 쌍은 기존의 접두사/네임 스페이스 조합을 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-165">If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination.</span></span> <span data-ttu-id="d1823-166">같은 접두사와 네임 스페이스 조합 다른 범위에 걸쳐 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-166">The same prefix and namespace combination can exist across different scopes.</span></span>  
  
 <span data-ttu-id="d1823-167">다음 접두사/네임 스페이스 쌍을 기본적으로 추가 되는 <xref:System.Xml.XmlNamespaceManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-167">The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="d1823-168">이러한 모든 범위에서 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-168">They can be determined at any scope.</span></span>  
  
|<span data-ttu-id="d1823-169">접두사</span><span class="sxs-lookup"><span data-stu-id="d1823-169">Prefix</span></span>|<span data-ttu-id="d1823-170">네임스페이스</span><span class="sxs-lookup"><span data-stu-id="d1823-170">Namespace</span></span>|  
|------------|---------------|  
|<span data-ttu-id="d1823-171">xmlns</span><span class="sxs-lookup"><span data-stu-id="d1823-171">xmlns</span></span>|<span data-ttu-id="d1823-172">http://www.w3.org/2000/xmlns/ (xmlns 네임 스페이스를 접두사)</span><span class="sxs-lookup"><span data-stu-id="d1823-172">http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)</span></span>|  
|<span data-ttu-id="d1823-173">xml</span><span class="sxs-lookup"><span data-stu-id="d1823-173">xml</span></span>|<span data-ttu-id="d1823-174">http://www.w3.org/XML/1998/namespace (XML 네임 스페이스)</span><span class="sxs-lookup"><span data-stu-id="d1823-174">http://www.w3.org/XML/1998/namespace (the XML namespace)</span></span>|  
|<span data-ttu-id="d1823-175">String.Empty</span><span class="sxs-lookup"><span data-stu-id="d1823-175">String.Empty</span></span>|<span data-ttu-id="d1823-176">String.Empty (빈 네임 스페이스)입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-176">String.Empty (the empty namespace).</span></span> <span data-ttu-id="d1823-177">이 값은 다른 접두사를 다시 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-177">This value can be reassigned a different prefix.</span></span> <span data-ttu-id="d1823-178">예를 들어, xmlns = "" 빈 네임 스페이스가 기본 네임 스페이스를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-178">For example, xmlns="" defines the default namespace to be the empty namespace</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d1823-179">다음 예제에서는 <xref:System.Xml.XmlNamespaceManager> 를 XML 조각에서 네임 스페이스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-179">The following example uses <xref:System.Xml.XmlNamespaceManager> to resolve namespaces in an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1823-180"><paramref name="prefix" />의 값이 "xml" 또는 "xmlns"인 경우</span><span class="sxs-lookup"><span data-stu-id="d1823-180">The value for <paramref name="prefix" /> is "xml" or "xmlns".</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1823-181"><paramref name="prefix" /> 또는 <paramref name="uri" />의 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d1823-181">The value for <paramref name="prefix" /> or <paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-182">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-182">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-183">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-183">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public virtual string DefaultNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNamespace : string" Usage="System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1823-184">기본 네임스페이스의 네임스페이스 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-184">Gets the namespace URI for the default namespace.</span></span></summary>
        <value><span data-ttu-id="d1823-185">네임 스페이스 URI는 기본 네임 스페이스에 기본 네임 스페이스가 없을 경우 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-185">The namespace URI for the default namespace, or an empty string if there is no default namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-186">이 메서드 호출 LookupNamespace(String.Empty) 하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-186">This method is equivalent to calling LookupNamespace(String.Empty).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1823-187">있는 경우 다음 예제에서는 기본 네임 스페이스를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-187">The following example displays the default namespace, if one exists.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-188">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-188">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-189">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-189">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNamespaceManager.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1823-190"><see cref="T:System.Xml.XmlNamespaceManager" />에서 네임스페이스를 반복하는 데 사용할 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-190">Returns an enumerator to use to iterate through the namespaces in the <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="d1823-191"><see cref="T:System.Collections.IEnumerator" />가 저장하는 접두사가 포함된 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-191">An <see cref="T:System.Collections.IEnumerator" /> containing the prefixes stored by the <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-192">다음 코드를 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Collections.IEnumerator> 네임 스페이스 쌍에 저장 된 모든 보기에 <xref:System.Xml.XmlNamespaceManager> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-192">The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object.</span></span>  
  
```vb  
Dim nsEnum As IEnumerator = nsmgr.GetEnumerator()  
Do While nsEnum.MoveNext  
  If nsEnum.Current <> "" Then  
    MsgBox("xmlns:" + nsEnum.Current + "=" + nsmgr.LookupNamespace(nsEnum.Current))  
  End If  
Loop  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-193">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-193">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-194">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-194">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;&#xA;override this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlNamespaceManager.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="d1823-195">반환할 네임스페이스 노드의 형식을 지정하는 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-195">An enumeration value that specifies the type of namespace nodes to return.</span></span></param>
        <summary><span data-ttu-id="d1823-196">현재 범위 내에 있는 네임스페이스를 열거하는 데 사용할 수 있는 접두사가 붙은 네임스페이스 이름 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-196">Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.</span></span></summary>
        <returns><span data-ttu-id="d1823-197">현재 범위 내에 있는 네임스페이스 및 접두사 쌍 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-197">A collection of namespace and prefix pairs currently in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-198">사전 컬렉션 접두사가 붙은 네임 스페이스 이름으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-198">The dictionary consists of a collection of namespace names keyed by prefix.</span></span> <span data-ttu-id="d1823-199">범위에서 네임 스페이스 열거를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-199">It can be used to enumerate the in-scope namespaces.</span></span> <span data-ttu-id="d1823-200">사전은 연결이 끊긴된 복사본 네임 스페이스 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-200">The dictionary is a disconnected copy of the namespace list.</span></span> <span data-ttu-id="d1823-201">현재 범위에서 네임 스페이스 목록 변경에 따라 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-201">It remains unchanged as the current in-scope namespace list changes.</span></span>  
  
 <span data-ttu-id="d1823-202">다음 표는 어떻게 <xref:System.Xml.XmlNamespaceScope> 값에서 반환 된 네임 스페이스에 영향을 줄의 <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d1823-202">The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method.</span></span>  
  
|<span data-ttu-id="d1823-203">XmlNamespaceScope 값</span><span class="sxs-lookup"><span data-stu-id="d1823-203">XmlNamespaceScope value</span></span>|<span data-ttu-id="d1823-204">xmlns:xml</span><span class="sxs-lookup"><span data-stu-id="d1823-204">xmlns:xml</span></span>|<span data-ttu-id="d1823-205">xmlns:xmlns</span><span class="sxs-lookup"><span data-stu-id="d1823-205">xmlns:xmlns</span></span>|<span data-ttu-id="d1823-206">xmlns=""</span><span class="sxs-lookup"><span data-stu-id="d1823-206">xmlns=""</span></span>|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|<span data-ttu-id="d1823-207">예</span><span class="sxs-lookup"><span data-stu-id="d1823-207">Yes</span></span>|<span data-ttu-id="d1823-208">아니요</span><span class="sxs-lookup"><span data-stu-id="d1823-208">No</span></span>|<span data-ttu-id="d1823-209">아니요</span><span class="sxs-lookup"><span data-stu-id="d1823-209">No</span></span>|  
|`ExcludeXml`|<span data-ttu-id="d1823-210">아니요</span><span class="sxs-lookup"><span data-stu-id="d1823-210">No</span></span>|<span data-ttu-id="d1823-211">아니요</span><span class="sxs-lookup"><span data-stu-id="d1823-211">No</span></span>|<span data-ttu-id="d1823-212">아니요</span><span class="sxs-lookup"><span data-stu-id="d1823-212">No</span></span>|  
|`Local`|<span data-ttu-id="d1823-213">아니요</span><span class="sxs-lookup"><span data-stu-id="d1823-213">No</span></span>|<span data-ttu-id="d1823-214">아니요</span><span class="sxs-lookup"><span data-stu-id="d1823-214">No</span></span>|<span data-ttu-id="d1823-215">예</span><span class="sxs-lookup"><span data-stu-id="d1823-215">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-216">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-216">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-217">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-217">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasNamespace">
      <MemberSignature Language="C#" Value="public virtual bool HasNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNamespace (prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member HasNamespace : string -&gt; bool&#xA;override this.HasNamespace : string -&gt; bool" Usage="xmlNamespaceManager.HasNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="d1823-218">찾으려는 네임스페이스의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-218">The prefix of the namespace you want to find.</span></span></param>
        <summary><span data-ttu-id="d1823-219">제공한 접두사에 현재 푸시된 범위에 정의한 네임스페이스가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-219">Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.</span></span></summary>
        <returns><span data-ttu-id="d1823-220">정의된 네임스페이스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-220"><see langword="true" /> if there is a namespace defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-221">빈 네임 스페이스에 정의 된 기본값을 인지를 확인 하려면 설정 `prefix` String.Empty로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-221">To determine whether there is a default empty namespace defined, set `prefix` to String.Empty.</span></span> <span data-ttu-id="d1823-222">반환 값 `true` 현재 범위에 정의 된 기본 네임 스페이스 임을 나타냅니다 `false` 기본 네임 스페이스가 정의 됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-222">A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1823-223">xmlns:x = ""에 따라 유효 하지 않은 합니다 [W3C 네임 스페이스](https://www.w3.org/TR/REC-xml-names/) 권장 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-223">xmlns:x= "" is illegal according to the [W3C Namespaces](https://www.w3.org/TR/REC-xml-names/) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1823-224">있는 경우 다음 예제에서는 기본 네임 스페이스를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-224">The following example displays the default namespace, if one exists.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-225">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-225">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-226">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-226">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string&#xA;override this.LookupNamespace : string -&gt; string" Usage="xmlNamespaceManager.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="d1823-227">확인할 네임스페이스 URI의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-227">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="d1823-228">기본 네임스페이스와 일치시키려면 String.Empty를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-228">To match the default namespace, pass String.Empty.</span></span></param>
        <summary><span data-ttu-id="d1823-229">지정된 접두사의 네임스페이스 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-229">Gets the namespace URI for the specified prefix.</span></span></summary>
        <returns><span data-ttu-id="d1823-230"><paramref name="prefix" />의 네임스페이스 URI이거나, 매핑된 네임스페이스가 없을 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-230">The namespace URI for <paramref name="prefix" /> or <see langword="null" /> if there is no mapped namespace.</span></span> <span data-ttu-id="d1823-231">반환되는 문자열은 원자화됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-231">The returned string is atomized.</span></span>  
  
<span data-ttu-id="d1823-232">원자화된 문자열에 대한 자세한 내용은 <see cref="T:System.Xml.XmlNameTable" /> 클래스를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d1823-232">For more information on atomized strings, see the <see cref="T:System.Xml.XmlNameTable" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1823-233">다음 예제에서는 접두사/네임 스페이스 쌍을 추가 합니다 <xref:System.Xml.XmlNamespaceManager>, 다음 컬렉션에 있는 모든 쌍을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-233">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager>, and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-234">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-234">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-235">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-235">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupPrefix (uri As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupPrefix(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string&#xA;override this.LookupPrefix : string -&gt; string" Usage="xmlNamespaceManager.LookupPrefix uri" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="d1823-236">접두사에 대해 확인할 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-236">The namespace to resolve for the prefix.</span></span></param>
        <summary><span data-ttu-id="d1823-237">지정된 네임스페이스 URI에 대해 선언한 접두사를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-237">Finds the prefix declared for the given namespace URI.</span></span></summary>
        <returns><span data-ttu-id="d1823-238">일치하는 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-238">The matching prefix.</span></span> <span data-ttu-id="d1823-239">매핑된 접두사가 없으면 메서드에서 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-239">If there is no mapped prefix, the method returns String.Empty.</span></span> <span data-ttu-id="d1823-240">null 값이 제공되면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-240">If a null value is supplied, then <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-241">이 메서드는 스택을 따라 매핑된 접두사를 찾습니다 (즉, 보이도록 전역적으로).</span><span class="sxs-lookup"><span data-stu-id="d1823-241">This method finds the mapped prefix by walking the stack (that is, it looks globally).</span></span> <span data-ttu-id="d1823-242">조회가 성공 하려면에 대 한 제공된 된 문자열을 원자화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-242">The supplied string must be atomized for the lookup to succeed.</span></span> <span data-ttu-id="d1823-243">네임 스페이스 관리자의 이름 테이블에 제공된 된 문자열 개체 즉, 있어야 (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).</span><span class="sxs-lookup"><span data-stu-id="d1823-243">In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).</span></span>  
  
 <span data-ttu-id="d1823-244">또한 반환된 된 문자열은 원자화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-244">The returned string is also atomized.</span></span> <span data-ttu-id="d1823-245">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable> 클래스를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d1823-245">For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1823-246">다음 예제에서는 사용 하는 방법의 <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 메서드 특성을 작성할 때.</span><span class="sxs-lookup"><span data-stu-id="d1823-246">The following example shows how to use the <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method when writing an attribute.</span></span> <span data-ttu-id="d1823-247">사용 하 여는 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> 특성을 시작 하는 방법에 대 한 접두사를 찾습니다는 `urn:samples` 네임 스페이스 URI의 해당 접두사를 사용 하 여는 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> 작성 하는 경우는 `ISBN` 특성:</span><span class="sxs-lookup"><span data-stu-id="d1823-247">It uses the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> method to start the attribute, looks up the prefix for the `urn:samples` namespace URI, and then uses that prefix in the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> when writing the `ISBN` attribute:</span></span>  
  
```vb  
Dim prefix As String = nsMgr.LookupPrefix("urn:samples")  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples")  
  
```  
  
```csharp  
XmlNameTable nt = new XmlNameTable();  
XmlNamespaceManager nsMgr = new XmlNamespaceManager(nt);  
nsMgr.AddNamespace("bk","urn:samples");string prefix = writer nsMgr.LookupPrefix("urn:samples");  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples");  
```  
  
 <span data-ttu-id="d1823-248">다음 예제에서는 <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 요소에 정의 된 접두사를 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-248">The following example uses <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> to find the prefix defined on an element.</span></span>  
  
```vb  
writer.WriteStartElement("root", "book")  
writer.WriteStartElement("x", "node", "author")  
s = writer.LookupPrefix("author")  
CError.Compare(s, "x", "Error in nested element")  
writer.WriteEndElement()  
s = writer.LookupPrefix("book")  
CError.Compare(s, Nothing, "Error in root element")  
writer.WriteEndElement()  
  
```  
  
 <span data-ttu-id="d1823-249">**출력**</span><span class="sxs-lookup"><span data-stu-id="d1823-249">**Output**</span></span>  
  
```  
<root xmlns="book">  
  <x:node xmlns:x="author" />   
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-250">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-250">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-251">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-251">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlNamespaceManager.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1823-252">이 개체와 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-252">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this object.</span></span></summary>
        <value><span data-ttu-id="d1823-253">이 개체에서 사용한 <see cref="T:System.Xml.XmlNameTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-253">The <see cref="T:System.Xml.XmlNameTable" /> used by this object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-254">접두사 및 네임 스페이스 Uri 조회 하는 이름 테이블을 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-254">The name table is used to look up prefixes and namespace URIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-255">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-255">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-256">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-256">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PopScope">
      <MemberSignature Language="C#" Value="public virtual bool PopScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PopScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PopScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PopScope();" />
      <MemberSignature Language="F#" Value="abstract member PopScope : unit -&gt; bool&#xA;override this.PopScope : unit -&gt; bool" Usage="xmlNamespaceManager.PopScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1823-257">스택에서 네임스페이스 범위를 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-257">Pops a namespace scope off the stack.</span></span></summary>
        <returns><span data-ttu-id="d1823-258">스택에 네임스페이스 범위가 남아 있으면 <see langword="true" />이고, 팝할 네임스페이스가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-258"><see langword="true" /> if there are namespace scopes left on the stack; <see langword="false" /> if there are no more namespaces to pop.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-259">모든 네임 스페이스에 추가 된이 메서드를 호출 하면 <xref:System.Xml.XmlNamespaceManager> (호출한 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>)를 마지막으로 호출한 이후 <xref:System.Xml.XmlNamespaceManager.PopScope%2A> 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-259">When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1823-260">다음 예제에서는 접두사/네임 스페이스 쌍을 추가 합니다 <xref:System.Xml.XmlNamespaceManager> 다음 컬렉션에 있는 모든 쌍을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-260">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PushScope" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-261">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-261">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-262">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-262">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PushScope">
      <MemberSignature Language="C#" Value="public virtual void PushScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PushScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PushScope ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushScope();" />
      <MemberSignature Language="F#" Value="abstract member PushScope : unit -&gt; unit&#xA;override this.PushScope : unit -&gt; unit" Usage="xmlNamespaceManager.PushScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1823-263">스택에 네임스페이스 범위를 푸시합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-263">Pushes a namespace scope onto the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1823-264">모든 네임 스페이스에 추가 되는이 메서드를 호출한 후 <xref:System.Xml.XmlNamespaceManager> (호출 하 여 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>)에 푸시된 네임 스페이스 범위에 속해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-264">After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1823-265">다음 예제에서는 접두사/네임 스페이스 쌍을 추가 합니다 <xref:System.Xml.XmlNamespaceManager> 다음 컬렉션에 있는 모든 쌍을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-265">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PopScope" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-266">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-266">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-267">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-267">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveNamespace">
      <MemberSignature Language="C#" Value="public virtual void RemoveNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member RemoveNamespace : string * string -&gt; unit&#xA;override this.RemoveNamespace : string * string -&gt; unit" Usage="xmlNamespaceManager.RemoveNamespace (prefix, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="d1823-268">네임스페이스의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-268">The prefix for the namespace</span></span></param>
        <param name="uri"><span data-ttu-id="d1823-269">지정된 접두사의 제거할 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-269">The namespace to remove for the given prefix.</span></span> <span data-ttu-id="d1823-270">네임스페이스는 현재 네임스페이스 범위에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-270">The namespace removed is from the current namespace scope.</span></span> <span data-ttu-id="d1823-271">현재 범위를 벗어난 네임스페이스는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-271">Namespaces outside the current scope are ignored.</span></span></param>
        <summary><span data-ttu-id="d1823-272">지정된 접두사의 지정된 네임스페이스를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="d1823-272">Removes the given namespace for the given prefix.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1823-273"><paramref name="prefix" /> 또는 <paramref name="uri" />의 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d1823-273">The value of <paramref name="prefix" /> or <paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="d1823-274">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="d1823-274">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="d1823-275">XML 문서의 네임스페이스 관리</span><span class="sxs-lookup"><span data-stu-id="d1823-275">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>