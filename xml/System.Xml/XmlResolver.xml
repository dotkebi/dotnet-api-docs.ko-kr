<Type Name="XmlResolver" FullName="System.Xml.XmlResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd2268111181525cd78c336f19545ed332f94e39" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57960953" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlResolver abstract" />
  <TypeSignature Language="F#" Value="type XmlResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eae7e-101">URI(Uniform Resource Identifier)로 명명된 외부 XML 리소스를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-101">Resolves external XML resources named by a Uniform Resource Identifier (URI).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae7e-102"><xref:System.Xml.XmlResolver> 형식은 엔터티, 문서 형식 정의 (Dtd) 또는 스키마와 같은 외부 XML 리소스를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-102">The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.</span></span> <span data-ttu-id="eae7e-103">에 사용 되는 것도 프로세스 등 언어 XSL (Extensible Stylesheet) 스타일 시트 또는 XML 스키마 정의 언어 (XSD) 스키마에 있는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-103">It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</span></span>  
  
 <span data-ttu-id="eae7e-104"><xref:System.Xml.XmlResolver> 보안 자격 증명을 처리 하 고 데이터 원본에 대 한 연결을 열고 스트림 또는 다른 개체 형식 형식의 리소스를 반환을 포함 하 여 리소스를 연결 협상의 모든 측면을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-104"><xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.</span></span> <span data-ttu-id="eae7e-105">호출 하는 개체 <xref:System.Xml.XmlResolver> 스트림 해석 작업을 했습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-105">The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream.</span></span>  
  
 <span data-ttu-id="eae7e-106">합니다 <xref:System.Xml> 네임 스페이스의 구체적 구현 두는 포함 된 <xref:System.Xml.XmlResolver> 클래스:</span><span class="sxs-lookup"><span data-stu-id="eae7e-106">The <xref:System.Xml> namespace includes two concrete implementations of the <xref:System.Xml.XmlResolver> class:</span></span>  
  
-   <span data-ttu-id="eae7e-107"><xref:System.Xml.XmlUrlResolver> 가 모든 클래스에 대 한 기본 확인자를 <xref:System.Xml> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-107"><xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace.</span></span> <span data-ttu-id="eae7e-108">`file://` 및 `http://` 프로토콜을 지원하고 <xref:System.Net.WebRequest?displayProperty=nameWithType> 클래스에서 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-108">It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="eae7e-109">성능 향상을 위해 클래스를 확장의 예 참조는 <xref:System.Xml.XmlUrlResolver> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-109">For examples of extending the class to improve performance, see the <xref:System.Xml.XmlUrlResolver> reference page.</span></span>  
  
-   <span data-ttu-id="eae7e-110"><xref:System.Xml.XmlSecureResolver> 다른 보호 하는 데 <xref:System.Xml.XmlResolver> 개체는 개체를 래핑하고 액세스할 수 있는 리소스를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-110"><xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access.</span></span> <span data-ttu-id="eae7e-111">예를 들어를 <xref:System.Xml.XmlSecureResolver> 특정 인터넷 사이트 또는 영역에 대 한 액세스 하지 못할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-111">For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones.</span></span>  
  
 <span data-ttu-id="eae7e-112">만들기 및 사용자 고유의 확인자를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-112">You can create and specify your own resolver.</span></span> <span data-ttu-id="eae7e-113">판독기는 기본 확인자를 지정 하지 않으면, <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-113">If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span>  
  
 <span data-ttu-id="eae7e-114"><xref:System.Xml.XmlResolver> 속성을 설정하고 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 개체를 <xref:System.Xml.XmlReaderSettings> 메서드에 전달하여 사용할 <xref:System.Xml.XmlReader.Create%2A>를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-114">You specify the <xref:System.Xml.XmlResolver> to use by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property and passing the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
 <span data-ttu-id="eae7e-115">사용할 리소스에 인증을 요구 하는 시스템에 저장 된 경우는 <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> 속성이 필요한 자격 증명을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-115">If the resource is stored on a system that requires authentication, you use the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property to specify the necessary credentials.</span></span>  
  
## <a name="supplying-authentication-credentials"></a><span data-ttu-id="eae7e-116">인증 자격 증명 제공</span><span class="sxs-lookup"><span data-stu-id="eae7e-116">Supplying authentication credentials</span></span>  
 <span data-ttu-id="eae7e-117">읽을 XML 데이터를 포함 하는 파일에는 제한 된 액세스 정책이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-117">The file that contains the XML data to read may have a restricted access policy.</span></span> <span data-ttu-id="eae7e-118">네트워크 리소스에 액세스하기 위해 인증이 필요한 경우 <xref:System.Xml.XmlResolver.Credentials%2A> 속성을 사용하여 필요한 자격 증명을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-118">If authentication is required to access a network resource, use the <xref:System.Xml.XmlResolver.Credentials%2A> property to specify the necessary credentials.</span></span> <span data-ttu-id="eae7e-119">경우는 <xref:System.Xml.XmlResolver.Credentials%2A> 속성이 설정 되지 않은 경우 자격 증명으로 설정 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-119">If the <xref:System.Xml.XmlResolver.Credentials%2A> property is not set, credentials are set to `null`.</span></span>  
  
 <span data-ttu-id="eae7e-120">예를 들어 인증을 위해 웹에서 데이터를 요청할 때 자격 증명이 필요 하다는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-120">For example, assume that credentials are needed when requesting data from the web for authentication purposes.</span></span> <span data-ttu-id="eae7e-121">웹 가상 디렉터리에서 익명 액세스를 허용 하지 않는 한 설정 해야 합니다는 <xref:System.Xml.XmlResolver.Credentials%2A> 속성 자격 증명을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-121">Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials.</span></span> <span data-ttu-id="eae7e-122">다음 예제에서는 <xref:System.Xml.XmlReader> 사용 하는 개체를 <xref:System.Xml.XmlUrlResolver> 액세스 하려면 기본 자격 증명을 사용 하 여는 http://localhost/bookstore/inventory.xml 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-122">The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 <span data-ttu-id="eae7e-123">다른 Uri에 대해 다른 자격 증명을 제공 하 고 캐시에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-123">You can supply different credentials for different URIs and add them to a cache.</span></span> <span data-ttu-id="eae7e-124">이러한 자격 증명은 XML의 원본 소스와는 무관하게 서로 다른 URI의 인증을 검사하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-124">These credentials are used to check authentication for the different URIs regardless of the original source of the XML.</span></span> <span data-ttu-id="eae7e-125">다음 예제에서는 캐시에 자격 증명을 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-125">The following example shows how to add credentials to a cache.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]
 [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  
  
## <a name="security-considerations"></a><span data-ttu-id="eae7e-126">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="eae7e-126">Security considerations</span></span>  
 <span data-ttu-id="eae7e-127">작업할 때 다음 사항을 고려 합니다 <xref:System.Xml.XmlResolver> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-127">Consider the following items when working with the <xref:System.Xml.XmlResolver> class.</span></span>  
  
-   <span data-ttu-id="eae7e-128"><xref:System.Xml.XmlResolver> 개체에는 사용자 자격 증명과 같은 중요한 정보가 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-128"><xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="eae7e-129">캐시할 때는 주의 해야 <xref:System.Xml.XmlResolver> 개체를 전달 하지 않아야 합니다 <xref:System.Xml.XmlResolver> 신뢰할 수 없는 구성 요소에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-129">You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component.</span></span>  
  
-   <span data-ttu-id="eae7e-130"><xref:System.Xml.XmlResolver> 클래스를 사용하는 클래스 속성을 디자인하는 경우 이 속성을 쓰기 전용 속성으로 정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-130">If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property.</span></span> <span data-ttu-id="eae7e-131">이 속성을 사용하여 사용할 <xref:System.Xml.XmlResolver>를 지정할 수 있지만 <xref:System.Xml.XmlResolver> 개체를 반환할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-131">The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object.</span></span>  
  
-   <span data-ttu-id="eae7e-132">응용 프로그램에서 허용 하는 경우 <xref:System.Xml.XmlResolver> 신뢰할 수 없는 코드에서 개체를 가정할 수는 없습니다에 전달 된 URI는 <xref:System.Xml.XmlResolver.GetEntity%2A> 메서드를 사용 됩니다 반환한 것과 동일 합니다 <xref:System.Xml.XmlResolver.ResolveUri%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="eae7e-132">If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method.</span></span> <span data-ttu-id="eae7e-133"><xref:System.Xml.XmlResolver> 클래스에서 파생된 클래스는 <xref:System.Xml.XmlResolver.GetEntity%2A> 메서드를 재정의하고 원래 URI에 포함된 데이터와 다른 데이터를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-133">Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI.</span></span>  
  
-   <span data-ttu-id="eae7e-134">응용 프로그램 메모리에 대 한 서비스 거부를 완화할 수는 <xref:System.Xml.XmlResolver.GetEntity%2A> 메서드를 구현 하 여는 <xref:System.Runtime.InteropServices.ComTypes.IStream> 읽은 바이트 수를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-134">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read.</span></span> <span data-ttu-id="eae7e-135">이렇게 하면 악성 코드가 무한 바이트 스트림을를 전달 하려고 시도 하는 위치는 상황에 대 한 보호를 <xref:System.Xml.XmlResolver.GetEntity%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="eae7e-135">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eae7e-136">다음 예제에서는 <xref:System.Xml.XmlUrlResolver> 기본 자격 증명을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-136">The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials.</span></span> <span data-ttu-id="eae7e-137"><xref:System.Xml.XmlReader> 읽고 데이터 스트림 결과 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-137">A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.</span></span>  
  
 [!code-csharp[XmlResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_ex/CS/XmlResolver_ex.cs#1)]
 [!code-vb[XmlResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_ex/VB/XmlResolver_ex.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="eae7e-138">XML 문서 및 데이터</span><span class="sxs-lookup"><span data-stu-id="eae7e-138">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eae7e-139"><see cref="T:System.Xml.XmlResolver" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-139">Initializes a new instance of the <see cref="T:System.Xml.XmlResolver" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae7e-140">이 생성자는이 형식에 대 한 상태를 초기화 하기 위해 파생된 클래스 생성자에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-140">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae7e-141">파생 클래스에서 재정의되면 웹 요청을 인증하는 데 사용된 자격 증명을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-141">When overridden in a derived class, sets the credentials used to authenticate web requests.</span></span></summary>
        <value><span data-ttu-id="eae7e-142">웹 요청을 인증하는 데 사용하는 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-142">The credentials to be used to authenticate web requests.</span></span> <span data-ttu-id="eae7e-143">이 속성이 설정되지 않으면 기본적으로 값은 <see langword="null" />로 설정됩니다. 즉, <see langword="XmlResolver" />에 사용자 자격 증명이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-143">If this property is not set, the value defaults to <see langword="null" />; that is, the <see langword="XmlResolver" /> has no user credentials.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae7e-144">가상 디렉터리에는 인증이 필요 하지 않은,이 속성을 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-144">If the virtual directory does not require authentication, this property doesn't have to be set.</span></span> <span data-ttu-id="eae7e-145">그렇지 않으면 사용자의 자격 증명이 제공 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-145">Otherwise, the credentials of the user must be supplied.</span></span>  
  
 <span data-ttu-id="eae7e-146">다음 C# 코드에 자격 증명을 설정 합니다 <xref:System.Xml.XmlResolver> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-146">The following C# code sets credentials on the <xref:System.Xml.XmlResolver> object.</span></span>  
  
```csharp  
NetworkCredential nc = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = nc;  
```  
  
 <span data-ttu-id="eae7e-147">다른 Uri를 사용 하 여 다른 자격 증명을 연결 하 고 캐시에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-147">You can associate different credentials with different URIs and add them to a cache.</span></span> <span data-ttu-id="eae7e-148">다음 XML의 원래 소스에 관계 없이 다른 Uri에 대 한 인증을 확인 하려면 자격 증명을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-148">You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.</span></span>  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 <span data-ttu-id="eae7e-149">참조 <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> 이 속성을 사용 하는 예입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-149">See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> for an example that uses this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntity : Uri * string * Type -&gt; obj" Usage="xmlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="eae7e-150"><see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-150">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="eae7e-151">현재 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-151">Currently not used.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="eae7e-152">반환할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-152">The type of object to return.</span></span> <span data-ttu-id="eae7e-153">현재 버전만 System.IO.Stream 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-153">The current version only returns System.IO.Stream objects.</span></span></param>
        <summary><span data-ttu-id="eae7e-154">파생 클래스에서 재정의되면 실제 리소스를 포함하는 개체로 URI를 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-154">When overridden in a derived class, maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="eae7e-155">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-155">A stream object or <see langword="null" /> if a type other than stream is specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae7e-156">이 메서드는 호출자가 URI를 나타내는 실제 리소스를 포함 하는 개체에 지정된 된 URI에 매핑할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-156">This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.</span></span> <span data-ttu-id="eae7e-157">반환 된 개체의 형식이 negotiable; 그러나 지원 되어야 합니다 항상 <xref:System.IO.Stream?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-157">The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eae7e-158">이 메서드의 비동기 버전을 참조 하세요. <xref:System.Xml.XmlResolver.GetEntityAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-158">For the asynchronous version of this method, see <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eae7e-159">응용 프로그램 메모리에 대 한 서비스 거부를 완화할 수는 <xref:System.Xml.XmlResolver.GetEntity%2A> 메서드를 구현 하 여는 <xref:System.Runtime.InteropServices.ComTypes.IStream> 읽은 바이트 수를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-159">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read.</span></span> <span data-ttu-id="eae7e-160">이렇게 하면 악성 코드가 무한 바이트 스트림을를 전달 하려고 시도 하는 위치는 상황에 대 한 보호를 <xref:System.Xml.XmlResolver.GetEntity%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="eae7e-160">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eae7e-161">참조 <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> 이 메서드를 사용 하는 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-161">See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="eae7e-162"><paramref name="ofObjectToReturn" />이 <see langword="Stream" /> 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="eae7e-162"><paramref name="ofObjectToReturn" /> is not a <see langword="Stream" /> type.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="eae7e-163">지정된 URI가 절대 URI가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="eae7e-163">The specified URI is not an absolute URI.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae7e-164"><paramref name="absoluteUri" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-164"><paramref name="absoluteUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="eae7e-165">런타임 오류(예: 중단된 서버 연결)가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="eae7e-165">There is a runtime error (for example, an interrupted server connection).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="role" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="eae7e-166"><see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-166">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="eae7e-167">현재 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-167">Currently not used.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="eae7e-168">반환할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-168">The type of object to return.</span></span> <span data-ttu-id="eae7e-169">현재 버전에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-169">The current version only returns <see cref="T:System.IO.Stream" /> objects.</span></span></param>
        <summary><span data-ttu-id="eae7e-170">실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-170">Asynchronously maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="eae7e-171">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-171">A stream object or <see langword="null" /> if a type other than stream is specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae7e-172">비동기 버전이 <xref:System.Xml.XmlResolver.GetEntity%2A>, 동일한 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-172">This is the asynchronous version of <xref:System.Xml.XmlResolver.GetEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="eae7e-173">이 메서드를 사용 하려면 설정 해야 합니다 <xref:System.Xml.XmlReaderSettings.Async%2A> 플래그를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-173">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="eae7e-174">Async 및 Await를 사용한 비동기 프로그래밍(C# 및 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="eae7e-174">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public virtual Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="abstract member ResolveUri : Uri * string -&gt; Uri&#xA;override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="eae7e-175">상대 URI를 확인하는 데 사용된 기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-175">The base URI used to resolve the relative URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="eae7e-176">확인할 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-176">The URI to resolve.</span></span> <span data-ttu-id="eae7e-177">절대 URI나 상대 URI일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-177">The URI can be absolute or relative.</span></span> <span data-ttu-id="eae7e-178">절대 URI인 경우 이 값은 <paramref name="baseUri" /> 값을 효율적으로 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-178">If absolute, this value effectively replaces the <paramref name="baseUri" /> value.</span></span> <span data-ttu-id="eae7e-179">상대 URI인 경우 <paramref name="baseUri" />와 결합하여 절대 URI를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-179">If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</span></span></param>
        <summary><span data-ttu-id="eae7e-180">파생 클래스에서 재정의되면 기본 URI 및 상대 URI에서 절대 URI를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-180">When overridden in a derived class, resolves the absolute URI from the base and relative URIs.</span></span></summary>
        <returns><span data-ttu-id="eae7e-181">절대 URI이거나, 상대 URI를 확인할 수 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-181">The absolute URI or <see langword="null" /> if the relative URI cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae7e-182">이 URI와 관련 된 엔터티에 대 한 후속 요청에 대 한 기본 URI로는 절대 URI는 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-182">The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eae7e-183">참조 <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> 이 메서드를 사용 하는 예입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-183">See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> for an example that uses this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eae7e-184"><paramref name="relativeUri" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-184"><paramref name="relativeUri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsType">
      <MemberSignature Language="C#" Value="public virtual bool SupportsType (Uri absoluteUri, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsType(class System.Uri absoluteUri, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsType(Uri ^ absoluteUri, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member SupportsType : Uri * Type -&gt; bool&#xA;override this.SupportsType : Uri * Type -&gt; bool" Usage="xmlResolver.SupportsType (absoluteUri, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="eae7e-185">URI입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-185">The URI.</span></span></param>
        <param name="type"><span data-ttu-id="eae7e-186">반환할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-186">The type to return.</span></span></param>
        <summary><span data-ttu-id="eae7e-187"><see cref="T:System.IO.Stream" />이 아닌 유형을 반환하기 위해 확인자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-187">Enables the resolver to return types other than <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="eae7e-188"><paramref name="type" />이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eae7e-188"><see langword="true" /> if the <paramref name="type" /> is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>