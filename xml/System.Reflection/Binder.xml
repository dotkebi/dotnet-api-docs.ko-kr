<Type Name="Binder" FullName="System.Reflection.Binder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e52d82e248c05335efb0d6b73255499c9180a3cc" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57917650" /></Metadata><TypeSignature Language="C#" Value="public abstract class Binder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Binder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Binder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder abstract" />
  <TypeSignature Language="F#" Value="type Binder = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9ce59-101">후보 목록에서 멤버를 선택한 다음 실제 인수 형식에서 형식 인수 형식으로 형식 변환을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-102">구현의 합니다 <xref:System.Reflection.Binder> 클래스와 같은 메서드에서 사용 됩니다 <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, 매개 변수 형식 및 인수 값의 집합에 따라를 실행 하려면 가능한 멤버를 집합에서 선택 <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, 매개 변수 형식 등에 따라 메서드를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-102">Implementations of the <xref:System.Reflection.Binder> class are used by methods such as <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, which selects a method based on parameter types; and so on.</span></span>  
  
 <span data-ttu-id="9ce59-103">기본 구현을 합니다 <xref:System.Reflection.Binder> 클래스에서 제공 되는 <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-103">A default implementation of the <xref:System.Reflection.Binder> class is provided by the <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ce59-104">다음 예제에서는 구현 하 고의 모든 멤버를 보여 줍니다는 `Binder` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-104">The following example implements and demonstrates all members of the `Binder` class.</span></span> <span data-ttu-id="9ce59-105">Private 메서드 `CanConvertFrom` 지정된 된 형식에 대 한 호환 되는 형식을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-105">The private method `CanConvertFrom` finds compatible types for a given type.</span></span>  
  
 [!code-cpp[Binder_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Binder_1/CPP/binder.cpp#1)]
 [!code-csharp[Binder_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Binder_1/CS/binder.cs#1)]
 [!code-vb[Binder_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Binder_1/VB/binder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="9ce59-106">상속 하는 경우 <see cref="T:System.Reflection.Binder" />, 다음 멤버를 재정의 해야 합니다: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />를 <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />를 <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, 및 <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-106">When you inherit from <see cref="T:System.Reflection.Binder" />, you must override the following members: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, and <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ce59-107"><see cref="T:System.Reflection.Binder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-108">이 생성자는이 형식으로 상태를 초기화 하려면 파생된 클래스의 생성자가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-108">This constructor is called by the constructors of derived classes, to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToField">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo BindToField(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.FieldInfo[] match, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToField (bindingAttr As BindingFlags, match As FieldInfo(), value As Object, culture As CultureInfo) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::FieldInfo ^ BindToField(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ match, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member BindToField : System.Reflection.BindingFlags * System.Reflection.FieldInfo[] * obj * System.Globalization.CultureInfo -&gt; System.Reflection.FieldInfo" Usage="binder.BindToField (bindingAttr, match, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9ce59-109"><see cref="T:System.Reflection.BindingFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="9ce59-110">일치 가능한 필드 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-110">The set of fields that are candidates for matching.</span></span> <span data-ttu-id="9ce59-111">예를 들어, <see cref="T:System.Reflection.Binder" /> 개체가 <see cref="Overload:System.Type.InvokeMember" />에서 사용되는 경우 리플렉션에서 일치 가능 항목으로 확인된 필드 집합은 일반적으로 올바른 멤버 이름을 가지므로이 매개 변수는 필드 집합을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="9ce59-112"><see cref="P:System.Type.DefaultBinder" />에서 제공하는 기본 구현은 이 배열의 순서를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="value"><span data-ttu-id="9ce59-113">일치하는 필드를 찾는 데 사용되는 필드 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-113">The field value used to locate a matching field.</span></span></param>
        <param name="culture"><span data-ttu-id="9ce59-114">형식을 강제 변환하는 바인더 구현에서 데이터 형식의 강제 변환을 제어하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="9ce59-115"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-115">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span>  
  
<span data-ttu-id="9ce59-116">참조 예를 들어, 바인더 구현에서 문자열 값을 숫자 형식으로 강제 변환할 수 있는 경우 이 매개 변수는 1000이 각 문화권마다 다르게 표현되므로 1000을 나타내는 <see langword="String" />을 <see langword="Double" /> 값으로 변환하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-116">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="9ce59-117">기본 바인더는 이러한 문자열 강제 변환을 수행하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-117">The default binder does not do such string coercions.</span></span></param>
        <summary><span data-ttu-id="9ce59-118">지정된 기준을 기초로 필드 집합에서 필드를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-118">Selects a field from the given set of fields, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="9ce59-119">일치하는 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-119">The matching field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-120">경우 `bindingAttr` 포함 되지 않습니다 <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>에서 제공 하는 기본 바인더 구현 <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> 첫 번째 요소를 반환 하기만 하면 `match`합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-120">If `bindingAttr` does not include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, the default binder implementation provided by <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> simply returns the first element of `match`.</span></span> <span data-ttu-id="9ce59-121">선택 영역이 없는 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-121">No selection is done.</span></span>  
  
 <span data-ttu-id="9ce59-122">이 메서드에서 제공한 바인딩 컨트롤 <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-122">This method controls the binding provided by <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9ce59-123">기본 바인더에 대해 <paramref name="bindingAttr" />에 <see cref="F:System.Reflection.BindingFlags.SetField" />가 포함되고 <paramref name="match" />에 <paramref name="value" />와 동등하게 일치하는 여러 필드가 포함된 경우.</span><span class="sxs-lookup"><span data-stu-id="9ce59-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span></span> <span data-ttu-id="9ce59-124">예를 들어, <paramref name="value" />에 <c>IMyClass</c> 인터페이스를 구현하는 <c>MyClass</c> 개체가 포함되고 <paramref name="match" />에 <c>MyClass</c> 형식의 필드와 <c>IMyClass</c> 형식의 필드가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="9ce59-125">기본 바인더에 대해 <paramref name="bindingAttr" />에 <see cref="F:System.Reflection.BindingFlags.SetField" />가 포함되고 <paramref name="match" />에 <paramref name="value" />를 받아들일 수 있는 필드가 포함되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9ce59-126">기본 바인더에 대해 <paramref name="bindingAttr" />에 <see cref="F:System.Reflection.BindingFlags.SetField" />가 포함되고 <paramref name="match" />가 <see langword="null" />이거나 빈 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="9ce59-127">또는</span><span class="sxs-lookup"><span data-stu-id="9ce59-127">-or-</span></span> 
 <span data-ttu-id="9ce59-128"><paramref name="bindingAttr" />에 <see cref="F:System.Reflection.BindingFlags.SetField" />가 포함되고 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-128"><paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="BindToMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase BindToMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, object[]&amp; args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] names, [out] object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToMethod (bindingAttr As BindingFlags, match As MethodBase(), ByRef args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, names As String(), ByRef state As Object) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ BindToMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;System::Object ^&gt; ^ % args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ names, [Runtime::InteropServices::Out] System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member BindToMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] *  * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] *  -&gt; System.Reflection.MethodBase" Usage="binder.BindToMethod (bindingAttr, match, args, modifiers, culture, names, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9ce59-129"><see cref="T:System.Reflection.BindingFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-129">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="9ce59-130">일치 가능한 메서드 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-130">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="9ce59-131">예를 들어, <see cref="T:System.Reflection.Binder" /> 개체가 <see cref="Overload:System.Type.InvokeMember" />에서 사용되는 경우 리플렉션에서 일치 가능 항목으로 확인된 메서드 집합은 일반적으로 올바른 멤버 이름을 가지므로이 매개 변수는 메서드 집합을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-131">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="9ce59-132"><see cref="P:System.Type.DefaultBinder" />에서 제공하는 기본 구현은 이 배열의 순서를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-132">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="args"><span data-ttu-id="9ce59-133">전달되는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-133">The arguments that are passed in.</span></span> <span data-ttu-id="9ce59-134">바인더는 이 배열의 인수 순서를 변경할 수 있습니다. 예를 들어 <paramref name="names" /> 매개 변수를 사용하여 위치 순서 외의 순서를 지정하는 경우 기본 바인더는 인수 순서를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-134">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <paramref name="names" /> parameter is used to specify an order other than positional order.</span></span> <span data-ttu-id="9ce59-135">바인더 구현에서 인수 형식을 강제 변환하면 인수 형식과 값도 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-135">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9ce59-136">형식이 수정된 매개 변수 시그니처로 작업하기 위해 바인딩을 사용하는 매개 변수 한정자의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-136">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span> <span data-ttu-id="9ce59-137">기본 바인더 구현에서는 이 매개 변수를 사용하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-137">The default binder implementation does not use this parameter.</span></span></param>
        <param name="culture"><span data-ttu-id="9ce59-138">형식을 강제 변환하는 바인더 구현에서 데이터 형식의 강제 변환을 제어하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-138">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="9ce59-139"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-139">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span>  
  
<span data-ttu-id="9ce59-140">참조 예를 들어, 바인더 구현에서 문자열 값을 숫자 형식으로 강제 변환할 수 있는 경우 이 매개 변수는 1000이 각 문화권마다 다르게 표현되므로 1000을 나타내는 <see langword="String" />을 <see langword="Double" /> 값으로 변환하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-140">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="9ce59-141">기본 바인더는 이러한 문자열 강제 변환을 수행하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-141">The default binder does not do such string coercions.</span></span></param>
        <param name="names"><span data-ttu-id="9ce59-142">일치시킬 때 매개 변수 이름이 고려되는 경우 매개 변수 이름이고, 인수가 위치로만 간주되는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-142">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span></span> <span data-ttu-id="9ce59-143">예를 들어, 인수가 위치 순서대로 제공되지 않는 경우 매개 변수 이름을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-143">For example, parameter names must be used if arguments are not supplied in positional order.</span></span></param>
        <param name="state"><span data-ttu-id="9ce59-144">메서드가 반환된 후 <paramref name="state" />에는 인수 순서 변경을 추적하는 바인더 제공 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-144">After the method returns, <paramref name="state" /> contains a binder-provided object that keeps track of argument reordering.</span></span> <span data-ttu-id="9ce59-145">바인더는 이 개체를 만들고 이 개체의 유일한 소비자입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-145">The binder creates this object, and the binder is the sole consumer of this object.</span></span> <span data-ttu-id="9ce59-146"><see langword="null" /> 매개 변수(Visual Basic에서는 <see langword="BindToMethod" /> 매개 변수)의 값을 검색할 수 있도록 <paramref name="state" />를 원래 순서로 복원하려는 경우와 같이, <see langword="ref" />가 반환될 때 <paramref name="state" />가 <see langword="ByRef" />이 아닌 경우 <paramref name="args" />를 <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />에 전달해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-146">If <paramref name="state" /> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <paramref name="state" /> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <paramref name="args" /> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="9ce59-147">제공된 인수를 기반으로 지정된 메서드 집합에서 호출할 메서드를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-147">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span></span></summary>
        <returns><span data-ttu-id="9ce59-148">일치하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-148">The matching method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-149">기본 바인더는 고려 값이 있는 두 매개 변수 및 `params` 배열 (`ParamArray` Visual Basic의 배열)입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-149">The default binder takes into account both parameters that have values and `params` arrays (`ParamArray` arrays in Visual Basic).</span></span> <span data-ttu-id="9ce59-150">즉, 일치 하는 경우에도 찾을 수 있는 `args` 고 `match` 요소 수가 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-150">Thus, it is possible to find a match in cases where `args` and `match` do not contain the same number of elements.</span></span>  
  
 <span data-ttu-id="9ce59-151">바인더를 사용 하면 매핑할 인수 배열을 다시 원래 형식 인수 배열에서 조작 된 경우 클라이언트 <xref:System.Reflection.Binder.BindToMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-151">The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <xref:System.Reflection.Binder.BindToMethod%2A>.</span></span> <span data-ttu-id="9ce59-152">이러한 인수를 사용할 수 있는 경우 참조로 인수를 돌아가는 데이 다시 매핑 기능을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-152">Use this remap capability to get back by-reference arguments when such arguments are present.</span></span> <span data-ttu-id="9ce59-153">이름으로 인수를 전달 하는 경우 바인더 인수 배열을 다시 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-153">When you pass arguments by name, the binder reorders the argument array.</span></span> <span data-ttu-id="9ce59-154">합니다 `state` 매개 변수 인수 순서 변경을 바인더를 사용할 수 있게 하는 추적 <xref:System.Reflection.Binder.ReorderArgumentArray%2A> 원래 형태로 인수 배열을 다시 정렬 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-154">The `state` parameter keeps track of argument reordering, thus enabling the binder's <xref:System.Reflection.Binder.ReorderArgumentArray%2A> method to reorder the argument array to its original form.</span></span>  
  
 <span data-ttu-id="9ce59-155">합니다 <xref:System.Reflection.Binder.BindToMethod%2A> 메서드를 사용 하 여는 <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ce59-155">The <xref:System.Reflection.Binder.BindToMethod%2A> method is used by the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9ce59-156">기본 바인더에 대해 <paramref name="match" />에 <paramref name="args" />와 동등하게 일치하는 여러 메서드가 포함된 경우.</span><span class="sxs-lookup"><span data-stu-id="9ce59-156">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span></span> <span data-ttu-id="9ce59-157">예를 들어, <paramref name="args" />에 <c>IMyClass</c> 인터페이스를 구현하는 <c>MyClass</c> 개체가 포함되고 <paramref name="match" />에 <c>MyClass</c>를 사용하는 메서드와 <c>IMyClass</c>를 사용하는 메서드가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-157">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="9ce59-158">기본 바인더에 대해 <paramref name="match" />에 제공된 인수를 받아들일 수 있는 메서드가 <paramref name="args" />에 포함되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-158">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ce59-159">기본 바인더에 대해 <paramref name="match" />가 <see langword="null" />이거나 빈 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-159">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodBase" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeType">
      <MemberSignature Language="C#" Value="public virtual bool CanChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.CanChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool&#xA;override this.CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool" Usage="binder.CanChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="type">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Globalization.CultureInfo -&gt; obj" Usage="binder.ChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9ce59-160">새 <see langword="Type" />으로 변경할 원본 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-160">The object to change into a new <see langword="Type" />.</span></span></param>
        <param name="type"><span data-ttu-id="9ce59-161">형식이 변경될 <paramref name="value" />의 새 <see langword="Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-161">The new <see langword="Type" /> that <paramref name="value" /> will become.</span></span></param>
        <param name="culture"><span data-ttu-id="9ce59-162">데이터 형식의 강제 변환을 제어하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-162">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span></span> <span data-ttu-id="9ce59-163"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-163">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span>  
  
<span data-ttu-id="9ce59-164">참고 예를 들어, 1000은 문화권마다 다르게 표현되므로 1000을 나타내는 <see langword="String" />을 <see langword="Double" /> 값으로 변환하려면 이 매개 변수가 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-164">Note   For example, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span></span></param>
        <summary><span data-ttu-id="9ce59-165">지정된 <see langword="Object" />의 형식을 <see langword="Type" />으로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-165">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span></span></summary>
        <returns><span data-ttu-id="9ce59-166">지정된 값을 새 형식으로 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-166">An object that contains the given value as the new type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-167">리플렉션 공용 형식 시스템의 액세스 가능성 규칙을 모델링합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-167">Reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="9ce59-168">예를 들어 호출자에 게 동일한 어셈블리의 경우 호출자에 게 필요가 없습니다 특별 한 권한이 내부 멤버에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-168">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="9ce59-169">그렇지 않으면 호출자에 게 필요한 <xref:System.Security.Permissions.ReflectionPermission>합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-169">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="9ce59-170">이것이, 보호 되는 멤버 조회를 사용 하 여 일관 된, private 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-170">This is consistent with lookup of members that are protected, private, and so on.</span></span>  
  
 <span data-ttu-id="9ce59-171">일반 원칙 `ChangeType` 확장 데이터 손실이 없는 강제 변환을 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-171">The general principle is that `ChangeType` should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="9ce59-172">확대 강제 변환의 예로 64 비트 부호 있는 정수 값을 32 비트 부호 있는 정수 값 강제 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-172">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="9ce59-173">이 데이터가 손실 될 수 있는 축소 변환에서 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-173">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="9ce59-174">축소 변환의 예로 64 비트 부호 있는 정수는 32 비트 부호 있는 정수를 강제 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-174">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="9ce59-175">다음 표에서 기본적으로 수행 된 변환이 `ChangeType`합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-175">The following table lists the coercions performed by the default `ChangeType`.</span></span>  
  
|<span data-ttu-id="9ce59-176">소스 형식</span><span class="sxs-lookup"><span data-stu-id="9ce59-176">Source type</span></span>|<span data-ttu-id="9ce59-177">대상 형식</span><span class="sxs-lookup"><span data-stu-id="9ce59-177">Target type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="9ce59-178">모든 형식</span><span class="sxs-lookup"><span data-stu-id="9ce59-178">Any type</span></span>|<span data-ttu-id="9ce59-179">해당 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-179">Its base type.</span></span>|  
|<span data-ttu-id="9ce59-180">모든 형식</span><span class="sxs-lookup"><span data-stu-id="9ce59-180">Any type</span></span>|<span data-ttu-id="9ce59-181">인터페이스를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-181">The interface it implements.</span></span>|  
|<span data-ttu-id="9ce59-182">Char</span><span class="sxs-lookup"><span data-stu-id="9ce59-182">Char</span></span>|<span data-ttu-id="9ce59-183">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-183">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="9ce59-184">Byte</span><span class="sxs-lookup"><span data-stu-id="9ce59-184">Byte</span></span>|<span data-ttu-id="9ce59-185">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-185">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="9ce59-186">SByte</span><span class="sxs-lookup"><span data-stu-id="9ce59-186">SByte</span></span>|<span data-ttu-id="9ce59-187">Int16, Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-187">Int16, Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="9ce59-188">UInt16</span><span class="sxs-lookup"><span data-stu-id="9ce59-188">UInt16</span></span>|<span data-ttu-id="9ce59-189">UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-189">UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="9ce59-190">Int16</span><span class="sxs-lookup"><span data-stu-id="9ce59-190">Int16</span></span>|<span data-ttu-id="9ce59-191">Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-191">Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="9ce59-192">UInt32</span><span class="sxs-lookup"><span data-stu-id="9ce59-192">UInt32</span></span>|<span data-ttu-id="9ce59-193">UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-193">UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="9ce59-194">Int32</span><span class="sxs-lookup"><span data-stu-id="9ce59-194">Int32</span></span>|<span data-ttu-id="9ce59-195">Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-195">Int64, Single, Double</span></span>|  
|<span data-ttu-id="9ce59-196">UInt64</span><span class="sxs-lookup"><span data-stu-id="9ce59-196">UInt64</span></span>|<span data-ttu-id="9ce59-197">Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-197">Single, Double</span></span>|  
|<span data-ttu-id="9ce59-198">Int64</span><span class="sxs-lookup"><span data-stu-id="9ce59-198">Int64</span></span>|<span data-ttu-id="9ce59-199">Single, Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-199">Single, Double</span></span>|  
|<span data-ttu-id="9ce59-200">Single</span><span class="sxs-lookup"><span data-stu-id="9ce59-200">Single</span></span>|<span data-ttu-id="9ce59-201">Double</span><span class="sxs-lookup"><span data-stu-id="9ce59-201">Double</span></span>|  
|<span data-ttu-id="9ce59-202">비참조</span><span class="sxs-lookup"><span data-stu-id="9ce59-202">Non-reference</span></span>|<span data-ttu-id="9ce59-203">참조로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-203">By-reference.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderArgumentArray">
      <MemberSignature Language="C#" Value="public abstract void ReorderArgumentArray (ref object[] args, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReorderArgumentArray(object[]&amp; args, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReorderArgumentArray (ByRef args As Object(), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReorderArgumentArray(cli::array &lt;System::Object ^&gt; ^ % args, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member ReorderArgumentArray :  * obj -&gt; unit" Usage="binder.ReorderArgumentArray (args, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="9ce59-204">전달되는 실제 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-204">The actual arguments that are passed in.</span></span> <span data-ttu-id="9ce59-205">인수의 형식과 값은 모두 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-205">Both the types and values of the arguments can be changed.</span></span></param>
        <param name="state"><span data-ttu-id="9ce59-206">인수가 다시 정렬되었는지를 추적하는 바인더 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-206">A binder-provided object that keeps track of argument reordering.</span></span></param>
        <summary><span data-ttu-id="9ce59-207"><see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />에서 반환하면 <paramref name="args" /> 인수를 <see langword="BindToMethod" />에서 가져온 상태로 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-207">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-208">공용 언어 런타임에서이 메서드를 호출 하는 경우 `state` 아닙니다 `null` 에서 반환 된 후 `BindToMethod`합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-208">The common language runtime calls this method if `state` is not `null` after a return from `BindToMethod`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectMethod (bindingAttr As BindingFlags, match As MethodBase(), types As Type(), modifiers As ParameterModifier()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ SelectMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodBase" Usage="binder.SelectMethod (bindingAttr, match, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9ce59-209"><see cref="T:System.Reflection.BindingFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-209">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="9ce59-210">일치 가능한 메서드 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-210">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="9ce59-211">예를 들어, <see cref="T:System.Reflection.Binder" /> 개체가 <see cref="Overload:System.Type.InvokeMember" />에서 사용되는 경우 리플렉션에서 일치 가능 항목으로 확인된 메서드 집합은 일반적으로 올바른 멤버 이름을 가지므로이 매개 변수는 메서드 집합을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-211">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="9ce59-212"><see cref="P:System.Type.DefaultBinder" />에서 제공하는 기본 구현은 이 배열의 순서를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-212">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="types"><span data-ttu-id="9ce59-213">일치하는 메서드를 찾는 데 사용할 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-213">The parameter types used to locate a matching method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9ce59-214">형식이 수정된 매개 변수 시그니처로 작업하기 위해 바인딩을 사용하는 매개 변수 한정자의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-214">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="9ce59-215">인수 형식을 기초로 지정된 메서드 집합에서 메서드를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-215">Selects a method from the given set of methods, based on the argument type.</span></span></summary>
        <returns><span data-ttu-id="9ce59-216">있으면 일치하는 메서드이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-216">The matching method, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-217">이 메서드에서 반환 해야 `null` 메서드가 없는 조건과 일치 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="9ce59-217">This method should return `null` if no method matches the criteria.</span></span> <span data-ttu-id="9ce59-218">이 메서드를 제공 하는 선택을 제어 합니다 `GetConstructor` 하 고 `GetMethod` 메서드를 `Type`입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-218">This method controls the selection provided by the `GetConstructor` and `GetMethod` methods on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9ce59-219">기본 바인더에 대해 <paramref name="match" />에 <paramref name="types" />가 나타내는 매개 변수 형식과 동등하게 일치하는 여러 메서드가 포함된 경우.</span><span class="sxs-lookup"><span data-stu-id="9ce59-219">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span></span> <span data-ttu-id="9ce59-220">예를 들어, <paramref name="types" />의 배열에 <c>MyClass</c>에 대한 <see cref="T:System.Type" /> 개체가 포함되고 <paramref name="match" />의 배열에 <c>MyClass</c>의 기본 클래스를 사용하는 메서드와 <c>MyClass</c>에서 구현하는 인터페이스를 사용하는 메서드가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-220">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ce59-221">기본 바인더에 대해 <paramref name="match" />가 <see langword="null" />이거나 빈 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-221">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="9ce59-222">또는</span><span class="sxs-lookup"><span data-stu-id="9ce59-222">-or-</span></span> 
<span data-ttu-id="9ce59-223"><paramref name="types" /> 요소가 <see cref="T:System.Type" />에서 파생되지만 <see langword="RuntimeType" /> 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-223">An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectProperty">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectProperty (bindingAttr As BindingFlags, match As PropertyInfo(), returnType As Type, indexes As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::PropertyInfo ^ SelectProperty(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ match, Type ^ returnType, cli::array &lt;Type ^&gt; ^ indexes, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectProperty : System.Reflection.BindingFlags * System.Reflection.PropertyInfo[] * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="binder.SelectProperty (bindingAttr, match, returnType, indexes, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="indexes" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9ce59-224"><see cref="T:System.Reflection.BindingFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-224">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="9ce59-225">일치 가능한 속성 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-225">The set of properties that are candidates for matching.</span></span> <span data-ttu-id="9ce59-226">예를 들어, <see cref="T:System.Reflection.Binder" /> 개체가 <see cref="Overload:System.Type.InvokeMember" />에서 사용되는 경우 리플렉션에서 일치 가능 항목으로 확인된 속성 집합은 일반적으로 올바른 멤버 이름을 가지므로이 매개 변수는 속성 집합을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-226">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="9ce59-227"><see cref="P:System.Type.DefaultBinder" />에서 제공하는 기본 구현은 이 배열의 순서를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-227">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="returnType"><span data-ttu-id="9ce59-228">일치하는 속성이 가져야 할 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-228">The return value the matching property must have.</span></span></param>
        <param name="indexes"><span data-ttu-id="9ce59-229">검색 중인 속성의 인덱스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-229">The index types of the property being searched for.</span></span> <span data-ttu-id="9ce59-230">클래스에 대한 인덱서와 같은 인덱스 속성에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-230">Used for index properties such as the indexer for a class.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9ce59-231">형식이 수정된 매개 변수 시그니처로 작업하기 위해 바인딩을 사용하는 매개 변수 한정자의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-231">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="9ce59-232">지정된 기준을 기초로 속성 집합에서 속성을 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-232">Selects a property from the given set of properties, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="9ce59-233">일치하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-233">The matching property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ce59-234">이 메서드를 제공 하는 선택을 제어 합니다 `GetProperty` 메서드를 `Type`입니다.</span><span class="sxs-lookup"><span data-stu-id="9ce59-234">This method controls the selection provided by the `GetProperty` method on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9ce59-235">기본 바인더에 대해 <paramref name="match" />에 <paramref name="returnType" /> 및 <paramref name="indexes" />와 동등하게 일치하는 여러 속성이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-235">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ce59-236">기본 바인더에 대해 <paramref name="match" />가 <see langword="null" />이거나 빈 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="9ce59-236">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.PropertyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>