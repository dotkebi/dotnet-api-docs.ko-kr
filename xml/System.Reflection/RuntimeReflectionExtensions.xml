<Type Name="RuntimeReflectionExtensions" FullName="System.Reflection.RuntimeReflectionExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffaf7f58536fe0c7bde06471ea1cc141b8ced496" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58699802" /></Metadata><TypeSignature Language="C#" Value="public static class RuntimeReflectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuntimeReflectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.RuntimeReflectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RuntimeReflectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeReflectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type RuntimeReflectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="89269-101">가동시간에 유형에 대한 정보를 검색하는 방법을 제공한다.</span><span class="sxs-lookup"><span data-stu-id="89269-101">Provides methods that retrieve information about types at run time.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMethodInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetMethodInfo (this Delegate del);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetMethodInfo(class System.Delegate del) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMethodInfo (del As Delegate) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetMethodInfo(Delegate ^ del);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfo : Delegate -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetMethodInfo del" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="del" Type="System.Delegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="del"><span data-ttu-id="89269-102">검사할 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-102">The delegate to examine.</span></span></param>
        <summary><span data-ttu-id="89269-103">지정된 대리자가 나타내는 메서드를 나타내는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="89269-103">Gets an object that represents the method represented by the specified delegate.</span></span></summary>
        <returns><span data-ttu-id="89269-104">메서드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-104">An object that represents the method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-105"><paramref name="del" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-105"><paramref name="del" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="89269-106">호출자에게 대리자가 나타내는 메서드에 대한 액세스 권한이 없는 경우(예를 들어 메서드가 private인 경우)</span><span class="sxs-lookup"><span data-stu-id="89269-106">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <altmember cref="P:System.Delegate.Method" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeBaseDefinition">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeBaseDefinition (this System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeBaseDefinition(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeBaseDefinition (method As MethodInfo) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeBaseDefinition(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeBaseDefinition : System.Reflection.MethodInfo -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="89269-107">정보를 검색할 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-107">The method to retrieve information about.</span></span></param>
        <summary><span data-ttu-id="89269-108">메서드가 처음으로 선언된 직접 또는 간접 기본 클래스에서 지정된 메서드를 표현하는 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-108">Retrieves an object that represents the specified method on the direct or indirect base class where the method was first declared.</span></span></summary>
        <returns><span data-ttu-id="89269-109">지정된 메서드의 기본 클래스에서의 초기 선언을 나타내는 개체</span><span class="sxs-lookup"><span data-stu-id="89269-109">An object that represents the specified method's initial declaration on a base class.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-110"><paramref name="method" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-110"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Reflection.MethodInfo.GetBaseDefinition" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvent">
      <MemberSignature Language="C#" Value="public static System.Reflection.EventInfo GetRuntimeEvent (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.EventInfo GetRuntimeEvent(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::EventInfo ^ GetRuntimeEvent(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvent : Type * string -&gt; System.Reflection.EventInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-111">이벤트가 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-111">The type that contains the event.</span></span></param>
        <param name="name"><span data-ttu-id="89269-112">이벤트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-112">The name of the event.</span></span></param>
        <summary><span data-ttu-id="89269-113">지정된 이벤트를 나타내는 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-113">Retrieves an object that represents the specified event.</span></span></summary>
        <returns><span data-ttu-id="89269-114">지정된 이벤트를 나타내는 개체이며 이벤트가 없는 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-114">An object that represents the specified event, or <see langword="null" /> if the event is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-115"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-115"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="89269-116">또는</span><span class="sxs-lookup"><span data-stu-id="89269-116">-or-</span></span>

<span data-ttu-id="89269-117"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-117"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvents">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt; GetRuntimeEvents (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.EventInfo&gt; GetRuntimeEvents(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::EventInfo ^&gt; ^ GetRuntimeEvents(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvents : Type -&gt; seq&lt;System.Reflection.EventInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-118">이벤트가 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-118">The type that contains the events.</span></span></param>
        <summary><span data-ttu-id="89269-119">지정된 형식에서 정의된 모든 메소드를 나타내는 컬렉션을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-119">Retrieves a collection that represents all the events defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="89269-120">지정된 형식의 이벤트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-120">A collection of events for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89269-121">이 메서드는 상속, public이 아닌 인스턴스 및 정적 이벤트를 포함 하 여 지정된 된 형식에 정의 된 모든 이벤트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-121">This method returns all events defined on the specified type, including inherited, non-public, instance, and static events.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-122"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-122"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeField">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetRuntimeField (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetRuntimeField(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::FieldInfo ^ GetRuntimeField(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeField : Type * string -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeField (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-123">필드가 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-123">The type that contains the field.</span></span></param>
        <param name="name"><span data-ttu-id="89269-124">@FSHO2@필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-124">The name of the field.</span></span></param>
        <summary><span data-ttu-id="89269-125">지정된 필드를 나타내는 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-125">Retrieves an object that represents a specified field.</span></span></summary>
        <returns><span data-ttu-id="89269-126">지정된 필드를 나타내는 개체이며 필드가 없는 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-126">An object that represents the specified field, or <see langword="null" /> if the field is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-127"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-127"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="89269-128">또는</span><span class="sxs-lookup"><span data-stu-id="89269-128">-or-</span></span>

<span data-ttu-id="89269-129"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-129"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetField(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFields">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt; GetRuntimeFields (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.FieldInfo&gt; GetRuntimeFields(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::FieldInfo ^&gt; ^ GetRuntimeFields(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeFields : Type -&gt; seq&lt;System.Reflection.FieldInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-130">필드가 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-130">The type that contains the fields.</span></span></param>
        <summary><span data-ttu-id="89269-131">지정된 형식에서 정의된 모든 메소드를 나타내는 컬렉션을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-131">Retrieves a collection that represents all the fields defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="89269-132">지정된 형식의 필드 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-132">A collection of fields for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89269-133">이 메서드는 상속, public이 아닌 인스턴스 및 정적 필드를 포함 하 여 지정된 된 형식에 정의 된 모든 필드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-133">This method returns all fields that are defined on the specified type, including inherited, non-public, instance, and static fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-134"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-134"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeInterfaceMap">
      <MemberSignature Language="C#" Value="public static System.Reflection.InterfaceMapping GetRuntimeInterfaceMap (this System.Reflection.TypeInfo typeInfo, Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.InterfaceMapping GetRuntimeInterfaceMap(class System.Reflection.TypeInfo typeInfo, class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::InterfaceMapping GetRuntimeInterfaceMap(System::Reflection::TypeInfo ^ typeInfo, Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeInterfaceMap : System.Reflection.TypeInfo * Type -&gt; System.Reflection.InterfaceMapping" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap (typeInfo, interfaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" RefType="this" />
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="89269-135">매핑 대상을 검색하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-135">The type to retrieve a mapping for.</span></span></param>
        <param name="interfaceType"><span data-ttu-id="89269-136">매핑을 검색할 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-136">The interface to retrieve a mapping for.</span></span></param>
        <summary><span data-ttu-id="89269-137">지정된 형식과 지정된 인터페이스에 대한 인터페이스 매핑을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-137">Returns an interface mapping for the specified type and the specified interface.</span></span></summary>
        <returns><span data-ttu-id="89269-138">지정된 인터페이스 및 형식의 인터페이스 매핑을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-138">An object that represents the interface mapping for the specified interface and type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-139"><paramref name="typeInfo" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-139"><paramref name="typeInfo" /> is <see langword="null" />.</span></span>
        
<span data-ttu-id="89269-140">또는</span><span class="sxs-lookup"><span data-stu-id="89269-140">-or-</span></span>

<span data-ttu-id="89269-141"><paramref name="interfaceType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-141"><paramref name="interfaceType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="89269-142"><paramref name="interfaceType" />은 <paramref name="typeInfo" />에 의해 구현되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="89269-142"><paramref name="interfaceType" /> is not implemented by <paramref name="typeInfo" />.</span></span>

<span data-ttu-id="89269-143">또는</span><span class="sxs-lookup"><span data-stu-id="89269-143">-or-</span></span>

<span data-ttu-id="89269-144"><paramref name="interfaceType" />은 인터페이스를 참조하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="89269-144"><paramref name="interfaceType" /> does not refer to an interface.</span></span>

<span data-ttu-id="89269-145">또는</span><span class="sxs-lookup"><span data-stu-id="89269-145">-or-</span></span>

<span data-ttu-id="89269-146"><paramref name="typeInfo" /> 또는 <paramref name="interfaceType" />은 개방형 제네릭 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-146"><paramref name="typeInfo" /> or <paramref name="interfaceType" /> is an open generic type.</span></span>

<span data-ttu-id="89269-147">또는</span><span class="sxs-lookup"><span data-stu-id="89269-147">-or-</span></span>

<span data-ttu-id="89269-148"><paramref name="interfaceType" />은 제네릭 인터페이스이고 <paramref name="typeInfo" />은 배열 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-148"><paramref name="interfaceType" /> is a generic interface, and <paramref name="typeInfo" /> is an array type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89269-149"><paramref name="typeInfo" />는 제네릭 형식 매개 변수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="89269-149"><paramref name="typeInfo" /> represents a generic type parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="89269-150"><paramref name="typeInfo" />는 <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> 메서드가 아직 호출되지 않은 <see cref="T:System.Reflection.Emit.TypeBuilder" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-150"><paramref name="typeInfo" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> instance whose <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method has not yet been called.</span></span>

<span data-ttu-id="89269-151">또는</span><span class="sxs-lookup"><span data-stu-id="89269-151">-or-</span></span>

<span data-ttu-id="89269-152">호출된 메서드가 기본 클래스에서 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="89269-152">The invoked method is not supported in the base class.</span></span> <span data-ttu-id="89269-153">파생 클래스에서 구현을 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-153">Derived classes must provide an implementation.</span></span></exception>
        <altmember cref="M:System.Type.GetInterfaceMap(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethod">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeMethod (this Type type, string name, Type[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeMethod(class System.Type type, string name, class System.Type[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeMethod(Type ^ type, System::String ^ name, cli::array &lt;Type ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethod : Type * string * Type[] -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod (type, name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-154">메서드가 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-154">The type that contains the method.</span></span></param>
        <param name="name"><span data-ttu-id="89269-155">메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-155">The name of the method.</span></span></param>
        <param name="parameters"><span data-ttu-id="89269-156">매서드의 매개 변수를 포함하는 배열</span><span class="sxs-lookup"><span data-stu-id="89269-156">An array that contains the method's parameters.</span></span></param>
        <summary><span data-ttu-id="89269-157">지정된 메서드를 나타내는 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-157">Retrieves an object that represents a specified method.</span></span></summary>
        <returns><span data-ttu-id="89269-158">지정된 메서드를 나타내는 개체이며 메서드가 없는 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-158">An object that represents the specified method, or <see langword="null" /> if the method is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-159"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-159"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="89269-160">또는</span><span class="sxs-lookup"><span data-stu-id="89269-160">-or-</span></span>

<span data-ttu-id="89269-161"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-161"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AmbiguousMatchException"><span data-ttu-id="89269-162">지정한 이름을 가진 메서드가 둘 이상 있습니다.</span><span class="sxs-lookup"><span data-stu-id="89269-162">More than one method is found with the specified name.</span></span></exception>
        <altmember cref="M:System.Type.GetMethod(System.String,System.Type[])" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethods">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt; GetRuntimeMethods (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MethodInfo&gt; GetRuntimeMethods(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::MethodInfo ^&gt; ^ GetRuntimeMethods(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethods : Type -&gt; seq&lt;System.Reflection.MethodInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-163">메서드가 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-163">The type that contains the methods.</span></span></param>
        <summary><span data-ttu-id="89269-164">지정된 형식에 정의된 모든 메소드를 나타내는 컬렉션을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-164">Retrieves a collection that represents all methods defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="89269-165">지정된 형식의 메서드 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-165">A collection of methods for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89269-166">이 메서드는 상속, public이 아닌 인스턴스 및 정적 메서드를 포함 하 여 지정된 된 형식에 정의 된 모든 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-166">This method returns all methods defined on the specified type, including inherited, non-public, instance, and static methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-167"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-167"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; GetRuntimeProperties (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; GetRuntimeProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ GetRuntimeProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-168">속성이 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-168">The type that contains the properties.</span></span></param>
        <summary><span data-ttu-id="89269-169">지정된 형식에서 정의된 모든 속성을 나타내는 컬렉션을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-169">Retrieves a collection that represents all the properties defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="89269-170">지정된 형식에 대한 속성 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-170">A collection of properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89269-171">이 메서드는 상속, public이 아닌 인스턴스 및 정적 속성을 포함 하 여 지정된 된 형식에 정의 된 모든 속성을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-171">This method returns all properties defined on the specified type, including inherited, non-public, instance, and static properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-172"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-172"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetProperties(System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperty">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo GetRuntimeProperty (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.PropertyInfo GetRuntimeProperty(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::PropertyInfo ^ GetRuntimeProperty(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperty : Type * string -&gt; System.Reflection.PropertyInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89269-173">속성이 포함된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-173">The type that contains the property.</span></span></param>
        <param name="name"><span data-ttu-id="89269-174">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-174">The name of the property.</span></span></param>
        <summary><span data-ttu-id="89269-175">지정된 속성을 나타내는 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-175">Retrieves an object that represents a specified property.</span></span></summary>
        <returns><span data-ttu-id="89269-176">지정된 속성을 나타내는 개체이며 속성이 없는 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="89269-176">An object that represents the specified property, or <see langword="null" /> if the property is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89269-177"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-177"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="89269-178">또는</span><span class="sxs-lookup"><span data-stu-id="89269-178">-or-</span></span>

<span data-ttu-id="89269-179"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89269-179"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="89269-180"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="89269-180"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="89269-181">요청한 이름의 속성이 두 개 이상 있습니다.</span><span class="sxs-lookup"><span data-stu-id="89269-181">More than one property with the requested name was found.</span></span></exception>
        <altmember cref="M:System.Type.GetProperty(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>