<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="042a358f20f77eff7b19821ae4481710890d5638" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58689791" /></Metadata><TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d44bd-101"><see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch 인터페이스</see>와 호환하여 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-101">Interoperates with the <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch interface</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-102">합니다 <xref:System.Reflection.IReflect> 인터페이스와 상호 운용 되는 [IDispatch 인터페이스](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="d44bd-103"><xref:System.Reflection.IReflect> 하위 집합을 정의 합니다 <xref:System.Type> 리플렉션 메서드.</span><span class="sxs-lookup"><span data-stu-id="d44bd-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="d44bd-104">이 인터페이스를 구현 하면 COM에서 개체에 액세스할 때 동작을 사용자 지정 하는 종류는 `IDispatch` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="d44bd-105"><xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> 를 구현 하는 개체를 마샬링하는 클래스를 사용할 수 있습니다 <xref:System.Reflection.IReflect> 또는 <xref:System.Runtime.InteropServices.Expando.IExpando> COM으로 `IDispatch` 개체 및 그 반대의 경우도 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d44bd-106">찾을 필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-106">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d44bd-107">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-107">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-108">지정된 필드 및 바인딩 플래그에 해당하는 <see cref="T:System.Reflection.FieldInfo" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span></span></summary>
        <returns><span data-ttu-id="d44bd-109"><paramref name="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 명명된 개체에 대한 필드 정보가 포함된 <see cref="T:System.Reflection.FieldInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="d44bd-110">개체가 이름이 같은 여러 필드를 구현하는 경우</span><span class="sxs-lookup"><span data-stu-id="d44bd-110">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="d44bd-111">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-111">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-112">현재 클래스의 모든 필드에 해당하는 <see cref="T:System.Reflection.FieldInfo" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span></span></summary>
        <returns><span data-ttu-id="d44bd-113"><paramref name="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 이 리플렉션 개체에 대한 모든 필드 정보가 포함된 <see cref="T:System.Reflection.FieldInfo" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-114">일치 하는 이름을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-114">The match is based upon a name.</span></span> <span data-ttu-id="d44bd-115">각 필드에는 고유한 이름이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-115">Each field must have a unique name.</span></span> <span data-ttu-id="d44bd-116"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> 플래그는 public이 아닌 메서드가 검색에 포함 되도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="d44bd-117"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> 플래그는 공용 메서드가 검색에 포함 되도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d44bd-118">찾을 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-118">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d44bd-119">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-119">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-120">모든 공용 멤버나 지정된 이름과 일치하는 이름을 가진 모든 멤버에 해당하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="d44bd-121"><paramref name="name" /> 매개 변수와 일치하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-122">합니다 <xref:System.Reflection.IReflect.GetMember%2A> 메서드는 배열을 검색 <xref:System.Reflection.MemberInfo> 이름과 바인딩 특성을 사용 하 여 모든 public 멤버와 지정 된 이름과 일치 하는 모든 멤버에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="d44bd-123">지정 된 이름의 경우 데이터 또는 무시를 관찰 하 여 지정 된 대로 <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="d44bd-124">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-124">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-125">모든 public 멤버나 현재 클래스의 모든 멤버에 해당하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span></span></summary>
        <returns><span data-ttu-id="d44bd-126">이 리플렉션 개체에 대한 모든 멤버 정보가 포함된 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-127">이 메서드는 배열을 검색 <xref:System.Reflection.MemberInfo> 또는 모든 public 멤버나 현재 클래스의 모든 멤버에 해당 하는 바인딩 특성을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="d44bd-128">이 개체에 대해 정의 된 멤버의 모든의 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d44bd-129">지정된 메서드에 해당하는 <see cref="T:System.Reflection.MethodInfo" /> 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d44bd-130">찾을 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-130">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d44bd-131">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-131">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-132">지정된 검색 제약 조건 하에서 지정된 메서드에 해당하는 <see cref="T:System.Reflection.MethodInfo" /> 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="d44bd-133"><paramref name="bindingAttr" />에 지정된 검색 제약 조건과 메서드 이름이 일치하는, 메서드 정보가 포함된 <see cref="T:System.Reflection.MethodInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="d44bd-134">개체가 이름이 같은 여러 메서드를 구현하는 경우</span><span class="sxs-lookup"><span data-stu-id="d44bd-134">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d44bd-135">찾을 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-135">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d44bd-136">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-136">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="d44bd-137"><see cref="T:System.Reflection.Binder" />를 구현하는 개체로, 이 메서드와 관련된 속성을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="types"><span data-ttu-id="d44bd-138">오버로드된 메서드 중에서 선택하는 데 사용되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-138">An array used to choose among overloaded methods.</span></span></param>
        <param name="modifiers"><span data-ttu-id="d44bd-139">바인딩을 형식이 수정된 매개 변수 서명과 함께 작동하도록 만드는 데 사용되는 매개 변수 한정자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="d44bd-140">지정된 메서드에 해당하는 <see cref="T:System.Reflection.MethodInfo" /> 개체를 검색하며 <see cref="T:System.Type" /> 배열을 사용하여, 오버로드된 메서드 중에서 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span></span></summary>
        <returns><span data-ttu-id="d44bd-141">지정된 모든 매개 변수를 충족하는 요청된 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-141">The requested method that matches all the specified parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-142">반환 값은 메서드 이름을 기준으로 일치 <xref:System.Reflection.BindingFlags> 열거형 멤버에 의해 지정 된 형식 변환의 종류를 `binder` 매개 변수, 오버 로드 및 <xref:System.Reflection.ParameterInfo> 메서드의 시그니처를 설명 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="d44bd-143">개체가 이름이 같은 여러 메서드를 구현하는 경우</span><span class="sxs-lookup"><span data-stu-id="d44bd-143">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="d44bd-144">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-144">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-145">모든 공용 메서드나 현재 클래스의 모든 메서드가 포함된 <see cref="T:System.Reflection.MethodInfo" /> 개체의 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span></span></summary>
        <returns><span data-ttu-id="d44bd-146"><paramref name="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 이 리플렉션 개체에 대해 정의된 모든 메서드가 포함된 <see cref="T:System.Reflection.MethodInfo" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-147">public이 아닌 특성 `bindingAttr` 사실은 public 메서드 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="d44bd-148">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-148">The binding attribute used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-149">모든 공용 속성이나 현재 클래스의 모든 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체의 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span></span></summary>
        <returns><span data-ttu-id="d44bd-150">리플렉션 개체에 정의된 모든 속성에 대한 <see cref="T:System.Reflection.PropertyInfo" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d44bd-151">지정된 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d44bd-152">찾으려는 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-152">The name of the property to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d44bd-153">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-153">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="d44bd-154">지정된 검색 제약 조건에 지정된 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="d44bd-155"><paramref name="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 찾은 속성에 대한 <see cref="T:System.Reflection.PropertyInfo" /> 개체입니다. 해당 속성을 찾지 못한 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="d44bd-156">개체가 이름이 같은 여러 필드를 구현하는 경우</span><span class="sxs-lookup"><span data-stu-id="d44bd-156">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d44bd-157">찾을 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-157">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d44bd-158">검색을 제어하는 데 사용되는 바인딩 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-158">The binding attribute used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="d44bd-159"><see cref="T:System.Reflection.Binder" />를 구현하는 개체로, 이 메서드와 관련된 속성을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="returnType"><span data-ttu-id="d44bd-160">속성의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-160">The type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="d44bd-161">같은 이름을 가진 오버로드된 메서드 중에서 선택하는 데 사용되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-161">An array used to choose among overloaded methods with the same name.</span></span></param>
        <param name="modifiers"><span data-ttu-id="d44bd-162">매개 변수 한정자를 선택하는 데 사용되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-162">An array used to choose the parameter modifiers.</span></span></param>
        <summary><span data-ttu-id="d44bd-163">지정된 검색 제약 조건에 따라 지정된 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="d44bd-164">지정된 이름을 가진 속성을 이 리플렉션 개체에서 찾은 경우 찾은 속성에 대한 <see cref="T:System.Reflection.PropertyInfo" /> 개체입니다. 해당 속성을 찾지 못한 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-165">이 메서드는 검색을 <xref:System.Reflection.PropertyInfo> 지정 된 검색 제약 조건에 지정 된 속성에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="d44bd-166">형식 배열의 오버 로드 된 메서드 중에서 선택 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d44bd-167">찾을 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-167">The name of the member to find.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="d44bd-168"><see cref="T:System.Reflection.BindingFlags" /> 호출 특성 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span></span> <span data-ttu-id="d44bd-169"><paramref name="invokeAttr" /> 매개 변수는 생성자, 메서드, 속성 또는 필드일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-169">The <paramref name="invokeAttr" /> parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="d44bd-170">적합한 호출 특성을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-170">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="d44bd-171">빈 문자열("")을 멤버의 이름으로 전달하여 클래스의 기본 멤버를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span></param>
        <param name="binder"><span data-ttu-id="d44bd-172"><see cref="T:System.Reflection.BindingFlags" /> 비트 플래그 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span></span> <span data-ttu-id="d44bd-173">이 메서드와 관련된 속성이 포함된 <see cref="T:System.Reflection.Binder" />를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="target"><span data-ttu-id="d44bd-174">지정한 멤버를 호출할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-174">The object on which to invoke the specified member.</span></span> <span data-ttu-id="d44bd-175">이 매개 변수는 정적 멤버에 대해서는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-175">This parameter is ignored for static members.</span></span></param>
        <param name="args"><span data-ttu-id="d44bd-176">호출되는 멤버에 대한 매개 변수의 개수, 순서 및 형식이 포함된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="d44bd-177">매개 변수가 없는 경우 이 배열은 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-177">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="d44bd-178"><see cref="T:System.Reflection.ParameterModifier" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span></span> <span data-ttu-id="d44bd-179">이 배열의 길이는 메타데이터에 있는 호출된 멤버의 인수 특성을 나타내는 <paramref name="args" /> 매개 변수의 길이와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-179">This array has the same length as the <paramref name="args" /> parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="d44bd-180">매개 변수에는 <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, <see langword="pdHasDefault" />와 같은 특성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span></span> <span data-ttu-id="d44bd-181">이러한 특성은 각각 [In], [Out], [retval], [optional] 및 기본 매개 변수를 나타내며</span><span class="sxs-lookup"><span data-stu-id="d44bd-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span> <span data-ttu-id="d44bd-182">다양한 상호 운용성 서비스에서 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-182">These attributes are used by various interoperability services.</span></span></param>
        <param name="culture"><span data-ttu-id="d44bd-183">형식의 강제 변환을 제어하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="d44bd-184">예를 들어, 1000은 문화권마다 다르게 표현되므로 <paramref name="culture" />는 1000을 나타내는 <see langword="String" />을 <see langword="Double" /> 값으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-184">For example, <paramref name="culture" /> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="d44bd-185">이 매개 변수가 <see langword="null" />이면 현재 스레드에 대한 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="d44bd-186">매개 변수의 <see langword="String" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-186">A <see langword="String" /> array of parameters.</span></span></param>
        <summary><span data-ttu-id="d44bd-187">지정된 멤버를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-187">Invokes a specified member.</span></span></summary>
        <returns><span data-ttu-id="d44bd-188">지정된 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-188">The specified member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d44bd-189">호출해야 할 메서드에 액세스할 수 있어야 하며 이 메서드가 지정된 바인더 및 호출 특성의 제약 조건 하에서 지정된 인수 목록과 가장 구체적으로 일치하는 항목을 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="d44bd-190">메서드는 메서드 선언에서 매개 변수 수가 지정 된 인수 목록의 인수 수에 도달 하 고 각 인수의 형식을 매개 변수의 형식 바인더를 통해 변환할 수 있으면 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d44bd-191">매개 변수 한정자 배열에 전달 된 <xref:System.Reflection.IReflect.InvokeMember%2A> 메서드는 단일 매개 변수 한정자를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="d44bd-192">Com에 노출 될 때 참조로 전달 해야 하는 인수를 결정할 때 간주 되는 첫 번째 매개 변수 한정자만</span><span class="sxs-lookup"><span data-stu-id="d44bd-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="d44bd-193">바인더가 요청 바인딩 형식에 따라 모든 일치 하는 메서드를 찾습니다 (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>등).</span><span class="sxs-lookup"><span data-stu-id="d44bd-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="d44bd-194">메서드의 집합 이름, 인수 개수를 및 바인더에서 정의 된 검색 한정자 집합으로 필터링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="d44bd-195">메서드를 선택한 후는 호출 및 내게 필요한 옵션은이 시점에서 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="d44bd-196">검색은 메서드 집합 메서드를 사용 하 여 연결 된 내게 필요한 옵션 특성에 따라 검색을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="d44bd-197"><xref:System.Reflection.Binder.BindToMethod%2A> 호출할 메서드를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="d44bd-198">기본 바인더를 가장 구체적으로 일치를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="d44bd-199">완전히 신뢰할 수 있는 코드에 대 한 액세스 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="d44bd-200">즉, 개인 생성자, 메서드, 필드 및 속성 액세스 하 고 수 코드를 완전히 신뢰할 수 있는 경우 리플렉션을 통해 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d44bd-201">다음 예제에서는 값을 가져오는 <xref:System.DateTime.Now%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d44bd-202"><see langword="set" /> 필드에 대해 두 개 이상의 인수가 지정되는 경우</span><span class="sxs-lookup"><span data-stu-id="d44bd-202">More than one argument is specified for a field <see langword="set" />.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="d44bd-203">필드 또는 속성을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-203">The field or property cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d44bd-204">메서드를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d44bd-204">The method cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d44bd-205">필요한 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 없이 전용 멤버가 호출되는 경우</span><span class="sxs-lookup"><span data-stu-id="d44bd-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d44bd-206"><see cref="T:System.Reflection.IReflect" /> 개체를 나타내는 내부 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></summary>
        <value><span data-ttu-id="d44bd-207"><see cref="T:System.Reflection.IReflect" /> 개체를 나타내는 내부 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d44bd-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>