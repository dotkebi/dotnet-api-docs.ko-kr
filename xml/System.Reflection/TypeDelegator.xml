<Type Name="TypeDelegator" FullName="System.Reflection.TypeDelegator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="82f9097a57fa351e7a537be90e5142d681b574ef" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57915675" /></Metadata><TypeSignature Language="C#" Value="public class TypeDelegator : System.Reflection.TypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeDelegator extends System.Reflection.TypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeDelegator" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeDelegator&#xA;Inherits TypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDelegator : System::Reflection::TypeInfo" />
  <TypeSignature Language="F#" Value="type TypeDelegator = class&#xA;    inherit TypeInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.TypeInfo</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Type</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2a941-101"><see cref="T:System.Type" /> 개체를 래핑하고 메서드를 해당 <see langword="Type" />에 위임시킵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-101">Wraps a <see cref="T:System.Type" /> object and delegates methods to that <see langword="Type" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-102">이 형식에서 파생 하 고, 사용자 지정을 제공 해야 하는 멤버만 plus 프로그램에서 요구 되며에서 이미 구현 하지는 멤버를 재정의 <xref:System.Reflection.TypeDelegator>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-102">Derive from this type and override only those members you have to provide customization in, plus any members that are required by your program and not already implemented by <xref:System.Reflection.TypeDelegator>.</span></span>  
  
 <span data-ttu-id="2a941-103"><xref:System.Reflection.TypeDelegator> 파생 <xref:System.Type?displayProperty=nameWithType> 대부분의 속성 및 메서드를 구현 하 고 <xref:System.Type>입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-103"><xref:System.Reflection.TypeDelegator> derives from <xref:System.Type?displayProperty=nameWithType> and implements most of the properties and methods of <xref:System.Type>.</span></span> <span data-ttu-id="2a941-104">를 구현 하는 각 멤버에 대해 <xref:System.Reflection.TypeDelegator> 내부의 해당 멤버에 자동으로 위임 <xref:System.Type> 생성자에 인수로 제공 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-104">For each member it implements, <xref:System.Reflection.TypeDelegator> automatically delegates to the corresponding member of an internal <xref:System.Type> object, which is supplied as an argument to the constructor.</span></span> <span data-ttu-id="2a941-105">이 내부 <xref:System.Type> 개체에서 클래스 파생에 노출 되는 `protected` <xref:System.Reflection.TypeDelegator.typeImpl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-105">This internal <xref:System.Type> object is exposed to deriving classes by the `protected`<xref:System.Reflection.TypeDelegator.typeImpl> field.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a941-106">일부 구성원이 <xref:System.Reflection.TypeDelegator> 멤버 자체는 단순히에서 상속 하는 경우에 구현이 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-106">Some members of <xref:System.Reflection.TypeDelegator> have implementations even though the members themselves are simply inherited from <xref:System.Type>.</span></span> <span data-ttu-id="2a941-107">이러한 경우에는 구현이 제공 재정의 `protected` "Impl"로 끝나는 이름이 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-107">In these cases, the implementation is provided by an overridden `protected` method that has a name that ends in "Impl".</span></span> <span data-ttu-id="2a941-108">모든 오버 로드에 대 한 구현 예를 들어 합니다 <xref:System.Reflection.TypeDelegator.GetMethods%2A> 메서드는 제공 되며 재정의 된 <xref:System.Reflection.TypeDelegator.GetMethodImpl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2a941-108">For example, the implementation for all overloads of the <xref:System.Reflection.TypeDelegator.GetMethods%2A> method is supplied by the overridden <xref:System.Reflection.TypeDelegator.GetMethodImpl%2A> method.</span></span> <span data-ttu-id="2a941-109">와 같은 상속 된 속성에 대 한 구현을 <xref:System.Type.IsPublic%2A> 하 고 <xref:System.Type.IsNestedAssembly%2A> 제공 재정의 된 <xref:System.Reflection.TypeDelegator.GetAttributeFlagsImpl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2a941-109">The implementation for inherited properties such as <xref:System.Type.IsPublic%2A> and <xref:System.Type.IsNestedAssembly%2A> is provided by the overridden <xref:System.Reflection.TypeDelegator.GetAttributeFlagsImpl%2A> method.</span></span>  
  
 <span data-ttu-id="2a941-110">클래스를 파생 하는 public 생성자를 제공할 수 있습니다는 <xref:System.Type> 매개 변수로 받고 해당 개체를 전달 하면 개체를 <xref:System.Reflection.TypeDelegator.%23ctor%28System.Type%29> 생성자 내부 설정할 수 <xref:System.Type> 다른 방법으로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-110">Deriving classes can provide a public constructor that takes a <xref:System.Type> object as its parameter and simply passes that object to the <xref:System.Reflection.TypeDelegator.%23ctor%28System.Type%29> constructor, or can set the internal <xref:System.Type> object in some other way.</span></span>  
  
 <span data-ttu-id="2a941-111">파생 클래스에서 구현 하지 않는 멤버를 사용 하는 경우 <xref:System.Reflection.TypeDelegator>, 해당 멤버를 재정의 하 고 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-111">If a deriving class uses a member that is not implemented by <xref:System.Reflection.TypeDelegator>, it must override that member and provide an implementation.</span></span> <span data-ttu-id="2a941-112">내부에 해당 하는 멤버를 호출 하는 가장 간단한 구현을 <xref:System.Type> 에서 노출 된 개체는 <xref:System.Reflection.TypeDelegator.typeImpl> 필드 있지만 응용 프로그램에 필요한 구현을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-112">The simplest implementation is to call the corresponding member on the internal <xref:System.Type> object exposed by the <xref:System.Reflection.TypeDelegator.typeImpl> field, but you can provide any implementation your application requires.</span></span> <span data-ttu-id="2a941-113">응용 프로그램 호출 하는 라이브러리 함수 또는 응용 프로그램에서 사용 하지 않는 경우 이러한 멤버를 재정의할 필요는 없습니다 (예를 들어 여는 <xref:System.CodeDom.CodeTypeReference.%23ctor%28System.Type%29?displayProperty=nameWithType> 생성자).</span><span class="sxs-lookup"><span data-stu-id="2a941-113">It is not necessary to override these members if they are not used by your application or by library functions your application calls (for example, by the <xref:System.CodeDom.CodeTypeReference.%23ctor%28System.Type%29?displayProperty=nameWithType> constructor).</span></span>  
  
 <span data-ttu-id="2a941-114">다음 가상 메서드 (`Overridable` Visual Basic의 메서드)의 <xref:System.Type> 에서 구현 되지 <xref:System.Reflection.TypeDelegator>: <xref:System.Type.MakeGenericType%2A>, <xref:System.Type.GetGenericTypeDefinition%2A>를 <xref:System.Type.GetGenericArguments%2A>, <xref:System.Type.GetGenericParameterConstraints%2A>를 <xref:System.Type.MakeArrayType%2A>, <xref:System.Type.MakeByRefType%2A>, <xref:System.Type.MakePointerType%2A> , <xref:System.Type.GetEnumNames%2A>, <xref:System.Type.GetEnumValues%2A>, <xref:System.Type.GetEnumUnderlyingType%2A>, <xref:System.Type.GetTypeCodeImpl%2A>, <xref:System.Type.IsEnumDefined%2A>, <xref:System.Type.IsEquivalentTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="2a941-114">The following virtual methods (`Overridable` methods in Visual Basic) of <xref:System.Type> are not implemented by <xref:System.Reflection.TypeDelegator>: <xref:System.Type.MakeGenericType%2A>, <xref:System.Type.GetGenericTypeDefinition%2A>, <xref:System.Type.GetGenericArguments%2A>, <xref:System.Type.GetGenericParameterConstraints%2A>, <xref:System.Type.MakeArrayType%2A>, <xref:System.Type.MakeByRefType%2A>, <xref:System.Type.MakePointerType%2A>, <xref:System.Type.GetEnumNames%2A>, <xref:System.Type.GetEnumValues%2A>, <xref:System.Type.GetEnumUnderlyingType%2A>, <xref:System.Type.GetTypeCodeImpl%2A>, <xref:System.Type.IsEnumDefined%2A>, <xref:System.Type.IsEquivalentTo%2A>.</span></span>  
  
 <span data-ttu-id="2a941-115">다음 가상 속성 (`Overridable` Visual Basic의 속성)의 <xref:System.Type> 에서 구현 되지 <xref:System.Reflection.TypeDelegator>: <xref:System.Type.IsGenericType%2A>, <xref:System.Type.IsGenericTypeDefinition%2A>를 <xref:System.Type.IsGenericParameter%2A>, <xref:System.Type.ContainsGenericParameters%2A>를 <xref:System.Type.DeclaringMethod%2A>를 <xref:System.Type.GenericParameterAttributes%2A>, <xref:System.Type.GenericParameterPosition%2A> , <xref:System.Type.IsSecurityCritical%2A>, <xref:System.Type.IsSecuritySafeCritical%2A>, <xref:System.Type.IsSecurityTransparent%2A>.</span><span class="sxs-lookup"><span data-stu-id="2a941-115">The following virtual properties (`Overridable` properties in Visual Basic) of <xref:System.Type> are not implemented by <xref:System.Reflection.TypeDelegator>: <xref:System.Type.IsGenericType%2A>, <xref:System.Type.IsGenericTypeDefinition%2A>, <xref:System.Type.IsGenericParameter%2A>, <xref:System.Type.ContainsGenericParameters%2A>, <xref:System.Type.DeclaringMethod%2A>, <xref:System.Type.GenericParameterAttributes%2A>, <xref:System.Type.GenericParameterPosition%2A>, <xref:System.Type.IsSecurityCritical%2A>, <xref:System.Type.IsSecuritySafeCritical%2A>, <xref:System.Type.IsSecurityTransparent%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a941-116"><see cref="T:System.Reflection.TypeDelegator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-116">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDelegator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDelegator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-117">기본 속성을 사용하여 <see cref="T:System.Reflection.TypeDelegator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-117">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDelegator (Type delegatingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type delegatingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (delegatingType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeDelegator(Type ^ delegatingType);" />
      <MemberSignature Language="F#" Value="new System.Reflection.TypeDelegator : Type -&gt; System.Reflection.TypeDelegator" Usage="new System.Reflection.TypeDelegator delegatingType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="delegatingType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="delegatingType"><span data-ttu-id="2a941-118">호출을 개체의 메서드에 캡슐화시키는 <see cref="T:System.Type" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-118">The instance of the class <see cref="T:System.Type" /> that encapsulates the call to the method of an object.</span></span></param>
        <summary><span data-ttu-id="2a941-119">캡슐화 인스턴스를 지정하여 <see cref="T:System.Reflection.TypeDelegator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-119">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class specifying the encapsulating instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-120">이 생성자를 기반으로 대리자를 생성 하는 클래스에서 호출을 `Type` 메서드를 정의 하는 클래스에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-120">This constructor is called from a class to generate a delegate based upon the `Type` object for the class defining the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a941-121"><paramref name="delegatingType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-121"><paramref name="delegatingType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Reflection.TypeDelegator.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-122">구현된 형식의 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-122">Gets the assembly of the implemented type.</span></span></summary>
        <value><span data-ttu-id="2a941-123">구현된 형식의 어셈블리를 나타내는 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-123">An <see cref="T:System.Reflection.Assembly" /> object representing the assembly of the implemented type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-124">어셈블리는 공용 언어 런타임에서 배포 단위입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-124">Assemblies are the deployment units in the common language runtime.</span></span> <span data-ttu-id="2a941-125">어셈블리는 요청을 해결 하는 것에 대 한 네임 스페이스를 설정 하 고 리소스 외부적으로 노출 되 고 어셈블리 내 에서만 액세스할 수 있는 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-125">Assemblies establish the namespace for resolving requests and determine which resources are exposed externally and which are accessible from within the assembly.</span></span> <span data-ttu-id="2a941-126">공용 언어 런타임 확인 하 고 실행 중인 모든 개체에 대 한 어셈블리를 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-126">The common language runtime can determine and locate the assembly for any running object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public override string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyQualifiedName : string" Usage="System.Reflection.TypeDelegator.AssemblyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-127">어셈블리의 정규화된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-127">Gets the assembly's fully qualified name.</span></span></summary>
        <value><span data-ttu-id="2a941-128"><see langword="String" />에는 어셈블리의 정규화된 이름이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-128">A <see langword="String" /> containing the assembly's fully qualified name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BaseType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : Type" Usage="System.Reflection.TypeDelegator.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-129">현재 형식에 사용할 기준 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-129">Gets the base type for the current type.</span></span></summary>
        <value><span data-ttu-id="2a941-130">형식에 사용할 기준 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-130">The base type for a type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-131">기본 형식은이 형식이 직접 상속 하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-131">The base type is the type from which this type directly inherits.</span></span> <span data-ttu-id="2a941-132">이후를 <xref:System.Object> 클래스 유형은 다른 모든 종류의 궁극적인 기본 클래스 이며 기본 형식이 없는 유일한 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-132">Since the <xref:System.Object> class type is the ultimate base class of all the other types, it is the only type that does not have a base type.</span></span> <span data-ttu-id="2a941-133">이 예에서 `null` 의 기본 형식으로 반환 됩니다는 `Object` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-133">In this case, `null` is returned as the base type of the `Object` type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.TypeDelegator.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-134">구현된 형식의 정규화된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-134">Gets the fully qualified name of the implemented type.</span></span></summary>
        <value><span data-ttu-id="2a941-135">정규화된 형식 이름이 있는 <see langword="String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-135">A <see langword="String" /> containing the type's fully qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-136">현재는 정규화 된 이름을 포함 하는 문자열 `TypeDelegator`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-136">A string containing the fully qualified name of the current `TypeDelegator`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeFlagsImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetAttributeFlagsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAttributeFlagsImpl () As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::TypeAttributes GetAttributeFlagsImpl();" />
      <MemberSignature Language="F#" Value="override this.GetAttributeFlagsImpl : unit -&gt; System.Reflection.TypeAttributes" Usage="typeDelegator.GetAttributeFlagsImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-137"><see langword="TypeDelegator" />에 할당된 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-137">Gets the attributes assigned to the <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-138">구현 특성 플래그를 나타내는 <see langword="TypeAttributes" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-138">A <see langword="TypeAttributes" /> object representing the implementation attribute flags.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-139">확인 하려면이 메서드를 사용할 수는 `TypeDelegator` 추상, 공용 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-139">This method can be used to determine if the `TypeDelegator` is abstract, public, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.TypeAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GetConstructorImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ConstructorInfo GetConstructorImpl(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ConstructorInfo ^ GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetConstructorImpl : System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.ConstructorInfo" Usage="typeDelegator.GetConstructorImpl (bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-140">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-140">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-141">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-141">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="2a941-142">리플렉션을 통해 바인딩, 인수 형식의 강제 변환, 멤버 호출 및 <see langword="MemberInfo" /> 개체의 검색을 가능하게 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-142">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="2a941-143"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-143">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="callConvention"><span data-ttu-id="2a941-144">호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-144">The calling conventions.</span></span></param>
        <param name="types"><span data-ttu-id="2a941-145">매개 변수 개수, 순서, 형식에 대한 목록이 들어 있는 형식 <see langword="Type" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-145">An array of type <see langword="Type" /> containing a list of the parameter number, order, and types.</span></span> <span data-ttu-id="2a941-146">형식은 <see langword="null" />이 될 수 없습니다. 적당한 <see langword="GetMethod" /> 메서드나 빈 배열을 사용하여 매개 변수 없이 메서드를 검색하십시오.</span><span class="sxs-lookup"><span data-stu-id="2a941-146">Types cannot be <see langword="null" />; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="2a941-147">요소가 가져올 메서드의 매개 변수에 연관된 특성을 나타내는 <paramref name="types" /> 배열과 길이가 같은 형식 <see langword="ParameterModifier" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-147">An array of type <see langword="ParameterModifier" /> having the same length as the <paramref name="types" /> array, whose elements represent the attributes associated with the parameters of the method to get.</span></span></param>
        <summary><span data-ttu-id="2a941-148"><see langword="TypeDelegator" />를 구현한 생성자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-148">Gets the constructor that implemented the <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-149">지정한 기준을 만족하는 메서드에 대한 <see langword="ConstructorInfo" /> 개체 또는 일치하지 않을 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-149">A <see langword="ConstructorInfo" /> object for the method that matches the specified criteria, or <see langword="null" /> if a match cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-150">`callConvention` 매개 변수를 진입점에 대 한 호출 규칙을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-150">The `callConvention` parameter indicates the calling convention for the entry point.</span></span> <span data-ttu-id="2a941-151">없는 호출 규칙 지정 된 경우 기본값 <xref:System.Reflection.CallingConventions> 의 값 `Standard` 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-151">If no calling convention is specified, a default <xref:System.Reflection.CallingConventions> value of `Standard` is used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetConstructors : System.Reflection.BindingFlags -&gt; System.Reflection.ConstructorInfo[]" Usage="typeDelegator.GetConstructors bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-152">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-152">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-153">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-153">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-154">현재 <see cref="T:System.Reflection.ConstructorInfo" />로 래핑된 형식에 대해 정의된 생성자를 나타내는 <see cref="T:System.Reflection.TypeDelegator" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-154">Returns an array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing constructors defined for the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-155">이 클래스에 대해 정의된 지정한 생성자가 포함된 형식 <see langword="ConstructorInfo" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-155">An array of type <see langword="ConstructorInfo" /> containing the specified constructors defined for this class.</span></span> <span data-ttu-id="2a941-156">생성자가 정의되지 않은 경우 빈 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-156">If no constructors are defined, an empty array is returned.</span></span> <span data-ttu-id="2a941-157">지정한 매개 변수의 값에 따라 공용 생성자만 또는 공용 및 공용이 아닌 생성자가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-157">Depending on the value of a specified parameter, only public constructors or both public and non-public constructors will be returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-158">클래스 이니셜라이저를 통해서만 사용할 수 `GetMember`, `GetMembers`를 `FindMembers`, 및 `GetConstructors`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-158">Class initializers are available only through `GetMember`, `GetMembers`, `FindMembers`, and `GetConstructors`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a941-159">이 형식에 대해 정의된 모든 사용자 지정 특성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-159">Returns all the custom attributes defined for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="typeDelegator.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="2a941-160">이 형식의 상속 관계를 검색하여 특성을 찾을지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-160">Specifies whether to search this type's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="2a941-161">이 형식에 대해 정의된 모든 사용자 지정 특성을 반환하며 이 형식의 상속 관계를 검색할지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-161">Returns all the custom attributes defined for this type, specifying whether to search the type's inheritance chain.</span></span></summary>
        <returns><span data-ttu-id="2a941-162">이 형식에 대해 정의된 모든 사용자 지정 특성이 포함된 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-162">An array of objects containing all the custom attributes defined for this type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2a941-163">사용자 지정 특성 형식을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-163">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="typeDelegator.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2a941-164">형식으로 식별된 사용자 지정 특성의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-164">An array of custom attributes identified by type.</span></span></param>
        <param name="inherit"><span data-ttu-id="2a941-165">이 형식의 상속 관계를 검색하여 특성을 찾을지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-165">Specifies whether to search this type's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="2a941-166">형식별로 식별된 사용자 지정 특성의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-166">Returns an array of custom attributes identified by type.</span></span></summary>
        <returns><span data-ttu-id="2a941-167"><paramref name="attributeType" /> 매개 변수에 일치하는 이 형식 내에 정의된 사용자 지정 특성이 포함된 개체의 배열. 이 형식의 상속 관계를 검색할지 여부도 지정합니다. 또는 이 형식에 사용자 지정 특성이 정의되어 있지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-167">An array of objects containing the custom attributes defined in this type that match the <paramref name="attributeType" /> parameter, specifying whether to search the type's inheritance chain, or <see langword="null" /> if no custom attributes are defined on this type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2a941-168"><paramref name="attributeType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-168"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2a941-169">사용자 지정 특성 형식을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-169">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public override Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetElementType();" />
      <MemberSignature Language="F#" Value="override this.GetElementType : unit -&gt; Type" Usage="typeDelegator.GetElementType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-170">현재 배열, 포인터 또는 ByRef에 의해 포함되거나 참조되는 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-170">Returns the <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or ByRef.</span></span></summary>
        <returns><span data-ttu-id="2a941-171">현재 배열, 포인터, <see langword="ByRef" />에 의해 포함되거나 참조되는 개체의 <see cref="T:System.Type" />입니다. 또는 현재 <see cref="T:System.Type" />이 배열, 포인터, <see langword="null" />에 없으면 <see langword="ByRef" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-171">The <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or <see langword="ByRef" />, or <see langword="null" /> if the current <see cref="T:System.Type" /> is not an array, a pointer or a <see langword="ByRef" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetEvent : string * System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo" Usage="typeDelegator.GetEvent (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-172">가져올 이벤트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-172">The name of the event to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2a941-173">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-173">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-174">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-174">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-175">지정한 이벤트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-175">Returns the specified event.</span></span></summary>
        <returns><span data-ttu-id="2a941-176">이 형식에 의해 지정한 이름으로 선언 또는 상속된 이벤트를 나타내는 <see cref="T:System.Reflection.EventInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-176">An <see cref="T:System.Reflection.EventInfo" /> object representing the event declared or inherited by this type with the specified name.</span></span> <span data-ttu-id="2a941-177">이런 이벤트가 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-177">This method returns <see langword="null" /> if no such event is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-178">경우 `bindingAttr` 됩니다 <xref:System.Reflection.BindingFlags>.`IgnoreCase`의 케이스는 `name` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-178">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.`IgnoreCase`, the case of the `name` parameter is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a941-179"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-179">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a941-180">현재 <see langword="TypeDelegator" />에 의해 선언되거나 상속되는 모든 공용 이벤트를 나타내는 <see cref="T:System.Reflection.EventInfo" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-180">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events declared or inherited by the current <see langword="TypeDelegator" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberSignature Language="F#" Value="override this.GetEvents : unit -&gt; System.Reflection.EventInfo[]" Usage="typeDelegator.GetEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-181">현재 <see langword="TypeDelegator" />에 의해 선언되거나 상속되는 모든 공용 이벤트를 나타내는 <see cref="T:System.Reflection.EventInfo" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-181">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events declared or inherited by the current <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-182">현재 형식에 의해 선언되거나 상속되는 모든 이벤트를 포함하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-182">An array that contains all the events declared or inherited by the current type.</span></span> <span data-ttu-id="2a941-183">이러한 이벤트가 없으면 빈 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-183">If there are no events, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetEvents : System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo[]" Usage="typeDelegator.GetEvents bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-184">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-184">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-185">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-185">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-186">현재 <see langword="TypeDelegator" />에 의해 선언되거나 상속되는 <paramref name="bindingAttr" />로 지정한 지정된 이벤트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-186">Returns the events specified in <paramref name="bindingAttr" /> that are declared or inherited by the current <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-187"><paramref name="bindingAttr" />에 지정된 이벤트가 포함된 형식 <see langword="EventInfo" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-187">An array of type <see langword="EventInfo" /> containing the events specified in <paramref name="bindingAttr" />.</span></span> <span data-ttu-id="2a941-188">이러한 이벤트가 없으면 빈 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-188">If there are no events, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="typeDelegator.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-189">찾을 필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-189">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2a941-190">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-190">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-191">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-191">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-192">지정한 이름을 사용하여 필드를 나타내는 <see cref="T:System.Reflection.FieldInfo" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-192">Returns a <see cref="T:System.Reflection.FieldInfo" /> object representing the field with the specified name.</span></span></summary>
        <returns><span data-ttu-id="2a941-193">지정한 이름을 사용하여 이 <see langword="FieldInfo" />에 의해 선언되거나 상속된 필드를 나타내는 <see langword="TypeDelegator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-193">A <see langword="FieldInfo" /> object representing the field declared or inherited by this <see langword="TypeDelegator" /> with the specified name.</span></span> <span data-ttu-id="2a941-194">이와 같은 필드가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-194">Returns <see langword="null" /> if no such field is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-195">사용 된 `bindingAttr` 의 <xref:System.Reflection.BindingFlags>합니다. 모든 public 및 public이 아닌 필드를 반환할 nonPublic 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-195">Use a `bindingAttr` of <xref:System.Reflection.BindingFlags>.NonPublic to return all public and nonpublic fields.</span></span> <span data-ttu-id="2a941-196">사용 하 여 `BindingFlags.IgnoreCase` 검색은 기본적으로 대/소문자 구분 필드는 대/소문자를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-196">Use `BindingFlags.IgnoreCase` to ignore the case of the fields, as the search is case-sensitive by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a941-197"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-197">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="typeDelegator.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-198">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-198">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-199">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-199">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-200">현재 <see cref="T:System.Reflection.FieldInfo" />로 래핑된 형식에 대해 정의된 데이터 필드를 나타내는 <see cref="T:System.Reflection.TypeDelegator" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-200">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects representing the data fields defined for the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-201">현재 <see langword="FieldInfo" />에 의해 선언된 또는 상속된 필드가 포함된 형식 <see langword="TypeDelegator" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-201">An array of type <see langword="FieldInfo" /> containing the fields declared or inherited by the current <see langword="TypeDelegator" />.</span></span> <span data-ttu-id="2a941-202">일치되는 필드가 없으면 빈 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-202">An empty array is returned if there are no matched fields.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-203"><xref:System.Reflection.TypeDelegator.GetFields%2A> 메서드 반환 하지 않습니다 필드를 특정 순서로 같은 알파벳 또는 선언 순서입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-203">The <xref:System.Reflection.TypeDelegator.GetFields%2A> method does not return fields in a particular order, such as alphabetical or declaration order.</span></span> <span data-ttu-id="2a941-204">이 순서는 달라질 수 있으므로 코드 필드가 반환 되는 순서에 종속 되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-204">Your code must not depend on the order in which fields are returned, because that order can vary.</span></span>  
  
 <span data-ttu-id="2a941-205">사용 된 `bindingAttr` 의 <xref:System.Reflection.BindingFlags>합니다. 모든 public 및 public이 아닌 필드를 반환할 nonPublic 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-205">Use a `bindingAttr` of <xref:System.Reflection.BindingFlags>.NonPublic to return all public and nonpublic fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public override Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetInterface : string * bool -&gt; Type" Usage="typeDelegator.GetInterface (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-206">현재 클래스에 의해 구현된 인터페이스의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-206">The fully qualified name of the interface implemented by the current class.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2a941-207">대소문자가 구분되면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-207"><see langword="true" /> if the case is to be ignored; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2a941-208">현재 <see cref="T:System.Reflection.TypeDelegator" />로 래핑된 형식에서 구현하는 지정된 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-208">Returns the specified interface implemented by the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-209">지정한 이름과 인치하는 정규화된 이름을 사용하여 현재 클래스에 의해 직접 또는 간접적으로 구현된 인터페이스를 나타내는 <see langword="Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-209">A <see langword="Type" /> object representing the interface implemented (directly or indirectly) by the current class with the fully qualified name matching the specified name.</span></span> <span data-ttu-id="2a941-210">일치되는 인터페이스 이름이 없으면 Null이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-210">If no interface that matches name is found, null is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a941-211"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-211">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="override this.GetInterfaceMap : Type -&gt; System.Reflection.InterfaceMapping" Usage="typeDelegator.GetInterfaceMap interfaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType"><span data-ttu-id="2a941-212">매핑을 검색할 인터페이스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-212">The <see cref="T:System.Type" /> of the interface to retrieve a mapping of.</span></span></param>
        <summary><span data-ttu-id="2a941-213">지정된 인터페이스 형식에 대한 인터페이스 매핑을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-213">Returns an interface mapping for the specified interface type.</span></span></summary>
        <returns><span data-ttu-id="2a941-214"><paramref name="interfaceType" />에 대한 인터페이스 매핑을 나타내는 <see cref="T:System.Reflection.InterfaceMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-214">An <see cref="T:System.Reflection.InterfaceMapping" /> object representing the interface mapping for <paramref name="interfaceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-215">인터페이스 맵을 인터페이스 인터페이스를 구현 하는 클래스에 대 한 실제 메서드에 매핑되는 방법을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-215">The interface map denotes how an interface is mapped into the actual methods on a class that implements that interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.InterfaceMapping" />
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public override Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="override this.GetInterfaces : unit -&gt; Type[]" Usage="typeDelegator.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-216">현재 클래스와 기준 클래스에 구현된 모든 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-216">Returns all the interfaces implemented on the current class and its base classes.</span></span></summary>
        <returns><span data-ttu-id="2a941-217">현재 클래스와 기준 클래스에 구현된 모든 인터페이스가 포함된 형식 <see langword="Type" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-217">An array of type <see langword="Type" /> containing all the interfaces implemented on the current class and its base classes.</span></span> <span data-ttu-id="2a941-218">정의된 것이 없으면 빈 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-218">If none are defined, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeDelegator.GetMember (name, type, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-219">가져올 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-219">The name of the member to get.</span></span></param>
        <param name="type"><span data-ttu-id="2a941-220">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-220">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-221">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-221">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2a941-222">가져올 멤버의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-222">The type of members to get.</span></span></param>
        <summary><span data-ttu-id="2a941-223">지정한 <paramref name="name" /> , <paramref name="type" /> 및 <paramref name="bindingAttr" />으로 지정된 속성, 메서드, 생성자, 필드, 이벤트, 중첩 형식과 같은 멤버를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-223">Returns members (properties, methods, constructors, fields, events, and nested types) specified by the given <paramref name="name" />, <paramref name="type" />, and <paramref name="bindingAttr" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-224">지정한 조건을 만족하는 현재 클래스와 기준 클래스의 모든 멤버가 포함된 형식 <see langword="MemberInfo" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-224">An array of type <see langword="MemberInfo" /> containing all the members of the current class and its base class meeting the specified criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-225">하는 경우 `bindingAttr` 는 <xref:System.Reflection.BindingFlags>합니다. NonPublic 모든 멤버는 고려 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-225">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.NonPublic, all the members will be considered.</span></span> <span data-ttu-id="2a941-226">일치 하는 개체가 없으면 빈 배열이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-226">If there are no matches, an empty array is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a941-227"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-227">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeDelegator.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-228">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-228">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-229">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-229">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-230"><paramref name="bindingAttr" />으로 지정된 멤버를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-230">Returns members specified by <paramref name="bindingAttr" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-231"><paramref name="bindingAttr" /> 필터를 만족하는 현재 클래스와 기준 클래스의 모든 멤버가 포함된 형식 <see langword="MemberInfo" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-231">An array of type <see langword="MemberInfo" /> containing all the members of the current class and its base classes that meet the <paramref name="bindingAttr" /> filter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-232">하는 경우 `bindingAttr` 는 <xref:System.Reflection.BindingFlags>합니다. NonPublic 모든 멤버는 고려 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-232">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.NonPublic, all the members will be considered.</span></span> <span data-ttu-id="2a941-233">일치 하는 개체가 없으면 빈 배열이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-233">If there are no matches, an empty array is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="typeDelegator.GetMethodImpl (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-234">메서드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-234">The method name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2a941-235">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-235">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-236">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-236">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="2a941-237">리플렉션을 통해 바인딩, 인수 형식의 강제 변환, 멤버 호출 및 <see langword="MemberInfo" /> 개체의 검색을 가능하게 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-237">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="2a941-238"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-238">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="callConvention"><span data-ttu-id="2a941-239">호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-239">The calling conventions.</span></span></param>
        <param name="types"><span data-ttu-id="2a941-240">매개 변수 개수, 순서, 형식에 대한 목록이 들어 있는 형식 <see langword="Type" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-240">An array of type <see langword="Type" /> containing a list of the parameter number, order, and types.</span></span> <span data-ttu-id="2a941-241">형식은 <see langword="null" />이 될 수 없습니다. 적당한 <see langword="GetMethod" /> 메서드나 빈 배열을 사용하여 매개 변수 없이 메서드를 검색하십시오.</span><span class="sxs-lookup"><span data-stu-id="2a941-241">Types cannot be <see langword="null" />; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="2a941-242">요소가 가져올 메서드의 매개 변수에 연관된 특성을 나타내는 <paramref name="types" /> 배열과 길이가 같은 형식 <see langword="ParameterModifier" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-242">An array of type <see langword="ParameterModifier" /> having the same length as the <paramref name="types" /> array, whose elements represent the attributes associated with the parameters of the method to get.</span></span></param>
        <summary><span data-ttu-id="2a941-243">지정된 인수 형식 및 한정자와 일치하는 매개 변수를 가진 지정된 메서드를 지정된 바인딩 제약 조건과 지정된 호출 규칙으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-243">Searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span></summary>
        <returns><span data-ttu-id="2a941-244">지정한 조건을 만족하는 구현 메서드에 대한 <see langword="MethodInfoInfo" /> 개체 또는 일치하는 내용이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-244">A <see langword="MethodInfoInfo" /> object for the implementation method that matches the specified criteria, or <see langword="null" /> if a match cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-245">`callConvention` 매개 변수를 진입점에 대 한 호출 규칙을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-245">The `callConvention` parameter indicates the calling convention for the entry point.</span></span> <span data-ttu-id="2a941-246">없으면 <xref:System.Reflection.CallingConventions> 지정 된 기본값 `CallingConventions` 의 값 `Standard` 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-246">If no <xref:System.Reflection.CallingConventions> is specified, a default `CallingConventions` value of `Standard` is used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="typeDelegator.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-247">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-247">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-248">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-248">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-249">현재 <see cref="T:System.Reflection.MethodInfo" />로 래핑된 형식의 지정한 메서드를 나타내는 <see cref="T:System.Reflection.TypeDelegator" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-249">Returns an array of <see cref="T:System.Reflection.MethodInfo" /> objects representing specified methods of the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-250">이 <see langword="MethodInfo" />에 정의된 메서드를 나타내는 <see langword="TypeDelegator" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-250">An array of <see langword="MethodInfo" /> objects representing the methods defined on this <see langword="TypeDelegator" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetNestedType : string * System.Reflection.BindingFlags -&gt; Type" Usage="typeDelegator.GetNestedType (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-251">중첩된 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-251">The nested type's name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2a941-252">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-252">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-253">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-253">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-254">현재 <see cref="T:System.Reflection.TypeDelegator" />가 나타내는 형식에 의해 선언되거나 상속되는 <paramref name="name" />에서 <paramref name="bindingAttr" />이 지정하는 중첩 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-254">Returns a nested type specified by <paramref name="name" /> and in <paramref name="bindingAttr" /> that are declared or inherited by the type represented by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-255">중첩된 형식을 나타내는 <see langword="Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-255">A <see langword="Type" /> object representing the nested type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a941-256"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-256">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetNestedTypes : System.Reflection.BindingFlags -&gt; Type[]" Usage="typeDelegator.GetNestedTypes bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-257">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-257">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-258">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-258">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-259">현재 <see cref="T:System.Reflection.TypeDelegator" />로 래핑된 형식에 의해 선언되거나 상속되는 <paramref name="bindingAttr" />에 지정된 중첩 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-259">Returns the nested types specified in <paramref name="bindingAttr" /> that are declared or inherited by the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-260">중첩된 형식이 포함된 형식 <see langword="Type" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-260">An array of type <see langword="Type" /> containing the nested types.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="typeDelegator.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2a941-261">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-261">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-262">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-262">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="2a941-263">현재 <see cref="T:System.Reflection.PropertyInfo" />로 래핑된 형식의 속성을 나타내는 <see cref="T:System.Reflection.TypeDelegator" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-263">Returns an array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing properties of the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="2a941-264">이 <see langword="PropertyInfo" />에 정의된 속성을 나타내는 <see langword="TypeDelegator" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-264">An array of <see langword="PropertyInfo" /> objects representing properties defined on this <see langword="TypeDelegator" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::PropertyInfo ^ GetPropertyImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="typeDelegator.GetPropertyImpl (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-265">가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-265">The property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2a941-266">검색 수행 방법에 영향을 주는 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-266">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="2a941-267">이 값은 0이나 <see cref="T:System.Reflection.BindingFlags" />의 여러 비트 플래그의 조합으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-267">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="2a941-268">리플렉션을 사용하여 바인딩, 인수 형식의 강제 변환, 멤버 호출 및 <see langword="MemberInfo" /> 개체 검색을 사용할 수 있도록 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-268">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="2a941-269"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-269">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="2a941-270"><see cref="T:System.Reflection.Binder" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2a941-270">See <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="2a941-271">속성의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-271">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="2a941-272">매개 변수 형식 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-272">A list of parameter types.</span></span> <span data-ttu-id="2a941-273">이 목록은 매개 변수의 개수, 순서, 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-273">The list represents the number, order, and types of the parameters.</span></span> <span data-ttu-id="2a941-274">형식은 Null이 될 수 없습니다. 적당한 <see langword="GetMethod" /> 메서드나 빈 배열을 사용하여 매개 변수 없이 메서드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-274">Types cannot be null; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="2a941-275">가져올 메서드의 매개 변수에 연관된 특성을 나타내는 요소가 있는 형식과 길이가 같은 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-275">An array of the same length as types with elements that represent the attributes associated with the parameters of the method to get.</span></span></param>
        <summary><span data-ttu-id="2a941-276">파생 클래스에서 재정의되면, 지정된 인수 형식 및 한정자와 일치하는 매개 변수를 가진 지정된 속성을 지정된 바인딩 제약 조건으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-276">When overridden in a derived class, searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="2a941-277">지정한 조건을 만족하는 속성에 대한 <see cref="T:System.Reflection.PropertyInfo" /> 개체 또는 만족하는 조건이 없는 경우 Null입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-277">A <see cref="T:System.Reflection.PropertyInfo" /> object for the property that matches the specified criteria, or null if a match cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public override Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.GUID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid GUID { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.GUID : Guid" Usage="System.Reflection.TypeDelegator.GUID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-278">구현된 형식의 GUID(Globally Unique Identifier)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-278">Gets the GUID (globally unique identifier) of the implemented type.</span></span></summary>
        <value><span data-ttu-id="2a941-279">GUID</span><span class="sxs-lookup"><span data-stu-id="2a941-279">A GUID.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-280">GUID (globally unique identifier)은 클래스 또는 인터페이스를 식별 하는 데는 128 비트 고유 id 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-280">The GUID (globally unique identifier) is a 128-bit unique identification string used to identify a class or an interface.</span></span> <span data-ttu-id="2a941-281">Microsoft.NET Framework 및 COM. 간의 상호 운용성에 주로 유용</span><span class="sxs-lookup"><span data-stu-id="2a941-281">It is primarily useful for interoperability between the Microsoft .NET Framework and COM.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="HasElementTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool HasElementTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasElementTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.HasElementTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HasElementTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool HasElementTypeImpl();" />
      <MemberSignature Language="F#" Value="override this.HasElementTypeImpl : unit -&gt; bool" Usage="typeDelegator.HasElementTypeImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-282">현재 <see cref="T:System.Type" />이 다른 형식을 포함하거나 참조하는지 여부, 즉 현재 <see cref="T:System.Type" />이 배열 또는 포인터이거나 ByRef인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-282">Gets a value indicating whether the current <see cref="T:System.Type" /> encompasses or refers to another type; that is, whether the current <see cref="T:System.Type" /> is an array, a pointer or a ByRef.</span></span></summary>
        <returns><span data-ttu-id="2a941-283"><see cref="T:System.Type" />이 배열 또는 포인터이거나 ByRef이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-283"><see langword="true" /> if the <see cref="T:System.Type" /> is an array, a pointer or a ByRef; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="override this.InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="typeDelegator.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a941-284">호출할 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-284">The name of the member to invoke.</span></span> <span data-ttu-id="2a941-285">String은 생성자, 메서드, 속성 또는 필드일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-285">This may be a constructor, method, property, or field.</span></span> <span data-ttu-id="2a941-286">빈 문자열("")이 전달되면 기본 멤버가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-286">If an empty string ("") is passed, the default member is invoked.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="2a941-287">호출 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-287">The invocation attribute.</span></span> <span data-ttu-id="2a941-288">호출 특성은 <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, <see langword="SetProperty" /> 중 하나이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-288">This must be one of the following <see cref="T:System.Reflection.BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="2a941-289">적합한 호출 특성을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-289">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="2a941-290">정적 멤버를 호출하려면 <see langword="Static" /> 플래그를 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-290">If a static member is to be invoked, the <see langword="Static" /> flag must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="2a941-291">리플렉션을 사용하여 바인딩, 인수 형식의 강제 변환, 멤버 호출 및 <see langword="MemberInfo" /> 개체 검색을 사용할 수 있도록 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-291">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="2a941-292"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-292">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="2a941-293"><see cref="T:System.Reflection.Binder" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2a941-293">See <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="target"><span data-ttu-id="2a941-294">지정한 멤버를 호출할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-294">The object on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="2a941-295">호출할 멤버의 매개 변수의 개수, 순서, 형식이 포함된 형식 <see langword="Object" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-295">An array of type <see langword="Object" /> that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="2a941-296"><paramref name="args" />에 초기화되지 않은 <see langword="Object" />가 포함되면 이 개체는 기본 바인더를 사용하여 0, 0.0 또는 문자열로 확장될 수 있는 빈 배열로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-296">If <paramref name="args" /> contains an uninitialized <see langword="Object" />, it is treated as empty, which, with the default binder, can be widened to 0, 0.0 or a string.</span></span></param>
        <param name="modifiers"><span data-ttu-id="2a941-297">호출할 멤버의 인수에 연관된 특성을 나타내는 요소가 있는 <paramref name="args" />와 길이가 같은 형식 <see langword="ParameterModifer" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-297">An array of type <see langword="ParameterModifer" /> that is the same length as <paramref name="args" />, with elements that represent the attributes associated with the arguments of the member to be invoked.</span></span> <span data-ttu-id="2a941-298">매개 변수는 자신과 관련된 특성을 해당 멤버의 시그니처에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-298">A parameter has attributes associated with it in the member's signature.</span></span> <span data-ttu-id="2a941-299">ByRef일 경우 <see langword="ParameterModifer.ByRef" />를 사용하고 없는 경우 <see langword="ParameterModifer.None" />를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-299">For ByRef, use <see langword="ParameterModifer.ByRef" />, and for none, use <see langword="ParameterModifer.None" />.</span></span> <span data-ttu-id="2a941-300">기본 바인더는 다음과 정확하게 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-300">The default binder does exact matching on these.</span></span> <span data-ttu-id="2a941-301"><see langword="In" /> 및 <see langword="InOut" />과 같은 특성은 바인딩에 사용되지 않지만 <see langword="ParameterInfo" />을 사용하여 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-301">Attributes such as <see langword="In" /> and <see langword="InOut" /> are not used in binding, and can be viewed using <see langword="ParameterInfo" />.</span></span></param>
        <param name="culture"><span data-ttu-id="2a941-302">형식의 강제 변환을 제어하는 데 사용되는 <see langword="CultureInfo" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-302">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="2a941-303">예를 들어, 1000은 각 문화권마다 다르게 표현되므로 1000을 나타내는 문자열을 <see langword="Double" /> 값으로 변환하기 위해 이 매개 변수가 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-303">This is necessary, for example, to convert a string that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="2a941-304"><paramref name="culture" />가 <see langword="null" />인 경우 현재 스레드의 <see langword="CultureInfo" />에 대한 <see langword="CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-304">If <paramref name="culture" /> is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread's <see langword="CultureInfo" /> is used.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="2a941-305"><paramref name="args" /> 배열과 요소 0에서부터 일치하는 매개 변수 이름이 포함된 형식 <see langword="String" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-305">An array of type <see langword="String" /> containing parameter names that match up, starting at element zero, with the <paramref name="args" /> array.</span></span> <span data-ttu-id="2a941-306">배열 내에 빈 부분이 있으면 안됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-306">There must be no holes in the array.</span></span> <span data-ttu-id="2a941-307"><paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="2a941-307">If <paramref name="args" />.</span></span> <span data-ttu-id="2a941-308"><see langword="Length" />가 <paramref name="namedParameters" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-308"><see langword="Length" /> is greater than <paramref name="namedParameters" />.</span></span> <span data-ttu-id="2a941-309"><see langword="Length" />보다 크면 나머지 매개 변수는 순서대로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-309"><see langword="Length" />, the remaining parameters are filled in order.</span></span></param>
        <summary><span data-ttu-id="2a941-310">지정된 멤버를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-310">Invokes the specified member.</span></span> <span data-ttu-id="2a941-311">호출해야 할 메서드에 액세스할 수 있어야 하며 이 메서드가 지정된 바인더 및 호출 특성의 제약 조건 하에서 지정된 인수 목록과 가장 구체적으로 일치하는 항목을 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-311">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span></summary>
        <returns><span data-ttu-id="2a941-312">호출된 멤버의 반환 값을 나타내는 <see langword="Object" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-312">An <see langword="Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-313">메서드는 다음 조건이 모두 참인 경우 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-313">A method will be invoked if both the following conditions are true:</span></span>  
  
-   <span data-ttu-id="2a941-314">메서드 선언 매개 변수 개수를 (하지 않는 한 기본 인수는 멤버에 정의 된 경우) 지정 된 인수 목록의 인수 수를 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-314">The number of parameters in the method declaration equals the number of arguments in the specified argument list (unless default arguments are defined on the member).</span></span>  
  
-   <span data-ttu-id="2a941-315">각 인수 형식이 매개 변수 유형의 바인더를 통해 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-315">The type of each arguments can be converted by the binder to the type of the parameter.</span></span>  
  
 <span data-ttu-id="2a941-316">바인더는 일치 하는 모든 메서드를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-316">The binder will find all the matching methods.</span></span> <span data-ttu-id="2a941-317">요청 된 바인딩 형식에 따라 이러한 메서드를 찾습니다 (`BindingFlags.MethodInvoke`, `BindingFlags.GetProperties`등).</span><span class="sxs-lookup"><span data-stu-id="2a941-317">These methods are found based upon the type of binding requested (`BindingFlags.MethodInvoke`, `BindingFlags.GetProperties`, and so on).</span></span> <span data-ttu-id="2a941-318">메서드의 집합 이름, 인수 개수를 및 바인더에서 정의 된 검색 한정자 집합으로 필터링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-318">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span>  
  
 <span data-ttu-id="2a941-319">메서드를 선택한 후 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-319">After the method is selected, it will be invoked.</span></span> <span data-ttu-id="2a941-320">이때에 내게 필요한 옵션 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-320">Accessibility is checked at that point.</span></span> <span data-ttu-id="2a941-321">검색은 메서드를 사용 하 여 연결 된 내게 필요한 옵션 특성에 따라 검색할 메서드의 집합을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-321">The search may control which set of methods are searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="2a941-322"><xref:System.Reflection.Binder.BindToMethod%2A?displayProperty=nameWithType> 메서드는 호출할 메서드를 선택 하는 일을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-322">The <xref:System.Reflection.Binder.BindToMethod%2A?displayProperty=nameWithType> method is responsible for selecting the method to be invoked.</span></span> <span data-ttu-id="2a941-323">기본 바인더를 가장 구체적으로 일치를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-323">The default binder selects the most specific match.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a941-324">완전히 신뢰할 수 있는 코드에 대 한 액세스 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-324">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="2a941-325">즉, 개인 생성자, 메서드, 필드 및 속성에 액세스할 수 있습니다 및 코드를 완전히 신뢰할 수 있는 경우 리플렉션을 사용 하 여 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-325">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="2a941-326">현재 `InvokeMember` 개체의 모든 형식에 대 한 Microsoft.NET Framework 리플렉션 의미 체계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-326">Currently, `InvokeMember` performs the Microsoft .NET Framework reflection semantics for every type of object.</span></span>  
  
 <span data-ttu-id="2a941-327">이름별로 지정 된 멤버는 배열 하는 경우와 `BindingFlags.GetField` 에 플래그가 설정 되어 `invokeAttr`, `args` 배열을 반환할 해당 값은 요소를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-327">If the member specified by name is an array and the `BindingFlags.GetField` flag is set on `invokeAttr`, the `args` array specifies the elements whose values are to be returned.</span></span> <span data-ttu-id="2a941-328">통해 다음을 호출 하는 예를 들어 `Type` 개체 `t` MyArray 호출 하는 개체의 구성원 인 문자열 배열의 첫 번째 요소의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-328">For example, the following call through `Type` object `t` returns the value of the first element of the string array MyArray, which is a member of the calling object:</span></span>  
  
 `String ret = (String) t.InvokeMember ("MyArray", BindingFlags.GetField, null, this, new Variant[]{0});`  
  
 <span data-ttu-id="2a941-329">사용할 수 있습니다 `InvokeMember` 멤버 배열의 하나 이상의 요소를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-329">You can use `InvokeMember` to set one or more elements of a member array.</span></span> <span data-ttu-id="2a941-330">모든 요소는 동일한 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-330">All elements are set to the same value.</span></span> <span data-ttu-id="2a941-331">`args` 배열 같이 포맷 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-331">The `args` array must be formatted as follows:</span></span>  
  
```  
{index1,  
    index2,, value}  
```  
  
 <span data-ttu-id="2a941-332">예를 들어 이전 예제의 MyArray의 첫 번째 멤버를 설정 하려면 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-332">For example, to set the first member of MyArray from the previous example, the syntax is as follows:</span></span>  
  
```csharp  
t.InvokeMember ("MyArray", BindingFlags.SetField, null, this, new  
    Variant[]{0,"Updated"});  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsArrayImpl">
      <MemberSignature Language="C#" Value="protected override bool IsArrayImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsArrayImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsArrayImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsArrayImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsArrayImpl();" />
      <MemberSignature Language="F#" Value="override this.IsArrayImpl : unit -&gt; bool" Usage="typeDelegator.IsArrayImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-333"><see cref="T:System.Type" />이 배열인지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-333">Returns a value that indicates whether the <see cref="T:System.Type" /> is an array.</span></span></summary>
        <returns><span data-ttu-id="2a941-334"><see langword="true" />이 배열이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-334"><see langword="true" /> if the <see cref="T:System.Type" /> is an array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Reflection.TypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsAssignableFrom(System.Reflection.TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(System::Reflection::TypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="override this.IsAssignableFrom : System.Reflection.TypeInfo -&gt; bool" Usage="typeDelegator.IsAssignableFrom typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="2a941-335">확인할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-335">The type to check.</span></span></param>
        <summary><span data-ttu-id="2a941-336">지정한 형식을 이 형식으로 할당할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-336">Returns a value that indicates whether the specified type can be assigned to this type.</span></span></summary>
        <returns><span data-ttu-id="2a941-337">지정된 형식을 이 형식에 할당할 수 있으면 <see langword="true" />이고, 할당할 수 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-337"><see langword="true" /> if the specified type can be assigned to this type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefImpl">
      <MemberSignature Language="C#" Value="protected override bool IsByRefImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsByRefImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsByRefImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsByRefImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsByRefImpl();" />
      <MemberSignature Language="F#" Value="override this.IsByRefImpl : unit -&gt; bool" Usage="typeDelegator.IsByRefImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-338"><see cref="T:System.Type" />이 참조에서 전달되는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-338">Returns a value that indicates whether the <see cref="T:System.Type" /> is passed by reference.</span></span></summary>
        <returns><span data-ttu-id="2a941-339"><see langword="true" />이 참조로 전달되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-339"><see langword="true" /> if the <see cref="T:System.Type" /> is passed by reference; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefLike">
      <MemberSignature Language="C#" Value="public override bool IsByRefLike { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRefLike" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsByRefLike" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsByRefLike As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsByRefLike { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsByRefLike : bool" Usage="System.Reflection.TypeDelegator.IsByRefLike" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObjectImpl">
      <MemberSignature Language="C#" Value="protected override bool IsCOMObjectImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsCOMObjectImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsCOMObjectImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsCOMObjectImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsCOMObjectImpl();" />
      <MemberSignature Language="F#" Value="override this.IsCOMObjectImpl : unit -&gt; bool" Usage="typeDelegator.IsCOMObjectImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-340"><see cref="T:System.Type" />이 COM 개체인지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-340">Returns a value that indicates whether the <see cref="T:System.Type" /> is a COM object.</span></span></summary>
        <returns><span data-ttu-id="2a941-341"><see langword="true" />이 COM 개체이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-341"><see langword="true" /> if the <see cref="T:System.Type" /> is a COM object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructedGenericType">
      <MemberSignature Language="C#" Value="public override bool IsConstructedGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructedGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsConstructedGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsConstructedGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructedGenericType { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructedGenericType : bool" Usage="System.Reflection.TypeDelegator.IsConstructedGenericType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-342">이 개체가 생성된 제네릭 형식을 나타내는지를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-342">Gets a value that indicates whether this object represents a constructed generic type.</span></span></summary>
        <value><span data-ttu-id="2a941-343">이 개체가 생성된 제네릭 형식을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-343"><see langword="true" /> if this object represents a constructed generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="typeDelegator.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2a941-344">이 형식의 상속 관계를 검색하여 특성을 찾을지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-344">Specifies whether to search this type's inheritance chain to find the attributes.</span></span></param>
        <param name="inherit"><span data-ttu-id="2a941-345">형식으로 식별된 사용자 지정 특성의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-345">An array of custom attributes identified by type.</span></span></param>
        <summary><span data-ttu-id="2a941-346"><paramref name="attributeType" />으로 식별된 사용자 지정 특성의 정의 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-346">Indicates whether a custom attribute identified by <paramref name="attributeType" /> is defined.</span></span></summary>
        <returns><span data-ttu-id="2a941-347">사용자 지정 특성이 <paramref name="attributeType" />에 의해 식별되면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-347"><see langword="true" /> if a custom attribute identified by <paramref name="attributeType" /> is defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2a941-348"><paramref name="attributeType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-348"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="2a941-349">사용자 지정 특성 형식을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2a941-349">The custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsGenericMethodParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericMethodParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericMethodParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsGenericMethodParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericMethodParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericMethodParameter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericMethodParameter : bool" Usage="System.Reflection.TypeDelegator.IsGenericMethodParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericTypeParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericTypeParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTypeParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsGenericTypeParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericTypeParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericTypeParameter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericTypeParameter : bool" Usage="System.Reflection.TypeDelegator.IsGenericTypeParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointerImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPointerImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPointerImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsPointerImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPointerImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPointerImpl();" />
      <MemberSignature Language="F#" Value="override this.IsPointerImpl : unit -&gt; bool" Usage="typeDelegator.IsPointerImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-350"><see cref="T:System.Type" />이 포인터인지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-350">Returns a value that indicates whether the <see cref="T:System.Type" /> is a pointer.</span></span></summary>
        <returns><span data-ttu-id="2a941-351"><see langword="true" />이 포인터이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-351"><see langword="true" /> if the <see cref="T:System.Type" /> is a pointer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitiveImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPrimitiveImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPrimitiveImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsPrimitiveImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPrimitiveImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPrimitiveImpl();" />
      <MemberSignature Language="F#" Value="override this.IsPrimitiveImpl : unit -&gt; bool" Usage="typeDelegator.IsPrimitiveImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-352"><see cref="T:System.Type" />이 기본 형식 중 하나인지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-352">Returns a value that indicates whether the <see cref="T:System.Type" /> is one of the primitive types.</span></span></summary>
        <returns><span data-ttu-id="2a941-353"><see langword="true" />이 기본 형식 중 하나이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-353"><see langword="true" /> if the <see cref="T:System.Type" /> is one of the primitive types; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSZArray">
      <MemberSignature Language="C#" Value="public override bool IsSZArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSZArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsSZArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSZArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSZArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSZArray : bool" Usage="System.Reflection.TypeDelegator.IsSZArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTypeDefinition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTypeDefinition : bool" Usage="System.Reflection.TypeDelegator.IsTypeDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool IsValueTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValueTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsValueTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValueTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValueTypeImpl();" />
      <MemberSignature Language="F#" Value="override this.IsValueTypeImpl : unit -&gt; bool" Usage="typeDelegator.IsValueTypeImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a941-354">형식이 값 형식인지, 즉 클래스나 인터페이스가 아닌지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-354">Returns a value that indicates whether the type is a value type; that is, not a class or an interface.</span></span></summary>
        <returns><span data-ttu-id="2a941-355">형식이 값 형식이면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-355"><see langword="true" /> if the type is a value type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariableBoundArray">
      <MemberSignature Language="C#" Value="public override bool IsVariableBoundArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVariableBoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsVariableBoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsVariableBoundArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVariableBoundArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVariableBoundArray : bool" Usage="System.Reflection.TypeDelegator.IsVariableBoundArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.TypeDelegator.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-356">메타데이터에서 이 엔터티를 식별하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-356">Gets a value that identifies this entity in metadata.</span></span></summary>
        <value><span data-ttu-id="2a941-357">모듈과 결합하여 메타데이터에서 이 엔터티를 고유하게 식별하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-357">A value which, in combination with the module, uniquely identifies this entity in metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-358">이 속성을 사용 하 여 가져온 토큰을 관리 되지 않는 리플렉션 API에 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-358">The tokens obtained using this property can be passed to the unmanaged reflection API.</span></span> <span data-ttu-id="2a941-359">자세한 내용은 [관리 되지 않는 리플렉션 API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-359">For more information, see [Unmanaged Reflection API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.TypeDelegator.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-360">구현된 형식을 포함하는 모듈을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-360">Gets the module that contains the implemented type.</span></span></summary>
        <value><span data-ttu-id="2a941-361">구현된 형식의 모듈을 나타내는 <see cref="T:System.Reflection.Module" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-361">A <see cref="T:System.Reflection.Module" /> object representing the module of the implemented type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-362">모듈은 형식 선언 및 구현이 포함 될 수 있는 로드 가능한 단위로.</span><span class="sxs-lookup"><span data-stu-id="2a941-362">A module is a loadable unit that can contain type declarations and implementations.</span></span> <span data-ttu-id="2a941-363">공용 언어 런타임 모듈 로드 될 때 모든 구현을 비트를 찾을 수 있도록 충분 한 정보를 포함 하는 모듈입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-363">Modules contain enough information to enable the common language runtime to locate all implementation bits when the module is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.TypeDelegator.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-364">구현된 형식의 이름을 경로를 제거한 상태로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-364">Gets the name of the implemented type, with the path removed.</span></span></summary>
        <value><span data-ttu-id="2a941-365">정규화되지 않은 형식 이름이 포함된 <see langword="String" /> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-365">A <see langword="String" /> containing the type's non-qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-366">현재 `TypeDelegator`의 이름이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-366">A string containing the name of the current `TypeDelegator`.</span></span> <span data-ttu-id="2a941-367">정규화 된 이름이 아니라 간단한 이름만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-367">Only the simple name, not the fully qualified name, is returned.</span></span> <span data-ttu-id="2a941-368">이름 및 경로 얻으려면 사용 <xref:System.Reflection.TypeDelegator.FullName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-368">To get the name and the path, use <xref:System.Reflection.TypeDelegator.FullName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="System.Reflection.TypeDelegator.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-369">구현된 형식의 네임스페이스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-369">Gets the namespace of the implemented type.</span></span></summary>
        <value><span data-ttu-id="2a941-370">형식의 네임스페이스가 포함된 <see langword="String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-370">A <see langword="String" /> containing the type's namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-371">이 속성의 현재 네임 스페이스를 포함 하는 문자열을 가져옵니다 `TypeDelegator`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-371">This property gets a string containing the namespace of the current `TypeDelegator`.</span></span> <span data-ttu-id="2a941-372">예를 들어 경우는 `TypeDelegator` 됩니다 <xref:System.Reflection.TypeFilter>, 반환 된 네임 스페이스는 <xref:System.Reflection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-372">For example, if the `TypeDelegator` is <xref:System.Reflection.TypeFilter>, the returned namespace is <xref:System.Reflection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public override RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeHandle : RuntimeTypeHandle" Usage="System.Reflection.TypeDelegator.TypeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-373">구현된 형식의 내부 메타 데이터 표현에 대한 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-373">Gets a handle to the internal metadata representation of an implemented type.</span></span></summary>
        <value><span data-ttu-id="2a941-374"><see langword="RuntimeTypeHandle" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-374">A <see langword="RuntimeTypeHandle" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a941-375">형식 핸들에는 각 형식과 관련 된 고유한 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-375">A type handle is a unique integer value associated with each type.</span></span> <span data-ttu-id="2a941-376">런타임 동안 핸들은 고유 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-376">The handle is unique during the runtime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.RuntimeTypeHandle" />
      </Docs>
    </Member>
    <Member MemberName="typeImpl">
      <MemberSignature Language="C#" Value="protected Type typeImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type typeImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.TypeDelegator.typeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected typeImpl As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ typeImpl;" />
      <MemberSignature Language="F#" Value="val mutable typeImpl : Type" Usage="System.Reflection.TypeDelegator.typeImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-377">형식 정보를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-377">A value indicating type information.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public override Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.TypeDelegator.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a941-378">구현된 형식을 나타내는 내부 <see cref="T:System.Type" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-378">Gets the underlying <see cref="T:System.Type" /> that represents the implemented type.</span></span></summary>
        <value><span data-ttu-id="2a941-379">내부 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2a941-379">The underlying type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>