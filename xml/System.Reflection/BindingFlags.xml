<Type Name="BindingFlags" FullName="System.Reflection.BindingFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22760a292f17e08426d07f1f153b5a87338a2d29" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58701844" /></Metadata><TypeSignature Language="C#" Value="public enum BindingFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed BindingFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.BindingFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum BindingFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class BindingFlags" />
  <TypeSignature Language="F#" Value="type BindingFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f6a3-101">리플렉션으로 멤버 및 형식에 대한 검색을 수행하는 방법과 바인딩을 제어하는 플래그를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-101">Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f6a3-102">이러한 `BindingFlags` 많은 클래스에 대 한 바인딩을 제어 합니다 `System`를 `System.Reflection`, 및 `System.Runtime` 호출 만들기, 가져오기, 설정, 찾고, 멤버 및 형식 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-102">These `BindingFlags` control binding for a great many classes in the `System`, `System.Reflection`, and `System.Runtime` namespaces that invoke, create, get, set, and find members and types.</span></span>  
  
 <span data-ttu-id="5f6a3-103">`BindingFlags` 다음에 사용 됩니다 <xref:System.Type> 메서드와 같은 다른 위치 <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="5f6a3-103">`BindingFlags` are used in the following <xref:System.Type> methods and other places such as <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>:</span></span>  
  
-   <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.GetMembers%2A>  
  
-   <xref:System.Type.GetEvents%2A>  
  
-   <xref:System.Type.InvokeMember%2A>  
  
-   <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.GetConstructor%2A>  
  
-   <xref:System.Type.GetConstructors%2A>  
  
-   <xref:System.Type.GetMethod%2A>  
  
-   <xref:System.Type.GetMethods%2A>  
  
-   <xref:System.Type.GetField%2A>  
  
-   <xref:System.Type.GetFields%2A>  
  
-   <xref:System.Type.GetEvent%2A>  
  
-   <xref:System.Type.GetProperty%2A>  
  
-   <xref:System.Type.GetProperties%2A>  
  
-   <xref:System.Type.GetMember%2A>  
  
-   <xref:System.Type.FindMembers%2A>  
  
 <span data-ttu-id="5f6a3-104">`InvokeMember` 및 `GetMethod` 특히 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-104">`InvokeMember` and `GetMethod` are especially important.</span></span>  
  
 <span data-ttu-id="5f6a3-105">바인딩 플래그는 다음 표에 나열 된 형식 멤버를 식별 하는 방법으로 분류할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-105">The binding flags can be categorized by how they identify a type member, as listed in the following table.</span></span>  
  
|<span data-ttu-id="5f6a3-106">내게 필요한 옵션으로 식별</span><span class="sxs-lookup"><span data-stu-id="5f6a3-106">Identified by Accessibility</span></span>|<span data-ttu-id="5f6a3-107">인수에 바인딩하여 식별</span><span class="sxs-lookup"><span data-stu-id="5f6a3-107">Identified by Binding Argument</span></span>|<span data-ttu-id="5f6a3-108">작업에 의해 식별</span><span class="sxs-lookup"><span data-stu-id="5f6a3-108">Identified by Operation</span></span>|  
|---------------------------------|------------------------------------|-----------------------------|  
|<span data-ttu-id="5f6a3-109">DeclaredOnly</span><span class="sxs-lookup"><span data-stu-id="5f6a3-109">DeclaredOnly</span></span><br /><br /> <span data-ttu-id="5f6a3-110">FlattenHierarchy</span><span class="sxs-lookup"><span data-stu-id="5f6a3-110">FlattenHierarchy</span></span><br /><br /> <span data-ttu-id="5f6a3-111">IgnoreCase</span><span class="sxs-lookup"><span data-stu-id="5f6a3-111">IgnoreCase</span></span><br /><br /> <span data-ttu-id="5f6a3-112">IgnoreReturn</span><span class="sxs-lookup"><span data-stu-id="5f6a3-112">IgnoreReturn</span></span><br /><br /> <span data-ttu-id="5f6a3-113">인스턴스</span><span class="sxs-lookup"><span data-stu-id="5f6a3-113">Instance</span></span><br /><br /> <span data-ttu-id="5f6a3-114">NonPublic</span><span class="sxs-lookup"><span data-stu-id="5f6a3-114">NonPublic</span></span><br /><br /> <span data-ttu-id="5f6a3-115">Public</span><span class="sxs-lookup"><span data-stu-id="5f6a3-115">Public</span></span><br /><br /> <span data-ttu-id="5f6a3-116">정적</span><span class="sxs-lookup"><span data-stu-id="5f6a3-116">Static</span></span>|<span data-ttu-id="5f6a3-117">ExactBinding</span><span class="sxs-lookup"><span data-stu-id="5f6a3-117">ExactBinding</span></span><br /><br /> <span data-ttu-id="5f6a3-118">OptionalParamBinding</span><span class="sxs-lookup"><span data-stu-id="5f6a3-118">OptionalParamBinding</span></span>|<span data-ttu-id="5f6a3-119">CreateInstance</span><span class="sxs-lookup"><span data-stu-id="5f6a3-119">CreateInstance</span></span><br /><br /> <span data-ttu-id="5f6a3-120">GetField</span><span class="sxs-lookup"><span data-stu-id="5f6a3-120">GetField</span></span><br /><br /> <span data-ttu-id="5f6a3-121">SetField</span><span class="sxs-lookup"><span data-stu-id="5f6a3-121">SetField</span></span><br /><br /> <span data-ttu-id="5f6a3-122">GetProperty</span><span class="sxs-lookup"><span data-stu-id="5f6a3-122">GetProperty</span></span><br /><br /> <span data-ttu-id="5f6a3-123">SetProperty</span><span class="sxs-lookup"><span data-stu-id="5f6a3-123">SetProperty</span></span><br /><br /> <span data-ttu-id="5f6a3-124">InvokeMethod</span><span class="sxs-lookup"><span data-stu-id="5f6a3-124">InvokeMethod</span></span><br /><br /> <span data-ttu-id="5f6a3-125">PutDispProperty</span><span class="sxs-lookup"><span data-stu-id="5f6a3-125">PutDispProperty</span></span><br /><br /> <span data-ttu-id="5f6a3-126">PutRefDispProperty</span><span class="sxs-lookup"><span data-stu-id="5f6a3-126">PutRefDispProperty</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="5f6a3-127">지정 해야 합니다 `Instance` 나 `Static` 와 함께 `Public` 또는 `NonPublic` 또는 멤버가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-127">You must specify `Instance` or `Static` along with `Public` or `NonPublic` or no members will be returned.</span></span>  
  
 <span data-ttu-id="5f6a3-128">다음 표에서 기본적으로 수행 된 변환이 <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-128">The following table lists the coercions performed by the default <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5f6a3-129">이 테이블에는 특히에 적용 됩니다는 `BindingFlags.ExactBinding` 바인딩 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-129">This table applies especially to the `BindingFlags.ExactBinding` binding flag.</span></span> <span data-ttu-id="5f6a3-130">일반 원칙 <xref:System.Reflection.Binder.ChangeType%2A> 확장 데이터 손실이 없는 강제 변환을 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-130">The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="5f6a3-131">확대 강제 변환의 예로 64 비트 부호 있는 정수 값을 32 비트 부호 있는 정수 값 강제 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-131">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="5f6a3-132">이 데이터가 손실 될 수 있는 축소 변환에서 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-132">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="5f6a3-133">축소 변환의 예로 64 비트 부호 있는 정수는 32 비트 부호 있는 정수를 강제 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-133">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span> 
  
|<span data-ttu-id="5f6a3-134">원본 유형</span><span class="sxs-lookup"><span data-stu-id="5f6a3-134">Source Type</span></span>|<span data-ttu-id="5f6a3-135">대상 유형</span><span class="sxs-lookup"><span data-stu-id="5f6a3-135">Target Type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="5f6a3-136">모든 형식</span><span class="sxs-lookup"><span data-stu-id="5f6a3-136">Any type</span></span>|<span data-ttu-id="5f6a3-137">해당 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-137">Its base type.</span></span>|  
|<span data-ttu-id="5f6a3-138">모든 형식</span><span class="sxs-lookup"><span data-stu-id="5f6a3-138">Any type</span></span>|<span data-ttu-id="5f6a3-139">인터페이스를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-139">The interface it implements.</span></span>|  
|`Char`|<span data-ttu-id="5f6a3-140">`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-140">`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Byte`|<span data-ttu-id="5f6a3-141">`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-141">`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`SByte`|<span data-ttu-id="5f6a3-142">`Int16`, `Int32`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-142">`Int16`, `Int32`, `Int64`, `Single`, `Double`</span></span>|  
|`UInt16`|<span data-ttu-id="5f6a3-143">`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-143">`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Int16`|<span data-ttu-id="5f6a3-144">`Int32`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-144">`Int32`, `Int64`, `Single`, `Double`</span></span>|  
|`UInt32`|<span data-ttu-id="5f6a3-145">`UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-145">`UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Int32`|<span data-ttu-id="5f6a3-146">`Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-146">`Int64`, `Single`, `Double`</span></span>|  
|`UInt64`|<span data-ttu-id="5f6a3-147">`Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-147">`Single`, `Double`</span></span>|  
|`Int64`|<span data-ttu-id="5f6a3-148">`Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="5f6a3-148">`Single`, `Double`</span></span>|  
|`Single`|`Double`|  
|<span data-ttu-id="5f6a3-149">비참조</span><span class="sxs-lookup"><span data-stu-id="5f6a3-149">Non-reference</span></span>|<span data-ttu-id="5f6a3-150">참조로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-150">By-reference.</span></span>|  

<span data-ttu-id="5f6a3-151">경우는 `BindingFlags.ExactBinding` 는 바인딩 플래그, 리플렉션 공용 형식 시스템의 액세스 가능성 규칙을 모델링 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-151">When the `BindingFlags.ExactBinding` binding flag is used, reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="5f6a3-152">예를 들어 호출자에 게 동일한 어셈블리의 경우 호출자에 게 필요가 없습니다 특별 한 권한이 내부 멤버에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-152">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="5f6a3-153">그렇지 않으면 호출자에 게 필요한 <xref:System.Security.Permissions.ReflectionPermission>합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-153">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="5f6a3-154">이것이, 보호 되는 멤버의 조회를 사용 하 여 일관 된, private 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-154">This is consistent with the lookup of members that are protected, private, and so on.</span></span>  
  
   
  
   
     
  
## Examples  
 <span data-ttu-id="5f6a3-155">다음 예제에서는 다양 한 바인딩 플래그를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-155">The following example demonstrates many of the binding flags.</span></span>  
  
 [!code-cpp[BindingFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/BindingFlags/CPP/bindingflagssample.cpp#1)]
 [!code-csharp[BindingFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/BindingFlags/CS/bindingflagssample.cs#1)]
 [!code-vb[BindingFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/BindingFlags/VB/bindingflagssample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="CreateInstance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags CreateInstance = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="CreateInstance" />
      <MemberSignature Language="C++ CLI" Value="CreateInstance" />
      <MemberSignature Language="F#" Value="CreateInstance = 512" Usage="System.Reflection.BindingFlags.CreateInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-156">리플렉션에서 지정된 형식의 인스턴스를 만들도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-156">Specifies that reflection should create an instance of the specified type.</span></span> <span data-ttu-id="5f6a3-157">지정된 인수와 일치하는 생성자를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-157">Calls the constructor that matches the given arguments.</span></span> <span data-ttu-id="5f6a3-158">지정된 멤버 이름은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-158">The supplied member name is ignored.</span></span> <span data-ttu-id="5f6a3-159">조회 형식을 지정하지 않으면 (인스턴스 | 공용)이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-159">If the type of lookup is not specified, (Instance | Public) will apply.</span></span> <span data-ttu-id="5f6a3-160">형식 이니셜라이저를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-160">It is not possible to call a type initializer.</span></span>  
  
<span data-ttu-id="5f6a3-161">이 플래그는 생성자를 호출하기 위해 <see langword="InvokeMember" /> 메서드에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-161">This flag is passed to an <see langword="InvokeMember" /> method to invoke a constructor.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DeclaredOnly">
      <MemberSignature Language="C#" Value="DeclaredOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags DeclaredOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.DeclaredOnly" />
      <MemberSignature Language="VB.NET" Value="DeclaredOnly" />
      <MemberSignature Language="C++ CLI" Value="DeclaredOnly" />
      <MemberSignature Language="F#" Value="DeclaredOnly = 2" Usage="System.Reflection.BindingFlags.DeclaredOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-162">지정된 형식의 계층 구조 수준에서 선언된 멤버만 고려하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-162">Specifies that only members declared at the level of the supplied type's hierarchy should be considered.</span></span> <span data-ttu-id="5f6a3-163">상속된 멤버는 고려되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-163">Inherited members are not considered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Reflection.BindingFlags.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-164">바인딩 플래그가 정의되지 않도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-164">Specifies that no binding flags are defined.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoNotWrapExceptions">
      <MemberSignature Language="C#" Value="DoNotWrapExceptions" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags DoNotWrapExceptions = int32(33554432)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.DoNotWrapExceptions" />
      <MemberSignature Language="VB.NET" Value="DoNotWrapExceptions" />
      <MemberSignature Language="C++ CLI" Value="DoNotWrapExceptions" />
      <MemberSignature Language="F#" Value="DoNotWrapExceptions = 33554432" Usage="System.Reflection.BindingFlags.DoNotWrapExceptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExactBinding">
      <MemberSignature Language="C#" Value="ExactBinding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags ExactBinding = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.ExactBinding" />
      <MemberSignature Language="VB.NET" Value="ExactBinding" />
      <MemberSignature Language="C++ CLI" Value="ExactBinding" />
      <MemberSignature Language="F#" Value="ExactBinding = 65536" Usage="System.Reflection.BindingFlags.ExactBinding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-165">지정된 인수의 형식이 해당 정식 매개 변수의 형식과 정확히 일치하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-165">Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters.</span></span> <span data-ttu-id="5f6a3-166">호출자가 null이 아닌 <see langword="Binder" /> 개체를 제공하는 경우 호출자가 적절한 메서드를 선택하는 <see langword="BindToXXX" /> 구현을 제공하는 것이므로 리플렉션에서 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-166">Reflection throws an exception if the caller supplies a non-null <see langword="Binder" /> object, since that implies that the caller is supplying <see langword="BindToXXX" /> implementations that will pick the appropriate method.</span></span> <span data-ttu-id="5f6a3-167">기본 바인더는 이 플래그를 무시하지만, 사용자 지정 바인더는 이 플래그의 의미 체계를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-167">The default binder ignores this flag, while custom binders can implement the semantics of this flag.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchy">
      <MemberSignature Language="C#" Value="FlattenHierarchy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags FlattenHierarchy = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.FlattenHierarchy" />
      <MemberSignature Language="VB.NET" Value="FlattenHierarchy" />
      <MemberSignature Language="C++ CLI" Value="FlattenHierarchy" />
      <MemberSignature Language="F#" Value="FlattenHierarchy = 64" Usage="System.Reflection.BindingFlags.FlattenHierarchy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-168">계층 구조에서 위에 있는 public 및 protected 정적 멤버를 반환하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-168">Specifies that public and protected static members up the hierarchy should be returned.</span></span> <span data-ttu-id="5f6a3-169">상속된 클래스의 전용 정적 멤버는 반환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-169">Private static members in inherited classes are not returned.</span></span> <span data-ttu-id="5f6a3-170">정적 멤버에는 필드, 메서드, 이벤트 및 속성이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-170">Static members include fields, methods, events, and properties.</span></span> <span data-ttu-id="5f6a3-171">중첩 형식은 반환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-171">Nested types are not returned.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="GetField" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags GetField = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.GetField" />
      <MemberSignature Language="VB.NET" Value="GetField" />
      <MemberSignature Language="C++ CLI" Value="GetField" />
      <MemberSignature Language="F#" Value="GetField = 1024" Usage="System.Reflection.BindingFlags.GetField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-172">지정된 필드의 값을 반환하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-172">Specifies that the value of the specified field should be returned.</span></span>  
  
<span data-ttu-id="5f6a3-173">이 플래그는 필드 값을 가져오기 위해 <see langword="InvokeMember" /> 메서드에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-173">This flag is passed to an <see langword="InvokeMember" /> method to get a field value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="GetProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags GetProperty = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.GetProperty" />
      <MemberSignature Language="VB.NET" Value="GetProperty" />
      <MemberSignature Language="C++ CLI" Value="GetProperty" />
      <MemberSignature Language="F#" Value="GetProperty = 4096" Usage="System.Reflection.BindingFlags.GetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-174">지정된 속성의 값을 반환하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-174">Specifies that the value of the specified property should be returned.</span></span>  
  
<span data-ttu-id="5f6a3-175">이 플래그는 속성 getter를 호출하기 위해 <see langword="InvokeMember" /> 메서드에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-175">This flag is passed to an <see langword="InvokeMember" /> method to invoke a property getter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="IgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags IgnoreCase = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="IgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="IgnoreCase" />
      <MemberSignature Language="F#" Value="IgnoreCase = 1" Usage="System.Reflection.BindingFlags.IgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-176">바인딩할 때 멤버 이름의 대/소문자를 고려하지 않도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-176">Specifies that the case of the member name should not be considered when binding.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreReturn">
      <MemberSignature Language="C#" Value="IgnoreReturn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags IgnoreReturn = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.IgnoreReturn" />
      <MemberSignature Language="VB.NET" Value="IgnoreReturn" />
      <MemberSignature Language="C++ CLI" Value="IgnoreReturn" />
      <MemberSignature Language="F#" Value="IgnoreReturn = 16777216" Usage="System.Reflection.BindingFlags.IgnoreReturn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-177">COM interop에서 멤버의 반환 값을 무시할 수 있도록 지정하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-177">Used in COM interop to specify that the return value of the member can be ignored.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="Instance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Instance = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Instance" />
      <MemberSignature Language="VB.NET" Value="Instance" />
      <MemberSignature Language="C++ CLI" Value="Instance" />
      <MemberSignature Language="F#" Value="Instance = 4" Usage="System.Reflection.BindingFlags.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-178">인스턴스 멤버를 검색에 포함하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-178">Specifies that instance members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethod">
      <MemberSignature Language="C#" Value="InvokeMethod" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags InvokeMethod = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.InvokeMethod" />
      <MemberSignature Language="VB.NET" Value="InvokeMethod" />
      <MemberSignature Language="C++ CLI" Value="InvokeMethod" />
      <MemberSignature Language="F#" Value="InvokeMethod = 256" Usage="System.Reflection.BindingFlags.InvokeMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-179">메서드를 호출하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-179">Specifies that a method is to be invoked.</span></span> <span data-ttu-id="5f6a3-180">생성자 또는 형식 이니셜라이저가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-180">This must not be a constructor or a type initializer.</span></span>  
  
<span data-ttu-id="5f6a3-181">이 플래그는 메서드를 호출하기 위해 <see langword="InvokeMember" /> 메서드에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-181">This flag is passed to an <see langword="InvokeMember" /> method to invoke a method.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonPublic">
      <MemberSignature Language="C#" Value="NonPublic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags NonPublic = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.NonPublic" />
      <MemberSignature Language="VB.NET" Value="NonPublic" />
      <MemberSignature Language="C++ CLI" Value="NonPublic" />
      <MemberSignature Language="F#" Value="NonPublic = 32" Usage="System.Reflection.BindingFlags.NonPublic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-182">public이 아닌 멤버를 검색에 포함하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-182">Specifies that non-public members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptionalParamBinding">
      <MemberSignature Language="C#" Value="OptionalParamBinding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags OptionalParamBinding = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.OptionalParamBinding" />
      <MemberSignature Language="VB.NET" Value="OptionalParamBinding" />
      <MemberSignature Language="C++ CLI" Value="OptionalParamBinding" />
      <MemberSignature Language="F#" Value="OptionalParamBinding = 262144" Usage="System.Reflection.BindingFlags.OptionalParamBinding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-183">해당 매개 변수 개수가 제공된 인수 개수와 일치하는 멤버 집합을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-183">Returns the set of members whose parameter count matches the number of supplied arguments.</span></span> <span data-ttu-id="5f6a3-184">이 바인딩 플래그는 기본값을 가진 매개 변수가 있는 메서드 및 가변 인수(varargs)가 있는 메서드에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-184">This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs).</span></span> <span data-ttu-id="5f6a3-185">이 플래그는 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />하고만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-185">This flag should only be used with <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span><br /><br /><span data-ttu-id="5f6a3-186">기본값이 있는 매개 변수는 후행 인수가 생략된 호출에서만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-186">Parameters with default values are used only in calls where trailing arguments are omitted.</span></span> <span data-ttu-id="5f6a3-187">이 인수는 마지막 인수여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-187">They must be the last arguments.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Public">
      <MemberSignature Language="C#" Value="Public" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Public = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Public" />
      <MemberSignature Language="VB.NET" Value="Public" />
      <MemberSignature Language="C++ CLI" Value="Public" />
      <MemberSignature Language="F#" Value="Public = 16" Usage="System.Reflection.BindingFlags.Public" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-188">public 멤버를 검색에 포함하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-188">Specifies that public members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PutDispProperty">
      <MemberSignature Language="C#" Value="PutDispProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags PutDispProperty = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.PutDispProperty" />
      <MemberSignature Language="VB.NET" Value="PutDispProperty" />
      <MemberSignature Language="C++ CLI" Value="PutDispProperty" />
      <MemberSignature Language="F#" Value="PutDispProperty = 16384" Usage="System.Reflection.BindingFlags.PutDispProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-189">COM 개체의 <see langword="PROPPUT" /> 멤버를 호출하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-189">Specifies that the <see langword="PROPPUT" /> member on a COM object should be invoked.</span></span> <span data-ttu-id="5f6a3-190"><see langword="PROPPUT" />은 값을 사용하는 속성 설정 함수를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-190"><see langword="PROPPUT" /> specifies a property-setting function that uses a value.</span></span> <span data-ttu-id="5f6a3-191">속성이 <see langword="PROPPUT" /> 및 <see langword="PROPPUTREF" /> 둘 다를 포함하고 호출할 항목을 구분해야 하는 경우 <see langword="PutDispProperty" />를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-191">Use <see langword="PutDispProperty" /> if a property has both <see langword="PROPPUT" /> and <see langword="PROPPUTREF" /> and you need to distinguish which one is called.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PutRefDispProperty">
      <MemberSignature Language="C#" Value="PutRefDispProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags PutRefDispProperty = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.PutRefDispProperty" />
      <MemberSignature Language="VB.NET" Value="PutRefDispProperty" />
      <MemberSignature Language="C++ CLI" Value="PutRefDispProperty" />
      <MemberSignature Language="F#" Value="PutRefDispProperty = 32768" Usage="System.Reflection.BindingFlags.PutRefDispProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-192">COM 개체의 <see langword="PROPPUTREF" /> 멤버를 호출하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-192">Specifies that the <see langword="PROPPUTREF" /> member on a COM object should be invoked.</span></span> <span data-ttu-id="5f6a3-193"><see langword="PROPPUTREF" />는 값이 아니라 참조를 사용하는 속성 설정 함수를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-193"><see langword="PROPPUTREF" /> specifies a property-setting function that uses a reference instead of a value.</span></span> <span data-ttu-id="5f6a3-194">속성이 <see langword="PROPPUT" /> 및 <see langword="PROPPUTREF" /> 둘 다를 포함하고 호출할 항목을 구분해야 하는 경우 <see langword="PutRefDispProperty" />를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-194">Use <see langword="PutRefDispProperty" /> if a property has both <see langword="PROPPUT" /> and <see langword="PROPPUTREF" /> and you need to distinguish which one is called.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetField">
      <MemberSignature Language="C#" Value="SetField" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SetField = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SetField" />
      <MemberSignature Language="VB.NET" Value="SetField" />
      <MemberSignature Language="C++ CLI" Value="SetField" />
      <MemberSignature Language="F#" Value="SetField = 2048" Usage="System.Reflection.BindingFlags.SetField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-195">지정된 필드의 값을 설정하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-195">Specifies that the value of the specified field should be set.</span></span>  
  
<span data-ttu-id="5f6a3-196">이 플래그는 필드 값을 설정하기 위해 <see langword="InvokeMember" /> 메서드에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-196">This flag is passed to an <see langword="InvokeMember" /> method to set a field value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="SetProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SetProperty = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SetProperty" />
      <MemberSignature Language="VB.NET" Value="SetProperty" />
      <MemberSignature Language="C++ CLI" Value="SetProperty" />
      <MemberSignature Language="F#" Value="SetProperty = 8192" Usage="System.Reflection.BindingFlags.SetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-197">지정된 속성의 값을 설정하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-197">Specifies that the value of the specified property should be set.</span></span> <span data-ttu-id="5f6a3-198">COM 속성의 경우 이 바인딩 플래그 지정은 <see langword="PutDispProperty" /> 및 <see langword="PutRefDispProperty" />를 지정하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-198">For COM properties, specifying this binding flag is equivalent to specifying <see langword="PutDispProperty" /> and <see langword="PutRefDispProperty" />.</span></span>  
  
<span data-ttu-id="5f6a3-199">이 플래그는 속성 setter를 호출하기 위해 <see langword="InvokeMember" /> 메서드에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-199">This flag is passed to an <see langword="InvokeMember" /> method to invoke a property setter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Static = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="C++ CLI" Value="Static" />
      <MemberSignature Language="F#" Value="Static = 8" Usage="System.Reflection.BindingFlags.Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-200">정적 멤버를 검색에 포함하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-200">Specifies that static members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SuppressChangeType">
      <MemberSignature Language="C#" Value="SuppressChangeType" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SuppressChangeType = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SuppressChangeType" />
      <MemberSignature Language="VB.NET" Value="SuppressChangeType" />
      <MemberSignature Language="C++ CLI" Value="SuppressChangeType" />
      <MemberSignature Language="F#" Value="SuppressChangeType = 131072" Usage="System.Reflection.BindingFlags.SuppressChangeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5f6a3-201">구현되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="5f6a3-201">Not implemented.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>