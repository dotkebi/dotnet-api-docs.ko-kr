<Type Name="AssemblyName" FullName="System.Reflection.AssemblyName">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1364dbdcf95fcd4832b783b5b3ddcbd61d039b00" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911215" /></Metadata><TypeSignature Language="C#" Value="public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AssemblyName extends System.Object implements class System.ICloneable, class System.Runtime.InteropServices._AssemblyName, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyName" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyName&#xA;Implements _AssemblyName, ICloneable, IDeserializationCallback, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyName sealed : ICloneable, System::Runtime::InteropServices::_AssemblyName, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type AssemblyName = class&#xA;    interface ICloneable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface _AssemblyName" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyName))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1624d-101">어셈블리의 고유 ID에 대해 자세히 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-101">Describes an assembly's unique identity in full.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-102"><xref:System.Reflection.AssemblyName> 개체를 사용 하 여 해당 어셈블리에 바인딩할 수 있는 어셈블리에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-102">The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly.</span></span> <span data-ttu-id="1624d-103">어셈블리의 id는 다음과 같이 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-103">An assembly's identity consists of the following:</span></span>  
  
-   <span data-ttu-id="1624d-104">단순한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-104">Simple name.</span></span>  
  
-   <span data-ttu-id="1624d-105">버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-105">Version number.</span></span>  
  
-   <span data-ttu-id="1624d-106">암호화 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-106">Cryptographic key pair.</span></span>  
  
-   <span data-ttu-id="1624d-107">지원 되는 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-107">Supported culture.</span></span>  
  
 <span data-ttu-id="1624d-108">단순 이름은 일반적으로 확장명이 없는 매니페스트 파일에 대 한 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-108">The simple name is typically the file name for the manifest file without its extension.</span></span> <span data-ttu-id="1624d-109">공용 및 개인 키를 포함 하는 키 쌍을 어셈블리에 대 한 강력한 이름 서명을 만드는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-109">The key pair includes a public and private key, used to create strong-name signatures for assemblies.</span></span>  
  
 <span data-ttu-id="1624d-110">공용 언어 런타임에서 지 원하는 모든 컴파일러 중첩된 된 클래스의 단순한 이름 내보내고 리플렉션에서 다음 규칙에 따라 쿼리를 수행 하면 잘못 된 이름을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-110">All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.</span></span>  
  
|<span data-ttu-id="1624d-111">구분 기호</span><span class="sxs-lookup"><span data-stu-id="1624d-111">Delimiter</span></span>|<span data-ttu-id="1624d-112">의미</span><span class="sxs-lookup"><span data-stu-id="1624d-112">Meaning</span></span>|  
|---------------|-------------|  
|<span data-ttu-id="1624d-113">백슬래시(\\)</span><span class="sxs-lookup"><span data-stu-id="1624d-113">Backslash (\\)</span></span>|<span data-ttu-id="1624d-114">이스케이프 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-114">Escape character.</span></span>|  
|<span data-ttu-id="1624d-115">쉼표 ()</span><span class="sxs-lookup"><span data-stu-id="1624d-115">Comma (,)</span></span>|<span data-ttu-id="1624d-116">어셈블리 이름을 앞에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-116">Precedes the assembly name.</span></span>|  
|<span data-ttu-id="1624d-117">더하기 기호 (+)</span><span class="sxs-lookup"><span data-stu-id="1624d-117">Plus sign (+)</span></span>|<span data-ttu-id="1624d-118">중첩된 된 클래스 앞에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-118">Precedes a nested class.</span></span>|  
  
 <span data-ttu-id="1624d-119">예를 들어, 클래스에 대 한 정규화 된 이름을이 같습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-119">For example, the fully qualified name for a class might look like this:</span></span>  
  
 <span data-ttu-id="1624d-120">ContainingClass + NestedClass MyAssembly</span><span class="sxs-lookup"><span data-stu-id="1624d-120">ContainingClass+NestedClass,MyAssembly</span></span>  
  
 <span data-ttu-id="1624d-121">"+ +"가 "\\+\\+", 및 "\\"은 "\\\\"입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-121">A "++" becomes "\\+\\+", and a "\\" becomes "\\\\".</span></span>  
  
 <span data-ttu-id="1624d-122">이 정규화 된 이름은 유지 되었다가 나중에 로드 하는 데는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-122">This qualified name can be persisted and later used to load the <xref:System.Type>.</span></span> <span data-ttu-id="1624d-123">찾아 로드 하는 <xref:System.Type>를 사용 하 여 <xref:System.Type.GetType%2A> 만 또는 어셈블리 정규화 된 형식 이름의 이름 형식을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-123">To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name.</span></span> <span data-ttu-id="1624d-124"><xref:System.Type.GetType%2A> 형식을 사용 하 여 이름을 찾을 것을 <xref:System.Type> 호출자의 어셈블리에서 찾은 다음 시스템 어셈블리에서.</span><span class="sxs-lookup"><span data-stu-id="1624d-124"><xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly.</span></span> <span data-ttu-id="1624d-125"><xref:System.Type.GetType%2A> 어셈블리를 사용 하 여 정규화 된 형식 이름에 대 한 표시 됩니다는 <xref:System.Type> 모든 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-125"><xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.</span></span>  
  
 <span data-ttu-id="1624d-126">지정 된 완벽 하 게 <xref:System.Reflection.AssemblyName> 이름, culture, 공개 키 또는 공개 키 토큰 주 버전, 부 버전, 빌드 번호 및 수정 번호 매개 변수가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-126">A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters.</span></span> <span data-ttu-id="1624d-127">마지막 4 개에 패키지 됩니다는 <xref:System.Version> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-127">The last four are packaged in the <xref:System.Version> type.</span></span>  
  
 <span data-ttu-id="1624d-128">단순한 이름을 만들려면를 <xref:System.Reflection.AssemblyName> 기본 생성자를 사용 하 여 개체 및 설정의 <xref:System.Reflection.AssemblyName.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-128">To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>.</span></span> <span data-ttu-id="1624d-129">다른 속성은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-129">The other properties are optional.</span></span>  
  
 <span data-ttu-id="1624d-130">전체 강력한 이름을 만들려면를 <xref:System.Reflection.AssemblyName> 기본 생성자를 사용 하 여 개체를 설정 합니다 <xref:System.Reflection.AssemblyName.Name%2A> 및 <xref:System.Reflection.AssemblyName.KeyPair%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-130">To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span></span> <span data-ttu-id="1624d-131">다른 속성은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-131">The other properties are optional.</span></span> <span data-ttu-id="1624d-132">사용 하 여 <xref:System.Reflection.AssemblyName.SetPublicKey%2A> 고 <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> 강력한 이름과 공개 키를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-132">Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name.</span></span> <span data-ttu-id="1624d-133">강력한 이름으로 사용 하 여 항상 서명 된 <xref:System.Security.Cryptography.SHA1> 해시 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-133">The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 <span data-ttu-id="1624d-134">이름을 제대로 생성을 위해 다음 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-134">To ensure that the names are constructed correctly, use the following properties:</span></span>  
  
-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="1624d-135">사용 하 여 이름을 가져올 수도 있습니다는 `/l` 옵션을 [Gacutil.exe (전역 어셈블리 캐시 도구)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span><span class="sxs-lookup"><span data-stu-id="1624d-135">You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span></span>  
  
 <span data-ttu-id="1624d-136">부분적으로 지정 된 강력한 이름에 대 한 만들기는 <xref:System.Reflection.AssemblyName> 기본 생성자를 사용 하 여 개체를 이름 및 공개 키를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-136">For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key.</span></span> <span data-ttu-id="1624d-137">예:를 사용 하 여 만든 어셈블리는 <xref:System.Reflection.AssemblyName> 어셈블리 링커 (Al.exe)을 사용 하 여 나중에 서명할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-137">An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).</span></span>  
  
 <span data-ttu-id="1624d-138">공개 키를 지정 하는 것이 불가능 및 <xref:System.Reflection.AssemblyName.KeyPair%2A> 일관 되지 않은 값을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-138">It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values.</span></span> <span data-ttu-id="1624d-139">이 개발자 시나리오에서 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-139">This can be useful in developer scenarios.</span></span> <span data-ttu-id="1624d-140">공개 키를 사용 하 여 검색 하는 예에서 <xref:System.Reflection.AssemblyName.GetPublicKey%2A> 올바른 공개 키, while 지정는 <xref:System.Reflection.AssemblyName.KeyPair%2A> 개발 하는 동안 사용 되는 공용 및 개인 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-140">In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development.</span></span> <span data-ttu-id="1624d-141">런타임 간에 불일치를 발견 하는 경우는 <xref:System.Reflection.AssemblyName.KeyPair%2A> 공개 키를 조회 레지스트리에서 공개 키와 일치 하는 올바른 키입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-141">When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.</span></span>  
  
 <span data-ttu-id="1624d-142">표시 이름 형식의 <xref:System.Reflection.AssemblyName> 같이 이름의 시작 하는 쉼표로 구분 된 유니코드 문자열:</span><span class="sxs-lookup"><span data-stu-id="1624d-142">The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:</span></span>  
  
 `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\0'`  
  
 <span data-ttu-id="1624d-143">`Name` 어셈블리의 텍스트 이름이입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-143">`Name` is the textual name of the assembly.</span></span> <span data-ttu-id="1624d-144">`CultureInfo` RFC1766-형식으로 정의 된 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-144">`CultureInfo` is the RFC1766-format-defined culture.</span></span> <span data-ttu-id="1624d-145">`Major`를 `Minor`, `Build`, 및 `Revision` 는 주 버전, 부 버전, 빌드 번호 및 어셈블리의 수정 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-145">`Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly.</span></span> <span data-ttu-id="1624d-146">`StrongName` 16 진수로 인코딩된 하위 64 비트 sha-1 해시 알고리즘을 사용 하 여 생성 한 공개 키와 지정 된 공개 키의 해시 값은 <xref:System.Reflection.AssemblyName.SetPublicKey%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-146">`StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span> <span data-ttu-id="1624d-147">`PublicKeyToken` 지정 된 16 진수로 인코딩된 공개 키가 <xref:System.Reflection.AssemblyName.SetPublicKey%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-147">`PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span>  
  
 <span data-ttu-id="1624d-148">최소에서 진행 되 고 두 개의 16 진수 문자, 이진 개체의 각 바이트 변환으로 정의 16 진수 인코딩을 가장 중요 한 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-148">Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte.</span></span> <span data-ttu-id="1624d-149">필요에 따라 추가 표시 값이 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-149">Additional display values will be added as deemed necessary.</span></span>  
  
 <span data-ttu-id="1624d-150">전체 공개 키를 알 경우 PublicKey는 강력한 이름에 대 한 대체 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-150">If the full public key is known, then PublicKey may be substituted for StrongName.</span></span>  
  
 <span data-ttu-id="1624d-151">제외 하 고 참고 `Name`먼저와 야 하는, 어휘 매개 변수 순서가 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-151">Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant.</span></span> <span data-ttu-id="1624d-152">그러나 모든 매개 변수 (`Version`, `Culture`를 `StrongName` 또는 `PublicKey`) 이벤트도 집합 생략 된 것으로 간주 됩니다 및 <xref:System.Reflection.AssemblyName> 부분 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-152">However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial.</span></span> <span data-ttu-id="1624d-153">부분 정보를 지정 하는 경우 위에서 설명한 순서 대로 이름 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-153">When specifying partial information, Name parameters must be specified in the order described above.</span></span>  
  
 <span data-ttu-id="1624d-154">표시 이름, 규칙을 제공 하는 경우 `StrongName =null` 또는 `PublicKey= null` 바인딩 및 단순한 이름의 어셈블리에 대해 일치 하는 필수임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-154">When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required.</span></span> <span data-ttu-id="1624d-155">또한 규칙 `Culture= ""` (큰따옴표는 빈 문자열을 나타냄) 기본 문화권에 대해 일치를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-155">Additionally, the convention `Culture= ""` (double quote representing an empty string) indicates matching against the default culture.</span></span>  
  
 <span data-ttu-id="1624d-156">다음 예제와 <xref:System.Reflection.AssemblyName> 단순한 이름의 어셈블리의 기본 문화권을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-156">The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.</span></span>  
  
```  
ExampleAssembly, Culture=""  
```  
  
 <span data-ttu-id="1624d-157">다음 예제에서는 문화권 "en"을 사용하는 강력한 이름의 어셈블리에 대한 완전히 지정된 참조를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-157">The following example shows a fully specified reference for a strongly named assembly with culture "en".</span></span>  
  
```  
ExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  
```  
  
   
  
## Examples  
 <span data-ttu-id="1624d-158">이 예제에서는 다양 한 리플렉션 클래스를 사용 하는 어셈블리에 포함 된 메타 데이터를 분석 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-158">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Version" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKey" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
    <altmember cref="P:System.Type.FullName" />
    <altmember cref="M:System.Type.GetType" />
    <altmember cref="P:System.Type.AssemblyQualifiedName" />
    <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md"><span data-ttu-id="1624d-159">정규화된 형식 이름 지정</span><span class="sxs-lookup"><span data-stu-id="1624d-159">Specifying Fully Qualified Type Names</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1624d-160"><see cref="T:System.Reflection.AssemblyName" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-160">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1624d-161"><see cref="T:System.Reflection.AssemblyName" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-161">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1624d-162">다음 예에서는 이라는 동적 어셈블리를 `MyAssembly.exe` 하드 디스크에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-162">The following example creates a dynamic assembly named `MyAssembly.exe` and saves it to your hard disk.</span></span> <span data-ttu-id="1624d-163">예제를 실행 한 후 사용할 수 있습니다 합니다 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) 어셈블리 메타 데이터를 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-163">After running the example, you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the assembly metadata.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#1)]
 [!code-csharp[AssemblyName_Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#1)]
 [!code-vb[AssemblyName_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="new System.Reflection.AssemblyName assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="1624d-164"><see cref="P:System.Reflection.AssemblyName.FullName" /> 속성에서 반환된 어셈블리의 표시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-164">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span></span></param>
        <summary><span data-ttu-id="1624d-165">지정된 표시 이름을 사용하여 <see cref="T:System.Reflection.AssemblyName" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-165">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class with the specified display name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-166">제공 된 `assemblyName` 구문 분석 및 새 적절 한 필드 <xref:System.Reflection.AssemblyName> 표시 이름에서 값을 사용 하 여 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-166">The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name.</span></span> <span data-ttu-id="1624d-167">이것이 표시 이름을 구문 분석에 좋은 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-167">This is the recommended way of parsing display names.</span></span> <span data-ttu-id="1624d-168">표시 이름을 구문 분석 하려면 사용자 고유의 코드를 작성 하는 것은 좋지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-168">Writing your own code to parse display names is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-169">다음 예에서는 인스턴스의 <xref:System.Reflection.AssemblyName> 표시 이름에서.</span><span class="sxs-lookup"><span data-stu-id="1624d-169">The following example creates an instance of <xref:System.Reflection.AssemblyName> from a display name.</span></span> <span data-ttu-id="1624d-170">개별 요소의 표시 이름 속성으로 콘솔에 출력 되는 <xref:System.Reflection.AssemblyName> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-170">The individual elements of the display name are output to the console as properties of the <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor_2/CPP/source.cpp#1)]
 [!code-csharp[AssemblyName_Constructor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor_2/CS/source.cs#1)]
 [!code-vb[AssemblyName_Constructor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1624d-171"><paramref name="assemblyName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-171"><paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1624d-172"><paramref name="assemblyName" />이 길이가 0인 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="1624d-172"><paramref name="assemblyName" /> is a zero length string.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="1624d-173"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.IO.IOException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-173">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="1624d-174">참조된 어셈블리를 찾을 수 없거나 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="1624d-174">The referenced assembly could not be found, or could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="assemblyName.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1624d-175">이 <see cref="T:System.Reflection.AssemblyName" /> 개체의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-175">Makes a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></summary>
        <returns><span data-ttu-id="1624d-176">이 <see cref="T:System.Reflection.AssemblyName" /> 개체의 복사본인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-176">An object that is a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-177">새 개체가 만들어지면 원본과 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-177">A new object is created, identical to the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string with get, set" Usage="System.Reflection.AssemblyName.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-178">어셈블리의 위치를 URL로 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-178">Gets or sets the location of the assembly as a URL.</span></span></summary>
        <value><span data-ttu-id="1624d-179">어셈블리의 URL 위치인 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-179">A string that is the URL location of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-180">어셈블리를 로드할 때이 값도 얻을 수 있습니다 사용 하 여 <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-180">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1624d-181">어셈블리를 바이트 배열로 로드 하는 경우이 속성의 호출자의 위치를 반환 하는 <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> 메서드 오버 로드, 로드 된 어셈블리의 위치에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-181">If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1624d-182">사용 하지 마십시오는 <xref:System.Reflection.AssemblyName> 만 <xref:System.Reflection.AssemblyName.CodeBase%2A> 속성 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-182">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="1624d-183">합니다 <xref:System.Reflection.AssemblyName.CodeBase%2A> 속성 요소를 제공 하지 않습니다 (예: 이름 또는 버전)에서 어셈블리 id의 로드가 발생 하지 않습니다 부하-id 별 규칙에 따라에서 예상한 대로 <xref:System.Reflection.Assembly.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1624d-183">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="1624d-184">대신, 어셈블리 로드 규칙을 사용 하 여 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-184">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="1624d-185">로드 컨텍스트를 사용 하 여 단점에 대 한 정보를 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 메서드 오버 로드 또는 [어셈블리를 로드 하기 위한 모범 사례](~/docs/framework/deployment/best-practices-for-assembly-loading.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-185">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-186">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-186">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-187">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.CodeBase%2A> 어셈블리 저장 된 디렉터리를 지정 하려면 속성은 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-187">When the assembly is created, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to specify the directory where the assembly is saved.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#1)]
 [!code-csharp[AssemblyName_CodeBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#1)]
 [!code-vb[AssemblyName_CodeBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyContentType ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As AssemblyContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyContentType ContentType { System::Reflection::AssemblyContentType get(); void set(System::Reflection::AssemblyContentType value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : System.Reflection.AssemblyContentType with get, set" Usage="System.Reflection.AssemblyName.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-188">어셈블리가 포함하는 콘텐츠의 형식을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-188">Gets or sets a value that indicates what type of content the assembly contains.</span></span></summary>
        <value><span data-ttu-id="1624d-189">어셈블리가 포함하는 콘텐츠의 형식을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-189">A value that indicates what type of content the assembly contains.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CultureInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CultureInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInfo As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CultureInfo { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInfo : System.Globalization.CultureInfo with get, set" Usage="System.Reflection.AssemblyName.CultureInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-190">어셈블리에서 지원하는 문화권을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-190">Gets or sets the culture supported by the assembly.</span></span></summary>
        <value><span data-ttu-id="1624d-191">어셈블리에서 지원하는 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-191">An object that represents the culture supported by the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1624d-192">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-192">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-193">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.CultureInfo%2A> 속성을 사용 하는 어셈블리의 표시 이름에 참가 하는 문화권을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-193">When the assembly is created, the <xref:System.Reflection.AssemblyName.CultureInfo%2A> property is used to specify the culture, which is part of the assembly's display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#2)]
 [!code-csharp[AssemblyName_CodeBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#2)]
 [!code-vb[AssemblyName_CodeBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string with get, set" Usage="System.Reflection.AssemblyName.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-194">어셈블리와 연결된 문화권의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-194">Gets or sets the name of the culture associated with the assembly.</span></span></summary>
        <value><span data-ttu-id="1624d-195">문화권 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-195">The culture name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-196">코드베이스를 나타내는 URI를 가져옵니다(이스케이프 문자 포함).</span><span class="sxs-lookup"><span data-stu-id="1624d-196">Gets the URI, including escape characters, that represents the codebase.</span></span></summary>
        <value><span data-ttu-id="1624d-197">이스케이프 문자를 포함하는 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-197">A URI with escape characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyNameFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyNameFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As AssemblyNameFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyNameFlags Flags { System::Reflection::AssemblyNameFlags get(); void set(System::Reflection::AssemblyNameFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Reflection.AssemblyNameFlags with get, set" Usage="System.Reflection.AssemblyName.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyNameFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-198">어셈블리의 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-198">Gets or sets the attributes of the assembly.</span></span></summary>
        <value><span data-ttu-id="1624d-199">어셈블리의 특성을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-199">A value that represents the attributes of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1624d-200">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-200">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-201">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.Flags%2A> 속성을 사용 하는 어셈블리에 공개 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-201">When the assembly is created, the <xref:System.Reflection.AssemblyName.Flags%2A> property is used to specify that the assembly has a public key.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#4)]
 [!code-csharp[AssemblyName_KeyPair#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#4)]
 [!code-vb[AssemblyName_KeyPair#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.AssemblyName.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-202">표시 이름이라고도 하는 어셈블리의 전체 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-202">Gets the full name of the assembly, also known as the display name.</span></span></summary>
        <value><span data-ttu-id="1624d-203">표시 이름이라고도 하는 어셈블리의 전체 이름인 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-203">A string that is the full name of the assembly, also known as the display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-204">표시 이름은 단순한 이름, 버전 번호, 지원 되는 문화권 및 공개 키의 일반적으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-204">The display name typically consists of the simple name, version number, supported culture, and public key.</span></span> <span data-ttu-id="1624d-205">예:</span><span class="sxs-lookup"><span data-stu-id="1624d-205">For example:</span></span>  
  
```  
mylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  
```  
  
 <span data-ttu-id="1624d-206">표시 이름을 구문 분석 하려면 사용자 고유의 코드를 작성 하는 것은 좋지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-206">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="1624d-207">대신, 표시 이름을 전달 합니다 <xref:System.Reflection.AssemblyName.%23ctor%2A> 생성자를 구문 분석 하 고 새의 적절 한 필드를 채웁니다 <xref:System.Reflection.AssemblyName>합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-207">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="1624d-208">어셈블리를 로드할 때이 값도 얻을 수 있습니다 사용 하 여 <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-208">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-209">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-209">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-210">코드 예제를 설정 하는 어셈블리를 만들면 합니다 <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>를 <xref:System.Reflection.AssemblyName.CultureInfo%2A>, 및 <xref:System.Reflection.AssemblyName.KeyPair%2A> 속성을 함께 구성 하는 어셈블리의 전체 이름 또는 표시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-210">When the assembly is created, the code example sets the <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, and <xref:System.Reflection.AssemblyName.KeyPair%2A> properties, which together comprise an assembly's full name, or display name.</span></span> <span data-ttu-id="1624d-211"><xref:System.Reflection.AssemblyName.FullName%2A> 속성은 다음 표시 이름을 검색 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-211">The <xref:System.Reflection.AssemblyName.FullName%2A> property is then used to retrieve the display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#4)]
 [!code-csharp[AssemblyName_CodeBase#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#4)]
 [!code-vb[AssemblyName_CodeBase#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md"><span data-ttu-id="1624d-212">정규화된 형식 이름 지정</span><span class="sxs-lookup"><span data-stu-id="1624d-212">Specifying Fully Qualified Type Names</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyFile As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member GetAssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="System.Reflection.AssemblyName.GetAssemblyName assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="1624d-213"><see cref="T:System.Reflection.AssemblyName" />이 반환될 어셈블리의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-213">The path for the assembly whose <see cref="T:System.Reflection.AssemblyName" /> is to be returned.</span></span></param>
        <summary><span data-ttu-id="1624d-214">지정된 파일의 <see cref="T:System.Reflection.AssemblyName" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-214">Gets the <see cref="T:System.Reflection.AssemblyName" /> for a given file.</span></span></summary>
        <returns><span data-ttu-id="1624d-215">제공된 어셈블리 파일을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-215">An object that represents the given assembly file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-216">이 기능은 어셈블리 매니페스트가 포함 되는 경우에 작동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-216">This will only work if the file contains an assembly manifest.</span></span> <span data-ttu-id="1624d-217">이 메서드를 사용 하면 파일을 열고, 닫을 수 있지만이 도메인에 어셈블리 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-217">This method causes the file to be opened and closed, but the assembly is not added to this domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-218">다음 예제에서는 <xref:System.Reflection.AssemblyName> 디스크에 있는 어셈블리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-218">The following example gets the <xref:System.Reflection.AssemblyName> for an assembly on disk.</span></span> <span data-ttu-id="1624d-219">실행 되지 않습니다 "MyAssembly.exe" 문자열을 대체 하지 않는 한 (필요한 경우 경로 포함)는 어셈블리의 파일 이름을 사용 하 여 하드 디스크에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-219">It will not run unless you replace the string "MyAssembly.exe" with the file name of an assembly (including the path, if necessary) on your hard disk.</span></span> <span data-ttu-id="1624d-220">또는 "MyAssembly.exe"으로이 예제를 컴파일할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-220">Alternatively, you can compile this example as "MyAssembly.exe".</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#1)]
 [!code-csharp[AssemblyName_GetAssemblyName#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#1)]
 [!code-vb[AssemblyName_GetAssemblyName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1624d-221"><paramref name="assemblyFile" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-221"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1624d-222"><paramref name="assemblyFile" />이 잘못된 경우(예: 잘못된 문화권을 사용하는 어셈블리)</span><span class="sxs-lookup"><span data-stu-id="1624d-222"><paramref name="assemblyFile" /> is invalid, such as an assembly with an invalid culture.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1624d-223"><paramref name="assemblyFile" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="1624d-223"><paramref name="assemblyFile" /> is not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1624d-224">호출자에게 경로 검색 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-224">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="1624d-225"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-225"><paramref name="assemblyFile" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1624d-226">어셈블리 또는 모듈이 서로 다른 두 증명 정보 집합으로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-226">An assembly or module was loaded twice with two different sets of evidence.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1624d-227">경로에 대 한 정보에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-227">for access to information in the path.</span></span> <span data-ttu-id="1624d-228">연관된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1624d-228">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="assemblyName.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="1624d-229">serialization 정보로 채울 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-229">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="1624d-230">serialization의 대상 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-230">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="1624d-231">이 <see langword="AssemblyName" />의 인스턴스를 다시 만드는 데 필요한 모든 데이터가 포함된 serialization 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-231">Gets serialization information with all the data needed to recreate an instance of this <see langword="AssemblyName" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1624d-232"><paramref name="info" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-232"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1624d-233">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-233">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="1624d-234">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-234">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKey();" />
      <MemberSignature Language="F#" Value="member this.GetPublicKey : unit -&gt; byte[]" Usage="assemblyName.GetPublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1624d-235">어셈블리의 공개 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-235">Gets the public key of the assembly.</span></span></summary>
        <returns><span data-ttu-id="1624d-236">어셈블리의 공개 키가 포함된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-236">A byte array that contains the public key of the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1624d-237">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-237">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-238">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.SetPublicKey%2A> 어셈블리에 공개 키 제공 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-238">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="1624d-239"><xref:System.Reflection.AssemblyName.GetPublicKey%2A> 메서드는 다음 콘솔에 표시 되는 공개 키를 검색 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-239">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#2)]
 [!code-csharp[AssemblyName_KeyPair#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#2)]
 [!code-vb[AssemblyName_KeyPair#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1624d-240">공개 키가 제공되지만(예: <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> 메서드 사용) 공개 키 토큰은 제공되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-240">A public key was provided (for example, by using the <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> method), but no public key token was provided.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeyToken">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKeyToken () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKeyToken();" />
      <MemberSignature Language="F#" Value="member this.GetPublicKeyToken : unit -&gt; byte[]" Usage="assemblyName.GetPublicKeyToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1624d-241">응용 프로그램이나 어셈블리 서명에 사용된 공개 키 SHA-1 해시의 마지막 8자인 공개 키 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-241">Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span></span></summary>
        <returns><span data-ttu-id="1624d-242">공개 키 토큰이 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-242">A byte array that contains the public key token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1624d-243">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-243">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-244">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> 메서드는 어셈블리의 공개 키 토큰을 설정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-244">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="1624d-245"><xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> 메서드는 다음 콘솔에 표시 되는 공개 키 토큰을 검색 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-245">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#3)]
 [!code-csharp[AssemblyName_KeyPair#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#3)]
 [!code-vb[AssemblyName_KeyPair#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As AssemblyHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyHashAlgorithm HashAlgorithm { System::Configuration::Assemblies::AssemblyHashAlgorithm get(); void set(System::Configuration::Assemblies::AssemblyHashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Configuration.Assemblies.AssemblyHashAlgorithm with get, set" Usage="System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-246">어셈블리 매니페스트에 사용되는 해시 알고리즘을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-246">Gets or sets the hash algorithm used by the assembly manifest.</span></span></summary>
        <value><span data-ttu-id="1624d-247">어셈블리 매니페스트에 사용되는 해시 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-247">The hash algorithm used by the assembly manifest.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1624d-248">부터 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> 의 속성을 <xref:System.Reflection.AssemblyName> 에서 반환 되는 개체를 <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> 메서드는 <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> 참조 된 어셈블리에 대 한 해시 알고리즘이 없음이 되었는지 또는 참조 된 해시 알고리즘 어셈블리를 식별 하지는 <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-248">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="1624d-249">이전 버전의.NET Framework에는 <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> 반환 되는 속성 <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> 이런에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-249">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-250">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-250">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-251">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> 속성은 어셈블리 매니페스트에 대 한 해시 알고리즘을 설정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-251">When the assembly is created, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property is used to set the hash algorithm for the assembly manifest.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#3)]
 [!code-csharp[AssemblyName_CodeBase#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#3)]
 [!code-vb[AssemblyName_CodeBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPair">
      <MemberSignature Language="C#" Value="public System.Reflection.StrongNameKeyPair KeyPair { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.StrongNameKeyPair KeyPair" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.KeyPair" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPair As StrongNameKeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::StrongNameKeyPair ^ KeyPair { System::Reflection::StrongNameKeyPair ^ get(); void set(System::Reflection::StrongNameKeyPair ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPair : System.Reflection.StrongNameKeyPair with get, set" Usage="System.Reflection.AssemblyName.KeyPair" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.StrongNameKeyPair</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-252">어셈블리에 대한 강력한 이름 서명을 만드는 데 사용되는 공개 및 개인 암호화 키 쌍을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-252">Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.</span></span></summary>
        <value><span data-ttu-id="1624d-253">어셈블리에 대한 강력한 이름을 만드는 데 사용할 공개 및 개인 암호화 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-253">The public and private cryptographic key pair to be used to create a strong name for the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-254">설정 하지 않으면 런타임에서 어셈블리를 로드할 때의 <xref:System.Reflection.AssemblyName.KeyPair%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-254">When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property.</span></span> <span data-ttu-id="1624d-255">속성의 getter 유용만 사용 하기 전에 속성을 설정 하는 사용자는 <xref:System.Reflection.AssemblyName> 동적 어셈블리를 만드는 개체 및 키 쌍을 검색 하려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-255">The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-256">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-256">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-257">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.KeyPair%2A> 속성을 사용 하는 어셈블리의 공개 및 개인 암호화 키를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-257">When the assembly is created, the <xref:System.Reflection.AssemblyName.KeyPair%2A> property is used to set the assembly's public and private cryptographic keys.</span></span> <span data-ttu-id="1624d-258">.</span><span class="sxs-lookup"><span data-stu-id="1624d-258">.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#1)]
 [!code-csharp[AssemblyName_KeyPair#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#1)]
 [!code-vb[AssemblyName_KeyPair#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Reflection.AssemblyName.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-259">어셈블리의 단순한 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-259">Gets or sets the simple name of the assembly.</span></span> <span data-ttu-id="1624d-260">어셈블리의 단순한 이름은 대개 어셈블리의 매니페스트 파일 이름에서 확장명을 제외한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-260">This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.</span></span></summary>
        <value><span data-ttu-id="1624d-261">어셈블리의 단순한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-261">The simple name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-262">매니페스트 파일이 어셈블리 매니페스트가 포함 된 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-262">The manifest file is the file that contains the assembly manifest.</span></span>  
  
 <span data-ttu-id="1624d-263">예를 들어, 간단한 "MyAssembly.dll" 라는 단일 파일 어셈블리의 이름은 "MyAssembly"입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-263">For example, the simple name of a single-file assembly named "MyAssembly.dll" is "MyAssembly".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-264">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-264">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-265">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.Name%2A> 속성을 사용 하는 동적 어셈블리의 단순한 이름을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-265">When the assembly is created, the <xref:System.Reflection.AssemblyName.Name%2A> property is used to set the simple name of the dynamic assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#2)]
 [!code-csharp[AssemblyName_Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#2)]
 [!code-vb[AssemblyName_Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md"><span data-ttu-id="1624d-266">정규화된 형식 이름 지정</span><span class="sxs-lookup"><span data-stu-id="1624d-266">Specifying Fully Qualified Type Names</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="assemblyName.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="1624d-267">deserialization 이벤트의 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-267">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="1624d-268"><see cref="T:System.Runtime.Serialization.ISerializable" /> 인터페이스를 구현하고 역직렬화가 완료되면 역직렬화 이벤트에 의해 콜백됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-268">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ProcessorArchitecture ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorArchitecture As ProcessorArchitecture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ProcessorArchitecture ProcessorArchitecture { System::Reflection::ProcessorArchitecture get(); void set(System::Reflection::ProcessorArchitecture value); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorArchitecture : System.Reflection.ProcessorArchitecture with get, set" Usage="System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ProcessorArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-269">실행 파일의 대상이 되는 플랫폼의 프로세서 및 워드 당 비트 수를 식별하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-269">Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.</span></span></summary>
        <value><span data-ttu-id="1624d-270">실행 파일의 대상이 되는 플랫폼의 프로세서 및 워드 당 비트 수를 식별하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-270">One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-271">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)],이 속성은 항상 반환 <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> 참조 어셈블리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-271">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> for reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferenceMatchesDefinition">
      <MemberSignature Language="C#" Value="public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReferenceMatchesDefinition(class System.Reflection.AssemblyName reference, class System.Reflection.AssemblyName definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMatchesDefinition (reference As AssemblyName, definition As AssemblyName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ReferenceMatchesDefinition(System::Reflection::AssemblyName ^ reference, System::Reflection::AssemblyName ^ definition);" />
      <MemberSignature Language="F#" Value="static member ReferenceMatchesDefinition : System.Reflection.AssemblyName * System.Reflection.AssemblyName -&gt; bool" Usage="System.Reflection.AssemblyName.ReferenceMatchesDefinition (reference, definition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Reflection.AssemblyName" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definition" Type="System.Reflection.AssemblyName" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="1624d-272">참조 어셈블리 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-272">The reference assembly name.</span></span></param>
        <param name="definition"><span data-ttu-id="1624d-273">참조 어셈블리와 비교할 어셈블리 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-273">The assembly name that is compared to the reference assembly.</span></span></param>
        <summary><span data-ttu-id="1624d-274">두 어셈블리 이름이 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-274">Returns a value indicating whether two assembly names are the same.</span></span> <span data-ttu-id="1624d-275">비교는 단순 어셈블리 이름을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-275">The comparison is based on the simple assembly names.</span></span></summary>
        <returns><span data-ttu-id="1624d-276">단순 어셈블리 이름이 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-276"><see langword="true" /> if the simple assembly names are the same; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-277">비교는 단순 어셈블리 이름에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-277">The comparison depends only on the simple assembly name.</span></span> <span data-ttu-id="1624d-278">버전, 문화권 및 공개 키 토큰을 무시합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-278">It ignores version, culture, and public key token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKey">
      <MemberSignature Language="C#" Value="public void SetPublicKey (byte[] publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKey(unsigned int8[] publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKey (publicKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKey(cli::array &lt;System::Byte&gt; ^ publicKey);" />
      <MemberSignature Language="F#" Value="member this.SetPublicKey : byte[] -&gt; unit" Usage="assemblyName.SetPublicKey publicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKey"><span data-ttu-id="1624d-279">어셈블리의 공개 키가 포함된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-279">A byte array containing the public key of the assembly.</span></span></param>
        <summary><span data-ttu-id="1624d-280">어셈블리를 식별하는 공개 키를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-280">Sets the public key identifying the assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-281">또한 사용 해야는 <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> 공개 키 토큰을 제공 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-281">You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="1624d-282">이 고, 그렇지는 <xref:System.Security.SecurityException> 때 throw 되는 <xref:System.Reflection.AssemblyName.GetPublicKey%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-282">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-283">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-283">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-284">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.SetPublicKey%2A> 어셈블리에 공개 키 제공 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-284">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="1624d-285"><xref:System.Reflection.AssemblyName.GetPublicKey%2A> 메서드는 다음 콘솔에 표시 되는 공개 키를 검색 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-285">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#1)]
 [!code-csharp[AssemblyName_SetPublicKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#1)]
 [!code-vb[AssemblyName_SetPublicKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKeyToken">
      <MemberSignature Language="C#" Value="public void SetPublicKeyToken (byte[] publicKeyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKeyToken(unsigned int8[] publicKeyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKeyToken (publicKeyToken As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKeyToken(cli::array &lt;System::Byte&gt; ^ publicKeyToken);" />
      <MemberSignature Language="F#" Value="member this.SetPublicKeyToken : byte[] -&gt; unit" Usage="assemblyName.SetPublicKeyToken publicKeyToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKeyToken" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKeyToken"><span data-ttu-id="1624d-286">어셈블리의 공개 키 토큰이 포함된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-286">A byte array containing the public key token of the assembly.</span></span></param>
        <summary><span data-ttu-id="1624d-287">응용 프로그램이나 어셈블리 서명에 사용된 공개 키 SHA-1 해시의 마지막 8바이트인 공개 키 토큰을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-287">Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-288">호출 하 여 공개 키를 설정 하는 <xref:System.Reflection.AssemblyName.SetPublicKey%2A> 메서드를 사용 해야는 <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> 공개 키 토큰을 제공 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-288">When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="1624d-289">이 고, 그렇지는 <xref:System.Security.SecurityException> 때 throw 되는 <xref:System.Reflection.AssemblyName.GetPublicKey%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-289">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-290">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-290">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-291">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> 메서드는 어셈블리의 공개 키 토큰을 설정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-291">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="1624d-292"><xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> 메서드는 다음 콘솔에 표시 되는 공개 키 토큰을 검색 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-292">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#2)]
 [!code-csharp[AssemblyName_SetPublicKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#2)]
 [!code-vb[AssemblyName_SetPublicKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyName.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyName::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="1624d-293">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-293">Reserved for future use.</span></span> <span data-ttu-id="1624d-294">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-294">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="1624d-295">매핑할 전달된 이름의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-295">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="1624d-296">매핑할 이름의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-296">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="1624d-297">이름을 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-297">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="1624d-298">이름에 해당하는 ID를 받는 호출자가 할당한 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-298">Caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="1624d-299">이름 집합을 해당하는 디스패치 식별자 집합에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-299">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-300">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-300">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1624d-301">에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-301">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="1624d-302">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-302">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyName.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="1624d-303">반환할 형식 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-303">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="1624d-304">형식 정보의 로캘 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-304">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="1624d-305">요청된 형식 정보 개체에 대한 포인터를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-305">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="1624d-306">인터페이스의 형식 정보를 가져오는 데 사용할 수 있는 개체의 형식 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-306">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-307">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-307">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1624d-308">에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-308">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="1624d-309">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-309">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyName.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="1624d-310">개체에서 제공하는 형식 정보 인터페이스의 수를 받는 위치를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-310">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="1624d-311">개체에서 제공하는 형식 정보 인터페이스의 수를 검색합니다(0 또는 1).</span><span class="sxs-lookup"><span data-stu-id="1624d-311">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-312">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-312">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1624d-313">에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-313">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="1624d-314">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-314">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyName.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyName::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="1624d-315">멤버를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-315">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="1624d-316">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-316">Reserved for future use.</span></span> <span data-ttu-id="1624d-317">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-317">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="1624d-318">인수를 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-318">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="1624d-319">호출의 컨텍스트를 설명하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-319">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="1624d-320">인수의 배열, 명명된 인수에 대한 인수 DispID의 배열 및 배열에 있는 요소의 개수가 들어 있는 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-320">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="1624d-321">결과를 저장할 위치에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-321">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="1624d-322">예외 정보가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-322">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="1624d-323">오류가 있는 첫 번째 인수의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-323">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="1624d-324">개체에서 노출하는 메서드와 속성에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-324">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-325">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스에는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-325">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1624d-326">에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-326">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="1624d-327">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-327">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assemblyName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1624d-328">표시 이름이라고도 하는 어셈블리의 전체 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-328">Returns the full name of the assembly, also known as the display name.</span></span></summary>
        <returns><span data-ttu-id="1624d-329">어셈블리의 전체 이름입니다. 어셈블리의 전체 이름을 확인할 수 없는 경우에는 클래스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-329">The full name of the assembly, or the class name if the full name cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-330">에 대 한 설명을 참조 하세요. <xref:System.Reflection.AssemblyName> 반환된 된 문자열의 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-330">See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-331">다음 예제에서는 <xref:System.Reflection.AssemblyName> 가상 개체 `MyAssembly.exe` 어셈블리를 사용 하 여 다음을 <xref:System.Reflection.AssemblyName.ToString%2A> 메서드 전체 어셈블리 이름을 검색 하거나 표시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-331">The following example gets an <xref:System.Reflection.AssemblyName> object for a hypothetical `MyAssembly.exe` assembly, and then uses the <xref:System.Reflection.AssemblyName.ToString%2A> method to retrieve the full assembly name, or display name.</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#2)]
 [!code-csharp[AssemblyName_GetAssemblyName#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#2)]
 [!code-vb[AssemblyName_GetAssemblyName#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version with get, set" Usage="System.Reflection.AssemblyName.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-332">어셈블리의 주 번호, 부 번호, 빌드 번호 및 수정 번호를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-332">Gets or sets the major, minor, build, and revision numbers of the assembly.</span></span></summary>
        <value><span data-ttu-id="1624d-333">어셈블리의 주 번호, 부 번호, 빌드 번호 및 수정 번호를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-333">An object that represents the major, minor, build, and revision numbers of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-334">버전의 모든 구성 요소에는 0 보다 크거나 정수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-334">All components of the version must be integers greater than or equal to zero.</span></span> <span data-ttu-id="1624d-335">메타 데이터 제한 주, 부 빌드 버전 및 최대 값으로 어셈블리에 대 한 수정 버전 구성 <xref:System.UInt16.MaxValue?displayProperty=nameWithType> -1입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-335">Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span></span> <span data-ttu-id="1624d-336">구성 요소에서이 값을 초과 하면 오류가 throw 되지 않으면 그러나 동적 어셈블리를 해당 구성 요소는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-336">If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1624d-337">이 섹션에서는 두 가지 예제를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-337">This section contains two examples.</span></span> <span data-ttu-id="1624d-338">첫 번째 예에서는 현재 실행 중인 어셈블리의 버전을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-338">The first example shows how to retrieve the version of the currently executing assembly.</span></span> <span data-ttu-id="1624d-339">두 번째 예제에서는 사용 하 여 <xref:System.Reflection.AssemblyName.Version%2A> 동적 어셈블리를 생성 하는 경우 어셈블리 버전을 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-339">The second example shows how to use the <xref:System.Reflection.AssemblyName.Version%2A> property to specify the assembly version when you emit a dynamic assembly.</span></span>  
  
 <span data-ttu-id="1624d-340">**예제 1**</span><span class="sxs-lookup"><span data-stu-id="1624d-340">**Example 1**</span></span>  
  
 <span data-ttu-id="1624d-341">다음 예제에서는 검색 하 고 현재 실행 중인 어셈블리 및 포함 된 어셈블리의 버전 번호를 표시 합니다 <xref:System.String> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-341">The following example retrieves and displays the version numbers of the currently executing assembly and the assembly that contains the <xref:System.String> class.</span></span>  
  
 [!code-cpp[AssemblyName.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName.Version/cpp/Example.cpp#1)]
 [!code-csharp[AssemblyName.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName.Version/cs/Example.cs#1)]
 [!code-vb[AssemblyName.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName.Version/vb/Example.vb#1)]  
  
 <span data-ttu-id="1624d-342">**예제 2**</span><span class="sxs-lookup"><span data-stu-id="1624d-342">**Example 2**</span></span>  
  
 <span data-ttu-id="1624d-343">다음 예제에서는 동적 어셈블리를 내보내 현재 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-343">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="1624d-344">어셈블리를 만들면는 <xref:System.Reflection.AssemblyName.Version%2A> 속성을 사용 하는 어셈블리에 대 한 버전 정보를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-344">When the assembly is created, the <xref:System.Reflection.AssemblyName.Version%2A> property is used to specify version information for the assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#3)]
 [!code-csharp[AssemblyName_Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#3)]
 [!code-vb[AssemblyName_Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionCompatibility">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VersionCompatibility As AssemblyVersionCompatibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyVersionCompatibility VersionCompatibility { System::Configuration::Assemblies::AssemblyVersionCompatibility get(); void set(System::Configuration::Assemblies::AssemblyVersionCompatibility value); };" />
      <MemberSignature Language="F#" Value="member this.VersionCompatibility : System.Configuration.Assemblies.AssemblyVersionCompatibility with get, set" Usage="System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyVersionCompatibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1624d-345">이 어셈블리와 다른 어셈블리의 호환성과 관련된 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-345">Gets or sets the information related to the assembly's compatibility with other assemblies.</span></span></summary>
        <value><span data-ttu-id="1624d-346">이 어셈블리와 다른 어셈블리의 호환성에 대한 정보를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-346">A value that represents information about the assembly's compatibility with other assemblies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1624d-347"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> 정보를 나타냅니다 예를 들어, 어셈블리 장치 드라이버를 통해 나란히 충돌로 인해 다른 버전과 함께 실행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-347"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.</span></span>  
  
 <span data-ttu-id="1624d-348">현재 <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> 항상 반환 <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, 로더에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-348">Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, and is not used by the loader.</span></span> <span data-ttu-id="1624d-349">이 속성은 향후 기능에 대해 예약 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1624d-349">This property is reserved for a future feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>