<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec6a319f71ff453bcbc8ccde88ae4c1671d48a5e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58715615" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8644f-101">리플렉션 전용 컨텍스트에 로드되는 어셈블리, 모듈, 형식, 멤버 및 매개 변수에 대한 사용자 지정 특성 데이터에 액세스할 수 있도록 해줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-102">항상 하 고 해당 속성을 검사 한 다음,와 같은 메서드를 사용 하 여 인스턴스를 만들어 사용자 지정 특성을 검사할 수 없는 하므로 리플렉션 전용 컨텍스트에서 검사 중인 코드를 실행할 수 없습니다 <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>등 .</span><span class="sxs-lookup"><span data-stu-id="8644f-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="8644f-103">특성 형식 자체에 대 한 코드는 리플렉션 전용 컨텍스트에 로드 되 면이 실행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="8644f-104"><xref:System.Reflection.CustomAttributeData> 클래스 특성에 대 한 추상화를 제공 하 여 리플렉션 전용 컨텍스트에서 사용자 지정 특성의 검사를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="8644f-105">이 클래스의 멤버 위치 인수를 가져오는 데 사용 하 고 명명 된 특성의 인수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="8644f-106">사용 하 여는 <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> 속성의 목록을 가져오려면 <xref:System.Reflection.CustomAttributeTypedArgument> 사용 및 위치 인수를 나타내는 구조를 <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> 속성의 목록을 가져오려면 <xref:System.Reflection.CustomAttributeNamedArgument> 명명 된 인수를 나타내는 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8644f-107"><xref:System.Reflection.CustomAttributeNamedArgument> 구조만 가져오고 인수 값을 설정 하는 데 사용 되는 특성 속성에 대 한 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="8644f-108">형식 및 인수 값을 가져오려면 합니다 <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> 속성을는 <xref:System.Reflection.CustomAttributeTypedArgument> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="8644f-109">경우는 <xref:System.Reflection.CustomAttributeTypedArgument> 명명 된 또는 위치 인수에 대 한 구조체 사용 하 여는 <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> 형식을 가져올 속성 및 <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> 속성 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8644f-110">배열 인수에 대 한 합니다 <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> 속성을 제네릭 반환 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 의 <xref:System.Reflection.CustomAttributeTypedArgument> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="8644f-111">각 <xref:System.Reflection.CustomAttributeTypedArgument> 컬렉션의 개체 배열의 해당 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="8644f-112"><xref:System.Reflection.CustomAttributeData> 리플렉션 전용 컨텍스트 뿐만 아니라 실행 컨텍스트의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="8644f-113">예를 들어 다음 사용자 지정 특성에 대 한 코드를 포함 하는 어셈블리를 로드 하지 않도록 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="8644f-114">사용 하는 <xref:System.Reflection.CustomAttributeData> 클래스와 같은 메서드를 사용 하 여 다릅니다 <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="8644f-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="8644f-115">속성 및 메서드의 <xref:System.Reflection.CustomAttributeData> 생성자의 의미 체계가 없습니다 특성 인스턴스에 지정 된 값으로 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="8644f-116">예를 들어 특성의 문자열 인수 수 내부적으로 몇 가지 다른 표현으로 변환 되어 반환 될 정규형; 또는 실제 특성 코드를 실행할 때 속성 부작용이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="8644f-117">속성 및 메서드의 <xref:System.Reflection.CustomAttributeData> 기본 클래스에서 상속 되며, 사용자 지정 특성을 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="8644f-118">인스턴스를 만들 합니다 <xref:System.Reflection.CustomAttributeData> 클래스를 사용 하 여는 `static` (`Shared` Visual basic에서) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> 팩터리 메서드.</span><span class="sxs-lookup"><span data-stu-id="8644f-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-119">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-120">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-121">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-122">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-123">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-124">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-125">를 실행 하면 어셈블리를 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 형식 및 포함 된 멤버에 적용 된 사용자 지정 특성에 대 한 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="8644f-126">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8644f-127"><see cref="T:System.Reflection.CustomAttributeData" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-128">파생된 클래스에서 생성 하는 동안이 생성자가 호출 <xref:System.Reflection.CustomAttributeData> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8644f-129">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-129">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="8644f-130">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-130">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8644f-131">특성의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-131">Gets the type of the attribute.</span></span></summary>
        <value><span data-ttu-id="8644f-132">특성의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-132">The type of the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8644f-133">사용자 지정 특성을 초기화하는 생성자를 나타내는 <see cref="T:System.Reflection.ConstructorInfo" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span></span></summary>
        <value><span data-ttu-id="8644f-134"><see cref="T:System.Reflection.CustomAttributeData" /> 클래스의 현재 인스턴스가 나타내는 사용자 지정 특성을 초기화한 생성자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-135">특성 유형을 여러 생성자가 하는 경우이 속성을 현재 표시 되는 특성 인스턴스를 초기화 하는 특정 생성자만를 반환 하는 <xref:System.Reflection.CustomAttributeData> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-136">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-137">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-138">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-139">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-140">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-141">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-142">를 실행 하는 경우 어셈블리는 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8644f-143">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8644f-144"><xref:System.Reflection.CustomAttributeData.Constructor%2A> 속성은 사용 된 `ShowAttributeData` 사용자 지정 특성 데이터를 표시 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8644f-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="8644f-145">이 코드 예제는 <xref:System.Reflection.ConstructorInfo> 이 반환한 속성 특성을 초기화 하는 생성자를 반환 한다는 보여 주는 생성자를 설명 하는 텍스트 문자열을 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8644f-146"><see cref="T:System.Reflection.CustomAttributeData" /> 개체가 나타내는 특성 인스턴스에 지정된 위치 인수 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="8644f-147">사용자 지정 특성 인스턴스에 지정된 위치 인수를 나타내는 구조체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-148">이 메서드는 사용자 지정 특성 코드를 실행 하지 않고 사용자 지정 특성 인스턴스에 지정 된 위치 인수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="8644f-149">따라서 리플렉션 전용 컨텍스트에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="8644f-150">사용 된 <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> 특성 인스턴스에 지정 된 명명 된 인수를 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-151">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-152">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-153">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-154">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-155">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-156">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-157">를 실행 하는 경우 어셈블리는 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8644f-158">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8644f-159"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> 속성은 사용 된 `ShowAttributeData` 사용자 지정 특성 데이터를 표시 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8644f-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="8644f-160">이 코드 예제에서는이 속성은 특성을 초기화 하는 생성자에 전달 된 인수 목록에 표시할 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8644f-161">이 인스턴스와 비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-161">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8644f-162">@FSHO2@이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-162">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8644f-163"><paramref name="obj" />가 현재 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-163"><see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8644f-164">대상에 적용된 특성에 대한 데이터를 나타내는 <see cref="T:System.Reflection.CustomAttributeData" /> 개체의 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8644f-165">사용자 지정 특성 데이터가 검색될 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-165">The assembly whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="8644f-166">대상 어셈블리에 적용된 특성에 대한 데이터를 나타내는 <see cref="T:System.Reflection.CustomAttributeData" /> 개체의 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span></span></summary>
        <returns><span data-ttu-id="8644f-167">대상 어셈블리에 적용된 특성에 대한 데이터를 나타내는 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-168">이 메서드는 대안을 제공 합니다 <xref:System.Reflection.Assembly.GetCustomAttributes%2A> 메서드는 리플렉션 전용 컨텍스트에서 항상 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-169">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-170">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-171">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-172">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-173">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-174">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-175">를 실행 하는 경우 어셈블리는 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8644f-176">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8644f-177">합니다 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> 메서드는 `Main()` 어셈블리에 적용 되는 사용자 지정 특성을 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="8644f-178">메서드의 반환 값을 전달 합니다 `ShowAttributeData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="8644f-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8644f-179"><paramref name="target" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-179"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8644f-180">특성 데이터가 검색될 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-180">The member whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="8644f-181">대상 멤버에 적용된 특성에 대한 데이터를 나타내는 <see cref="T:System.Reflection.CustomAttributeData" /> 개체의 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="8644f-182">대상 멤버에 적용된 특성에 대한 데이터를 나타내는 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-182">A list of objects that represent data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-183">이 메서드 오버 로드 때문에 사용자 지정 특성 데이터 형식, 중첩된 형식 및 형식 멤버를 가져옵니다 합니다 <xref:System.Type> 클래스 및 클래스를 <xref:System.Reflection> 네임 스페이스에서 파생 되는 모든 형식 멤버를 나타내는 <xref:System.Reflection.MemberInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-184">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-185">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-186">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-187">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-188">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-189">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-190">를 실행 하는 경우 어셈블리는 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8644f-191">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8644f-192">합니다 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> 메서드는 `Main()` 테스트 메서드를 형식에 적용 된 사용자 지정 특성을 가져옵니다 (<xref:System.Type> 에서 파생 <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="8644f-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="8644f-193">반환 값 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> 에 전달 되는 `ShowAttributeData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="8644f-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8644f-194"><paramref name="target" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-194"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8644f-195">사용자 지정 특성 데이터가 검색될 모듈입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-195">The module whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="8644f-196">대상 모듈에 적용된 특성에 대한 데이터를 나타내는 <see cref="T:System.Reflection.CustomAttributeData" /> 개체의 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span></span></summary>
        <returns><span data-ttu-id="8644f-197">대상 모듈에 적용된 특성에 대한 데이터를 나타내는 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-197">A list of objects that represent data about the attributes that have been applied to the target module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8644f-198"><paramref name="target" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-198"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8644f-199">특성 데이터가 검색될 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-199">The parameter whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="8644f-200">대상 매개 변수에 적용된 특성에 대한 데이터를 나타내는 <see cref="T:System.Reflection.CustomAttributeData" /> 개체의 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span></span></summary>
        <returns><span data-ttu-id="8644f-201">대상 매개 변수에 적용된 특성에 대한 데이터를 나타내는 개체의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-202">이 메서드는 대안을 제공 합니다 <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> 메서드는 리플렉션 전용 컨텍스트에서 항상 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-203">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-204">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-205">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-206">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-207">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-208">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-209">를 실행 하는 경우 어셈블리는 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8644f-210">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8644f-211">합니다 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> 메서드는 `Main()` 테스트 메서드의 매개 변수에 적용 된 사용자 지정 특성을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="8644f-212">반환 값 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> 에 전달 되는 `ShowAttributeData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="8644f-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8644f-213"><paramref name="target" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-213"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8644f-214">특정 형식에 대한 해시 함수 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-214">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="8644f-215">현재 <see cref="T:System.Object" />의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-215">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8644f-216"><see cref="T:System.Reflection.CustomAttributeData" /> 개체가 나타내는 특성 인스턴스에 지정된 명명된 인수 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="8644f-217">사용자 지정 특성 인스턴스에 지정된 명명된 인수를 나타내는 구조체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-218">이 메서드는 사용자 지정 특성 코드를 실행 하지 않고 사용자 지정 특성 인스턴스에 지정 된 명명 된 인수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="8644f-219">따라서 리플렉션 전용 컨텍스트에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="8644f-220">반환 되는 목록 특성 인스턴스에 지정 된 명명 된 인수만 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="8644f-221">사용 된 <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> 특성 인스턴스에 지정 된 위치 인수를 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-222">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-223">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-224">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-225">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-226">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-227">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-228">를 실행 하는 경우 어셈블리는 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8644f-229">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8644f-230"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A> 속성은 사용 된 `ShowAttributeData` 사용자 지정 특성 데이터를 표시 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8644f-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="8644f-231">이 코드 예제에서는이 속성의 특성에 지정 하는 명명 된 인수 목록에 표시할 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8644f-232">사용자 지정 특성의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-232">Returns a string representation of the custom attribute.</span></span></summary>
        <returns><span data-ttu-id="8644f-233">사용자 지정 특성을 나타내는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-233">A string value that represents the custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8644f-234">문자열 값을 특성 형식, 특성 매개 변수 및 명명 된 매개 변수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8644f-235">다음 예제에서는 네 가지 생성자와 속성을 사용 하 여 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8644f-236">두 속성은 읽기 전용 및 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8644f-237">다른 두 속성은 읽기/쓰기가 가능 하 고 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8644f-238">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8644f-239">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8644f-240">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="8644f-241">를 실행 하는 경우 어셈블리는 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8644f-242">형식에 적용 되는 특성 위치 인수와 명명 된 인수를 사용 하 여 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8644f-243">이 예제에서는 합니다 <xref:System.Reflection.CustomAttributeData.ToString%2A> 메서드를 사용 합니다 `ShowAttributeData` 메서드를 해당 데이터가 표시 되는 특성을 식별 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="8644f-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>