<Type Name="PrintQueueCollection" FullName="System.Printing.PrintQueueCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34f6f6cc5637f1458c23482e2464c09b34d65670" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58697683" /></Metadata><TypeSignature Language="C#" Value="public class PrintQueueCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable&lt;System.Printing.PrintQueue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintQueueCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintQueue&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueueCollection&#xA;Inherits PrintSystemObjects&#xA;Implements IDisposable, IEnumerable(Of PrintQueue)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueueCollection : System::Printing::PrintSystemObjects, IDisposable, System::Collections::Generic::IEnumerable&lt;System::Printing::PrintQueue ^&gt;" />
  <TypeSignature Language="F#" Value="type PrintQueueCollection = class&#xA;    inherit PrintSystemObjects&#xA;    interface seq&lt;PrintQueue&gt;&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObjects</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Printing.PrintQueue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bbe40-101"><see cref="T:System.Printing.PrintQueue" /> 개체의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-101">Represents a collection of <see cref="T:System.Printing.PrintQueue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="bbe40-102">내에서 클래스를 <xref:System.Printing> 네임 스페이스는 Windows 서비스 또는 ASP.NET 애플리케이션 또는 서비스 내에서 사용 하 여 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-102">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="bbe40-103">이러한 애플리케이션 형식 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-103">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="bbe40-104">Windows Forms 애플리케이션에서 인쇄 하려는 경우 참조는 <xref:System.Drawing.Printing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-104">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe40-105">다음 예에서는 프린터의 기능을 테스트 하 고 활용할 인쇄 작업을 구성 하려면이 컬렉션을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-105">The following example shows how to use this collection to test a printer's capabilities and configure a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbe40-106"><see cref="T:System.Printing.PrintQueueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-106">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbe40-107"><see cref="T:System.Printing.PrintQueueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-107">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection(System::Printing::PrintServer ^ printServer, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueueCollection : System.Printing.PrintServer * string[] -&gt; System.Printing.PrintQueueCollection" Usage="new System.Printing.PrintQueueCollection (printServer, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="bbe40-108">컬렉션을 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-108">The print server that hosts the collection.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="bbe40-109">초기화되는 컬렉션 멤버의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-109">The properties of the collection members that are initialized.</span></span></param>
        <summary><span data-ttu-id="bbe40-110">지정된 <see cref="T:System.Printing.PrintQueueCollection" />에 대한 <see cref="T:System.Printing.PrintServer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-110">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe40-111">문자열 배열에 나와 있는 속성에 대해서만 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-111">Only the properties that are listed in the string array are initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter, System.Printing.EnumeratedPrintQueueTypes[] enumerationFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string[] propertyFilter, valuetype System.Printing.EnumeratedPrintQueueTypes[] enumerationFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection(System::Printing::PrintServer ^ printServer, cli::array &lt;System::String ^&gt; ^ propertyFilter, cli::array &lt;System::Printing::EnumeratedPrintQueueTypes&gt; ^ enumerationFlag);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueueCollection : System.Printing.PrintServer * string[] * System.Printing.EnumeratedPrintQueueTypes[] -&gt; System.Printing.PrintQueueCollection" Usage="new System.Printing.PrintQueueCollection (printServer, propertyFilter, enumerationFlag)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
        <Parameter Name="enumerationFlag" Type="System.Printing.EnumeratedPrintQueueTypes[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="bbe40-112">컬렉션을 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-112">The print server that hosts the collection.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="bbe40-113">초기화되는 컬렉션 멤버의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-113">The properties of the collection members that are initialized.</span></span></param>
        <param name="enumerationFlag"><span data-ttu-id="bbe40-114">컬렉션에 포함되는 인쇄 대기열의 형식을 지정하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-114">An array that specifies the types of print queues that are included in the collection.</span></span></param>
        <summary><span data-ttu-id="bbe40-115">지정한 <see cref="T:System.Printing.PrintQueueCollection" />에 대해 <see cref="T:System.Printing.PrintServer" /> 클래스의 새 인스턴스를 초기화합니다. 여기에는 지정된 <see cref="T:System.Printing.EnumeratedPrintQueueTypes" />의 인쇄 서버 대기열만 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-115">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />, containing only the print server's queues of the specified <see cref="T:System.Printing.EnumeratedPrintQueueTypes" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe40-116">문자열 배열에 나와 있는 속성에 대해서만 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-116">Only the properties that are listed in the string array are initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Printing.PrintQueue printObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Printing.PrintQueue printObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (printObject As PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Printing::PrintQueue ^ printObject);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Printing.PrintQueue -&gt; unit" Usage="printQueueCollection.Add printObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printObject" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printObject"><span data-ttu-id="bbe40-117">추가되는 인쇄 대기열입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-117">The print queue that is added.</span></span></param>
        <summary><span data-ttu-id="bbe40-118"><see cref="T:System.Printing.PrintQueue" />를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-118">Adds a <see cref="T:System.Printing.PrintQueue" /> to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool ) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose ( As Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (A_0 As Boolean)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)" FrameworkAlternate="netframework-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printQueueCollection.Dispose " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printQueueCollection.Dispose " FrameworkAlternate="netframework-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="bbe40-119">관리되는 리소스 및 관리되지 않는 리소스 모두를 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-119"><see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <param name="A_0"><span data-ttu-id="bbe40-120">관리되는 리소스 및 관리되지 않는 리소스 모두를 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-120"><see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="bbe40-121"><see cref="T:System.Printing.PrintQueueCollection" />에서 사용하는 관리되지 않는 리소스를 해제하고 현재 사용되고 있는 관리되는 리소스를 선택적으로 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-121">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintQueueCollection" />, and optionally releases the managed resources that are being used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe40-122">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbe40-122">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="bbe40-123">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 로 명명 되지 않은 부울 매개 변수를 사용 하 여 메서드 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-123">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="bbe40-124"><xref:System.Object.Finalize%2A> 호출 `Dispose` 로 설정 하는 매개 변수를 사용 하 여 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-124"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="bbe40-125">부울 매개 변수가 표시 되는 경우 `true`, 관리 되는 개체가 보유 하 고 있는 모든 리소스를 해제 하는이 메서드가이 <xref:System.Printing.PrintQueueCollection> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-125">When the Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueCollection> references.</span></span> <span data-ttu-id="bbe40-126">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-126">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bbe40-127">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-127">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="bbe40-128"><see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbe40-128">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="bbe40-129">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-129">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="bbe40-130">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-130">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Printing.PrintQueue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Printing::PrintQueue ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;" Usage="printQueueCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbe40-131"><see cref="T:System.Collections.IEnumerator" />로 닫은 제네릭 <see cref="T:System.Printing.PrintQueue" /> 인터페이스를 구현하는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-131">Returns an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that has been closed with <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="bbe40-132">제네릭 <see cref="T:System.Collections.IEnumerator" />를 구현하며 <see cref="T:System.Printing.PrintQueue" />에 들어 있는 <see cref="T:System.Printing.PrintQueueCollection" /> 개체를 통해 반복 처리할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-132">An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe40-133">사용 하는 것이 좋습니다는 `foreach` 컬렉션의 모든 멤버를 반복 하는 문입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-133">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="bbe40-134">사용 하 여 <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> 만 해야 할 때 모든 다른 멤버를 건너뛰어 반복와 같은 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-134">Use <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe40-135">다음 예제에서는이 메서드를 사용 하 여 프린터의 기능을 테스트 하 고 활용할 인쇄 작업을 구성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-135">The following example shows how to use this method to test a printer's capabilities and configure a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonGenericEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetNonGenericEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNonGenericEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="printQueueCollection.GetNonGenericEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbe40-136">제네릭이 아닌 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-136">Gets an object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface.</span></span></summary>
        <returns><span data-ttu-id="bbe40-137">제네릭이 아닌 <see cref="T:System.Collections.IEnumerator" />를 구현하며 <see cref="T:System.Printing.PrintQueue" />에 들어 있는 <see cref="T:System.Printing.PrintQueueCollection" /> 개체를 통해 반복 처리할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-137">An object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe40-138">사용 하는 것이 좋습니다는 `foreach` 컬렉션의 모든 멤버를 반복 하는 문입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-138">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="bbe40-139">모든 다른 멤버를 건너뛰어 반복와 같은 사용자 지정 해야 하는 경우에 자신의 열거자 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-139">Use your own enumerator object only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
 <span data-ttu-id="bbe40-140">사용자 고유의 열거자를 해야 하는 경우 제네릭, 형식이 안전한 함수를 사용 하는 것이 좋습니다 <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> 대신 <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-140">If you need your own enumerator, we recommend that you use the generic, type-safe function <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> instead of <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A>.</span></span> <span data-ttu-id="bbe40-141"><xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A> 의 요구 사항을 충족 에게만 공개는 <xref:System.Collections.IEnumerable> 이 컬렉션에 의해 구현 되는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-141">The <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A> is public only to fulfill the requirements of the <xref:System.Collections.IEnumerable> interface, which is implemented by this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public static object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Printing.PrintQueueCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe40-142"><see cref="T:System.Printing.PrintQueueCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-142">Gets an object that can be used to synchronize access to the <see cref="T:System.Printing.PrintQueueCollection" />.</span></span></summary>
        <value><span data-ttu-id="bbe40-143">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbe40-143">A <see cref="T:System.Object" /> that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>