<Type Name="SerializationBinder" FullName="System.Runtime.Serialization.SerializationBinder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51cc81ec85a189823cad0ae9027d7c3daa1404b3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57917078" /></Metadata><TypeSignature Language="C#" Value="public abstract class SerializationBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit SerializationBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.SerializationBinder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializationBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializationBinder abstract" />
  <TypeSignature Language="F#" Value="type SerializationBinder = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3e01b-101">사용자가 클래스 로딩을 제어하고 로드할 클래스를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-101">Allows users to control class loading and mandate what class to load.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01b-102">serialization 도중에, 포맷터는 올바른 형식 및 버전의 개체 인스턴스를 만드는 데 필요한 정보를 전송합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-102">During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</span></span> <span data-ttu-id="3e01b-103">이 정보에는 일반적으로 개체에 대한 어셈블리 이름 및 전체 형식 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-103">This information generally includes the full type name and assembly name of the object.</span></span> <span data-ttu-id="3e01b-104">이름, 버전 및 강력한 이름 어셈블리 이름에 포함 되어 있습니다 (참조 [강력한 이름의 어셈블리](~/docs/framework/app-domains/strong-named-assemblies.md)) 어셈블리의 해시입니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-104">The assembly name includes the name, version, and strong name (see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md)) hash of the assembly.</span></span> <span data-ttu-id="3e01b-105">기본적으로, deserialization은 이 정보를 사용하여 동일한 개체의 인스턴스를 만듭니다. 보안 정책에 의해 제한되는 어셈블리 로딩은 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-105">By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</span></span> <span data-ttu-id="3e01b-106">클래스가 어셈블리 간에 이동하거나 서버와 클라이언트에서 서로 다른 버전의 클래스를 필요로 하므로 일부 사용자는 로드할 클래스를 제어해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-106">Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</span></span>  
  
 <span data-ttu-id="3e01b-107"><xref:System.Runtime.Serialization.SerializationBinder> 보안을 위해 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-107"><xref:System.Runtime.Serialization.SerializationBinder> can also be used for security.</span></span> <span data-ttu-id="3e01b-108">신뢰할 수 없는 소스에서 데이터를 deserialize 하려는 경우에 몇 가지 보안 악용 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-108">There might be some security exploits when you are trying to deserialize some data from an untrusted source.</span></span> <span data-ttu-id="3e01b-109">바인더는 검사할 유형을 응용 프로그램 도메인에서 로드 되는 기회를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-109">The binder gives you an opportunity to inspect what types are being loaded in your application domain.</span></span> <span data-ttu-id="3e01b-110">거부 된 형식의 목록 또는 허용 되는 형식 목록을 유지 관리 하 고 유형을 로드 되는 제한 하거나 할 수 있습니다 및 인스턴스화된 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-110">You can then either maintain list of denied types or a list of allowed types and restrict which types are being loaded and instantiated.</span></span> <span data-ttu-id="3e01b-111">또한 고려해 야 통신 중에 어떤 정보가 배치 되는 중 (사용 하 여 전송 또는 메시지 보안)를 보호 하는 것이 좋습니다, 통신 중에 형식 이름 또는 기타 데이터를 보낼 때.</span><span class="sxs-lookup"><span data-stu-id="3e01b-111">In addition you should be mindful of what information is being put out on the wire, you may want to secure (use transport or message security) when sending type names or other data on the wire.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="3e01b-112">만 사용 하 여 <xref:System.Runtime.Serialization.SerializationBinder> 의 정보는 serialize 되 고 완전히 확실 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-112">Only use <xref:System.Runtime.Serialization.SerializationBinder> if you are completely sure of what information is being serialized.</span></span> <span data-ttu-id="3e01b-113">악의적인 형식이 예기치 않은 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-113">Malicious types can cause unexpected behavior.</span></span>  
  
 <span data-ttu-id="3e01b-114">이 클래스는 추상 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-114">This is an abstract base class.</span></span> <span data-ttu-id="3e01b-115">모든 바인더는이 클래스를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-115">All binders extend this class.</span></span>  
  
   
  
## Examples  
 [!code-cpp[SerializationBinder Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SerializationBinder Example/CPP/serializationbinder.cpp#1)]
 [!code-csharp[SerializationBinder Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SerializationBinder Example/CS/serializationbinder.cs#1)]
 [!code-vb[SerializationBinder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SerializationBinder Example/VB/serializationbinder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="3e01b-116"><see cref="T:System.Runtime.Serialization.SerializationBinder" />에서 상속하는 경우 <see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" /> 멤버를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-116">When you inherit from <see cref="T:System.Runtime.Serialization.SerializationBinder" />, you must override the following member: <see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />.</span></span></para></block>
    <altmember cref="T:System.Security.Policy.StrongName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializationBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializationBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e01b-117"><see cref="T:System.Runtime.Serialization.SerializationBinder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-117">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationBinder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToName">
      <MemberSignature Language="C#" Value="public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToName(class System.Type serializedType, [out] string&amp; assemblyName, [out] string&amp; typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BindToName (serializedType As Type, ByRef assemblyName As String, ByRef typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BindToName(Type ^ serializedType, [Runtime::InteropServices::Out] System::String ^ % assemblyName, [Runtime::InteropServices::Out] System::String ^ % typeName);" />
      <MemberSignature Language="F#" Value="abstract member BindToName : Type *  *  -&gt; unit&#xA;override this.BindToName : Type *  *  -&gt; unit" Usage="serializationBinder.BindToName (serializedType, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serializedType"><span data-ttu-id="3e01b-118">포맷터가 새 인스턴스를 만드는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-118">The type of the object the formatter creates a new instance of.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="3e01b-119">직렬화된 개체의 <see cref="T:System.Reflection.Assembly" /> 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-119">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</span></span></param>
        <param name="typeName"><span data-ttu-id="3e01b-120">직렬화된 개체의 <see cref="T:System.Type" /> 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-120">Specifies the <see cref="T:System.Type" /> name of the serialized object.</span></span></param>
        <summary><span data-ttu-id="3e01b-121">파생 클래스에서 재정의된 경우 형식으로 직렬화된 개체의 바인딩을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-121">When overridden in a derived class, controls the binding of a serialized object to a type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToType">
      <MemberSignature Language="C#" Value="public abstract Type BindToType (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type BindToType(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToType (assemblyName As String, typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ BindToType(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member BindToType : string * string -&gt; Type" Usage="serializationBinder.BindToType (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="3e01b-122">직렬화된 개체의 <see cref="T:System.Reflection.Assembly" /> 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-122">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</span></span></param>
        <param name="typeName"><span data-ttu-id="3e01b-123">직렬화된 개체의 <see cref="T:System.Type" /> 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-123">Specifies the <see cref="T:System.Type" /> name of the serialized object.</span></span></param>
        <summary><span data-ttu-id="3e01b-124">파생 클래스에서 재정의된 경우 형식으로 직렬화된 개체의 바인딩을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-124">When overridden in a derived class, controls the binding of a serialized object to a type.</span></span></summary>
        <returns><span data-ttu-id="3e01b-125">포맷터가 새 인스턴스를 만드는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-125">The type of the object the formatter creates a new instance of.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e01b-126">SerializationBinder 예제 #1</span><span class="sxs-lookup"><span data-stu-id="3e01b-126">SerializationBinder Example#1</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3e01b-127">파생된 클래스에서 현재 메서드를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3e01b-127">You must implement the current method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>