<Type Name="IObjectReference" FullName="System.Runtime.Serialization.IObjectReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15a572ce6bbd23462a8f69dedc62f0a26c7b6cbd" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58743523" /></Metadata><TypeSignature Language="C#" Value="public interface IObjectReference" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObjectReference" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObjectReference" />
  <TypeSignature Language="C++ CLI" Value="public interface class IObjectReference" />
  <TypeSignature Language="F#" Value="type IObjectReference = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d210-101">현재 인터페이스 구현자가 다른 개체에 대한 참조임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-101">Indicates that the current interface implementer is a reference to another object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="2d210-102">현재 개체가 완전히 복원 될 때까지 확인할 수 없습니다는 다른 개체에 대 한 참조 된 개체에서이 인터페이스를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-102">Implement this interface on objects that are references to a different object, which cannot be resolved until the current object is completely restored.</span></span> <span data-ttu-id="2d210-103">픽스업 단계에서 구현 하는 개체가 <see cref="T:System.Runtime.Serialization.IObjectReference" /> 해당 실시간 쿼리 하는 개체 및 해당 개체 그래프에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-103">During the fixup stage, any object implementing <see cref="T:System.Runtime.Serialization.IObjectReference" /> is queried for its real object and that object is inserted into the graph.</span></span> <span data-ttu-id="2d210-104">픽스업 참조 개체의 deserialization 프로세스 동안 아직 완료 종료 프로세스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-104">Fixup refers to the process of finalizing references not already completed during the object deserialization process.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRealObject (context As StreamingContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetRealObject(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetRealObject : System.Runtime.Serialization.StreamingContext -&gt; obj" Usage="iObjectReference.GetRealObject context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2d210-105">현재 개체가 deserialize되는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-105">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> from which the current object is deserialized.</span></span></param>
        <summary><span data-ttu-id="2d210-106">serialize된 스트림이 지정하는 개체가 아니라 deserialize해야 하는 실제 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-106">Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.</span></span></summary>
        <returns><span data-ttu-id="2d210-107">그래프에 배치되는 실제 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-107">The actual object that is put into the graph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d210-108">이 메서드는 실제 개체가 아닌 프록시 생성자 개체를 serialize 하는 위치 원격 상황에서 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-108">This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object.</span></span> <span data-ttu-id="2d210-109">프록시 생성자 개체가 deserialize 되 면 deserialization 호출 해당 <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2d210-109">When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method.</span></span> <span data-ttu-id="2d210-110">이 시점에서 프록시 생성자 개체가 원격 컴퓨터에서 원래 실제 개체를 다시 참조 하는 프록시 개체의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-110">At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer.</span></span> <span data-ttu-id="2d210-111">마지막으로 프록시 생성자 개체 삭제 하 고 나중에 가비지 수집에서 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-111">Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.</span></span>  
  
 <span data-ttu-id="2d210-112">예를 들어 어떻게 <xref:System.Type> 개체는 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-112">For example, consider how <xref:System.Type> objects are serialized.</span></span> <span data-ttu-id="2d210-113">데이터를 전송 하는 대신 합니다 <xref:System.Type> 개체를 시스템에는 표시자 개체를 구현 하는 개체에 있는 어셈블리에 대 한 정보 및 형식 개체의 이름으로 전송 <xref:System.Runtime.Serialization.IObjectReference>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-113">Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>.</span></span> <span data-ttu-id="2d210-114">Deserialization 인프라를 호출 하는 형식 이름과 어셈블리 이름을 사용할 수 있는 경우 <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> 전송 된 소유자 개체에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-114">When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted.</span></span> <span data-ttu-id="2d210-115">이 보유자가 반환 된 <xref:System.Type> 그래프에 삽입 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-115">This holder returns the <xref:System.Type> object that is inserted into the graph.</span></span>  
  
 <span data-ttu-id="2d210-116">이 메서드는에 의해 보호 됩니다는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 에 대 한는 <xref:System.Security.Permissions.SecurityPermission> 사용 하 여는 <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-116">This method is protected by a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> specified.</span></span>  
  
   
  
## Examples  
 [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2d210-117">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2d210-117">The caller does not have the required permission.</span></span> <span data-ttu-id="2d210-118">신뢰 수준이 보통인 서버에 대해서는 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2d210-118">The call will not work on a medium trusted server.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>