<Type Name="XmlSerializableServices" FullName="System.Runtime.Serialization.XmlSerializableServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="026c73ac468774b900f561d898f0bb47639029a4" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58711216" /></Metadata><TypeSignature Language="C#" Value="public static class XmlSerializableServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XmlSerializableServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XmlSerializableServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializableServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializableServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XmlSerializableServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fe152-101">XML을 읽고 쓰기 위한 메서드를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-101">Contains methods for reading and writing XML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe152-102">Windows Communication Foundation (WCF)를 사용 하 여 XML 스키마에서 데이터 계약을 나타내는 CLR 형식을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-102">Using Windows Communication Foundation (WCF), you can generate CLR types representing data contracts from XML schemas.</span></span> <span data-ttu-id="fe152-103">이때 경우에 따라 일부 스키마가 데이터 계약으로 표현되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-103">In certain cases when doing so, the schemas may not all be represented as data contracts.</span></span> <span data-ttu-id="fe152-104">이 경우 <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> 클래스의 <xref:System.Runtime.Serialization.ImportOptions> 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-104">In this case, you can use the <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.</span></span>  <span data-ttu-id="fe152-105">이 속성을 `true`로 설정하면 해당 형식을 <xref:System.Xml.Serialization.IXmlSerializable> 인터페이스를 구현하는 XML 형식으로 가져오도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-105">Setting the property to `true` specifies that these types are imported as XML types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span> <span data-ttu-id="fe152-106">프로세스에서 생성된 형식은 어떤 형식으로도 저장될 수 있지만 serializer는 이 형식을 XML로 읽고 씁니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-106">In the process, the generated types can store anything, but they are read and written as XML by the serializer.</span></span>  
  
 <span data-ttu-id="fe152-107"><xref:System.Runtime.Serialization.XmlSerializableServices>는 생성된 <xref:System.Xml.Serialization.IXmlSerializable> 형식에서 XML을 읽고 쓰기 위해 사용하는 코드가 포함된 추상 도우미 클래스로,</span><span class="sxs-lookup"><span data-stu-id="fe152-107">The <xref:System.Runtime.Serialization.XmlSerializableServices> is an abstract helper class that contains code that is used by the generated <xref:System.Xml.Serialization.IXmlSerializable> types to read and write XML.</span></span> <span data-ttu-id="fe152-108">생성된 형식에 대한 스키마 생성을 위한 코드도 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-108">It also contains code for generating schema for the generated types.</span></span> <span data-ttu-id="fe152-109">스키마에 대한 세부 사항은 저장되지 않으며</span><span class="sxs-lookup"><span data-stu-id="fe152-109">Note that details about the schemas are not stored.</span></span> <span data-ttu-id="fe152-110">생성된 형식에는 이름만 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-110">Only the name is stored in the generated type.</span></span> <span data-ttu-id="fe152-111">이 클래스는 적절한 스키마 형식 이름을 계약 이름으로 사용하는 XML 스키마 형식 `anyType`을 나타내는 기본 스키마를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-111">This class generates a default schema that represents the XML schema type `anyType` with the appropriate schema type name as the contract name.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDefaultSchema">
      <MemberSignature Language="C#" Value="public static void AddDefaultSchema (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeQName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDefaultSchema(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeQName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDefaultSchema (schemas As XmlSchemaSet, typeQName As XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDefaultSchema(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeQName);" />
      <MemberSignature Language="F#" Value="static member AddDefaultSchema : System.Xml.Schema.XmlSchemaSet * System.Xml.XmlQualifiedName -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema (schemas, typeQName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeQName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="fe152-112">생성된 스키마 형식을 추가할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-112">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to add the generated schema type to.</span></span></param>
        <param name="typeQName"><span data-ttu-id="fe152-113">스키마를 할당할 형식 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-113">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type name to assign the schema to.</span></span></param>
        <summary><span data-ttu-id="fe152-114">지정한 형식 이름으로 기본 스키마 형식을 생성한 후 지정한 스키마 집합에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-114">Generates a default schema type given the specified type name and adds it to the specified schema set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe152-115">이 메서드에는 지정한 형식 이름을 사용하여 데이터 계약 형식의 스키마 형식을 생성하기 위한 코드가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-115">This method contains code for generating a schema type for a data contract type with the specified type name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fe152-116"><paramref name="schemas" /> 또는 <paramref name="typeQName" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fe152-116">The <paramref name="schemas" /> or <paramref name="typeQName" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNodes">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode[] ReadNodes (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode[] ReadNodes(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::XmlNode ^&gt; ^ ReadNodes(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member ReadNodes : System.Xml.XmlReader -&gt; System.Xml.XmlNode[]" Usage="System.Runtime.Serialization.XmlSerializableServices.ReadNodes xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="fe152-117">읽기에 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-117">An <see cref="T:System.Xml.XmlReader" /> used for reading.</span></span></param>
        <summary><span data-ttu-id="fe152-118">지정된 판독기에서 XML 노드 집합을 읽고 결과를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-118">Reads a set of XML nodes from the specified reader and returns the result.</span></span></summary>
        <returns><span data-ttu-id="fe152-119"><see cref="T:System.Xml.XmlNode" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-119">An array of type <see cref="T:System.Xml.XmlNode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe152-120">이 메서드는 해당 호출을 수행할 때 판독기가 배치되는 노드에 포함된 모든 XML을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-120">This method reads all XML contained within the node the reader is positioned on when this call is made.</span></span> <span data-ttu-id="fe152-121">따라서 모든 XML을 <xref:System.Xml.XmlNode> 개체 배열로 읽고 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-121">This enables it to read and store all XML as an array of <xref:System.Xml.XmlNode> objects.</span></span> <span data-ttu-id="fe152-122">이 메서드는 <xref:System.Xml.Serialization.IXmlSerializable>을 구현하고 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> 메서드를 사용하는 형식에서 사용되는 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-122">It is a helper method used by the types that implement <xref:System.Xml.Serialization.IXmlSerializable> and that use the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fe152-123"><paramref name="xmlReader" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fe152-123">The <paramref name="xmlReader" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="fe152-124">읽는 도중 <see langword="null" /> 노드를 만난 경우</span><span class="sxs-lookup"><span data-stu-id="fe152-124">While reading, a <see langword="null" /> node was encountered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodes">
      <MemberSignature Language="C#" Value="public static void WriteNodes (System.Xml.XmlWriter xmlWriter, System.Xml.XmlNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteNodes(class System.Xml.XmlWriter xmlWriter, class System.Xml.XmlNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteNodes(System::Xml::XmlWriter ^ xmlWriter, cli::array &lt;System::Xml::XmlNode ^&gt; ^ nodes);" />
      <MemberSignature Language="F#" Value="static member WriteNodes : System.Xml.XmlWriter * System.Xml.XmlNode[] -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.WriteNodes (xmlWriter, nodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="nodes" Type="System.Xml.XmlNode[]" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="fe152-125">쓰기에 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-125">An <see cref="T:System.Xml.XmlWriter" /> used for writing.</span></span></param>
        <param name="nodes"><span data-ttu-id="fe152-126">쓸 <see cref="T:System.Xml.XmlNode" /> 형식 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-126">An array of type <see cref="T:System.Xml.XmlNode" /> to write.</span></span></param>
        <summary><span data-ttu-id="fe152-127">지정한 작성기를 사용하여 지정한 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="fe152-127">Writes the supplied nodes using the specified writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fe152-128"><paramref name="xmlWriter" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fe152-128">The <paramref name="xmlWriter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>