<Type Name="ISelectionProvider" FullName="System.Windows.Automation.Provider.ISelectionProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddcc11d8bb64f533ca62eeb6977f54f644ada080" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56360474" /></Metadata><TypeSignature Language="C#" Value="public interface ISelectionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISelectionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISelectionProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISelectionProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISelectionProvider" />
  <TypeSignature Language="F#" Value="type ISelectionProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("fb8b03af-3bdf-48d4-bd36-1a65793be168")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="89c6d-101">선택 가능한 개별 자식 항목의 컬렉션에 대한 컨테이너 역할을 하는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하도록 메서드 및 속성을 공개합니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-101">Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items.</span></span> <span data-ttu-id="89c6d-102">이 컨트롤의 자식 항목은 <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-102">The children of this control must implement <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89c6d-103">지원 해야 하는 UI 자동화 공급자에서 구현 된 <xref:System.Windows.Automation.SelectionPattern> 컨트롤 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.SelectionPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="89c6d-104">UI 자동화 컨트롤 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="89c6d-104">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="89c6d-105">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="89c6d-105">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="89c6d-106">클라이언트 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="89c6d-106">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="89c6d-107">UI 자동화 공급자의 컨트롤 패턴 지원</span><span class="sxs-lookup"><span data-stu-id="89c6d-107">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209"><span data-ttu-id="89c6d-108">UI 자동화 Selection 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="89c6d-108">Implementing the UI Automation Selection Control Pattern</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)"><span data-ttu-id="89c6d-109">조각 공급자 샘플</span><span class="sxs-lookup"><span data-stu-id="89c6d-109">Fragment Provider Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CanSelectMultiple">
      <MemberSignature Language="C#" Value="public bool CanSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelectMultiple : bool" Usage="System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89c6d-110">UI 자동화 공급자에서 둘 이상의 자식 요소가 동시에 선택되도록 하는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-110">Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.</span></span></summary>
        <value><span data-ttu-id="89c6d-111">다중 선택이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-111"><see langword="true" /> if multiple selection is allowed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89c6d-112">이 속성은 동적 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-112">This property may be dynamic.</span></span> <span data-ttu-id="89c6d-113">예를 들어, 드문 경우에서 컨트롤을 여러 항목을 초기화에서 선택할 수 있지만 이후에 되도록 하나의 선택 항목만 허용 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-113">For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89c6d-114">다음 예제에서는 한 번에 둘 이상의 항목을 선택할 수 없는 목록에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-114">The following example shows an implementation of this method for a list that does not allow selection of more than one item at a time.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#canselectmultiple)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#canselectmultiple)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209"><span data-ttu-id="89c6d-115">UI 자동화 Selection 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="89c6d-115">Implementing the UI Automation Selection Control Pattern</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)"><span data-ttu-id="89c6d-116">조각 공급자 샘플</span><span class="sxs-lookup"><span data-stu-id="89c6d-116">Fragment Provider Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetSelection();" />
      <MemberSignature Language="F#" Value="abstract member GetSelection : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iSelectionProvider.GetSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89c6d-117">선택한 각 자식 요소에 대해 UI 자동화 공급자를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-117">Retrieves a UI Automation provider for each child element that is selected.</span></span></summary>
        <returns><span data-ttu-id="89c6d-118">UI 자동화 공급자 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-118">A collection of UI Automation providers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89c6d-119">공급자는 값을 제공 하지 않는 경우 기본 빈 배열 UIAutoCore.dll에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-119">A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89c6d-120">다음 예제에서는 가능한 항목을 하나만 선택할 수 있는 목록 상자에서이 메서드는 한 가지 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-120">The following example shows one possible implementation of this method for a list box that supports only single selection.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#getselection)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#getselection)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209"><span data-ttu-id="89c6d-121">UI 자동화 Selection 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="89c6d-121">Implementing the UI Automation Selection Control Pattern</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)"><span data-ttu-id="89c6d-122">조각 공급자 샘플</span><span class="sxs-lookup"><span data-stu-id="89c6d-122">Fragment Provider Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRequired">
      <MemberSignature Language="C#" Value="public bool IsSelectionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionRequired : bool" Usage="System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89c6d-123">UI 자동화 공급자에서 하나 이상의 자식 요소를 선택해야 하는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-123">Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.</span></span></summary>
        <value><span data-ttu-id="89c6d-124">선택해야 하면 <see langword="true" />이고, 선택할 필요가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-124"><see langword="true" /> if selection is required; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89c6d-125">이 속성은 동적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-125">This property can be dynamic.</span></span> <span data-ttu-id="89c6d-126">예를 들어, 컨트롤의 초기 상태가 없을 즉 기본적으로 선택 된 항목이 <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> 는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-126">For example, the initial state of a control might not have any items selected by default, meaning that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`.</span></span> <span data-ttu-id="89c6d-127">그러나 항목이 선택된 후에는 컨트롤에 하나 이상의 항목이 항상 선택되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-127">However, after an item is selected, the control must always have at least one item selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89c6d-128">다음 예제에서는 필요한 모든 시간에 선택 항목 목록에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="89c6d-128">The following example shows an implementation of this method for a list that requires an item to be selected at all times.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#isselectionrequired)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#isselectionrequired)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209"><span data-ttu-id="89c6d-129">UI 자동화 Selection 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="89c6d-129">Implementing the UI Automation Selection Control Pattern</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)"><span data-ttu-id="89c6d-130">조각 공급자 샘플</span><span class="sxs-lookup"><span data-stu-id="89c6d-130">Fragment Provider Sample</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>