<Type Name="IRawElementProviderFragment" FullName="System.Windows.Automation.Provider.IRawElementProviderFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8757bef82d94af0677cc0555475e949f8d63bcbb" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56347541" /></Metadata><TypeSignature Language="C#" Value="public interface IRawElementProviderFragment : System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderFragment implements class System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderFragment" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderFragment&#xA;Implements IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderFragment : System::Windows::Automation::Provider::IRawElementProviderSimple" />
  <TypeSignature Language="F#" Value="type IRawElementProviderFragment = interface&#xA;    interface IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IRawElementProviderSimple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("f7063da8-8359-439c-9297-bbc5299a7d87")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="35d87-101">목록 상자 또는 목록 항목과 같이 수준이 둘 이상인 구조체의 일부인 UI(사용자 인터페이스) 요소에 대한 메서드 및 속성을 공개합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-101">Exposes methods and properties on user interface (UI) elements that are part of a structure more than one level deep, such as a list box or a list item.</span></span> <span data-ttu-id="35d87-102">UI 자동화 공급자에서 구현했습니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-102">Implemented by UI Automation providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d87-103">조각의 루트 노드를 지원 해야 합니다 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> 인터페이스에서 상속 되는 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-103">The root node of the fragment must support the <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> interface, which inherits from <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-providers-overview.md"><span data-ttu-id="35d87-104">UI 자동화 공급자 개요</span><span class="sxs-lookup"><span data-stu-id="35d87-104">UI Automation Providers Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="35d87-105">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="35d87-105">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)"><span data-ttu-id="35d87-106">조각 공급자 샘플</span><span class="sxs-lookup"><span data-stu-id="35d87-106">Fragment Provider Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35d87-107">이 요소의 경계 사각형을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-107">Gets the bounding rectangle of this element.</span></span></summary>
        <value><span data-ttu-id="35d87-108">화면 좌표로 나타낸 경계 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-108">The bounding rectangle, in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d87-109">요소는 부분적으로 지거나 화면에서 벗어난 클리핑은 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-109">No clipping is required if the element is partly obscured or partly off-screen.</span></span> <span data-ttu-id="35d87-110"><xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A> 사각형 실제로 표시 되는지 여부를 나타내는 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-110">The <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A> property should be set to indicate whether the rectangle is actually visible.</span></span>  
  
 <span data-ttu-id="35d87-111">경계 사각형 내의 일부 포인트는 반드시 클릭할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-111">Not all points within the bounding rectangle are necessarily clickable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d87-112">다음 예제 코드에서는 경계 사각형의 내부 상태에 보관 되어는 <xref:System.Drawing.Rectangle?displayProperty=nameWithType>, 변환는 <xref:System.Windows.Rect?displayProperty=nameWithType> 반환 되기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-112">In the following example code, the internal state of the bounding rectangle is kept in a <xref:System.Drawing.Rectangle?displayProperty=nameWithType>, which is converted to a <xref:System.Windows.Rect?displayProperty=nameWithType> before being returned.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#104)]
 [!code-vb[UIAFragmentProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#104)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="35d87-113">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="35d87-113">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FragmentRoot">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FragmentRoot As IRawElementProviderFragmentRoot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ FragmentRoot { System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FragmentRoot : System.Windows.Automation.Provider.IRawElementProviderFragmentRoot" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragmentRoot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35d87-114">조각의 루트 노드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-114">Retrieves the root node of the fragment.</span></span></summary>
        <value><span data-ttu-id="35d87-115">루트 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-115">The root node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d87-116">구현 하는 공급자 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> 자기 자신을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-116">A provider that implements <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> should return itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d87-117">다음 코드 예제에서는 목록 상자 내에서 목록 항목을 같은 조각 요소에 대 한 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-117">The following code example shows an implementation for an element in a fragment, such as a list item within a list box.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#105)]
 [!code-vb[UIAFragmentProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#105)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="35d87-118">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="35d87-118">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEmbeddedFragmentRoots">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmbeddedFragmentRoots () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetEmbeddedFragmentRoots();" />
      <MemberSignature Language="F#" Value="abstract member GetEmbeddedFragmentRoots : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iRawElementProviderFragment.GetEmbeddedFragmentRoots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35d87-119">현재 요소에 루트가 있는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리에 포함된 조각 루트의 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-119">Retrieves an array of fragment roots that are embedded in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree rooted at the current element.</span></span></summary>
        <returns><span data-ttu-id="35d87-120">루트 조각의 배열이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-120">An array of root fragments, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d87-121">현재 요소의 다른를 호스트 하는 경우에이 메서드가 반환 조각의 배열 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 프레임 워크입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-121">This method returns an array of fragments only if the current element is hosting another [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] framework.</span></span> <span data-ttu-id="35d87-122">대부분의 공급자 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-122">Most providers return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="35d87-123">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="35d87-123">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeId : unit -&gt; int[]" Usage="iRawElementProviderFragment.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35d87-124">요소의 런타임 식별자를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-124">Retrieves the runtime identifier of an element.</span></span></summary>
        <returns><span data-ttu-id="35d87-125">요소의 고유 런타임 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-125">The unique run-time identifier of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d87-126">구현에서는 반환 해야 `null` 창 핸들에 해당 하는 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-126">Implementations should return `null` for an element that corresponds to a window handle.</span></span> <span data-ttu-id="35d87-127">다른 요소에 포함 된 배열을 반환 해야 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>조각 내에서 고유한 값으로 값이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-127">Other elements should return an array that contains <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>, followed by a value that is unique within the fragment.</span></span>  
  
 <span data-ttu-id="35d87-128">조각; 내에서 고유 하 게 공급자의 책임 예를 들어, 목록의 각 항목이 개별적으로 번호가 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-128">It is the provider's responsibility to ensure uniqueness within the fragment; for example, each item in a list must be individually numbered.</span></span> <span data-ttu-id="35d87-129">합니다 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 엔진 식별자를 변환 하 여 모든 인스턴스 간에 고유한 지 확인 합니다 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-129">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] engine ensures that the identifier is unique among all instances, by translating the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d87-130">다음 예제 코드에서는 목록 상자 내에서 항목 같은 조각 내 요소이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-130">The following example code shows an implementation of this method by an element within a fragment, such as an item within a list box.</span></span> <span data-ttu-id="35d87-131">항목에는이 인스턴스의 조각 내에서 자체 고유 식별자와 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> 값을 입력 하면 메서드에서 반환 된 식별자가 고유는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 트리.</span><span class="sxs-lookup"><span data-stu-id="35d87-131">The item has its own unique identifier within this instance of the fragment, and the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value ensures that the identifier returned by the method is unique in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#101)]
 [!code-vb[UIAFragmentProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="35d87-132">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="35d87-132">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragment Navigate (System.Windows.Automation.Provider.NavigateDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderFragment Navigate(valuetype System.Windows.Automation.Provider.NavigateDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (direction As NavigateDirection) As IRawElementProviderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderFragment ^ Navigate(System::Windows::Automation::Provider::NavigateDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Automation.Provider.NavigateDirection -&gt; System.Windows.Automation.Provider.IRawElementProviderFragment" Usage="iRawElementProviderFragment.Navigate direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Automation.Provider.NavigateDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="35d87-133">탐색할 방향입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-133">The direction in which to navigate.</span></span></param>
        <summary><span data-ttu-id="35d87-134">트리 내에서 지정된 방향으로 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-134">Retrieves the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element in a specified direction within the tree.</span></span></summary>
        <returns><span data-ttu-id="35d87-135">지정된 방향의 요소이거나 해당 방향에 요소가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-135">The element in the specified direction, or <see langword="null" /> if there is no element in that direction</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d87-136">합니다 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 구조를 정의 하는이 메서드의 구현에서는 서버의 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리.</span><span class="sxs-lookup"><span data-stu-id="35d87-136">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] server's implementations of this method define the structure of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span></span>  
  
 <span data-ttu-id="35d87-137">탐색에 해당 하는 경우 지원 되는 상향 하향 부모의 첫 번째 및 마지막 자식에 가로로 다음 및 이전 형제를 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-137">Navigation must be supported upward to the parent, downward to the first and last child, and laterally to the next and previous siblings, as applicable.</span></span>  
  
 <span data-ttu-id="35d87-138">각 자식 노드의 부모는 하나만 있고에서 부모에 도달 하는 형제 관계의 체인에 배치 해야 합니다 <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> 고 <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>입니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-138">Each child node has only one parent and must be placed in the chain of siblings reached from the parent by <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> and <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>.</span></span>  
  
 <span data-ttu-id="35d87-139">형제 간의 관계는 두 방향 모두에서 동일 해야 합니다.: A가 B의 경우 <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, B는 A의 <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-139">Relationships among siblings must be identical in both directions: if A is B's <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, then B is A's <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span> <span data-ttu-id="35d87-140">A <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> 가 없는 <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, 및 <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> 되지 <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-140">A <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, and a <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span>  
  
 <span data-ttu-id="35d87-141">조각 루트는 부모 또는 형제;에 대 한 탐색을 사용 하지 마십시오 기본 창 공급자가 조각 루트 간 탐색 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-141">Fragment roots do not enable navigation to a parent or siblings; navigation among fragment roots is handled by the default window providers.</span></span> <span data-ttu-id="35d87-142">조각에는 요소는 해당 조각 내에서 다른 요소에만 이동 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-142">Elements in fragments must navigate only to other elements within that fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d87-143">다음 예제 코드의 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> 단일 자식 요소는 조각 루트에서.</span><span class="sxs-lookup"><span data-stu-id="35d87-143">The following example code shows the implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> by a fragment root that has a single child element.</span></span> <span data-ttu-id="35d87-144">구현 하는 요소가 조각 루트 이기 때문에 부모 요소 이거나 형제 요소에 대 한 탐색을 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-144">Because the implementing element is a fragment root, it does not enable navigation to a parent element or sibling elements.</span></span>  
  
 [!code-csharp[UIAProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#105)]
 [!code-vb[UIAProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#105)]  
  
 <span data-ttu-id="35d87-145">다음 예제에서는 목록 상자 내에서 단일 항목을 나타내는 조각이 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-145">The following example shows an implementation by a fragment that represents a single item within a list box.</span></span> <span data-ttu-id="35d87-146">이 경우 요소에는 모든 자식이 아니라 부모와 형제를 탐색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-146">In this case, the element enables navigation to its parent and siblings, but not to any children.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#103)]
 [!code-vb[UIAFragmentProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#103)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="35d87-147">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="35d87-147">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="abstract member SetFocus : unit -&gt; unit" Usage="iRawElementProviderFragment.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35d87-148">포커스를 이 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-148">Sets the focus to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d87-149">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] framework이 부분을 호스트 하는 인터페이스의 일부가이 메서드를 호출 하기 전에 포커스가 이미 잠금 해제 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-149">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] framework will ensure that the part of the interface that hosts this fragment is already focused before calling this method.</span></span> <span data-ttu-id="35d87-150">구현에는 해당 내부 포커스 상태; 업데이트 해야 예를 들어 다시 표시 하는 목록 항목으로 포커스를 가집니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-150">Your implementation should update only its internal focus state; for example, by repainting a list item to show that it has the focus.</span></span> <span data-ttu-id="35d87-151">원하는 경우 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 집중 부모 창으로 설정 하지 합니다 <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> 옵션 <xref:System.Windows.Automation.Provider.ProviderOptions> 조각 루트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d87-151">If you prefer that [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] not focus the parent window, set the <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> option in <xref:System.Windows.Automation.Provider.ProviderOptions> for the fragment root.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="35d87-152">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="35d87-152">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>