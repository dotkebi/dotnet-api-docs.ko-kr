<Type Name="IWindowProvider" FullName="System.Windows.Automation.Provider.IWindowProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b42137cd19a38b43260ec7ab321e94a17e47acd" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56367139" /></Metadata><TypeSignature Language="C#" Value="public interface IWindowProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWindowProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IWindowProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWindowProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWindowProvider" />
  <TypeSignature Language="F#" Value="type IWindowProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("987df77b-db06-4d77-8f8a-86a9c3bb90b9")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d367-101">메서드 및 속성을 노출하여 기존 GUI(그래픽 사용자 인터페이스) 내에서 기본적인 창 기반 기능을 제공하는 컨트롤에 대한 UI Automation 클라이언트 액세스를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-101">Exposes methods and properties to support UI Automation client access to controls that provide fundamental window-based functionality within a traditional graphical user interface (GUI).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d367-102">지원 해야 하는 UI 자동화 공급자에서 구현 된 <xref:System.Windows.Automation.WindowPattern> 컨트롤 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.WindowPattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.WindowPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="4d367-103">UI 자동화 컨트롤 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="4d367-103">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="4d367-104">서버 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-104">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="4d367-105">클라이언트 쪽 UI 자동화 공급자 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-105">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="4d367-106">UI 자동화 공급자의 컨트롤 패턴 지원</span><span class="sxs-lookup"><span data-stu-id="4d367-106">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-107">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-107">Implementing the UI Automation Window Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iWindowProvider.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d367-108">창을 닫으려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-108">Attempts to close the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d367-109"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> 해야 합니다는 차단 하지 않고 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-109"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> must return immediately without blocking.</span></span>  
  
 <span data-ttu-id="4d367-110"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A>는 <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-110"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> raises the <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent> event.</span></span> <span data-ttu-id="4d367-111">가능한 경우는 이벤트를 발생 시켜야 컨트롤 연결된 된 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-111">If possible, the event should be raised after the control has completed its associated action.</span></span>  
  
 <span data-ttu-id="4d367-112">분할 창 컨트롤에서 호출 되 면이 메서드를 창을 닫으려면 연결된 된 분할을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-112">When called on a split pane control, this method will close the pane and remove the associated split.</span></span> <span data-ttu-id="4d367-113">이 메서드는 구현에 따라 다른 모든 창의 닫을 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-113">This method might also close all other panes, depending on implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4d367-114">컨트롤이 요청한 작업을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4d367-114">When the control is unable to perform the requested action.</span></span></exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><span data-ttu-id="4d367-115">대상 요소가 더 이상 사용 가능하지 않은 경우(예: 창이 닫힘)</span><span class="sxs-lookup"><span data-stu-id="4d367-115">When the target element is no longer available (for example, the window has closed).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-116">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-116">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InteractionState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowInteractionState InteractionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowInteractionState InteractionState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InteractionState As WindowInteractionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowInteractionState InteractionState { System::Windows::Automation::WindowInteractionState get(); };" />
      <MemberSignature Language="F#" Value="member this.InteractionState : System.Windows.Automation.WindowInteractionState" Usage="System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowInteractionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d367-117">창의 상호 작용 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-117">Gets the interaction state of the window.</span></span></summary>
        <value><span data-ttu-id="4d367-118">컨트롤의 <see cref="T:System.Windows.Automation.WindowInteractionState" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-118">The <see cref="T:System.Windows.Automation.WindowInteractionState" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-119">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-119">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsModal">
      <MemberSignature Language="C#" Value="public bool IsModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModal : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d367-120">창이 모달인지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-120">Gets a value that specifies whether the window is modal.</span></span></summary>
        <value><span data-ttu-id="4d367-121">창이 모달이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-121"><see langword="true" /> if the window is modal; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-122">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-122">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsTopmost">
      <MemberSignature Language="C#" Value="public bool IsTopmost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTopmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTopmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTopmost { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTopmost : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d367-123">창이 z-순서에서 맨 위에 있는 요소인지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-123">Gets a value that specifies whether the window is the topmost element in the z-order.</span></span></summary>
        <value><span data-ttu-id="4d367-124">창이 맨 위에 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-124"><see langword="true" /> if the window is topmost; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-125">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-125">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Maximizable">
      <MemberSignature Language="C#" Value="public bool Maximizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Maximizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Maximizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d367-126">창을 최대화할 수 있는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-126">Gets a value that specifies whether the window can be maximized.</span></span></summary>
        <value><span data-ttu-id="4d367-127">창을 최대화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-127"><see langword="true" /> if the window can be maximized; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-128">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-128">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Minimizable">
      <MemberSignature Language="C#" Value="public bool Minimizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Minimizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Minimizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d367-129">창을 최소화할 수 있는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-129">Gets a value that specifies whether the window can be minimized.</span></span></summary>
        <value><span data-ttu-id="4d367-130">창을 최소화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-130"><see langword="true" /> if the window can be minimized; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-131">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-131">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetVisualState">
      <MemberSignature Language="C#" Value="public void SetVisualState (System.Windows.Automation.WindowVisualState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVisualState(valuetype System.Windows.Automation.WindowVisualState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVisualState (state As WindowVisualState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVisualState(System::Windows::Automation::WindowVisualState state);" />
      <MemberSignature Language="F#" Value="abstract member SetVisualState : System.Windows.Automation.WindowVisualState -&gt; unit" Usage="iWindowProvider.SetVisualState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Automation.WindowVisualState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="4d367-132">창의 요청된 표시 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-132">The requested visual state of the window.</span></span></param>
        <summary><span data-ttu-id="4d367-133">창의 표시 상태를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-133">Changes the visual state of the window.</span></span> <span data-ttu-id="4d367-134">예를 들어 최소화하거나 최대화합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-134">For example, minimizes or maximizes it.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4d367-135">컨트롤이 요청된 동작을 지원하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="4d367-135">When the control does not support the requested behavior.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-136">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-136">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisualState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowVisualState VisualState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowVisualState VisualState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisualState As WindowVisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowVisualState VisualState { System::Windows::Automation::WindowVisualState get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualState : System.Windows.Automation.WindowVisualState" Usage="System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowVisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d367-137">창의 표시 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-137">Gets the visual state of the window.</span></span></summary>
        <value><span data-ttu-id="4d367-138">창의 표시 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-138">The visual state of the window.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-139">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-139">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForInputIdle(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle(int milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member WaitForInputIdle : int -&gt; bool" Usage="iWindowProvider.WaitForInputIdle milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds"><span data-ttu-id="4d367-140">연결된 프로세스가 유휴 상태가 될 때까지 대기하는 시간(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-140">The amount of time, in milliseconds, to wait for the associated process to become idle.</span></span> <span data-ttu-id="4d367-141">최대값은 <see cref="F:System.Int32.MaxValue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-141">The maximum is <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4d367-142">지정된 시간 동안 또는 연결된 프로세스가 유휴 상태가 될 때까지 중 먼저 완료되는 시간 동안 코드 호출을 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-142">Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.</span></span></summary>
        <returns><span data-ttu-id="4d367-143">창이 유휴 상태가 되면 <see langword="true" />이고, 시간 초과가 발생하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-143"><see langword="true" /> if the window has entered the idle state; <see langword="false" /> if the timeout occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d367-144">이 메서드는 일반적으로의 처리와 함께 사용 된 <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-144">This method is typically used in conjunction with the handling of a <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.</span></span>  
  
 <span data-ttu-id="4d367-145">구현은 기본 애플리케이션 프레임 워크;에 종속 따라서이 메서드는 창의 사용자 입력에 대 한 준비 된 후 잠시를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-145">The implementation is dependent on the underlying application framework; therefore this method might return some time after the window is ready for user input.</span></span> <span data-ttu-id="4d367-146">이 메서드는 창이 유휴 상태가 된 시점을 정확히 확인할를 호출 하는 코드 안 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d367-146">The calling code should not rely on this method to ascertain exactly when the window has become idle.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4d367-147">전달된 매개 변수가 유효한 숫자가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4d367-147">When the parameter passed in is not a valid number.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="4d367-148">UI 자동화 Window 컨트롤 패턴 구현</span><span class="sxs-lookup"><span data-stu-id="4d367-148">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>