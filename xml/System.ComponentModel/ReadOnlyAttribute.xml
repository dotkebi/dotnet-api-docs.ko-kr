<Type Name="ReadOnlyAttribute" FullName="System.ComponentModel.ReadOnlyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="320ee091c6a8f9dd3ae6c633cf2599ab47ab2f7e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58683648" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReadOnlyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReadOnlyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ReadOnlyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReadOnlyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ReadOnlyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="873a8-101">이 특성이 바인딩되는 속성이 읽기 전용인지 아니면 읽기/쓰기가 가능한지를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-101">Specifies whether the property this attribute is bound to is read-only or read/write.</span></span> <span data-ttu-id="873a8-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-102">This class cannot be inherited</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873a8-103">로 표시 된 멤버를 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `true` 되지 않은 또는 `Set` 방법을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-103">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="873a8-104">이 특성이 없는 또는 사용 하 여 표시 된 멤버를 <xref:System.ComponentModel.ReadOnlyAttribute> 로 `false` 읽기/쓰기 이며 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-104">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="873a8-105">기본값은 <xref:System.ComponentModel.ReadOnlyAttribute.No>입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-105">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="873a8-106">합니다 <xref:System.ComponentModel.PropertyDescriptor> 클래스는 적용 된 <xref:System.ComponentModel.ReadOnlyAttribute> 런타임 및 디자인 환경에서.</span><span class="sxs-lookup"><span data-stu-id="873a8-106">The <xref:System.ComponentModel.PropertyDescriptor> class enforces the <xref:System.ComponentModel.ReadOnlyAttribute> in the design environment and at run time.</span></span> <span data-ttu-id="873a8-107">사용 하 여 속성을 표시 하는 경우는 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `true`,이 특성의 값은 상수 멤버로 <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="873a8-107">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="873a8-108">사용 하 여 표시 된 속성을 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `false`, 값은 <xref:System.ComponentModel.ReadOnlyAttribute.No>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-108">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="873a8-109">따라서 코드에서이 특성의 값을 확인 하려는 경우 특성으로 지정 해야 합니다 <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> 또는 <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-109">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="873a8-110">자세한 내용은 [특성](~/docs/standard/attributes/index.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="873a8-110">For more information, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873a8-111">다음 코드 예제에서는 속성을 읽기 전용으로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-111">The following code example marks a property as read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="873a8-112">다음 코드 예제에서는 값을 확인 하는 방법을 보여 줍니다 합니다 <xref:System.ComponentModel.ReadOnlyAttribute> 에 대 한 `MyProperty`합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-112">The next code example shows how to check the value of the <xref:System.ComponentModel.ReadOnlyAttribute> for `MyProperty`.</span></span> <span data-ttu-id="873a8-113">먼저 코드를 가져옵니다는 <xref:System.ComponentModel.PropertyDescriptorCollection> 개체에 대 한 모든 속성을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-113">First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span> <span data-ttu-id="873a8-114">다음으로 인덱싱 하므로 합니다 <xref:System.ComponentModel.PropertyDescriptorCollection> 가져오려는 `MyProperty`합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-114">Next, it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span> <span data-ttu-id="873a8-115">그런 다음이 속성에 대 한 특성을 반환 하 고 특성 변수에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-115">Then it returns the attributes for this property and saves them in the attributes variable.</span></span>  
  
 <span data-ttu-id="873a8-116">이 예제에서는 값을 확인 하는 두 가지 방법을 제공 합니다 <xref:System.ComponentModel.ReadOnlyAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-116">The example presents two different ways of checking the value of the <xref:System.ComponentModel.ReadOnlyAttribute>.</span></span> <span data-ttu-id="873a8-117">이 예제에서는 두 번째 코드 조각에서 호출 된 <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="873a8-117">In the second code fragment, the example calls the <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> method.</span></span> <span data-ttu-id="873a8-118">마지막 코드 조각에서 사용 하 여는 <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> 속성 값을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-118">In the last code fragment, the example uses the <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> property to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic ReadOnlyAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#2)]  
  
 <span data-ttu-id="873a8-119">사용 하 여 클래스를 표시 하는 경우는 <xref:System.ComponentModel.ReadOnlyAttribute>, 값을 확인 하려면 다음 코드 예제를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-119">If you marked a class with the <xref:System.ComponentModel.ReadOnlyAttribute>, use the following code example to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#3)]
 [!code-csharp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#3)]
 [!code-vb[Classic ReadOnlyAttribute Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.AttributeCollection" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyAttribute (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyAttribute(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.ReadOnlyAttribute : bool -&gt; System.ComponentModel.ReadOnlyAttribute" Usage="new System.ComponentModel.ReadOnlyAttribute isReadOnly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly"><span data-ttu-id="873a8-120">이 특성이 바인딩되는 속성이 읽기 전용임을 나타내면 <see langword="true" />이고, 속성이 읽기/쓰기가 가능함을 나타내면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-120"><see langword="true" /> to show that the property this attribute is bound to is read-only; <see langword="false" /> to show that the property is read/write.</span></span></param>
        <summary><span data-ttu-id="873a8-121"><see cref="T:System.ComponentModel.ReadOnlyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-121">Initializes a new instance of the <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873a8-122">로 표시 된 멤버를 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `true` 되지 않은 또는 `Set` 방법을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-122">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="873a8-123">이 특성이 없는 또는 사용 하 여 표시 된 멤버를 <xref:System.ComponentModel.ReadOnlyAttribute> 로 `false` 읽기/쓰기 이며 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-123">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="873a8-124">기본값은 <xref:System.ComponentModel.ReadOnlyAttribute.No>입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-124">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="873a8-125">사용 하 여 속성을 표시 하는 경우는 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `true`,이 특성의 값은 상수 멤버로 <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="873a8-125">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="873a8-126">사용 하 여 표시 된 속성을 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `false`, 값은 <xref:System.ComponentModel.ReadOnlyAttribute.No>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-126">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="873a8-127">따라서 코드에서이 특성의 값을 확인 하려는 경우 특성으로 지정 해야 합니다 <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> 또는 <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-127">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873a8-128">다음 코드 예제에서는 속성을 읽기 전용으로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-128">The following code example marks a property as read-only.</span></span> <span data-ttu-id="873a8-129">이 코드를 만듭니다 <xref:System.ComponentModel.ReadOnlyAttribute>, 그 값을 설정 <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>, 속성에 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-129">This code creates a new <xref:System.ComponentModel.ReadOnlyAttribute>, sets its value to <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>, and binds it to the property.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="873a8-130"><see cref="T:System.ComponentModel.ReadOnlyAttribute" />의 기본값인 <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" />를 지정합니다. 기본값은 이 특성이 바인딩된 속성이 읽기/쓰기가 가능함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-130">Specifies the default value for the <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, which is <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (that is, the property this attribute is bound to is read/write).</span></span> <span data-ttu-id="873a8-131">이 <see langword="static" /> 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-131">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873a8-132">상수 멤버에이 특성이 설정 되어이 값을 갖는 속성으로 표시 하면 <xref:System.ComponentModel.ReadOnlyAttribute.No>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-132">When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="873a8-133">따라서 특성 코드에서이 값으로 설정 되어 있는지 확인 하려는 경우 특성으로 지정 해야 <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-133">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="readOnlyAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="873a8-134">비교할 다른 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-134">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="873a8-135">이 인스턴스와 지정된 개체가 같은지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-135">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="873a8-136"><see langword="true" />가 이 인스턴스와 같으면 <paramref name="value" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-136"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="readOnlyAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="873a8-137">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="873a8-138">현재 <see cref="T:System.ComponentModel.ReadOnlyAttribute" />의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-138">A hash code for the current <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="readOnlyAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="873a8-139">이 특성이 기본값인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-139">Determines if this attribute is the default.</span></span></summary>
        <returns><span data-ttu-id="873a8-140">이 특성이 특성 클래스의 기본값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-140"><see langword="true" /> if the attribute is the default value for this attribute class; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="873a8-141">이 특성이 바인딩되는 속성이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-141">Gets a value indicating whether the property this attribute is bound to is read-only.</span></span></summary>
        <value><span data-ttu-id="873a8-142">이 특성이 바인딩되는 속성이 읽기 전용이면 <see langword="true" />이고, 속성이 읽기/쓰기이면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-142"><see langword="true" /> if the property this attribute is bound to is read-only; <see langword="false" /> if the property is read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="873a8-143">다음 코드 예제에서는 확인 하는지 여부를 `MyProperty` 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-143">The following code example checks to see whether `MyProperty` is read-only.</span></span> <span data-ttu-id="873a8-144">코드의 특성을 가져옵니다 먼저 `MyProperty` 다음을 수행 하 여:</span><span class="sxs-lookup"><span data-stu-id="873a8-144">First, the code gets the attributes for `MyProperty` by doing the following:</span></span>  
  
-   <span data-ttu-id="873a8-145">검색을 <xref:System.ComponentModel.PropertyDescriptorCollection> 개체에 대 한 모든 속성을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-145">Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span>  
  
-   <span data-ttu-id="873a8-146">인덱싱에 <xref:System.ComponentModel.PropertyDescriptorCollection> 가져오려는 `MyProperty`합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-146">Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span>  
  
-   <span data-ttu-id="873a8-147">이 속성의 특성을 특성 변수에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-147">Saving the attributes for this property in the attributes variable.</span></span>  
  
 <span data-ttu-id="873a8-148">코드 설정 하 여 `myAttribute` 의 값에는 <xref:System.ComponentModel.ReadOnlyAttribute> 에서 <xref:System.ComponentModel.AttributeCollection> 속성이 읽기 전용인 지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-148">Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.ReadOnlyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute No" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly No As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ No;" />
      <MemberSignature Language="F#" Value=" staticval mutable No : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="873a8-149">이 특성이 바인딩되는 속성을 읽기/쓰기가 가능하고 수정할 수 있도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-149">Specifies that the property this attribute is bound to is read/write and can be modified.</span></span> <span data-ttu-id="873a8-150">이 <see langword="static" /> 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-150">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873a8-151">이 필드는이 특성에 대 한 기본 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-151">This field is the default setting for this attribute.</span></span>  
  
 <span data-ttu-id="873a8-152">사용 하 여 속성을 표시 하는 경우는 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `false`,이 특성의 값은 상수 멤버로 <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="873a8-152">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="873a8-153">따라서 특성 코드에서이 값으로 설정 되어 있는지 확인 하려는 경우 특성으로 지정 해야 <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-153">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Yes" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Yes As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Yes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Yes : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="873a8-154">이 특성이 바인딩되는 속성을 읽기 전용으로 표시하고 서버 탐색기에서 수정할 수 없도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-154">Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer.</span></span> <span data-ttu-id="873a8-155">이 <see langword="static" /> 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-155">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873a8-156">사용 하 여 속성을 표시 하는 경우는 <xref:System.ComponentModel.ReadOnlyAttribute> 로 설정 `true`,이 특성의 값은 상수 멤버로 <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="873a8-156">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="873a8-157">따라서 특성 코드에서이 값으로 설정 되어 있는지 확인 하려는 경우 특성으로 지정 해야 <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="873a8-157">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
  </Members>
</Type>