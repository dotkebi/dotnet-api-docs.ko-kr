<Type Name="ICancelAddNew" FullName="System.ComponentModel.ICancelAddNew">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5f1e588ff5d31f6e6ab7b3ff061a08b2212ab2c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58724797" /></Metadata><TypeSignature Language="C#" Value="public interface ICancelAddNew" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICancelAddNew" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICancelAddNew" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICancelAddNew" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICancelAddNew" />
  <TypeSignature Language="F#" Value="type ICancelAddNew = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e2cc9-101">컬렉션에 새 항목을 추가할 때 트랜잭션 기능을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-101">Adds transactional capability when adding a new item to a collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2cc9-102"><xref:System.ComponentModel.ICancelAddNew> 인터페이스를 사용 하는 확장 가능한 방식으로 새 항목을 추가할 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-102">The <xref:System.ComponentModel.ICancelAddNew> interface enables a collection to add a new item in an extensible way.</span></span> <span data-ttu-id="e2cc9-103">새 항목 이후에 수 커밋되거나 롤백됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-103">The new item subsequently can be committed or rolled back.</span></span> <span data-ttu-id="e2cc9-104"><xref:System.ComponentModel.IBindingList.AddNew%2A> 임시로 다음 작업을 통해 이후에 트랜잭션이 수행 되는 항목을 추가 하는 컬렉션의 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-104">The <xref:System.ComponentModel.IBindingList.AddNew%2A> method of the collection is used to tentatively add the item, which is subsequently transacted through the following operations:</span></span>  
  
-   <span data-ttu-id="e2cc9-105"><xref:System.ComponentModel.ICancelAddNew.EndNew%2A> 메서드를 명시적으로 보류 중인 추가 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-105">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> method will explicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="e2cc9-106">삽입, 제거 또는 이동 등의 다른 컬렉션 작업을 수행 하면 보류 중인 추가 암시적으로 커밋됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-106">Performing another collection operation, such as an insertion, removal, or move will implicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="e2cc9-107"><xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> 메서드 롤백됩니다 보류 중인 추가 아직 커밋되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-107">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method will roll back the pending addition if it has not already been committed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2cc9-108">Windows Forms 복합 데이터 바인딩 등의 일부 시나리오에서 컬렉션 나타날 <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> 또는 <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> 새로 추가한 항목 외에 다른 항목에 대 한 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-108">In some scenarios, such as Windows Forms complex data binding, the collection may receive <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> or <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> calls for items other than the newly added item.</span></span> <span data-ttu-id="e2cc9-109">(각 항목은 일반적으로 데이터 뷰에서 행.) 이러한 호출은; 무시 취소 하거나 해당 항목의 인덱스를 지정 하는 경우에 새 항목을 커밋하십시오.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-109">(Each item is typically a row in a data view.) Ignore these calls; cancel or commit the new item only when that item's index is specified.</span></span>  
  
 <span data-ttu-id="e2cc9-110">트랜잭션 데이터 바인딩된 컬렉션에 항목을 추가할 수 있는 두 가지 모델 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-110">There are two models that allow transactional addition of an item to a data-bound collection:</span></span>  
  
-   <span data-ttu-id="e2cc9-111">이전 모델을 구현 하는 컬렉션에서 직접 사용 합니다 <xref:System.ComponentModel.IBindingList> 인터페이스 및 데이터 바인딩된 사용 하 여 직접는 <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-111">The older model relies directly on a collection that implements the <xref:System.ComponentModel.IBindingList> interface and is data-bound directly using the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="e2cc9-112">합니다 <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, 및 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> 의 메서드는 <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> 클래스는 새 항목을 추가 하는 것에 대 한 트랜잭션 지원을 책임 집니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-112">The <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> methods of the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class are responsible for transactional support for adding new items.</span></span> <span data-ttu-id="e2cc9-113">이 기능을 통해 트랜잭션 동작을 지 원하는 항목에 의존 하는 반면는 <xref:System.ComponentModel.IEditableObject> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-113">However, this functionality depends upon the items supporting transactional behavior through the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="e2cc9-114">항목 목록에 대 한 후속 호출에 관계 없이 항상 추가 될 항목을이 인터페이스를 지원 하지 않는 경우 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-114">If the items do not support this interface, the item will always be added to the list, regardless of subsequent calls to <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.</span></span>  
  
-   <span data-ttu-id="e2cc9-115">최신 모델은 제네릭 통해 더 강력한 데이터 바인딩 시나리오를 지원 <xref:System.ComponentModel.BindingList%601> 클래스를 구현 하는 <xref:System.ComponentModel.IBindingList> 및 <xref:System.ComponentModel.ICancelAddNew> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-115">The newer model supports a more robust data-binding scenario through the generic <xref:System.ComponentModel.BindingList%601> class, which implements the <xref:System.ComponentModel.IBindingList> and <xref:System.ComponentModel.ICancelAddNew> interfaces.</span></span> <span data-ttu-id="e2cc9-116">트랜잭션 지원에서 관리 하는 경우에 <xref:System.ComponentModel.BindingList%601> 직접 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-116">In this case, the transactional support is managed by the <xref:System.ComponentModel.BindingList%601> collection directly.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : int -&gt; unit" Usage="iCancelAddNew.CancelNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="e2cc9-117">컬렉션에 이전에 추가된 항목의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-117">The index of the item that was previously added to the collection.</span></span></param>
        <summary><span data-ttu-id="e2cc9-118">보류 중인 새 항목을 컬렉션에서 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-118">Discards a pending new item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2cc9-119"><xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> 메서드는 보류 중인 추가 롤백합니다 (<xref:System.ComponentModel.IBindingList.AddNew%2A>) 이전에 위치의 컬렉션에 추가할 항목의 `itemIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-119">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method rolls back a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="e2cc9-120">인덱스 매개 변수가 필요한 이므로 몇 가지 새 항목을 동시에 보류할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-120">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="EndNew">
      <MemberSignature Language="C#" Value="public void EndNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member EndNew : int -&gt; unit" Usage="iCancelAddNew.EndNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="e2cc9-121">컬렉션에 이전에 추가된 항목의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-121">The index of the item that was previously added to the collection.</span></span></param>
        <summary><span data-ttu-id="e2cc9-122">보류 중인 새 항목을 컬렉션에 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-122">Commits a pending new item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2cc9-123">합니다 <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> 보류 중인 추가 커밋 (<xref:System.ComponentModel.IBindingList.AddNew%2A>) 이전에 위치의 컬렉션에 추가할 항목의 `itemIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-123">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> commits a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="e2cc9-124">인덱스 매개 변수가 필요한 이므로 몇 가지 새 항목을 동시에 보류할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2cc9-124">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
  </Members>
</Type>