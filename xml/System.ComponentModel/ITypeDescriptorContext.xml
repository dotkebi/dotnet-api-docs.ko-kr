<Type Name="ITypeDescriptorContext" FullName="System.ComponentModel.ITypeDescriptorContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe1459e8b08a0b7da2cb531b9bda2003e326dee6" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58743251" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorContext implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypeDescriptorContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorContext : IServiceProvider" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorContext = interface&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7e4d0-101">컨테이너 및 속성 설명자와 같은 구성 요소에 대한 컨텍스트 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-101">Provides contextual information about a component, such as its container and property descriptor.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4d0-102"><xref:System.ComponentModel.ITypeDescriptorContext> 인터페이스 구성 요소에 대 한 컨텍스트 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-102">The <xref:System.ComponentModel.ITypeDescriptorContext> interface provides contextual information about a component.</span></span> <span data-ttu-id="7e4d0-103"><xref:System.ComponentModel.ITypeDescriptorContext> 일반적으로 디자인 타임에 디자인 타임에 컨테이너에 대 한 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-103"><xref:System.ComponentModel.ITypeDescriptorContext> is typically used at design time to provide information about a design-time container.</span></span> <span data-ttu-id="7e4d0-104">이 인터페이스는 일반적으로 형식 변환에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-104">This interface is commonly used in type conversion.</span></span> <span data-ttu-id="7e4d0-105">자세한 내용은 <xref:System.ComponentModel.TypeConverter>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-105">For details, see <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e4d0-106">형식 변환기를 디자인할 때이 인터페이스의 현재 상태에 의존 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-106">Do not rely on the presence of this interface when you design a type converter.</span></span> <span data-ttu-id="7e4d0-107">특정 인터페이스, 속성 또는 서비스 이면 필요 하지만 사용할 수 없는 형식 변환기를 반환 해야 `null` 예외를 throw 하지 않고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-107">If a particular interface, property, or service is necessary but not available, the type converter should return `null` rather than throw an exception.</span></span> <span data-ttu-id="7e4d0-108">이 인터페이스의이 속성을 반환할 수 `null` 언제 든 지가 대비해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-108">This interface's properties can return `null` at any time, and you should plan for this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e4d0-109">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.ComponentModel.ITypeDescriptorContext> 인터페이스 형식 변환을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-109">The following code example demonstrates how to use the <xref:System.ComponentModel.ITypeDescriptorContext> interface to support type conversion.</span></span>  
  
 [!code-cpp[InstanceDescriptorSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/InstanceDescriptorSample/CPP/instancedescriptor.cpp#1)]
 [!code-csharp[InstanceDescriptorSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/InstanceDescriptorSample/CS/instancedescriptor.cs#1)]
 [!code-vb[InstanceDescriptorSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/InstanceDescriptorSample/VB/instancedescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.ITypeDescriptorContext.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e4d0-110">이 <see cref="T:System.ComponentModel.TypeDescriptor" /> 요청을 나타내는 컨테이너를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-110">Gets the container representing this <see cref="T:System.ComponentModel.TypeDescriptor" /> request.</span></span></summary>
        <value><span data-ttu-id="7e4d0-111">이 <see cref="T:System.ComponentModel.IContainer" />에 대한 개체 집합이 포함된 <see cref="T:System.ComponentModel.TypeDescriptor" />이거나, 컨테이너가 없거나 <see cref="T:System.ComponentModel.TypeDescriptor" />에서 외부 개체를 사용하지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-111">An <see cref="T:System.ComponentModel.IContainer" /> with the set of objects for this <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, <see langword="null" /> if there is no container or if the <see cref="T:System.ComponentModel.TypeDescriptor" /> does not use outside objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4d0-112"><xref:System.ComponentModel.ITypeDescriptorContext.Container%2A> 속성 형식 설명자를 사용 하 여 관련 된 구성의 논리 컨테이너를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-112">The <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A> property gets the logical container of the component associated with the type descriptor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IContainer" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.Instance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : obj" Usage="System.ComponentModel.ITypeDescriptorContext.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e4d0-113">이 형식 설명자 요청과 연결된 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-113">Gets the object that is connected with this type descriptor request.</span></span></summary>
        <value><span data-ttu-id="7e4d0-114"><see cref="T:System.ComponentModel.TypeDescriptor" />에서 메서드를 호출하는 개체이거나 호출을 담당하는 개체가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-114">The object that invokes the method on the <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, <see langword="null" /> if there is no object responsible for the call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4d0-115">합니다 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 속성을 호출 하는 개체를 가져옵니다는 <xref:System.ComponentModel.ITypeDescriptorContext> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-115">The <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface.</span></span> <span data-ttu-id="7e4d0-116">예를 들어, 형식 변환기를 지정 하는 경우는 <xref:System.Drawing.Color> 변환할 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 사용 하는 컨트롤의 실제 인스턴스를 반환 합니다 <xref:System.Drawing.Color>합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-116">For example, if a type converter is given a <xref:System.Drawing.Color> to convert, <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> returns the actual instance of the control that is using the <xref:System.Drawing.Color>.</span></span> <span data-ttu-id="7e4d0-117">해당 서비스에 대 한 자세한 내용은 컨트롤을 쿼리할 수 있습니다 및 해당 <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-117">You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Component" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public void OnComponentChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : unit -&gt; unit" Usage="iTypeDescriptorContext.OnComponentChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e4d0-118"><see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-118">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4d0-119">사용 된 <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> 개체 인스턴스의 변경 된 알림 보내기 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-119">Use the <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> method to send notification that an instance of an object has changed.</span></span>  
  
 <span data-ttu-id="7e4d0-120">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-120">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7e4d0-121">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-121">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="7e4d0-122">또한 <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-122">The <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7e4d0-123">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-123">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7e4d0-124">재정의 하는 경우 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-124">When overriding <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public bool OnComponentChanging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnComponentChanging() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
      <MemberSignature Language="VB.NET" Value="Public Function OnComponentChanging () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnComponentChanging();" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : unit -&gt; bool" Usage="iTypeDescriptorContext.OnComponentChanging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e4d0-125"><see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-125">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
        <returns><span data-ttu-id="7e4d0-126">해당 개체를 변경할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-126"><see langword="true" /> if this object can be changed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4d0-127">사용 된 <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> 변경 되려고 할 개체의 인스턴스는 알림을 보내는 방법.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-127">Use the <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> method to send notification that an instance of an object is about to be changed.</span></span> <span data-ttu-id="7e4d0-128">이 메서드는 또한이 개체를 변경할 수 있는지 여부를 나타내는 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-128">This method also returns a value indicating whether this object can be changed.</span></span> <span data-ttu-id="7e4d0-129">때 `false` 는 반환 개체를 변경 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-129">When `false` is returned, do not change the object.</span></span>  
  
 <span data-ttu-id="7e4d0-130">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-130">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7e4d0-131">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-131">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="7e4d0-132">또한 <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-132">The <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7e4d0-133">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-133">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7e4d0-134">재정의 하는 경우 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-134">When overriding <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <altmember cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyDescriptor : System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e4d0-135">지정된 컨텍스트 항목과 연결된 <see cref="T:System.ComponentModel.PropertyDescriptor" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-135">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is associated with the given context item.</span></span></summary>
        <value><span data-ttu-id="7e4d0-136">지정된 컨텍스트 항목을 설명하는 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 호출을 담당하는 <see cref="T:System.ComponentModel.PropertyDescriptor" />가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7e4d0-136">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the given context item; otherwise, <see langword="null" /> if there is no <see cref="T:System.ComponentModel.PropertyDescriptor" /> responsible for the call.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>