<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88fbd55a266da70cd710aa6d70c1000a3267fa3a" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57916090" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f502-101">구성 요소의 특성, 속성 및 이벤트와 같이, 구성 요소의 특성에 대한 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span></span> <span data-ttu-id="0f502-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-103">.NET Framework에서는 형식에 대 한 메타 데이터에 액세스 하는 두 가지 방법: 리플렉션 API에 제공 합니다 <xref:System.Reflection?displayProperty=nameWithType> 네임 스페이스 및 <xref:System.ComponentModel.TypeDescriptor> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="0f502-104">리플렉션은 모든 형식에 사용할 일반 메커니즘의 기초는 설정 되므로 합니다 <xref:System.Object.GetType%2A> 루트 메서드의 <xref:System.Object> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="0f502-105">대상 형식의 컴파일 후 수정할 수는 반환 형식에 대 한 정보를 확장 가능 하며 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="0f502-106">자세한 내용은의 항목을 참조 하세요 [리플렉션](~/docs/framework/reflection-and-codedom/reflection.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="0f502-107">반면 <xref:System.ComponentModel.TypeDescriptor> 구성 요소에 대 한 확장 가능한 검사 메커니즘입니다: 구현 하는 클래스는 <xref:System.ComponentModel.IComponent> 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="0f502-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="0f502-108">리플렉션, 달리 메서드에 대 한 검사 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="0f502-109"><xref:System.ComponentModel.TypeDescriptor> 대상 구성 요소를 통해 사용할 수 있는 여러 서비스에서 동적으로 확장할 수 있습니다 <xref:System.ComponentModel.Component.Site%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="0f502-110">다음 표에서 이러한 서비스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="0f502-111">서비스 이름</span><span class="sxs-lookup"><span data-stu-id="0f502-111">Service name</span></span>|<span data-ttu-id="0f502-112">설명</span><span class="sxs-lookup"><span data-stu-id="0f502-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="0f502-113">와 같은 다른 클래스를 사용 하면 <xref:System.Windows.Forms.ToolTip>, 구성 요소에 추가 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="0f502-114">구성 요소에 의해 노출 되는 표준 메타 데이터를 수정 하려면 다른 개체를 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="0f502-115">완전 하 고 동적으로 자체 메타 데이터를 표준 검사 메커니즘을 지정 하는 클래스를 사용 하면 <xref:System.ComponentModel.TypeDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="0f502-116">제공한 확장성 <xref:System.ComponentModel.TypeDescriptor> 실제 실행 시간을 표현 그러면는 다르게 구성 요소의 디자인 타임에 나타낼 수 있으며 <xref:System.ComponentModel.TypeDescriptor> 디자인 타임에 인프라를 빌드하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="0f502-117">모든 메서드 <xref:System.ComponentModel.TypeDescriptor> 는 `static`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="0f502-118">이 클래스의 인스턴스를 만들 수 없습니다 하 고이 클래스는 상속 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="0f502-119">속성을 설정할 수 있으며 이벤트는 두 가지 방법으로 값: 구성 요소 클래스에서 지정 하거나 디자인 타임에이 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="0f502-120">이러한 설정할 수 있으므로 두 가지 방법의 오버 로드 된 메서드 값 <xref:System.ComponentModel.TypeDescriptor> 두 가지 유형의 매개 변수 사용: 클래스 형식이 나 개체 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0f502-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="0f502-121">액세스 하려는 경우 <xref:System.ComponentModel.TypeDescriptor> 정보 하며, 있는 경우 개체의 인스턴스는 구성 요소에 대해 호출 하는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="0f502-122">개체의 인스턴스에 없는 경우에 클래스 형식에 대 한 호출 하는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-123">속성 및 이벤트 캐시 된 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="0f502-124">일반적으로 상수 개체의 수명에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="0f502-125">그러나 extender 공급자 및 디자이너 개체의 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="0f502-126">이 경우 해당 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 메서드를 호출 하 여 캐시를 업데이트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <related type="Article" href="https://msdn.microsoft.com/library/e81b8e2f-e06e-44fa-8129-7bdb0230101f"><span data-ttu-id="0f502-127">형식 설명자 개요</span><span class="sxs-lookup"><span data-stu-id="0f502-127">Type Descriptor Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d1a58e7f-fb39-4d50-bf84-e3b8f9bf9775"><span data-ttu-id="0f502-128">반사</span><span class="sxs-lookup"><span data-stu-id="0f502-128">Reflection</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-129">클래스 수준 특성을 대상 구성 요소에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-129">Adds class-level attributes to the target component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0f502-130">대상 구성 요소의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-130">An instance of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-131">구성 요소의 클래스에 추가할 <see cref="T:System.Attribute" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-131">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="0f502-132">클래스 수준 특성을 대상 구성 요소 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-132">Adds class-level attributes to the target component instance.</span></span></summary>
        <returns><span data-ttu-id="0f502-133">지정된 속성을 추가하는 데 사용된 새로 만든 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-133">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-134"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> 메서드는 구성 요소의 지정 된 인스턴스 클래스 수준 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-134">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="0f502-135">이 메서드는 이미 특성을 사용 하 여 제공된 된 특성을 병합 하는 형식 설명 공급자를 만들어 바로 가기를 제공 하는 Visual Studio Windows Forms 디자이너와 속성 창을 사용 하 여 응용 프로그램의 일반적인 요구 사항은 이기 때문에 클래스에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-135">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="0f502-136">반환 값은 특성을 추가 하는 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-136">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="0f502-137">나중에이 공급자에 전달할 수는 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 추가 특성은 더 이상 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-137">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-138">매개 변수 중 하나 또는 둘 다 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-138">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-139">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-139">for full access to system resources.</span></span> <span data-ttu-id="0f502-140">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-140">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-141">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-141">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f502-142">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-142">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-143">구성 요소의 클래스에 추가할 <see cref="T:System.Attribute" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-143">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="0f502-144">클래스 수준 특성을 대상 구성 요소 형식에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-144">Adds class-level attributes to the target component type.</span></span></summary>
        <returns><span data-ttu-id="0f502-145">지정된 속성을 추가하는 데 사용된 새로 만든 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-145">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-146"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> 메서드는 구성 요소의 지정된 된 형식으로 클래스 수준 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-146">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="0f502-147">이 메서드는 이미 특성을 사용 하 여 제공된 된 특성을 병합 하는 형식 설명 공급자를 만들어 바로 가기를 제공 하는 Visual Studio Windows Forms 디자이너와 속성 창을 사용 하 여 응용 프로그램의 일반적인 요구 사항은 이기 때문에 클래스에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-147">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="0f502-148">반환 값은 특성을 추가 하는 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-148">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="0f502-149">나중에이 공급자에 전달할 수는 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 추가 특성은 더 이상 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-149">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-150">매개 변수 중 하나 또는 둘 다 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-150">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-151">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-151">for full access to system resources.</span></span> <span data-ttu-id="0f502-152">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-152">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-153">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-153">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="0f502-154">편집기 테이블을 추가할 편집기 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-154">The editor base type to add the editor table for.</span></span> <span data-ttu-id="0f502-155">이 형식에 대한 테이블이 이미 있으면 이 메서드는 아무 작업도 수행하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-155">If a table already exists for this type, this method will do nothing.</span></span></param>
        <param name="table"><span data-ttu-id="0f502-156">추가할 <see cref="T:System.Collections.Hashtable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-156">The <see cref="T:System.Collections.Hashtable" /> to add.</span></span></param>
        <summary><span data-ttu-id="0f502-157">지정된 편집기 기본 형식에 대한 편집기 테이블을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-157">Adds an editor table for the given editor base type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-158"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> 메서드는 지정 된 편집기 기본 형식에 대 한 편집기 테이블을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-158">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="0f502-159">일반적으로 편집기는 구성 요소의 메타 데이터로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-159">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="0f502-160">그러나 경우 요청된 된 편집기 기본에 대 한 메타 데이터가 형식에서 찾을 수 있습니다 구성 요소에 연결된 된 <xref:System.ComponentModel.TypeDescriptor> 하나를 찾을 수 있는 경우 편집기 형식에 대 한 편집기 테이블을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-160">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="0f502-161">편집기 테이블을이 형식 설명자에 추가 되 면 제거할 수 없습니다 및 형식 설명자가 소유 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-161">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="0f502-162">형식 설명자에이 테이블에 있는 수정 자유롭게 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-162">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="0f502-163">편집기 테이블에 대 한 형식 값으로 키와 편집기 데이터 형식을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-163">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="0f502-164">테이블에 있는 항목의 값 부분 편집기 인스턴스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-164">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="0f502-165">세 가지 값 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-165">It can have one of three values.</span></span> <span data-ttu-id="0f502-166">문자열을 포함 하는 경우 형식 설명자 개체 형식과 형식 로드 하는 정규화 된 이름이 이라고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-166">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="0f502-167">형식에 포함 하는 경우이 형식의 인스턴스는 편집기를 가져오려고 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-167">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="0f502-168">마지막으로, 값 부분 실제 편집기 인스턴스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-168">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="0f502-169">형식 설명자 인스턴스에 편집기 확인 되 면 나중에 사용할 테이블로 다시 인스턴스에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-169">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-170">이 형식 설명자에 대한 공급자 목록에 형식 설명 공급자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-170">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-171">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-171">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="0f502-172">대상 구성 요소의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-172">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-173">단일 구성 요소 인스턴스에 대한 형식 설명 공급자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-173">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-174"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 형식 단일 인스턴스의 구성 요소에 대 한 정보를 제공 하는 형식 설명 공급자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-174">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="0f502-175">이 메서드에서 공급자의 공급자를 추가 하는 경우 <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> 인스턴스가 이미 존재 하기 때문에 메서드를 호출 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-175">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="0f502-176">이 메서드는 완료에서 구성 요소를 하지 않는 있으므로 구성 요소에 대 한 하드 참조를 유지 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-176">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="0f502-177">동일한 형식 또는 개체에 대 한 여러 형식 설명 공급자를 추가 하는 것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-177">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="0f502-178">이 경우 첫 번째 형식 설명 공급자를 발생 한 형식 정보를 제공 하는 단독으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-178">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="0f502-179">형식 정보 공급자는 스택에 저장 되므로, 마지막으로 추가 된 공급자는 첫 번째 쿼리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-179">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="0f502-180">이 동작을 통해 합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 고 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> 특정 시나리오에 대 한 필요에 따라 푸시 및 팝 하는 데 사용할 메서드 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-180">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="0f502-181">경우 성공 하면이 메서드를 호출 합니다 <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> 메서드는 `instance` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-181">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f502-182">이 메서드의 두 버전은 서로 다른 범위를 사용 하 여 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-182">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="0f502-183">합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 사용 하는 메서드는 <xref:System.Object> 매개 변수는 단일 인스턴스의 지정 된 구성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-183">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="0f502-184">반면, 다른 오버 로드를 사용 하는 한 <xref:System.Type> 매개 변수를 해당 형식에서 설명 된 구성 요소의 모든 인스턴스에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-184">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="0f502-185">사용 된 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0f502-185">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-186">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-186">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-187">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-187">for full access to system resources.</span></span> <span data-ttu-id="0f502-188">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-188">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-189">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-189">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-190">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-190">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="0f502-191">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-191">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-192">구성 요소 클래스에 대한 형식 설명 공급자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-192">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-193"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 형식 지정된 된 클래스, 파생 된 클래스 및 이러한 형식의 모든 인스턴스에 대 한 정보를 제공 하는 형식 설명 공급자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-193">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f502-194">`type` 매개 변수는 인터페이스를 포함 하 여 형식일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-194">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="0f502-195">예를 들어, 사용자 지정 형식 및 모든 구성 요소에 대 한 인스턴스 정보를 제공 하려면 지정 `typeof(IComponent)`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-195">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="0f502-196">전달 `typeof(object)` 모든 형식에 대 한 형식 정보를 제공 하도록 공급자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-196">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="0f502-197">이 메서드는 완료 하는 중에서 개체를 하지 않는 있으므로 모든 개체에 대 한 하드 참조를 유지 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-197">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="0f502-198">동일한 형식 또는 개체에 대 한 여러 형식 설명 공급자를 추가 하는 것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-198">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="0f502-199">이 경우 첫 번째 형식 설명 공급자를 발생 한 형식 정보를 제공 하는 단독으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-199">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="0f502-200">형식 정보 공급자는 스택에 저장 되므로, 마지막으로 추가 된 공급자는 첫 번째 쿼리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-200">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="0f502-201">이 동작을 통해 합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 고 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> 특정 시나리오에 대 한 필요에 따라 푸시 및 팝 하는 데 사용할 메서드 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-201">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="0f502-202">경우 성공 하면이 메서드를 호출 합니다 <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> 메서드는 `type` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-202">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f502-203">이 메서드의 두 버전은 서로 다른 범위를 사용 하 여 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-203">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="0f502-204">합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 사용 하는 메서드는 <xref:System.Object> 매개 변수는 단일 인스턴스의 지정 된 구성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-204">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="0f502-205">반면, 다른 오버 로드를 사용 하는 한 <xref:System.Type> 매개 변수를 해당 형식에서 설명 된 구성 요소의 모든 인스턴스에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-205">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="0f502-206">사용 된 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0f502-206">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-207">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-207">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-208">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-208">for full access to system resources.</span></span> <span data-ttu-id="0f502-209">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-209">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-210">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-210">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-211">이 형식 설명자에 대한 공급자 목록에 형식 설명 공급자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-211">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-212">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-212">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="0f502-213">대상 구성 요소의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-213">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-214">단일 구성 요소 인스턴스에 대한 형식 설명 공급자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-214">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-215">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-215">This method can be called from partially trusted code.</span></span> <span data-ttu-id="0f502-216">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 된 호출자에 게 등록할 수 있습니다 지정된 된 인스턴스에 대해 공급자를 해당 형식을 부분 신뢰 이기도 한 경우.</span><span class="sxs-lookup"><span data-stu-id="0f502-216">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="0f502-217">사용 된 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-217">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-218">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-218">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="0f502-219">레지스트리 액세스 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-219">For registry access.</span></span> <span data-ttu-id="0f502-220">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-221">연결 된 열거형: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="0f502-221">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="0f502-222">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-222">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-223">연결된 유형: 합니다 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에 필요 하는 <paramref name="instance" /> 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-223">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-224">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-224">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="0f502-225">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-225">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-226">구성 요소 클래스에 대한 형식 설명 공급자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-226">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-227">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-227">This method can be called from partially trusted code.</span></span> <span data-ttu-id="0f502-228">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 된 호출자에 게 있으면 등록할 수 있으며 지정된 된 형식에 대 한 공급자 부분적으로 신뢰할 수 있는 것도 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-228">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="0f502-229">사용 된 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-229">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-230">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-230">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="0f502-231">레지스트리 액세스 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-231">For registry access.</span></span> <span data-ttu-id="0f502-232">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-233">연결 된 열거형: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="0f502-233">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="0f502-234">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-234">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-235">연결된 유형: 합니다 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에서 필요한 <paramref name="type" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-235">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f502-236">대상 구성 요소에 대한 COM(구성 요소 개체 모델) 형식 정보에 대한 공급자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-236">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span></span></summary>
        <value><span data-ttu-id="0f502-237">COM 형식 정보 공급자를 나타내는 <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-237">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-238">합니다 <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> 속성 및 <xref:System.ComponentModel.IComNativeDescriptorHandler> 인터페이스는 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-238">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="0f502-239">자세한 내용은 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0f502-239">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-240">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-240">for full access to system resources.</span></span> <span data-ttu-id="0f502-241">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-241">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-242">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-242">Associated state:</span></span></permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f502-243">대상 구성 요소에서 나타내는 COM(구성 요소 개체 모델) 개체의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-243">Gets the type of the Component Object Model (COM) object represented by the target component.</span></span></summary>
        <value><span data-ttu-id="0f502-244">이 구성 요소가 나타내는 COM 개체의 <see cref="T:System.Type" />, 또는 비 COM 개체의 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-244">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-245">합니다 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 속성에 전달 될 수 있는 형식을 반환 합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> COM 형식에 대 한 형식 설명 공급자를 정의 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-245">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="0f502-246">합니다 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 속성 및이 클래스의 다른 멤버에서 사용 되지 않는 기능을 대체 합니다. <xref:System.ComponentModel.IComNativeDescriptorHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-246">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="0f502-247">COM 개체 사이 매핑 계층을 구현 하 고 <xref:System.ComponentModel.TypeDescriptor>, 추가 <xref:System.ComponentModel.TypeDescriptionProvider> 유형을 처리 하도록 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-247">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="0f502-248">기본 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-248">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="0f502-249">보조 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-249">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="0f502-250">두 개체 사이에 기본-보조 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-250">Creates a primary-secondary association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-251"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드는 기본 및 보조 개체 간의 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-251">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="0f502-252">연결을 만든 후 디자이너 또는 다른 필터링 메커니즘 기본 개체의 속성 집합으로 라우트되는 속성을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-252">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="0f502-253">속성 호출을 기본 개체에 대해 수행 되 면를 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 메서드를 호출 하 여 해당 형식 매개 변수에 관련 된 실제 개체 인스턴스를 해결 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-253">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="0f502-254"><xref:System.WeakReference> 사용 되는 기본 및 보조 개체 간의 연결을 유지 관리; 따라서이 메서드 해도 개체에서 종료 하 고 가비지 수집에서 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-254">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-255">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-255">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f502-256"><paramref name="primary" />가 <paramref name="secondary" />와 같은 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-256"><paramref name="primary" /> is equal to <paramref name="secondary" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-257">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-257">for full access to system resources.</span></span> <span data-ttu-id="0f502-258">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-258">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-259">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-259">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="designerBaseType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-260">디자이너와 연결할 구성 요소를 지정하는 <see cref="T:System.ComponentModel.IComponent" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-260">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span></span></param>
        <param name="designerBaseType"><span data-ttu-id="0f502-261">만들 디자이너의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-261">A <see cref="T:System.Type" /> that represents the type of designer to create.</span></span></param>
        <summary><span data-ttu-id="0f502-262">지정된 구성 요소와 연결된 디자이너의 인스턴스 및 지정된 형식의 디자이너의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-262">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span></span></summary>
        <returns><span data-ttu-id="0f502-263">구성 요소에 대한 디자이너의 인스턴스인 <see cref="T:System.ComponentModel.Design.IDesigner" />이거나, 디자이너를 찾을 수 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-263">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-264">이 메서드는 유효한 찾을 수 없는 경우 <xref:System.ComponentModel.DesignerAttribute>를 디자이너에 대 한 클래스 계층 구조를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-264">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="0f502-265">반환 하는 경우 클래스 계층 구조에서 디자이너를 찾을 수 없습니다 것, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-265">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-266">기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-266">Creates a new event descriptor that is identical to an existing event descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-267">새 이벤트를 만들 구성 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-267">The type of the component for which to create the new event.</span></span></param>
        <param name="oldEventDescriptor"><span data-ttu-id="0f502-268">기존 이벤트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-268">The existing event information.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-269">새 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-269">The new attributes.</span></span></param>
        <summary><span data-ttu-id="0f502-270">기존 <see cref="T:System.ComponentModel.EventDescriptor" />를 전달할 때 기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-270">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="0f502-271">지정된 메타데이터 특성과 기존 메타데이터 특성이 병합된 새 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-271">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="0f502-272">구성 요소의 public이 아닌 멤버를 검사 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-272">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="0f502-273">연결에 필요한 요청 액세스할 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-273">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-274">해당 이벤트가 바인딩되는 구성 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-274">The type of the component the event lives on.</span></span></param>
        <param name="name"><span data-ttu-id="0f502-275">이벤트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-275">The name of the event.</span></span></param>
        <param name="type"><span data-ttu-id="0f502-276">이벤트를 처리하는 대리자 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-276">The type of the delegate that handles the event.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-277">이 이벤트에 대한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-277">The attributes for this event.</span></span></param>
        <summary><span data-ttu-id="0f502-278">형식에 대해 지정된 이벤트에서 동적으로 설명자 정보를 생성하여 기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-278">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span></span></summary>
        <returns><span data-ttu-id="0f502-279">형식에 바인딩되는 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-279">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="0f502-280">구성 요소의 public이 아닌 멤버를 검사 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-280">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="0f502-281">연결에 필요한 요청 액세스할 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-281">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="objectType" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="argTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-282"><see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 서비스를 제공하는 서비스 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-282">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span></span> <span data-ttu-id="0f502-283">이 매개 변수는 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-283">This parameter can be <see langword="null" />.</span></span></param>
        <param name="objectType"><span data-ttu-id="0f502-284">만들 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-284">The <see cref="T:System.Type" /> of object to create.</span></span></param>
        <param name="argTypes"><span data-ttu-id="0f502-285">개체의 생성자에 전달할 매개 변수 형식의 선택적 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-285">An optional array of parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="0f502-286">이 매개 변수는 <see langword="null" /> 또는 0길이 배열일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-286">This parameter can be <see langword="null" /> or an array of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="0f502-287">개체의 생성자에 전달할 매개 변수 값의 선택적 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-287">An optional array of parameter values to pass to the object's constructor.</span></span> <span data-ttu-id="0f502-288"><see langword="null" />이 아니면 요소 개수가 <paramref name="argTypes" />와 동일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-288">If not <see langword="null" />, the number of elements must be the same as <paramref name="argTypes" />.</span></span></param>
        <summary><span data-ttu-id="0f502-289">다른 데이터 형식 대신 사용할 수 있는 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-289">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="0f502-290">연결된 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />가 있으면 대체 데이터 형식의 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-290">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-291"><xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> 메서드를 검색 한 <xref:System.ComponentModel.TypeDescriptionProvider> 지정 된 연결 된 `objectType` 데이터 형식.</span><span class="sxs-lookup"><span data-stu-id="0f502-291">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="0f502-292">이 메서드는 먼저에서 형식 설명 공급자를을 가져오려고 시도 합니다 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-292">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="0f502-293">이 작업에 실패 하면 공급자에 대 한 자체 내부 테이블 검색 (이러한 항목에 대 한 이전 호출을 통해 만든 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span><span class="sxs-lookup"><span data-stu-id="0f502-293">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="0f502-294">공급자를 찾으면이 메서드는 해당 개체에 만들기 호출을 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-294">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-295"><paramref name="argTypes" />가 <see langword="null" />이 아닐 때 <paramref name="objectType" />이 <see langword="null" />이거나 <paramref name="args" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-295"><paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f502-296"><paramref name="argTypes" /> 및 <paramref name="args" />의 요소 수가 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-296"><paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="0f502-297">파생된 클래스는 대체 인스턴스를 제공 하지 않는 경우이 메서드는 기본 구현을 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-297">If the derived class does not provide a substitute instance, this method should call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-298">구성 요소의 기존 속성에 대한 새 속성 설명자를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-298">Creates a new property descriptor for an existing property of a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-299">속성이 멤버인 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-299">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="oldPropertyDescriptor"><span data-ttu-id="0f502-300">기존 속성 설명자입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-300">The existing property descriptor.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-301">이 속성의 새 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-301">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="0f502-302">지정된 기존 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 및 특성 배열을 사용하여 기존 속성 설명자에서 새 속성 설명자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-302">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span></span></summary>
        <returns><span data-ttu-id="0f502-303">지정된 메타데이터 특성이 기존 메타데이터 특성과 병합된 새 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-303">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="0f502-304">구성 요소의 public이 아닌 멤버를 검사 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-304">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="0f502-305">연결에 필요한 요청 액세스할 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-305">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-306">속성이 멤버인 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-306">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="name"><span data-ttu-id="0f502-307">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-307">The name of the property.</span></span></param>
        <param name="type"><span data-ttu-id="0f502-308">속성의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-308">The <see cref="T:System.Type" /> of the property.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-309">이 속성의 새 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-309">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="0f502-310">지정된 속성 이름, 형식 및 특성 배열을 사용하여 속성 설명자를 만들고 형식에 동적으로 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-310">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span></span></summary>
        <returns><span data-ttu-id="0f502-311">지정 형식에 바인딩되고 지정된 메타데이터 특성이 기존 메타데이터 특성과 병합된 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-311">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="0f502-312">구성 요소의 public이 아닌 멤버를 검사 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-312">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="0f502-313">연결에 필요한 요청 액세스할 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-313">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="primary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f502-314">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-314">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="primary"><span data-ttu-id="0f502-315">연결의 기본 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-315">The primary object of the association.</span></span></param>
        <summary><span data-ttu-id="0f502-316">지정된 기본 개체와 연결된 형식의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-316">Returns an instance of the type associated with the specified primary object.</span></span></summary>
        <returns><span data-ttu-id="0f502-317">연결이 있으면 기본 개체와 연결된 보조 형식의 인스턴스이고, 지정된 연결이 없으면 <paramref name="primary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-317">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-318">이전 연결에 대해 수행 된 경우는 `type` 매개 변수를 사용 하 여는 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드를 해당 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 메서드 요청된 된 형식에 대 한 호출을 올바른 보조 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-318">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="0f502-319">이 고, 그렇지 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 에 대 한 호환 디자이너에 대 한 검색 `type` 하 고 있는 경우 디자이너를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-319">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="0f502-320">이 메서드는 `null`를 반환하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-320">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="0f502-321"><xref:System.WeakReference> 사용 되는 기본 및 보조 개체 간의 연결을 유지 관리; 따라서이 메서드 해도 기본 또는 보조 개체에서 종료 하 고 가비지 수집에서 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-321">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-322">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-322">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-323">구성 요소나 형식에 대한 특성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-323">Returns the collection of attributes for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-324">특성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-324">The component for which you want to get attributes.</span></span></param>
        <summary><span data-ttu-id="0f502-325">지정된 구성 요소에 대한 특성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-325">Returns the collection of attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-326">구성 요소의 특성을 포함하는 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-326">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span></span> <span data-ttu-id="0f502-327"><paramref name="component" />가 <see langword="null" />이면 이 메서드는 빈 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-327">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-328">반환 하는 특성을 <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> 원래 구성 요소의 소스 extender 공급자가 목록에서 메서드를 동적으로 수정할 수 있습니다 (<xref:System.ComponentModel.IExtenderProvider>), 서비스 필터링 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), 및 특성 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-328">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="0f502-329">사용 하 여 사용자 지정 특성을 정의 하는 경우 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 설정 `true`를 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성을 고유 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-329">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="0f502-330">재정의 특성의 모든 인스턴스가 고유한 경우 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 특성의 개체 id를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-330">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="0f502-331">특성의 일부 인스턴스가 고유한 상태인 경우의 값을 반환 합니다. <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 반환 하는 같음 이러한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-331">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="0f502-332">예를 들어 일부 특성 생성자 매개 변수는 고유 키로 사용 되는 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-332">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="0f502-333">이러한 특성에 대 한 생성자 매개 변수에서 값을 반환 합니다 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-333">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f502-334">기본 구현을 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 의 값에 관계 없이 형식 id를 반환 합니다 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-334">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0f502-335">여러 인스턴스를 반환 하기 위해는 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 에서 특성을 <xref:System.ComponentModel.AttributeCollection>, 특성을 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-335">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-336">이 방법의 예제를 참조 하세요.를 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-336">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-337">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-337">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-338">지정된 구성 요소 형식에 대한 특성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-338">Returns a collection of attributes for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="0f502-339">해당 구성 요소 형식에 대한 특성이 들어 있는 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-339">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span></span> <span data-ttu-id="0f502-340">해당 구성 요소가 <see langword="null" />이면 이 메서드는 빈 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-340">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-341">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-341">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-342">특성에 대 한 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 `true`, 중복 된 인스턴스를 제거 하는 특성 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-342">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="0f502-343">이 인스턴스를는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성 값이 같으면 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-343">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="0f502-344">사용 하 여 사용자 지정 특성을 정의 하는 경우 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 설정 `true`를 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성을 고유 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-344">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="0f502-345">재정의 특성의 모든 인스턴스가 고유한 경우 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 특성의 개체 id를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-345">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="0f502-346">특성의 일부 인스턴스가 고유한 상태인 경우의 값을 반환 합니다. <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 반환 하는 같음 이러한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-346">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="0f502-347">예를 들어 일부 특성 생성자 매개 변수는 고유 키로 사용 되는 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-347">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="0f502-348">이러한 특성에 대 한 생성자 매개 변수에서 값을 반환 합니다 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-348">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f502-349">기본 구현을 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 의 값에 관계 없이 형식 id를 반환 합니다 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-349">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0f502-350">여러 인스턴스를 반환 하기 위해는 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 에서 특성을 <xref:System.ComponentModel.AttributeCollection>, 특성을 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-350">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-351">특성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-351">The component for which you want to get attributes.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-352"><paramref name="component" />가 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 형식인 경우 사용자 지정 형식 설명자에서 기본 특성 집합을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-352"><see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <paramref name="component" /> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-353">지정된 구성 요소에 대한 특성 컬렉션과 사용자 지정 형식 설명자가 만들어졌는지 여부를 나타내는 부울 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-353">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span></span></summary>
        <returns><span data-ttu-id="0f502-354">해당 구성 요소의 특성이 들어 있는 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-354">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span></span> <span data-ttu-id="0f502-355">해당 구성 요소가 <see langword="null" />이면 이 메서드는 빈 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-355">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-356">반환 하는 특성을 <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> 구성 요소 원본 extender 공급자가 목록에서 메서드를 동적으로 수정할 수 있습니다 (<xref:System.ComponentModel.IExtenderProvider>), 서비스 필터 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), 및 특성 필터.</span><span class="sxs-lookup"><span data-stu-id="0f502-356">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="0f502-357">사용 하 여 사용자 지정 특성을 정의 하는 경우 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 설정 `true`를 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성을 고유 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-357">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="0f502-358">재정의 특성의 모든 인스턴스가 고유한 경우 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 특성의 개체 id를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-358">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="0f502-359">특성의 일부 인스턴스가 고유한 상태인 경우의 값을 반환 합니다. <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 반환 하는 같음 이러한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-359">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="0f502-360">예를 들어 일부 특성 생성자 매개 변수는 고유 키로 사용 되는 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-360">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="0f502-361">이러한 특성에 대 한 생성자 매개 변수에서 값을 반환 합니다 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-361">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f502-362">기본 구현을 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 의 값에 관계 없이 형식 id를 반환 합니다 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-362">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0f502-363">여러 인스턴스를 반환 하기 위해는 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 에서 특성을 <xref:System.ComponentModel.AttributeCollection>, 특성을 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-363">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-364">지정된 구성 요소에 대한 클래스 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-364">Returns the name of the class for the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-365">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-365">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="0f502-366">기본 형식 설명자를 사용하여 지정된 구성 요소에 대한 클래스 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-366">Returns the name of the class for the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-367">지정된 구성 요소에 대한 클래스 이름을 포함하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-367">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-368">일반적으로이 메서드가 반환 된 전체 <xref:System.Type> 에 대 한 이름를 `component` 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-368">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="0f502-369">예를 들어, 단추에 대 한 클래스 이름을 "System.Windows.Forms.Button"입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-369">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="0f502-370">하는 경우 `component` 구현 <xref:System.ComponentModel.ICustomTypeDescriptor>, 대체 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-370">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="0f502-371">이 메서드는 오버 로드 된 같음 <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> 의 두 번째 매개 변수를 사용 하 여 메서드 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-371">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-372"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-372"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-373">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-373">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-374">지정된 형식에 대한 클래스 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-374">Returns the name of the class for the specified type.</span></span></summary>
        <returns><span data-ttu-id="0f502-375">지정된 구성 요소 형식에 대한 클래스 이름을 포함하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-375">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-376">이 메서드는 연결된 된 클래스 이름을 검색할 지정된 된 형식에 대 한 캐시 된 사용자 지정 형식 설명자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-376">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-377"><paramref name="componentType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-377"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-378">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-378">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-379">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-379"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-380">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소에 대한 클래스 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-380">Returns the name of the class for the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-381">지정된 구성 요소에 대한 클래스 이름을 포함하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-381">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-382">일반적으로이 메서드가 반환 된 전체 <xref:System.Type> 에 대 한 이름를 `component` 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-382">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="0f502-383">예를 들어, 단추에 대 한 클래스 이름을 "System.Windows.Forms.Button"입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-383">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="0f502-384">경우는 `component` 매개 변수 구현 <xref:System.ComponentModel.ICustomTypeDescriptor>, 대체 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-384">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-385"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-385"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-386"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-386"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-387">지정된 구성 요소의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-387">Returns the name of the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-388">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-388">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="0f502-389">기본 형식 설명자를 사용하여 지정된 구성 요소의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-389">Returns the name of the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-390">지정된 구성 요소의 이름을 포함하는 <see cref="T:System.String" />이거나 구성 요소 이름이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-390">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-391">일반적으로이 메서드 있을 경우 구성 요소의 사이트의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-391">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="0f502-392">예를 들어, 단추에 대 한 클래스 이름을 "System.Windows.Forms.Button"입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-392">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="0f502-393">이 메서드는 오버 로드 된 같음 <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> 의 두 번째 매개 변수를 사용 하 여 메서드 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-393">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="0f502-394">이 메서드는 구성 요소의 인스턴스 이름을 검색 하려면 디자인 타임에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-394">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-395"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-395"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-396"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-396"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-397">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-397">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-398">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-398"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-399">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-399">Returns the name of the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-400">지정된 구성 요소에 대한 클래스 이름이거나, 구성 요소 이름이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-400">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-401">이 메서드는 구성 요소의 인스턴스 이름을 검색 하려면 디자인 타임에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-401">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="0f502-402">일반적으로이 메서드 있을 경우 구성 요소의 사이트의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-402">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="0f502-403">예를 들어, 단추에 대 한 클래스 이름을 "System.Windows.Forms.Button"입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-403">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="0f502-404">구성 요소를 구현 하는 경우는 <xref:System.ComponentModel.ICustomTypeDescriptor> 인터페이스를 대체 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-404">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-405"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-405"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-406"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-406"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-407">구성 요소나 형식에 대한 형식 변환기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-407">Returns a type converter for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-408">관련된 변환기를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-408">A component to get the converter for.</span></span></param>
        <summary><span data-ttu-id="0f502-409">지정된 구성 요소의 형식에 대한 형식 변환기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-409">Returns a type converter for the type of the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-410">지정된 구성 요소에 대한 <see cref="T:System.ComponentModel.TypeConverter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-410">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-411">이 메서드를 검색 하 여 적절 한 형식 변환기를 찾습니다는 <xref:System.ComponentModel.TypeConverterAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-411">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="0f502-412">찾을 수 없는 경우는 <xref:System.ComponentModel.TypeConverterAttribute>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-412">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="0f502-413">이 메서드는 오버 로드 된 같음 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 의 두 번째 매개 변수를 사용 하 여 메서드 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-413">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-414">이 방법의 예제를 참조 하세요.를 <xref:System.ComponentModel.TypeConverter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-414">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-415"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-415"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-416"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-416"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f502-417">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-417">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-418">지정된 형식에 대한 형식 변환기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-418">Returns a type converter for the specified type.</span></span></summary>
        <returns><span data-ttu-id="0f502-419">지정된 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-419">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-420">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-420">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-421">이 메서드가 검색 하 여 적절 한 형식 변환기를 찾습니다는 <xref:System.ComponentModel.TypeConverterAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-421">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="0f502-422">찾을 수 없는 경우는 <xref:System.ComponentModel.TypeConverterAttribute>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-422">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-423"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-423"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-424">관련된 변환기를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-424">A component to get the converter for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-425">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-425"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-426">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소의 형식에 대한 형식 변환기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-426">Returns a type converter for the type of the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-427">지정된 구성 요소에 대한 <see cref="T:System.ComponentModel.TypeConverter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-427">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-428">이 메서드를 찾아 적절 한 형식 변환기를 찾습니다는 <xref:System.ComponentModel.TypeConverterAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-428">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="0f502-429">찾을 수 없는 경우는 <xref:System.ComponentModel.TypeConverterAttribute>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-429">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-430"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-430"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-431"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-431"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-432">구성 요소나 형식에 대한 기본 이벤트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-432">Returns the default event for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-433">관련된 이벤트를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-433">The component to get the event for.</span></span></param>
        <summary><span data-ttu-id="0f502-434">지정된 구성 요소에 대한 기본 이벤트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-434">Returns the default event for the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-435">기본 이벤트가 포함된 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 이벤트가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-435">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-436">이 메서드는 오버 로드 된 같음 <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> 의 두 번째 매개 변수를 사용 하 여 메서드 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-436">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-437"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-437"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-438"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-438"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-439">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-439">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-440">지정된 구성 요소 형식에 대한 기본 이벤트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-440">Returns the default event for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="0f502-441">기본 이벤트가 포함된 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 이벤트가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-441">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-442">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-442">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-443"><paramref name="componentType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-443"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-444">관련된 이벤트를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-444">The component to get the event for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-445">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-445"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-446">사용자 지정 형식 설명자를 사용하여 구성 요소에 대한 기본 이벤트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-446">Returns the default event for a component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-447">기본 이벤트가 포함된 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 이벤트가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-447">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-448"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-448"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-449"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-449"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-450">구성 요소에 대한 기본 속성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-450">Returns the default property for a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-451">관련된 기본 속성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-451">The component to get the default property for.</span></span></param>
        <summary><span data-ttu-id="0f502-452">지정된 구성 요소에 대한 기본 속성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-452">Returns the default property for the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-453">기본 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 속성이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-453">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-454">경우는 `component` 매개 변수가 `null`,이 메서드는 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-454">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-455"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-455"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-456">관련된 속성을 가져올 클래스를 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-456">A <see cref="T:System.Type" /> that represents the class to get the property for.</span></span></param>
        <summary><span data-ttu-id="0f502-457">지정된 구성 요소 형식에 대한 기본 속성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-457">Returns the default property for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="0f502-458">기본 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 속성이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-458">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-459">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-459">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-460">경우는 `componentType` 매개 변수가 `null`,이 메서드는 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-460">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-461">관련된 기본 속성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-461">The component to get the default property for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-462">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-462"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-463">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소에 대한 기본 속성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-463">Returns the default property for the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-464">기본 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 속성이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-464">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-465">경우는 `component` 매개 변수가 `null`,이 메서드는 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-465">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-466"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-466"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-467">지정한 기본 형식의 편집기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-467">Returns an editor with the specified base type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-468">관련된 편집기를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-468">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="0f502-469">찾을 편집기의 기본 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-469">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <summary><span data-ttu-id="0f502-470">지정된 구성 요소에 대해 지정된 기본 형식의 편집기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-470">Gets an editor with the specified base type for the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-471">지정한 편집기 형식으로 캐스팅될 수 있는 편집기의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-471">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-472">유형의 `editorBaseType` 일반적으로 <xref:System.Drawing.Design.UITypeEditor>, 하지만 다른 형식 에서도 사용할 수 있습니다 (예를 들어 <xref:System.ComponentModel.ComponentEditor> 및 <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="0f502-472">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="0f502-473">속성에 대 한 여러 편집기를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-473">You can define multiple editors for a property.</span></span> <span data-ttu-id="0f502-474">이 메서드를 사용 하 여 사용 하려는 편집기를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-474">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-475"><paramref name="component" /> 또는 <paramref name="editorBaseType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-475"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-476"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-476"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="0f502-477">사용자 인터페이스 형식 편집기 개요</span><span class="sxs-lookup"><span data-stu-id="0f502-477">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f502-478">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-478">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="0f502-479">찾으려는 편집기의 기본 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-479">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span></span></param>
        <summary><span data-ttu-id="0f502-480">지정된 형식에 대해 지정된 기본 형식의 편집기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-480">Returns an editor with the specified base type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="0f502-481">지정된 기본 형식으로 캐스팅될 수 있는 편집기 개체의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-481">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-482">형식의 `editorBaseType` 일반적으로 <xref:System.Drawing.Design.UITypeEditor>, 하지만 다른 형식 에서도 사용할 수 있습니다 (예를 들어 <xref:System.ComponentModel.ComponentEditor> 고 <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="0f502-482">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="0f502-483">형식에 대 한 여러 편집기를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-483">You can define multiple editors for a type.</span></span> <span data-ttu-id="0f502-484">이 메서드를 사용 하 여 사용 하려는 항목을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-484">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="0f502-485">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-485">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-486"><paramref name="type" /> 또는 <paramref name="editorBaseType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-486"><paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="0f502-487">사용자 인터페이스 형식 편집기 개요</span><span class="sxs-lookup"><span data-stu-id="0f502-487">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-488">관련된 편집기를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-488">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="0f502-489">찾을 편집기의 기본 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-489">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-490">사용자 지정 형식 설명 정보가 고려되어야 하는지 여부를 나타내는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-490">A flag indicating whether custom type description information should be considered.</span></span></param>
        <summary><span data-ttu-id="0f502-491">지정된 구성 요소에 대해 사용자 지정 형식 설명자를 사용하여 지정된 기본 형식의 편집기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-491">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-492">지정한 편집기 형식으로 캐스팅될 수 있는 편집기의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-492">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-493">형식의 `editorBaseType` 일반적으로 <xref:System.Drawing.Design.UITypeEditor>, 하지만 다른 형식 에서도 사용할 수 있습니다 (예를 들어 <xref:System.ComponentModel.ComponentEditor> 고 <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="0f502-493">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="0f502-494">속성에 대 한 여러 편집기를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-494">You can define multiple editors for a property.</span></span> <span data-ttu-id="0f502-495">이 메서드를 사용 하 여 사용 하려는 편집기를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-495">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-496"><paramref name="component" /> 또는 <paramref name="editorBaseType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-496"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-497"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-497"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="0f502-498">사용자 인터페이스 형식 편집기 개요</span><span class="sxs-lookup"><span data-stu-id="0f502-498">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-499">구성 요소나 형식에 대한 이벤트 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-499">Returns the collection of events for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-500">관련된 이벤트를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-500">A component to get the events for.</span></span></param>
        <summary><span data-ttu-id="0f502-501">지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-501">Returns the collection of events for the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-502">이 구성 요소에 대한 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-502">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-503">이벤트의 컬렉션을 검색 하는 지정 된 `component` 매개 변수 인스턴스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-503">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="0f502-504">이 컬렉션 클래스를 제공 하는 이벤트 집합에서 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-504">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="0f502-505">경우는 `component` 매개 변수는 배치, 사이트를 추가 하거나 추가 이벤트를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-505">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="0f502-506">하는 경우 `component` 는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-506">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-507">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-507">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-508">이 방법의 예제를 참조 하세요.를 <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-508">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-509"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-509"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-510">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-510">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-511">지정된 구성 요소 형식에 대한 이벤트 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-511">Returns the collection of events for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="0f502-512">이 구성 요소에 대한 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-512">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-513">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-513">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-514">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-514">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-515">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-515">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-516">관련된 이벤트를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-516">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-517">필터로 사용할 수 있는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-517">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="0f502-518">지정된 특성 배열을 필터로 사용하여 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-518">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="0f502-519">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-519">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-520">에 대 한 이벤트를 `component` 사이트를 추가 하거나 경우에 이벤트를 제거 하기 때문에 매개 변수 클래스의 이벤트에서 달라질 수 있습니다는 `component` 매개 변수에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-520">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="0f502-521">합니다 `attributes` 배열은의 혼합을 가질 수 있습니다 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-521">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="0f502-522">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-522">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="0f502-523"><xref:System.Type> 와일드 카드로 처리 됩니다 하는 모든 이벤트를 일치 하는 <xref:System.Type> 해당 특성 집합에서.</span><span class="sxs-lookup"><span data-stu-id="0f502-523">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="0f502-524">이벤트에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-524">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-525">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 이벤트를 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-525">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-526">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-526">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="0f502-527">하는 경우 `component` 는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-527">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-528">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-528">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-529"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-529"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-530">관련된 이벤트를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-530">A component to get the events for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-531">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-531"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-532">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-532">Returns the collection of events for a specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-533">이 구성 요소에 대한 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-533">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-534">이 메서드는 이벤트의 컬렉션을 검색 하는 지정 `component` 매개 변수 인스턴스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-534">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="0f502-535">이 클래스를 제공 하는 이벤트 집합에서 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-535">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="0f502-536">경우는 `component` 매개 변수는 배치, 사이트를 추가 하거나 추가 이벤트를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-536">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="0f502-537">하는 경우 `component` 는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-537">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-538">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-538">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-539"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-539"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-540">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-540">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-541">필터로 사용할 수 있는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-541">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="0f502-542">지정된 특성 배열을 필터로 사용하여 지정된 구성 요소 형식에 대한 이벤트 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-542">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="0f502-543">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-543">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-544">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-544">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-545">합니다 `attributes` 매개 변수 배열은의 혼합을 가질 수 있습니다 <xref:System.Type> 고 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-545">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="0f502-546">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-546">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="0f502-547"><xref:System.Type> 와일드 카드로 처리 됩니다 하는 모든 이벤트를 일치 하는 <xref:System.Type> 해당 특성 집합에서.</span><span class="sxs-lookup"><span data-stu-id="0f502-547">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="0f502-548">이벤트에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-548">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-549">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 이벤트를 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-549">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-550">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-550">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="0f502-551">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-551">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-552">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-552">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-553">관련된 이벤트를 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-553">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-554">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-554">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-555">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-555"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-556">지정된 특성 배열을 필터로 사용하고 사용자 지정 형식 설명자를 사용하여 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-556">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-557">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-557">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-558">에 대 한 이벤트를 `component` 사이트를 추가 하거나 경우에 이벤트를 제거 하기 때문에 매개 변수 클래스의 이벤트에서 달라질 수 있습니다는 `component` 매개 변수에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-558">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="0f502-559">합니다 `attributes` 매개 변수 배열은의 혼합을 가질 수 있습니다 <xref:System.Type> 고 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-559">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="0f502-560">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-560">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="0f502-561"><xref:System.Type> 와일드 카드로 처리 됩니다 하는 모든 이벤트를 일치 하는 <xref:System.Type> 해당 특성 집합에서.</span><span class="sxs-lookup"><span data-stu-id="0f502-561">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="0f502-562">이벤트에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-562">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-563">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 이벤트를 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-563">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-564">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-564">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="0f502-565">하는 경우 `component` 는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-565">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-566">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-566">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-567"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-567"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-568">이름을 찾을 <see cref="T:System.ComponentModel.Component" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-568">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span></span></param>
        <summary><span data-ttu-id="0f502-569">구성 요소의 정규화된 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-569">Returns the fully qualified name of the component.</span></span></summary>
        <returns><span data-ttu-id="0f502-570">지정된 구성 요소의 정규화된 이름이거나, 구성 요소에 이름이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-570">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-571">대부분의 경우에 <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> 메서드는 동일한 값을 반환 합니다 <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-571">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="0f502-572">그러나 경우 구성 요소가 중첩 된 컨테이너에 있고 다른 중첩 된 의미 체계, 다른 정규화 된 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-572">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-573"><paramref name="component" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-573"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-574">구성 요소나 형식에 대한 속성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-574">Returns the collection of properties on a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-575">속성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-575">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="0f502-576">지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-576">Returns the collection of properties for a specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-577">지정된 구성 요소의 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-577">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-578">사이트 추가 또는 구성 요소는 사이 팅 하는 경우 속성을 제거할 수 있으므로 구성 요소에 대 한 속성을 클래스의 속성에서 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-578">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="0f502-579">경우는 `component` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-579">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-580">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-580">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-581">다음 코드 예제에서는 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 컨트롤의 속성에 액세스 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-581">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="0f502-582">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.ComponentModel.Design.ComponentDesigner> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-582">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-583"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-583"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <related type="Article" href="https://msdn.microsoft.com/library/c186c4b6-076c-438d-9ed3-f13da29c8c1f"><span data-ttu-id="0f502-584">방법: 디자인 타임 서비스에 액세스</span><span class="sxs-lookup"><span data-stu-id="0f502-584">How to: Access Design-time Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-585">관련된 속성을 가져올 구성 요소를 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-585">A <see cref="T:System.Type" /> that represents the component to get properties for.</span></span></param>
        <summary><span data-ttu-id="0f502-586">지정된 구성 요소 형식에 대한 속성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-586">Returns the collection of properties for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="0f502-587">지정된 구성 요소 형식에 대한 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-587">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-588">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-588">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-589">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-589">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-590">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-590">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-591">속성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-591">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-592">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-592">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="0f502-593">지정된 특성 배열을 필터로 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-593">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="0f502-594">지정된 구성 요소의 지정된 특성과 일치하는 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-594">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-595">에 대 한 속성을 `component` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `component` 매개 변수에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-595">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="0f502-596">`attributes` 매개 변수 배열 사용 배열을 필터링 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-596">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="0f502-597">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-597">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="0f502-598">속성에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성은 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-598">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-599">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 속성에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-599">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-600">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 속성에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-600">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="0f502-601">하는 경우 `attributes` 기본 특성을 포함 합니다 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 메서드가 속성에 적용 된 특성을 사용 되지 않은 경우 대/소문자를 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-601">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="0f502-602">하는 경우 `component` 는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-602">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-603">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-603">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-604">다음 코드 예제를 구현 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-604">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="0f502-605">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.Design.PropertyTab> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-605">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-606"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-606"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-607">속성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-607">A component to get the properties for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-608">사용자 지정 형식 설명 정보를 고려하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-608"><see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-609">기본 형식 설명자를 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-609">Returns the collection of properties for a specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-610">지정된 구성 요소의 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-610">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-611">에 대 한 속성을 `component` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `component` 매개 변수에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-611">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="0f502-612">하는 경우 `component` 는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-612">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-613">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-613">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-614"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-614"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="0f502-615">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-615">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-616">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-616">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="0f502-617">지정된 특성 배열을 필터로 사용하여 지정된 구성 요소 형식에 대한 속성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-617">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="0f502-618">이 구성 요소 형식에 대해 지정된 특성과 일치하는 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-618">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-619">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-619">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-620">`attributes` 매개 변수 배열 사용 배열을 필터링 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-620">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="0f502-621">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-621">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="0f502-622">속성에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성은 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-622">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-623">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 속성에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-623">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-624">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 속성에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-624">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="0f502-625">하는 경우 `attributes` 기본 특성을 포함 합니다 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 메서드가 속성에 적용 된 특성을 사용 되지 않은 경우 대/소문자를 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-625">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="0f502-626">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-626">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-627">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-627">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-628">다음 코드 예제를 구현 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-628">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="0f502-629">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.Design.PropertyTab> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-629">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-630">속성을 가져올 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-630">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="0f502-631">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-631">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="0f502-632">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-632"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f502-633">지정된 특성 배열을 필터로 사용하고 사용자 지정 형식 설명자를 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-633">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="0f502-634">지정된 구성 요소의 지정된 특성과 일치하는 이벤트가 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-634">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-635">에 대 한 속성을 `component` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 클래스의 속성에서 다를 수 있습니다는 `component` 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-635">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="0f502-636">`attributes` 매개 변수 배열 사용 배열을 필터링 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-636">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="0f502-637">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-637">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="0f502-638">속성에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성은 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-638">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-639">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 속성에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-639">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0f502-640">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 속성에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-640">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="0f502-641">하는 경우 `attributes` 기본 특성을 포함 합니다 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 메서드가 속성에 적용 된 특성을 사용 되지 않은 경우 대/소문자를 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-641">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="0f502-642">경우는 `component` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-642">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="0f502-643">반환된 된 컬렉션의 순서는 호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 순서를 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-643">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f502-644"><paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span><span class="sxs-lookup"><span data-stu-id="0f502-644"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-645">구성 요소나 형식에 대한 형식 설명 공급자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-645">Returns the type description provider for the component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0f502-646">대상 구성 요소의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-646">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-647">지정된 구성 요소에 대한 형식 설명 공급자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-647">Returns the type description provider for the specified component.</span></span></summary>
        <returns><span data-ttu-id="0f502-648">지정한 구성 요소와 연결된 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-649"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> 메서드는 항상 형식 설명 공급자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="0f502-650">기본값도 <xref:System.ComponentModel.TypeDescriptor> 구현에서 빌드되는 <xref:System.ComponentModel.TypeDescriptionProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-651"><paramref name="instance" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-651"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f502-652">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-652">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-653">지정된 형식에 대한 형식 설명 공급자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-653">Returns the type description provider for the specified type.</span></span></summary>
        <returns><span data-ttu-id="0f502-654">지정한 형식과 연결된 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-654">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-655"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> 메서드는 항상 형식 설명 공급자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-655">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="0f502-656">기본값도 <xref:System.ComponentModel.TypeDescriptor> 구현에서 빌드되는 <xref:System.ComponentModel.TypeDescriptionProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-656">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-657"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-657"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-658">리플렉션을 수행하는 데 사용할 수 있는 <see cref="T:System.Type" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-658">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0f502-659">대상 구성 요소의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-659">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-660">개체가 제공된 경우 리플렉션을 수행하는 데 사용할 수 있는 <see cref="T:System.Type" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span></span></summary>
        <returns><span data-ttu-id="0f502-661">지정된 개체에 대한 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-661">A <see cref="T:System.Type" /> for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-662">합니다 <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 메서드는 하위 수준 버전의는 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="0f502-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 사용자 지정 형식 설명자가 없는를 찾을 수 있는 경우 표준 리플렉션 개체에 대해 하는 데 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-664"><paramref name="instance" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-664"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f502-665">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-665">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-666">클래스 형식이 제공된 경우 리플렉션을 수행하는 데 사용할 수 있는 <see cref="T:System.Type" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-666">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span></span></summary>
        <returns><span data-ttu-id="0f502-667">지정된 클래스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-667">A <see cref="T:System.Type" /> of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-668">합니다 <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 메서드는 하위 수준 버전의는 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-668">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="0f502-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 사용자 지정 형식 설명자가 없는를 찾을 수 있는 경우 클래스에 대해 표준 리플렉션을 하는 데 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-670"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-670"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f502-671">모든 인터페이스 형식에 대한 형식 설명 공급자를 나타내는 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-671">Gets a type that represents a type description provider for all interface types.</span></span></summary>
        <value><span data-ttu-id="0f502-672">모든 인터페이스 형식에 대한 사용자 지정 형식 설명 공급자를 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-672">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-673"><xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> 속성을 <xref:System.Type> 에 전달할 수 있는 개체를 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 인터페이스 형식에 대 한 형식 설명 공급자를 정의 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-673">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-674">캐시에서 속성 및 이벤트를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-674">Clears the properties and events from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0f502-675">속성 또는 이벤트가 변경된 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-675">A component for which the properties or events have changed.</span></span></param>
        <summary><span data-ttu-id="0f502-676">지정된 구성 요소에 대한 속성 및 이벤트를 캐시에서 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-676">Clears the properties and events for the specified component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-677">속성 및 이벤트 캐시 된 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-677">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="0f502-678">일반적으로 상수 개체의 수명에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-678">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="0f502-679">그러나 extender 공급자 및 디자이너 개체의 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-679">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="0f502-680">그럴 경우 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출 해야 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-680">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="0f502-681">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-681">This method is used only at design time.</span></span> <span data-ttu-id="0f502-682">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-682">It is not used during run time.</span></span>  
  
 <span data-ttu-id="0f502-683">이 메서드가 발생을 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 속성 또는 구성 요소의 이벤트가 변경 될 때 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-683">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="0f502-684">이 이벤트는 이전 호출을 발생 한 경우에 발생 합니다 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 또는 <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> 메서드 정보를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-684">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-685">이 방법의 예제를 참조 하세요.를 <xref:System.ComponentModel.RefreshEventHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-685">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="0f502-686">새로 고칠 어셈블리를 나타내는 <see cref="T:System.Reflection.Assembly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-686">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span></span> <span data-ttu-id="0f502-687">이 어셈블리의 각 <see cref="T:System.Type" />이 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-687">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span></span></param>
        <summary><span data-ttu-id="0f502-688">지정된 어셈블리에 대한 속성 및 이벤트를 캐시에서 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-688">Clears the properties and events for the specified assembly from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-689">속성 및 이벤트 캐시 된 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-689">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="0f502-690">일반적으로 상수 개체의 수명에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-690">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="0f502-691">그러나 extender 공급자 및 디자이너 개체의 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-691">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="0f502-692">그럴 경우 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-692">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="0f502-693">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-693">This method is used only at design time.</span></span> <span data-ttu-id="0f502-694">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-694">It is not used during run time.</span></span>  
  
 <span data-ttu-id="0f502-695">에 대 한 호출을 수행 하기 전에 합니다 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 캐시의 선택을 취소 하는 방법 호출 해야 합니다 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 메서드 정보를 먼저 캐시 특정 어셈블리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-695">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="0f502-696">이 메서드가 발생을 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 구성 요소 변경 속성을 설정할 경우 알림을 받을 수 있는 모든 클래스에 게는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-696">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module"><span data-ttu-id="0f502-697">새로 고칠 모듈을 나타내는 <see cref="T:System.Reflection.Module" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-697">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span></span> <span data-ttu-id="0f502-698">이 모듈의 각 <see cref="T:System.Type" />이 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-698">Each <see cref="T:System.Type" /> in this module will be refreshed.</span></span></param>
        <summary><span data-ttu-id="0f502-699">지정된 모듈에 대한 속성 및 이벤트를 캐시에서 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-699">Clears the properties and events for the specified module from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-700">속성 및 이벤트 캐시 된 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-700">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="0f502-701">일반적으로 상수 개체의 수명에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-701">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="0f502-702">그러나 extender 공급자 및 디자이너 개체의 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-702">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="0f502-703">그럴 경우 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-703">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="0f502-704">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-704">This method is used only at design time.</span></span> <span data-ttu-id="0f502-705">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-705">It is not used during run time.</span></span>  
  
 <span data-ttu-id="0f502-706">에 대 한 호출을 수행 하기 전에 합니다 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 캐시의 선택을 취소 하는 방법 호출 해야 합니다 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 메서드 정보를 먼저 캐시 특정 모듈에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-706">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="0f502-707">이 메서드가 발생을 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 구성 요소 변경 속성을 설정할 경우 알림을 받을 수 있는 모든 클래스에 게는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-707">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f502-708">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-708">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-709">지정된 구성 요소 형식에 대한 속성 및 이벤트를 캐시에서 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-709">Clears the properties and events for the specified type of component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-710">개체의 인스턴스에 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-710">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="0f502-711">속성 및 이벤트 캐시 된 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-711">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="0f502-712">일반적으로 상수 개체의 수명에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-712">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="0f502-713">그러나 extender 공급자 및 디자이너 개체의 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-713">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="0f502-714">그럴 경우 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-714">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="0f502-715">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-715">This method is used only at design time.</span></span> <span data-ttu-id="0f502-716">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-716">It is not used during run time.</span></span>  
  
 <span data-ttu-id="0f502-717">이 메서드가 발생을 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 속성 또는 구성 요소의 이벤트가 변경 될 때 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-717">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="0f502-718">이 이벤트는 이전 호출을 발생 한 경우에 발생 합니다 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 또는 <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> 메서드 정보를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-718">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f502-719">구성 요소의 캐시가 지워질 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-719">Occurs when the cache for a component is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-720">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-720">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f502-721">이 이벤트를 사용 하 여 예제를 참조 하세요.를 <xref:System.ComponentModel.RefreshEventHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-721">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="0f502-722">기본 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-722">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="0f502-723">보조 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-723">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="0f502-724">두 개체 간의 연결을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-724">Removes an association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-725">합니다 <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> 형성 된 두 개체 간의 연결을 제거 하는 메서드는 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-725">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="0f502-726"><xref:System.WeakReference> 사용 되는 기본 및 보조 개체 간의 연결을 유지 관리; 따라서이 메서드는 영향을 주지 개체 이거나 종료 되었거나 가비지 수집에서 회수 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0f502-726">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-727">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-727">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-728">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-728">for full access to system resources.</span></span> <span data-ttu-id="0f502-729">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-729">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-730">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-730">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="0f502-731">연결의 기본 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-731">The primary <see cref="T:System.Object" /> in an association.</span></span></param>
        <summary><span data-ttu-id="0f502-732">기본 개체의 모든 연결을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-732">Removes all associations for a primary object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-733">합니다 <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> 주 개체와 모든 해당 보조 개체를 호출 하 여 만든 간의 모든 연결을 제거 하는 메서드를 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-733">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="0f502-734"><xref:System.WeakReference> 사용 되는 기본 및 보조 개체 간의 연결을 유지 하므로이 메서드에 영향을 주지 않습니다 경우; 보조 개체의 기본 종료 또는 가비지 수집에서 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-734">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-735"><paramref name="primary" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-735"><paramref name="primary" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-736">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-736">for full access to system resources.</span></span> <span data-ttu-id="0f502-737">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-737">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-738">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-738">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-739">이전에 추가한 형식 설명 공급자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-739">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-740">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-740">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="0f502-741">대상 구성 요소의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-741">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-742">지정된 개체와 연결된 이전에 추가한 형식 설명 공급자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-742">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-743">이 메서드를 사용 하 여 이전에 추가한 형식 설명 공급자를 제거 합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-743">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="0f502-744">공급자를 제거 하면를 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트가 연결된 된 개체에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-744">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="0f502-745">사용 된 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0f502-745">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-746">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-746">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-747">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-747">for full access to system resources.</span></span> <span data-ttu-id="0f502-748">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-748">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-749">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-749">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-750">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-750">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="0f502-751">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-751">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-752">지정된 형식과 연결된 이전에 추가한 형식 설명 공급자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-752">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-753">이 메서드를 사용 하 여 이전에 추가한 형식 설명 공급자를 제거 합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-753">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="0f502-754">공급자를 제거 하면을 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트를 연결된 형식에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-754">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="0f502-755">사용 된 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0f502-755">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-756">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-756">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="0f502-757">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-757">for full access to system resources.</span></span> <span data-ttu-id="0f502-758">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-758">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="0f502-759">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="0f502-759">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f502-760">이전에 추가한 형식 설명 공급자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-760">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-761">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-761">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="0f502-762">대상 구성 요소의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-762">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-763">지정된 개체와 연결된 이전에 추가한 형식 설명 공급자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-763">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-764">이 메서드를 사용 하 여 이전에 추가한 형식 설명 공급자를 제거 합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-764">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="0f502-765">공급자를 제거 하면를 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트가 연결된 된 개체에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-765">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="0f502-766">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-766">This method can be called from partially trusted code.</span></span> <span data-ttu-id="0f502-767">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 된 호출자에 게 등록할 수 있습니다 지정된 된 인스턴스에 대해 공급자를 해당 형식을 부분 신뢰 이기도 한 경우.</span><span class="sxs-lookup"><span data-stu-id="0f502-767">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="0f502-768">사용 된 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-768">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-769">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-769">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="0f502-770">레지스트리 액세스 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-770">For registry access.</span></span> <span data-ttu-id="0f502-771">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-771">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-772">연결 된 열거형: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="0f502-772">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="0f502-773">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-773">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-774">연결된 유형: 합니다 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에 필요 하는 <paramref name="instance" /> 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-774">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0f502-775">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-775">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="0f502-776">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-776">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="0f502-777">지정된 형식과 연결된 이전에 추가한 형식 설명 공급자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-777">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f502-778">이 메서드를 사용 하 여 이전에 추가한 형식 설명 공급자를 제거 합니다 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0f502-778">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="0f502-779">공급자를 제거 하면을 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트를 연결된 형식에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-779">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="0f502-780">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-780">This method can be called from partially trusted code.</span></span> <span data-ttu-id="0f502-781">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 등록할 수 있습니다 지정된 된 형식에 대 한 공급자를 부분적으로 신뢰할 수 있는 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-781">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="0f502-782">사용 된 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-782">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-783">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-783">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="0f502-784">레지스트리 액세스 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-784">For registry access.</span></span> <span data-ttu-id="0f502-785">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-785">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-786">연결 된 열거형: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="0f502-786">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="0f502-787">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-787">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f502-788">연결된 유형: 합니다 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에서 필요한 <paramref name="type" />합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-788">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos"><span data-ttu-id="0f502-789">정렬할 설명자를 포함하는 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-789">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span></span></param>
        <summary><span data-ttu-id="0f502-790">설명자의 이름을 사용하여 설명자를 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-790">Sorts descriptors using the name of the descriptor.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f502-791"><paramref name="infos" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0f502-791"><paramref name="infos" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>