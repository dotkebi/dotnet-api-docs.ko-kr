<Type Name="BindingList&lt;T&gt;" FullName="System.ComponentModel.BindingList&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a47bd0c7749101ad5cd19c2b207246a8ef20252" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721216" /></Metadata><TypeSignature Language="C#" Value="public class BindingList&lt;T&gt; : System.Collections.ObjectModel.Collection&lt;T&gt;, System.ComponentModel.IBindingList, System.ComponentModel.ICancelAddNew, System.ComponentModel.IRaiseItemChangedEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit BindingList`1&lt;T&gt; extends System.Collections.ObjectModel.Collection`1&lt;!T&gt; implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.IRaiseItemChangedEvents" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BindingList`1" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingList(Of T)&#xA;Inherits Collection(Of T)&#xA;Implements IBindingList, ICancelAddNew, IRaiseItemChangedEvents" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BindingList : System::Collections::ObjectModel::Collection&lt;T&gt;, System::ComponentModel::IBindingList, System::ComponentModel::ICancelAddNew, System::ComponentModel::IRaiseItemChangedEvents" />
  <TypeSignature Language="F#" Value="type BindingList&lt;'T&gt; = class&#xA;    inherit Collection&lt;'T&gt;&#xA;    interface IBindingList&#xA;    interface ICancelAddNew&#xA;    interface IRaiseItemChangedEvents&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IRaiseItemChangedEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="bbce8-101">목록에 있는 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-101">The type of elements in the list.</span></span></typeparam>
    <summary><span data-ttu-id="bbce8-102">데이터 바인딩을 지원하는 제네릭 컬렉션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-102">Provides a generic collection that supports data binding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-103"><xref:System.ComponentModel.BindingList%601> 는 양방향 데이터 바인딩 메커니즘을 만들기 위한 기본 클래스로 사용할 수 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-103">The <xref:System.ComponentModel.BindingList%601> class can be used as a base class to create a two-way data-binding mechanism.</span></span> <span data-ttu-id="bbce8-104"><xref:System.ComponentModel.BindingList%601> 구체적인, 제네릭 구현을 제공 합니다 <xref:System.ComponentModel.IBindingList> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-104"><xref:System.ComponentModel.BindingList%601> provides a concrete, generic implementation of the <xref:System.ComponentModel.IBindingList> interface.</span></span> <span data-ttu-id="bbce8-105">이 전체 구현 하는 대신 <xref:System.ComponentModel.IBindingList> 간의 미묘한 상호 작용으로 인해 어려울 수 있는 인터페이스 <xref:System.ComponentModel.IBindingList>, <xref:System.ComponentModel.IEditableObject>, 및 연결 된 <xref:System.Windows.Forms.CurrencyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-105">This is an alternative to implementing the complete <xref:System.ComponentModel.IBindingList> interface, which can be difficult because of the subtle interaction between <xref:System.ComponentModel.IBindingList>, <xref:System.ComponentModel.IEditableObject>, and the associated <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="bbce8-106">그러나 일반적인 솔루션 프로그래머와 같은 데이터 바인딩 기능을 제공 하는 클래스를 사용할지 <xref:System.Windows.Forms.BindingSource>를 직접 사용 하는 대신 <xref:System.ComponentModel.BindingList%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-106">However, the typical solutions programmer will use a class that provides data binding functionality, such as <xref:System.Windows.Forms.BindingSource>, instead of directly using <xref:System.ComponentModel.BindingList%601>.</span></span>  
  
 <span data-ttu-id="bbce8-107"><xref:System.ComponentModel.BindingList%601> 팩터리에서 만든 인스턴스 확장 가능한를 통해 지원 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-107"><xref:System.ComponentModel.BindingList%601> supports factory-created instances through the extensible <xref:System.ComponentModel.BindingList%601.AddNew%2A> method.</span></span> <span data-ttu-id="bbce8-108">(이 동일한 형식의 확장성 수도 있는 다른 클래스와 같은 <xref:System.Windows.Forms.BindingSource>) 뿐만 아니라,이 클래스를 구현 하므로 합니다 <xref:System.ComponentModel.ICancelAddNew> 인터페이스 수 있도록 트랜잭션 커밋 또는 롤백을 통해 새 항목의는 <xref:System.ComponentModel.BindingList%601.EndNew%2A> 및 <xref:System.ComponentModel.BindingList%601.CancelNew%2A>메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-108">(This same type of extensibility is also found in other classes, such as <xref:System.Windows.Forms.BindingSource>) In addition, since this class implements the <xref:System.ComponentModel.ICancelAddNew> interface, it enables transactional commits or rollbacks of the new item through the <xref:System.ComponentModel.BindingList%601.EndNew%2A> and <xref:System.ComponentModel.BindingList%601.CancelNew%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-109">다음 코드 예제에서는 <xref:System.ComponentModel.BindingList%601> 비즈니스 개체를 포함 하는 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-109">The following code example demonstrates binding to a <xref:System.ComponentModel.BindingList%601> component containing a business object.</span></span> <span data-ttu-id="bbce8-110">이 포함 하는 전체 예제는 `Main` 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-110">This is a complete example that contains a `Main` method.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#1)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.ICancelAddNew" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <altmember cref="T:System.ComponentModel.IRaiseItemChangedEvents" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.BindingSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbce8-111"><see cref="T:System.ComponentModel.BindingList`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-111">Initializes a new instance of the <see cref="T:System.ComponentModel.BindingList`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-112">기본값을 사용하여 <see cref="T:System.ComponentModel.BindingList`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-112">Initializes a new instance of the <see cref="T:System.ComponentModel.BindingList`1" /> class using default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-113">다음 표에서는 <xref:System.ComponentModel.BindingList%601> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-113">The following table shows initial property values for an instance of <xref:System.ComponentModel.BindingList%601> class.</span></span>  
  
|<span data-ttu-id="bbce8-114">속성</span><span class="sxs-lookup"><span data-stu-id="bbce8-114">Property</span></span>|<span data-ttu-id="bbce8-115">초기 값</span><span class="sxs-lookup"><span data-stu-id="bbce8-115">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.ComponentModel.BindingList%601.AllowEdit%2A>|`true`|  
|<xref:System.ComponentModel.BindingList%601.AllowNew%2A>|<span data-ttu-id="bbce8-116">`true` 목록 형식에 기본 생성자입니다. 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-116">`true` if the list type has a default constructor; otherwise, `false`.</span></span>|  
|<xref:System.ComponentModel.BindingList%601.AllowRemove%2A>|`true`|  
|<xref:System.ComponentModel.BindingList%601.RaiseListChangedEvents%2A>|`true`|  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-117">다음 코드 예제에는 새로 생성 하는 방법을 보여 줍니다. <xref:System.ComponentModel.BindingList%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-117">The following code example demonstrates how to construct a new <xref:System.ComponentModel.BindingList%601>.</span></span> <span data-ttu-id="bbce8-118">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-118">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ObjectModel.Collection`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingList (System.Collections.Generic.IList&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.#ctor(System.Collections.Generic.IList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingList(System::Collections::Generic::IList&lt;T&gt; ^ list);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.BindingList&lt;'T&gt; : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.ComponentModel.BindingList&lt;'T&gt;" Usage="new System.ComponentModel.BindingList&lt;'T&gt; list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="bbce8-119"><see cref="T:System.Collections.Generic.IList`1" />에 포함될 항목의 <see cref="T:System.ComponentModel.BindingList`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-119">An <see cref="T:System.Collections.Generic.IList`1" /> of items to be contained in the <see cref="T:System.ComponentModel.BindingList`1" />.</span></span></param>
        <summary><span data-ttu-id="bbce8-120">지정된 목록을 사용하여 <see cref="T:System.ComponentModel.BindingList`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-120">Initializes a new instance of the <see cref="T:System.ComponentModel.BindingList`1" /> class with the specified list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-121">이 사용 하 여 <xref:System.ComponentModel.BindingList%601.%23ctor%2A> 만들려면를 <xref:System.ComponentModel.BindingList%601> 에서 지 원하는 `list`를 변경 하면 `list` 에 반영 됩니다는 <xref:System.ComponentModel.BindingList%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-121">Use this <xref:System.ComponentModel.BindingList%601.%23ctor%2A> to create a <xref:System.ComponentModel.BindingList%601> that is backed by `list`, which ensures that changes to `list` are reflected in the <xref:System.ComponentModel.BindingList%601>.</span></span>  
  
 <span data-ttu-id="bbce8-122">다음 표에서는 <xref:System.ComponentModel.BindingList%601> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-122">The following table shows initial property values for an instance of <xref:System.ComponentModel.BindingList%601> class.</span></span>  
  
|<span data-ttu-id="bbce8-123">속성</span><span class="sxs-lookup"><span data-stu-id="bbce8-123">Property</span></span>|<span data-ttu-id="bbce8-124">초기 값</span><span class="sxs-lookup"><span data-stu-id="bbce8-124">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.ComponentModel.BindingList%601.AllowEdit%2A>|`true`|  
|<xref:System.ComponentModel.BindingList%601.AllowNew%2A>|<span data-ttu-id="bbce8-125">`true` 목록 형식에 기본 생성자입니다. 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-125">`true` if the list type has a default constructor; otherwise, `false`.</span></span>|  
|<xref:System.ComponentModel.BindingList%601.AllowRemove%2A>|`true`|  
|<xref:System.ComponentModel.BindingList%601.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ObjectModel.Collection`1" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BindingList`1.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberSignature Language="F#" Value="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " Usage="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-126">항목이 목록에 추가되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-126">Occurs before an item is added to the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-127">합니다 <xref:System.ComponentModel.BindingList%601.AddingNew> 새 개체를 나타내는 컬렉션에 추가 되기 전에 이벤트가 발생 합니다 <xref:System.Collections.ObjectModel.Collection%601.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-127">The <xref:System.ComponentModel.BindingList%601.AddingNew> event occurs before a new object is added to the collection represented by the <xref:System.Collections.ObjectModel.Collection%601.Items%2A> property.</span></span> <span data-ttu-id="bbce8-128">후에이 이벤트는 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드를 호출 전에 새 항목을 만들어 내부 목록에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-128">This event is raised after the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method is called, but before the new item is created and added to the internal list.</span></span> <span data-ttu-id="bbce8-129">프로그래머가이 이벤트를 처리 하 여 사용자 지정 항목 만들기를 제공할 수 있으며에서 파생 하는 강제 된 <xref:System.ComponentModel.BindingList%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-129">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.ComponentModel.BindingList%601> class.</span></span>  
  
 <span data-ttu-id="bbce8-130">새 사용자 지정 항목 기능을 제공 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-130">For more information about supplying custom new item functionality, see the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method.</span></span> <span data-ttu-id="bbce8-131">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-131">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-132">다음 코드 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-132">The following code example demonstrates how to handle the <xref:System.ComponentModel.BindingList%601.AddingNew> event.</span></span> <span data-ttu-id="bbce8-133">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-133">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#3)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Items" />
        <altmember cref="M:System.ComponentModel.BindingList`1.AddNew" />
        <altmember cref="E:System.ComponentModel.BindingList`1.ListChanged" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public T AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T AddNew();" />
      <MemberSignature Language="F#" Value="member this.AddNew : unit -&gt; 'T" Usage="bindingList.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-134">컬렉션에 새 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-134">Adds a new item to the collection.</span></span></summary>
        <returns><span data-ttu-id="bbce8-135">목록에 추가되는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-135">The item added to the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-136">합니다 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 표시 되는 컬렉션에 새 항목을 추가 하는 메서드는 <xref:System.Collections.ObjectModel.Collection%601.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-136">The <xref:System.ComponentModel.BindingList%601.AddNew%2A> method adds a new item to the collection represented by the <xref:System.Collections.ObjectModel.Collection%601.Items%2A> property.</span></span> <span data-ttu-id="bbce8-137">새 항목을 추가 하려면 다음 논리가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-137">To add a new item, the following logic is used:</span></span>  
  
1.  <span data-ttu-id="bbce8-138"><xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트가 자동으로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-138">The <xref:System.ComponentModel.BindingList%601.AddingNew> event is automatically raised.</span></span>  
  
     <span data-ttu-id="bbce8-139">새 사용자 지정 항목을 생성 하려면이 이벤트를 프로그래밍 방식으로 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-139">This event can be programmatically handled to construct a new custom item.</span></span> <span data-ttu-id="bbce8-140">설정 하 여 이벤트 처리기에서 이렇게 합니다 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 의 속성을 <xref:System.ComponentModel.AddingNewEventArgs> 매개 변수를 새 항목.</span><span class="sxs-lookup"><span data-stu-id="bbce8-140">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span>  
  
     <span data-ttu-id="bbce8-141">그렇지 않으면 새 항목은 공용 기본 생성자를 통해 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-141">Otherwise, the new item is automatically created through its public default constructor.</span></span>  
  
2.  <span data-ttu-id="bbce8-142">새 항목의 위치를 추적 하지만 다음 조건 중 하나가 충족 될 때까지 목록에 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-142">The position of the new item is tracked, but it is not added to the list until one of the following conditions are met:</span></span>  
  
    -   <span data-ttu-id="bbce8-143">항목에 대 한 호출에서 명시적으로 커밋됩니다 <xref:System.ComponentModel.BindingList%601.EndNew%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-143">The item is explicitly committed by a call to <xref:System.ComponentModel.BindingList%601.EndNew%2A>.</span></span>  
  
    -   <span data-ttu-id="bbce8-144">항목 목록의 예: 삽입 또는 제거 항목의 내용을 변경 하는 몇 가지 다른 작업에 의해 암시적으로 커밋됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-144">The item is implicitly committed by some other operation that changed the contents of the list, such as an insertion or removal of an item.</span></span>  
  
 <span data-ttu-id="bbce8-145">반면, 호출 된 <xref:System.ComponentModel.BindingList%601.CancelNew%2A> 메서드 항목 커밋되기 전에 새 항목을 삭제 하면 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-145">In contrast, calling the <xref:System.ComponentModel.BindingList%601.CancelNew%2A> method before the item is committed will cause the new item to be discarded.</span></span>  
  
 <span data-ttu-id="bbce8-146">이 메서드는 <xref:System.ComponentModel.BindingList%601.ListChanged> 새 항목이 커밋되면 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-146">This method raises the <xref:System.ComponentModel.BindingList%601.ListChanged> event when the new item is committed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-147">다음 코드 예제에서는 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-147">The following code example demonstrates how to use the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method.</span></span> <span data-ttu-id="bbce8-148"><xref:System.ComponentModel.BindingList%601>.</span><span class="sxs-lookup"><span data-stu-id="bbce8-148"><xref:System.ComponentModel.BindingList%601>.</span></span> <span data-ttu-id="bbce8-149">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-149">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#4)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bbce8-150"><see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> 속성은 <see langword="false" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-150">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span></span>  
  
<span data-ttu-id="bbce8-151">또는</span><span class="sxs-lookup"><span data-stu-id="bbce8-151">-or-</span></span> 
<span data-ttu-id="bbce8-152">현재 항목 형식에 대한 공용 기본 생성자를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbce8-152">A public default constructor could not be found for the current item type.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IBindingList.AddNew" />
        <altmember cref="M:System.Activator.CreateInstance(System.Type)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Items" />
        <altmember cref="E:System.ComponentModel.BindingList`1.AddingNew" />
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)" />
        <altmember cref="M:System.ComponentModel.BindingList`1.CancelNew(System.Int32)" />
        <altmember cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />
        <altmember cref="E:System.ComponentModel.BindingList`1.ListChanged" />
      </Docs>
    </Member>
    <Member MemberName="AddNewCore">
      <MemberSignature Language="C#" Value="protected virtual object AddNewCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object AddNewCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.AddNewCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddNewCore () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ AddNewCore();" />
      <MemberSignature Language="F#" Value="abstract member AddNewCore : unit -&gt; obj&#xA;override this.AddNewCore : unit -&gt; obj" Usage="bindingList.AddNewCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-153">컬렉션의 끝에 새 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-153">Adds a new item to the end of the collection.</span></span></summary>
        <returns><span data-ttu-id="bbce8-154">컬렉션에 추가된 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-154">The item that was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-155">합니다 <xref:System.ComponentModel.BindingList%601.AddNewCore%2A> 표시 되는 컬렉션에 새 항목을 추가 하는 메서드는 <xref:System.Collections.ObjectModel.Collection%601.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-155">The <xref:System.ComponentModel.BindingList%601.AddNewCore%2A> method adds a new item to the collection represented by the <xref:System.Collections.ObjectModel.Collection%601.Items%2A> property.</span></span> <span data-ttu-id="bbce8-156"><xref:System.ComponentModel.BindingList%601.AddNewCore%2A>는 <xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-156"><xref:System.ComponentModel.BindingList%601.AddNewCore%2A> raises the <xref:System.ComponentModel.BindingList%601.AddingNew> event.</span></span> <span data-ttu-id="bbce8-157">설정 하 여 새 항목을 추가할 수 있습니다는 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 의 속성을 <xref:System.ComponentModel.AddingNewEventArgs> 매개 변수를 새 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-157">This allows you to add a new item by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="bbce8-158">그렇지 않으면 새 항목은 공용 기본 생성자를 통해 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-158">Otherwise, the new item is automatically created through its public default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bbce8-159">새 항목의 형식이 <see cref="T:System.ComponentModel.BindingList`1" />에 포함된 개체의 형식과 같지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="bbce8-159">The new item is not the same type as the objects contained in the <see cref="T:System.ComponentModel.BindingList`1" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IBindingList.AddNew" />
        <altmember cref="M:System.Activator.CreateInstance(System.Type)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Items" />
        <altmember cref="E:System.ComponentModel.BindingList`1.AddingNew" />
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowEdit : bool with get, set" Usage="System.ComponentModel.BindingList&lt;'T&gt;.AllowEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-160">목록의 항목을 편집할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-160">Gets or sets a value indicating whether items in the list can be edited.</span></span></summary>
        <value><span data-ttu-id="bbce8-161">목록 항목을 편집할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-161"><see langword="true" /> if list items can be edited; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-162">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-162">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-163"><xref:System.ComponentModel.BindingList%601.AllowEdit%2A> 목록의 항목을 편집할 수 있는지 확인 하려면 다른 구성 요소 속성은 일반적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-163">The <xref:System.ComponentModel.BindingList%601.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span> <span data-ttu-id="bbce8-164">때 <xref:System.ComponentModel.BindingList%601.AllowEdit%2A> 새 값으로 설정 됩니다는 <xref:System.ComponentModel.BindingList%601.ListChanged> 형식의 이벤트 <xref:System.ComponentModel.ListChangedType.Reset> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-164">When <xref:System.ComponentModel.BindingList%601.AllowEdit%2A> is set to a new value, a <xref:System.ComponentModel.BindingList%601.ListChanged> event of type <xref:System.ComponentModel.ListChangedType.Reset> will occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-165">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.ComponentModel.BindingList%601.AllowEdit%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-165">The following code example demonstrates how to set the <xref:System.ComponentModel.BindingList%601.AllowEdit%2A> property.</span></span> <span data-ttu-id="bbce8-166">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-166">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowNew" />
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowRemove" />
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNew : bool with get, set" Usage="System.ComponentModel.BindingList&lt;'T&gt;.AllowNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-167"><see cref="M:System.ComponentModel.BindingList`1.AddNew" /> 메서드를 사용하여 목록에 항목을 추가할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-167">Gets or sets a value indicating whether you can add items to the list using the <see cref="M:System.ComponentModel.BindingList`1.AddNew" /> method.</span></span></summary>
        <value><span data-ttu-id="bbce8-168"><see cref="M:System.ComponentModel.BindingList`1.AddNew" /> 메서드를 사용하여 목록에 항목을 추가할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-168"><see langword="true" /> if you can add items to the list with the <see cref="M:System.ComponentModel.BindingList`1.AddNew" /> method; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-169">기본값은 목록에 포함된 내부 형식에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-169">The default depends on the underlying type contained in the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-170"><xref:System.ComponentModel.BindingList%601.AllowNew%2A> 속성은 일반적으로 새 항목을 만들기 위해 허용 된 경우를 확인 하려면 다른 구성 요소에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-170">The <xref:System.ComponentModel.BindingList%601.AllowNew%2A> property is typically used by other components to determine if the creation of new items is allowed.</span></span> <span data-ttu-id="bbce8-171"><xref:System.ComponentModel.BindingList%601.AllowNew%2A> 기본값으로 `true` 목록에 포함 된 형식은 기본 생성자가 하는 경우 또는 <xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-171"><xref:System.ComponentModel.BindingList%601.AllowNew%2A> defaults to `true` if the type contained in the list has a default constructor or the <xref:System.ComponentModel.BindingList%601.AddingNew> event is handled.</span></span> <span data-ttu-id="bbce8-172">경우는 <xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트가 처리 되지 않은 목록 형식이 되지 않았거나 기본 생성자를 다음 <xref:System.ComponentModel.BindingList%601.AllowNew%2A> 기본값으로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-172">If the <xref:System.ComponentModel.BindingList%601.AddingNew> event is not handled or the list type does not have a default constructor, then <xref:System.ComponentModel.BindingList%601.AllowNew%2A> defaults to `false`.</span></span>  
  
 <span data-ttu-id="bbce8-173">경우 <xref:System.ComponentModel.BindingList%601.AllowNew%2A> 가 명시적으로 설정 집합 값 항상 사용할 바인딩된 개체에서 목록에 새 항목을 추가할 수는 경우 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-173">If <xref:System.ComponentModel.BindingList%601.AllowNew%2A> is explicitly set, the set value will always be used by bound objects to determine if new items can be added to the list.</span></span> <span data-ttu-id="bbce8-174">여부를 <xref:System.ComponentModel.BindingList%601.AllowNew%2A> 은 `true` 또는 `false`를 명시적으로 호출 하 여 새 항목을 추가할 수 있습니다 <xref:System.ComponentModel.BindingList%601.AddNew%2A> list 형식 기본 생성자가 하는 경우 또는 <xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-174">Whether <xref:System.ComponentModel.BindingList%601.AllowNew%2A> is `true` or `false`, new items can be added by explicitly calling <xref:System.ComponentModel.BindingList%601.AddNew%2A> if the list type has a default constructor or the <xref:System.ComponentModel.BindingList%601.AddingNew> event is handled.</span></span> <span data-ttu-id="bbce8-175">또한 설정 <xref:System.ComponentModel.BindingList%601.AllowNew%2A> 하면를 <xref:System.ComponentModel.BindingList%601.ListChanged> 형식의 이벤트 <xref:System.ComponentModel.ListChangedType.Reset> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-175">In addition, setting <xref:System.ComponentModel.BindingList%601.AllowNew%2A> causes a <xref:System.ComponentModel.BindingList%601.ListChanged> event of type <xref:System.ComponentModel.ListChangedType.Reset> to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-176">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.ComponentModel.BindingList%601.AllowNew%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-176">The following code example demonstrates how to set the <xref:System.ComponentModel.BindingList%601.AllowNew%2A> property.</span></span> <span data-ttu-id="bbce8-177">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-177">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BindingList`1.AddNew" />
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowEdit" />
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowRemove" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public bool AllowRemove { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRemove { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRemove : bool with get, set" Usage="System.ComponentModel.BindingList&lt;'T&gt;.AllowRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-178">컬렉션에서 항목을 제거할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-178">Gets or sets a value indicating whether you can remove items from the collection.</span></span></summary>
        <value><span data-ttu-id="bbce8-179"><see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" /> 메서드를 사용하여 목록에서 항목을 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-179"><see langword="true" /> if you can remove items from the list with the <see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" /> method otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-180">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-180">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-181"><xref:System.ComponentModel.BindingList%601.AllowRemove%2A> 속성은 일반적으로 항목을 제거할 허용 된 경우를 확인 하려면 다른 구성 요소에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-181">The <xref:System.ComponentModel.BindingList%601.AllowRemove%2A> property is typically used by other components to determine if the removal of items is allowed.</span></span>  
  
 <span data-ttu-id="bbce8-182">때 <xref:System.ComponentModel.BindingList%601.AllowRemove%2A> 새 값으로 설정 되는 <xref:System.ComponentModel.BindingList%601.ListChanged> 형식의 이벤트 <xref:System.ComponentModel.ListChangedType.Reset> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-182">When <xref:System.ComponentModel.BindingList%601.AllowRemove%2A> is set to a new value, a <xref:System.ComponentModel.BindingList%601.ListChanged> event of type <xref:System.ComponentModel.ListChangedType.Reset> occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-183">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.ComponentModel.BindingList%601.AllowRemove%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-183">The following code example demonstrates how to set the <xref:System.ComponentModel.BindingList%601.AllowRemove%2A> property.</span></span> <span data-ttu-id="bbce8-184">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-184">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowEdit" />
        <altmember cref="P:System.ComponentModel.BindingList`1.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ApplySortCore">
      <MemberSignature Language="C#" Value="protected virtual void ApplySortCore (System.ComponentModel.PropertyDescriptor prop, System.ComponentModel.ListSortDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplySortCore(class System.ComponentModel.PropertyDescriptor prop, valuetype System.ComponentModel.ListSortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplySortCore (prop As PropertyDescriptor, direction As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ApplySortCore(System::ComponentModel::PropertyDescriptor ^ prop, System::ComponentModel::ListSortDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member ApplySortCore : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.ApplySortCore : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit" Usage="bindingList.ApplySortCore (prop, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bbce8-185">정렬할 속성을 지정하는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-185">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that specifies the property to sort on.</span></span></param>
        <param name="direction"><span data-ttu-id="bbce8-186"><see cref="T:System.ComponentModel.ListSortDirection" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-186">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values.</span></span></param>
        <summary><span data-ttu-id="bbce8-187">파생 클래스에서 재정의되면 항목을 정렬하고, 그렇지 않으면 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-187">Sorts the items if overridden in a derived class; otherwise, throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-188"><xref:System.ComponentModel.BindingList%601> 클래스에 있도록 정렬의 기본 구현을 제공 하지 않습니다 <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> throw를 <xref:System.NotSupportedException> 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-188">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of sorting, so <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> always throws a <xref:System.NotSupportedException> by default.</span></span> <span data-ttu-id="bbce8-189">정렬 기능을 사용 하려면에서 파생 <xref:System.ComponentModel.BindingList%601> 하 고 다음 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-189">To enable sorting, derive from <xref:System.ComponentModel.BindingList%601> and perform the following tasks:</span></span>  
  
-   <span data-ttu-id="bbce8-190">재정의 <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> 정렬을 발생 시키는 구현 하 고는 <xref:System.ComponentModel.BindingList%601.ListChanged> 정렬 하는 경우 이벤트가 완료 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-190">Override <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> and implement sorting, raising the <xref:System.ComponentModel.BindingList%601.ListChanged> event when sorting is complete.</span></span>  
  
-   <span data-ttu-id="bbce8-191">재정의 <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> 정렬 제거를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-191">Override <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> and implement sort removal.</span></span>  
  
-   <span data-ttu-id="bbce8-192">재정의 <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 설정 <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-192">Override <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> and set <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> to `true`.</span></span>  
  
 <span data-ttu-id="bbce8-193">또한 하려는 경우 추가로 구현할 <xref:System.ComponentModel.BindingList%601.SortDirectionCore%2A> 및 <xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A> 속성을 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-193">In addition, you may want to implement the supplemental <xref:System.ComponentModel.BindingList%601.SortDirectionCore%2A> and <xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A> sorting properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bbce8-194">메서드가 파생 클래스에서 재정의되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="bbce8-194">Method is not overridden in a derived class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public virtual void CancelNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CancelNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : int -&gt; unit&#xA;override this.CancelNew : int -&gt; unit" Usage="bindingList.CancelNew itemIndex" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="bbce8-195">추가할 새 항목의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-195">The index of the of the new item to be added</span></span></param>
        <summary><span data-ttu-id="bbce8-196">보류 중인 새 항목을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-196">Discards a pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-197">합니다 <xref:System.ComponentModel.BindingList%601.CancelNew%2A> 메서드를 통해 추가 된 보류 중인 새 항목을 롤백합니다.는 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드를 아직 커밋되지 않은 하지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-197">The <xref:System.ComponentModel.BindingList%601.CancelNew%2A> method rolls back a pending new item that was added through the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method, but has not yet been committed.</span></span>  
  
 <span data-ttu-id="bbce8-198">추가한 새 항목을 커밋에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="bbce8-198">For more information about adding and committing new items, see the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-199">다음 코드 예제에서는 사용법을 <xref:System.ComponentModel.BindingList%601.CancelNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-199">The following code example demonstrates how use the <xref:System.ComponentModel.BindingList%601.CancelNew%2A> method.</span></span> <span data-ttu-id="bbce8-200">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-200">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#4)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ICancelAddNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.AddNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)" />
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="bindingList.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-201">컬렉션에서 모든 요소를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-201">Removes all elements from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-202">합니다 <xref:System.ComponentModel.BindingList%601.ClearItems%2A> 나타내는 컬렉션에서 모든 항목을 제거 하는 메서드는 <xref:System.Collections.ObjectModel.Collection%601.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-202">The <xref:System.ComponentModel.BindingList%601.ClearItems%2A> method removes all the items from the collection represented by the <xref:System.Collections.ObjectModel.Collection%601.Items%2A> property.</span></span>  
  
 <span data-ttu-id="bbce8-203"><xref:System.ComponentModel.BindingList%601.ClearItems%2A> 호출 된 <xref:System.ComponentModel.BindingList%601.EndNew%2A> 컬렉션 및 발생을 지우기 전에 메서드를 <xref:System.ComponentModel.BindingList%601.ListChanged> 확보 한 후 이벤트.</span><span class="sxs-lookup"><span data-stu-id="bbce8-203"><xref:System.ComponentModel.BindingList%601.ClearItems%2A> calls the <xref:System.ComponentModel.BindingList%601.EndNew%2A> method before clearing out the collection and raises the <xref:System.ComponentModel.BindingList%601.ListChanged> event after it has been cleared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <altmember cref="M:System.ComponentModel.BindingList`1.AddNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="EndNew">
      <MemberSignature Language="C#" Value="public virtual void EndNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member EndNew : int -&gt; unit&#xA;override this.EndNew : int -&gt; unit" Usage="bindingList.EndNew itemIndex" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="bbce8-204">추가할 새 항목의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-204">The index of the new item to be added.</span></span></param>
        <summary><span data-ttu-id="bbce8-205">보류 중인 새 항목을 컬렉션에 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-205">Commits a pending new item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-206">합니다 <xref:System.ComponentModel.BindingList%601.EndNew%2A> 메서드를 통해 추가 된 보류 중인 새 항목을 커밋의 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-206">The <xref:System.ComponentModel.BindingList%601.EndNew%2A> method commits a pending new item that was added through the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method.</span></span> <span data-ttu-id="bbce8-207">커밋 대기 중인 새 항목이 없는 경우이 메서드는 아무 것도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-207">If there is no new item waiting to be committed, then this method does nothing.</span></span>  
  
 <span data-ttu-id="bbce8-208">추가한 새 항목을 커밋에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-208">For more information about adding and committing new items, see the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ICancelAddNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.AddNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="FindCore">
      <MemberSignature Language="C#" Value="protected virtual int FindCore (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 FindCore(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindCore (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int FindCore(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member FindCore : System.ComponentModel.PropertyDescriptor * obj -&gt; int&#xA;override this.FindCore : System.ComponentModel.PropertyDescriptor * obj -&gt; int" Usage="bindingList.FindCore (prop, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bbce8-209">검색할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-209">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span></span></param>
        <param name="key"><span data-ttu-id="bbce8-210">일치시킬 <paramref name="prop" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-210">The value of <paramref name="prop" /> to match.</span></span></param>
        <summary><span data-ttu-id="bbce8-211">파생 클래스에서 검색 기능이 구현되었으면 지정된 값을 가진 지정된 속성 설명자가 있는 항목의 인덱스를 검색하고, 그렇지 않으면 <see cref="T:System.NotSupportedException" />을 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-211">Searches for the index of the item that has the specified property descriptor with the specified value, if searching is implemented in a derived class; otherwise, a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="bbce8-212">속성 설명자와 일치하고 지정된 값을 포함하는 항목의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-212">The zero-based index of the item that matches the property descriptor and contains the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-213"><xref:System.ComponentModel.BindingList%601> 클래스는 검색의 기본 구현을 제공 하지 않습니다 등 <xref:System.ComponentModel.BindingList%601.FindCore%2A> throw를 <xref:System.NotSupportedException> 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-213">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of searching, and so <xref:System.ComponentModel.BindingList%601.FindCore%2A> always throws a <xref:System.NotSupportedException> by default.</span></span> <span data-ttu-id="bbce8-214">검색을 사용 하도록 설정 하려면에서 파생 <xref:System.ComponentModel.BindingList%601> 하 고 다음 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-214">To enable searching, derive from <xref:System.ComponentModel.BindingList%601> and perform the following tasks:</span></span>  
  
-   <span data-ttu-id="bbce8-215">재정의 <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> 설정 하는 <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-215">Override <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> to set the <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> property to `true`.</span></span>  
  
-   <span data-ttu-id="bbce8-216">재정의 <xref:System.ComponentModel.BindingList%601.FindCore%2A> 고 찾기 알고리즘을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-216">Override <xref:System.ComponentModel.BindingList%601.FindCore%2A> to implement the find algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-217">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.ComponentModel.BindingList%601.FindCore%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-217">The following code example demonstrates how to use the <xref:System.ComponentModel.BindingList%601.FindCore%2A> member.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bbce8-218"><see cref="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)" />가 파생 클래스에서 재정의되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="bbce8-218"><see cref="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)" /> is not overridden in a derived class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="bindingList.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bbce8-219">항목을 삽입할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-219">The zero-based index where the item is to be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="bbce8-220">목록에 삽입할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-220">The item to insert in the list.</span></span></param>
        <summary><span data-ttu-id="bbce8-221">지정된 항목을 목록의 지정된 인덱스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-221">Inserts the specified item in the list at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-222"><xref:System.ComponentModel.BindingList%601.InsertItem%2A> 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-222"><xref:System.ComponentModel.BindingList%601.InsertItem%2A> performs the following operations:</span></span>  
  
-   <span data-ttu-id="bbce8-223">호출 <xref:System.ComponentModel.BindingList%601.EndNew%2A> 를 통해 추가 된 모든 커밋되지 않은 항목을 커밋에 <xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-223">Calls <xref:System.ComponentModel.BindingList%601.EndNew%2A> to commit any uncommitted items added through the <xref:System.ComponentModel.BindingList%601.AddingNew> event.</span></span>  
  
-   <span data-ttu-id="bbce8-224">지정된 된 인덱스에 항목 삽입</span><span class="sxs-lookup"><span data-stu-id="bbce8-224">Inserts the item at the specified index</span></span>  
  
-   <span data-ttu-id="bbce8-225">발생 한 <xref:System.ComponentModel.BindingList%601.ListChanged> 형식의 이벤트 <xref:System.ComponentModel.ListChangedType.ItemAdded> 삽입 된 항목의 인덱스를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-225">Raises a <xref:System.ComponentModel.BindingList%601.ListChanged> event of type <xref:System.ComponentModel.ListChangedType.ItemAdded> indicating the index of the item that was inserted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortedCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsSortedCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSortedCore" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.IsSortedCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsSortedCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsSortedCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSortedCore : bool" Usage="System.ComponentModel.BindingList&lt;'T&gt;.IsSortedCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-226">목록이 정렬되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-226">Gets a value indicating whether the list is sorted.</span></span></summary>
        <value><span data-ttu-id="bbce8-227">목록이 정렬되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-227"><see langword="true" /> if the list is sorted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-228">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-228">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-229">합니다 <xref:System.ComponentModel.BindingList%601> 클래스에 있도록 정렬의 기본 구현을 제공 하지 않습니다 <xref:System.ComponentModel.BindingList%601.IsSortedCore%2A> 항상 반환 `false` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-229">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of sorting, so <xref:System.ComponentModel.BindingList%601.IsSortedCore%2A> always returns `false` by default.</span></span>  
  
 <span data-ttu-id="bbce8-230"><xref:System.ComponentModel.BindingList%601> 클래스 정렬의 기본 구현을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-230">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of sorting.</span></span> <span data-ttu-id="bbce8-231">정렬 기능을 사용에서 클래스를 파생 <xref:System.ComponentModel.BindingList%601> 및:</span><span class="sxs-lookup"><span data-stu-id="bbce8-231">To enable sorting, derive a class from <xref:System.ComponentModel.BindingList%601> and:</span></span>  
  
-   <span data-ttu-id="bbce8-232">재정의 <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> 발생 정렬을 구현 하 고는 <xref:System.ComponentModel.BindingList%601.ListChanged> 정렬 하는 경우 이벤트가 완료 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-232">Override <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> and implement sorting raising the <xref:System.ComponentModel.BindingList%601.ListChanged> event when sorting is complete.</span></span>  
  
-   <span data-ttu-id="bbce8-233">재정의 <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> 정렬 제거를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-233">Override <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> and implement sort removal.</span></span>  
  
-   <span data-ttu-id="bbce8-234">재정의 <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 설정 <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-234">Override <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> and set <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> to `true`.</span></span>  
  
 <span data-ttu-id="bbce8-235">또한 하려는 경우 추가로 구현할 <xref:System.ComponentModel.BindingList%601.SortDirectionCore%2A> 고 <xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A>의속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-235">In addition, you may want to implement the supplemental <xref:System.ComponentModel.BindingList%601.SortDirectionCore%2A> and <xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A>s sorting properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BindingList`1.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.IBindingList.ListChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-236">목록이나 목록의 항목이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-236">Occurs when the list or an item in the list changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-237"><xref:System.ComponentModel.BindingList%601.ListChanged> 목록 항목 형식에서 구현 하는 경우에 항목 값이 변경에 대 한 알림을 발생은 <xref:System.ComponentModel.INotifyPropertyChanged> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-237"><xref:System.ComponentModel.BindingList%601.ListChanged> notifications for item value changes are only raised if the list item type implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface.</span></span>  
  
 <span data-ttu-id="bbce8-238">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-238">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-239">다음 코드 예제에서는 어떻게 처리는 <xref:System.ComponentModel.BindingList%601.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-239">The following code example demonstrates how handle the <xref:System.ComponentModel.BindingList%601.ListChanged> event.</span></span> <span data-ttu-id="bbce8-240">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-240">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IRaiseItemChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedEventArgs" />
        <altmember cref="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit&#xA;override this.OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit" Usage="bindingList.OnAddingNew e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bbce8-241">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.AddingNewEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-241">An <see cref="T:System.ComponentModel.AddingNewEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bbce8-242"><see cref="E:System.ComponentModel.BindingList`1.AddingNew" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-242">Raises the <see cref="E:System.ComponentModel.BindingList`1.AddingNew" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-243">합니다 <xref:System.ComponentModel.BindingList%601.AddingNew> 이벤트 및 <xref:System.ComponentModel.BindingList%601.AddNew%2A> 메서드 허용 사용자가 직접 만든 항목을 목록에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-243">The <xref:System.ComponentModel.BindingList%601.AddingNew> event and the <xref:System.ComponentModel.BindingList%601.AddNew%2A> method allow custom-created items to be added to the list.</span></span>  
  
 <span data-ttu-id="bbce8-244">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bbce8-245">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bbce8-246">또한 <xref:System.ComponentModel.BindingList%601.OnAddingNew%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-246">The <xref:System.ComponentModel.BindingList%601.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bbce8-247">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bbce8-248">파생 클래스에서 <see cref="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-248">When overriding <see cref="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.ComponentModel.BindingList`1.AddingNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit&#xA;override this.OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit" Usage="bindingList.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bbce8-249">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.ListChangedEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-249">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bbce8-250"><see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-250">Raises the <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-251">또한 <xref:System.ComponentModel.BindingList%601.OnListChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-251">The <xref:System.ComponentModel.BindingList%601.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bbce8-252">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-252">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bbce8-253">파생 클래스에서 <see cref="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-253">When overriding <see cref="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BindingList`1.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RaiseListChangedEvents : bool with get, set" Usage="System.ComponentModel.BindingList&lt;'T&gt;.RaiseListChangedEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-254">목록에서 항목을 추가하거나 제거하면 <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 이벤트가 발생하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-254">Gets or sets a value indicating whether adding or removing items within the list raises <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> events.</span></span></summary>
        <value><span data-ttu-id="bbce8-255">항목을 추가하거나 제거하는 경우 <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 이벤트가 발생하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-255"><see langword="true" /> if adding or removing items raises <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> events; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-256">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-256">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-257">설정 된 <xref:System.ComponentModel.BindingList%601.RaiseListChangedEvents%2A> 속성을 `false` 표시 하지 않으려면 <xref:System.ComponentModel.BindingList%601.ListChanged> 이벤트 목록에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-257">Set the <xref:System.ComponentModel.BindingList%601.RaiseListChangedEvents%2A> property to `false` if you wish to suppress <xref:System.ComponentModel.BindingList%601.ListChanged> events from occurring on the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-258">다음 코드 예제에서는 사용법을 <xref:System.ComponentModel.BindingList%601.RaiseListChangedEvents%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-258">The following code example demonstrates how use the <xref:System.ComponentModel.BindingList%601.RaiseListChangedEvents%2A> method.</span></span> <span data-ttu-id="bbce8-259">전체 예제를 참조 하세요.를 <xref:System.ComponentModel.BindingList%601> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-259">For the complete example, see the <xref:System.ComponentModel.BindingList%601> class overview topic.</span></span>  
  
 [!code-csharp[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BindingListOfTExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BindingListOfTExample/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="bindingList.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bbce8-260">제거할 항목의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-260">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="bbce8-261">지정한 인덱스에서 해당 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-261">Removes the item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-262">이 메서드는 <xref:System.ComponentModel.BindingList%601.ListChanged> 형식의 이벤트 <xref:System.ComponentModel.ListChangedType.ItemDeleted>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-262">This method raises the <xref:System.ComponentModel.BindingList%601.ListChanged> event of type <xref:System.ComponentModel.ListChangedType.ItemDeleted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bbce8-263">새로 추가된 항목을 제거하면 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />가 <see langword="false" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-263">You are removing a newly added item and <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> is set to <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.BindingList`1.AddNew" />
        <altmember cref="M:System.ComponentModel.BindingList`1.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSortCore">
      <MemberSignature Language="C#" Value="protected virtual void RemoveSortCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveSortCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.RemoveSortCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveSortCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveSortCore();" />
      <MemberSignature Language="F#" Value="abstract member RemoveSortCore : unit -&gt; unit&#xA;override this.RemoveSortCore : unit -&gt; unit" Usage="bindingList.RemoveSortCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-264">정렬 기능이 파생 클래스에서 구현되었으면 <see cref="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />를 사용하여 적용된 정렬을 제거하고, 그렇지 않으면 <see cref="T:System.NotSupportedException" />을 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-264">Removes any sort applied with <see cref="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> if sorting is implemented in a derived class; otherwise, raises <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-265"><xref:System.ComponentModel.BindingList%601> 클래스에 있도록 정렬의 기본 구현을 제공 하지 않습니다 <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> throw를 <xref:System.NotSupportedException> 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-265">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of sorting, so <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> always throws a <xref:System.NotSupportedException> by default.</span></span> <span data-ttu-id="bbce8-266">정렬 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-266">For more information about sorting, see the <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bbce8-267">메서드가 파생 클래스에서 재정의되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="bbce8-267">Method is not overridden in a derived class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.ResetBindings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings();" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : unit -&gt; unit" Usage="bindingList.ResetBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-268"><see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 형식의 <see cref="F:System.ComponentModel.ListChangedType.Reset" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-268">Raises a <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> event of type <see cref="F:System.ComponentModel.ListChangedType.Reset" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-269">경우는 <xref:System.ComponentModel.BindingList%601> Windows Forms 컨트롤에 바인딩되는 <xref:System.ComponentModel.BindingList%601.ResetBindings%2A> 메서드를 사용 하면 목록에 바인딩된 모든 컨트롤의 새로 고침.</span><span class="sxs-lookup"><span data-stu-id="bbce8-269">When the <xref:System.ComponentModel.BindingList%601> is bound to Windows Forms controls, the <xref:System.ComponentModel.BindingList%601.ResetBindings%2A> method causes a refresh of all controls bound to the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (position As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int position);" />
      <MemberSignature Language="F#" Value="member this.ResetItem : int -&gt; unit" Usage="bindingList.ResetItem position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="bbce8-270">다시 설정할 항목의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-270">A zero-based index of the item to be reset.</span></span></param>
        <summary><span data-ttu-id="bbce8-271">지정된 위치에 있는 항목에 대해 <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 형식의 <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-271">Raises a <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> event of type <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" /> for the item at the specified position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-272">경우는 <xref:System.ComponentModel.BindingList%601> Windows Forms 컨트롤에 바인딩되는 <xref:System.ComponentModel.BindingList%601.ResetItem%2A> 메서드를 사용 하면 지정된 된 위치에 있는 항목에 바인딩된 컨트롤의 새로 고침.</span><span class="sxs-lookup"><span data-stu-id="bbce8-272">When the <xref:System.ComponentModel.BindingList%601> is bound to Windows Forms controls, the <xref:System.ComponentModel.BindingList%601.ResetItem%2A> method causes a refresh of controls bound to the item at the specified position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'T -&gt; unit" Usage="bindingList.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bbce8-273">바꿀 항목의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-273">The zero-based index of the item to replace.</span></span></param>
        <param name="item"><span data-ttu-id="bbce8-274">지정된 인덱스에 있는 항목의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-274">The new value for the item at the specified index.</span></span> <span data-ttu-id="bbce8-275">참조 형식에 대해 값은 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-275">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="bbce8-276">지정된 인덱스에 있는 항목을 지정된 항목으로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-276">Replaces the item at the specified index with the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-277">항목을 설정한 후 <xref:System.ComponentModel.BindingList%601.SetItem%2A> 발생을 <xref:System.ComponentModel.BindingList%601.ListChanged> 형식의 이벤트 <xref:System.ComponentModel.ListChangedType.ItemChanged> 설정 된 항목의 인덱스를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-277">After the item is set, <xref:System.ComponentModel.BindingList%601.SetItem%2A> raises a <xref:System.ComponentModel.BindingList%601.ListChanged> event of type <xref:System.ComponentModel.ListChangedType.ItemChanged> indicating the index of the item that was set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bbce8-278"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="bbce8-278"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="bbce8-279">또는</span><span class="sxs-lookup"><span data-stu-id="bbce8-279">-or-</span></span> 
 <span data-ttu-id="bbce8-280"><paramref name="index" />가 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="bbce8-280"><paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
        <altmember cref="E:System.ComponentModel.BindingList`1.ListChanged" />
      </Docs>
    </Member>
    <Member MemberName="SortDirectionCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.ListSortDirection SortDirectionCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirectionCore" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.SortDirectionCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SortDirectionCore As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirectionCore { System::ComponentModel::ListSortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirectionCore : System.ComponentModel.ListSortDirection" Usage="System.ComponentModel.BindingList&lt;'T&gt;.SortDirectionCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-281">목록이 정렬되는 방향을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-281">Gets the direction the list is sorted.</span></span></summary>
        <value><span data-ttu-id="bbce8-282"><see cref="T:System.ComponentModel.ListSortDirection" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-282">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values.</span></span> <span data-ttu-id="bbce8-283">기본값은 <see cref="F:System.ComponentModel.ListSortDirection.Ascending" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-283">The default is <see cref="F:System.ComponentModel.ListSortDirection.Ascending" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-284">합니다 <xref:System.ComponentModel.BindingList%601> 클래스에 있도록 정렬의 기본 구현을 제공 하지 않습니다 <xref:System.ComponentModel.BindingList%601.SortDirectionCore%2A> 항상 반환 <xref:System.ComponentModel.ListSortDirection.Ascending> 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-284">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of sorting, so <xref:System.ComponentModel.BindingList%601.SortDirectionCore%2A> always returns <xref:System.ComponentModel.ListSortDirection.Ascending> by default.</span></span> <span data-ttu-id="bbce8-285">정렬 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.IBindingList.ApplySort%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-285">For more information about sorting, see the <xref:System.ComponentModel.IBindingList.ApplySort%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortPropertyCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptor SortPropertyCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortPropertyCore" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.SortPropertyCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SortPropertyCore As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortPropertyCore { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortPropertyCore : System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.BindingList&lt;'T&gt;.SortPropertyCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-286">정렬 기능이 파생 클래스에서 구현되었으면 목록의 정렬에 사용되는 속성 설명자를 가져오고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-286">Gets the property descriptor that is used for sorting the list if sorting is implemented in a derived class; otherwise, returns <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="bbce8-287">목록의 정렬에 사용되는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-287">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> used for sorting the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-288"><xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A> 반환 `null` 기본적으로 하기 때문에 <xref:System.ComponentModel.BindingList%601> 클래스 정렬의 기본 구현을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-288"><xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A> returns `null` by default because the <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of sorting.</span></span> <span data-ttu-id="bbce8-289">정렬 기능을 사용에서 클래스를 파생 <xref:System.ComponentModel.BindingList%601> 및:</span><span class="sxs-lookup"><span data-stu-id="bbce8-289">To enable sorting, derive a class from <xref:System.ComponentModel.BindingList%601> and:</span></span>  
  
-   <span data-ttu-id="bbce8-290">재정의 <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> 및 정렬을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-290">Override <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> and implement sorting.</span></span>  
  
-   <span data-ttu-id="bbce8-291">재정의 <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> 정렬 제거를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-291">Override <xref:System.ComponentModel.BindingList%601.RemoveSortCore%2A> and implement sort removal.</span></span>  
  
-   <span data-ttu-id="bbce8-292">재정의 <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 설정 <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-292">Override <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> and set <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> to `true`.</span></span>  
  
-   <span data-ttu-id="bbce8-293">선택적으로 재정의 합니다 <xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A> 반환할는 <xref:System.ComponentModel.PropertyDescriptor> 정렬에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-293">Optionally, override the <xref:System.ComponentModel.BindingList%601.SortPropertyCore%2A> to return the <xref:System.ComponentModel.PropertyDescriptor> used for sorting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotificationCore">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsChangeNotificationCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotificationCore" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.SupportsChangeNotificationCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsChangeNotificationCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsChangeNotificationCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeNotificationCore : bool" Usage="System.ComponentModel.BindingList&lt;'T&gt;.SupportsChangeNotificationCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-294"><see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 이벤트가 사용되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-294">Gets a value indicating whether <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> events are enabled.</span></span></summary>
        <value><span data-ttu-id="bbce8-295"><see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 이벤트가 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-295"><see langword="true" /> if <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> events are supported; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-296">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-296">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-297"><xref:System.ComponentModel.BindingList%601.SupportsChangeNotificationCore%2A> 에 대 한 구현을 제공 <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-297"><xref:System.ComponentModel.BindingList%601.SupportsChangeNotificationCore%2A> provides the implementation for <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>.</span></span> <span data-ttu-id="bbce8-298">클래스를 파생 시켜 <xref:System.ComponentModel.BindingList%601> 기본값을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-298">You can derive a class from <xref:System.ComponentModel.BindingList%601> and override the default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearchingCore">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsSearchingCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearchingCore" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.SupportsSearchingCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsSearchingCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsSearchingCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSearchingCore : bool" Usage="System.ComponentModel.BindingList&lt;'T&gt;.SupportsSearchingCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-299">목록에서 검색 기능을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-299">Gets a value indicating whether the list supports searching.</span></span></summary>
        <value><span data-ttu-id="bbce8-300">목록에서 검색 기능을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-300"><see langword="true" /> if the list supports searching; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-301">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-301">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-302">합니다 <xref:System.ComponentModel.BindingList%601> 클래스에이 검색의 기본 구현을 제공 하지 않습니다 <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> 항상 반환 `false` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-302">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of searching, so <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> always returns `false` by default.</span></span> <span data-ttu-id="bbce8-303">검색을 구현 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.BindingList%601.System%23ComponentModel%23IBindingList%23Find%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-303">For more information about implementing searching, see the <xref:System.ComponentModel.BindingList%601.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbce8-304">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-304">The following code example demonstrates how to use the <xref:System.ComponentModel.BindingList%601.SupportsSearchingCore%2A> member.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSortingCore">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsSortingCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSortingCore" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.SupportsSortingCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsSortingCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsSortingCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSortingCore : bool" Usage="System.ComponentModel.BindingList&lt;'T&gt;.SupportsSortingCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-305">목록에서 정렬 기능을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-305">Gets a value indicating whether the list supports sorting.</span></span></summary>
        <value><span data-ttu-id="bbce8-306">목록에서 정렬 기능을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-306"><see langword="true" /> if the list supports sorting; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-307">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-307">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-308"><xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 속성을 나타냅니다 여부를 <xref:System.ComponentModel.BindingList%601> 사용 하 여 정렬을 지원 합니다 <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-308">The <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> property indicates whether the <xref:System.ComponentModel.BindingList%601> supports sorting with the <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> method.</span></span>  
  
 <span data-ttu-id="bbce8-309">합니다 <xref:System.ComponentModel.BindingList%601> 클래스에 있도록 정렬의 기본 구현을 제공 하지 않습니다 <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> 항상 반환 `false` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-309">The <xref:System.ComponentModel.BindingList%601> class does not provide a base implementation of sorting, so <xref:System.ComponentModel.BindingList%601.SupportsSortingCore%2A> always returns `false` by default.</span></span> <span data-ttu-id="bbce8-310">정렬 구현 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbce8-310">For more information about implementing sorting, see the <xref:System.ComponentModel.BindingList%601.ApplySortCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (prop As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bbce8-311">검색 조건으로 추가할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-311">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add as a search criteria.</span></span></param>
        <summary><span data-ttu-id="bbce8-312">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-312">For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-313">이 메서드의 기본 구현은 아무 작업도 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-313">The base implementation of this method does nothing.</span></span> <span data-ttu-id="bbce8-314">이 기능을 원하는 경우 파생된 클래스 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-314">If this functionality is desired, a derived class must implement it.</span></span>  
  
 <span data-ttu-id="bbce8-315">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-315">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-316"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-316">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddNew">
      <MemberSignature Language="C#" Value="object IBindingList.AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.IBindingList.AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddNew" />
      <MemberSignature Language="VB.NET" Value="Function AddNew () As Object Implements IBindingList.AddNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.IBindingList.AddNew() = System::ComponentModel::IBindingList::AddNew;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-317">목록에 새 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-317">Adds a new item to the list.</span></span> <span data-ttu-id="bbce8-318">자세한 내용은 <see cref="M:System.ComponentModel.IBindingList.AddNew" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-318">For more information, see <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</span></span></summary>
        <returns><span data-ttu-id="bbce8-319">목록에 추가되는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-319">The item added to the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-320">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-320">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-321"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-321">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 <span data-ttu-id="bbce8-322">이 구현에서는 호출 <xref:System.ComponentModel.BindingList%601.AddNewCore%2A> 목록에 새 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-322">This implementation calls <xref:System.ComponentModel.BindingList%601.AddNewCore%2A> to add a new item to the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bbce8-323">이 메서드는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-323">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AllowEdit">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IBindingList.AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IBindingList.AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowEdit" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AllowEdit As Boolean Implements IBindingList.AllowEdit" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IBindingList::AllowEdit { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.AllowEdit" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-324">목록의 항목을 편집할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-324">Gets a value indicating whether items in the list can be edited.</span></span></summary>
        <value><span data-ttu-id="bbce8-325">목록 항목을 편집할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-325"><see langword="true" /> if list items can be edited; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-326">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-326">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-327"><xref:System.ComponentModel.BindingList%601.AllowEdit%2A> 목록의 항목을 편집할 수 있는지 확인 하려면 다른 구성 요소 속성은 일반적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-327">The <xref:System.ComponentModel.BindingList%601.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AllowNew">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IBindingList.AllowNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IBindingList.AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowNew" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AllowNew As Boolean Implements IBindingList.AllowNew" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IBindingList::AllowNew { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.AllowNew" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-328"><see cref="M:System.ComponentModel.BindingList`1.AddNew" /> 메서드를 사용하여 목록에 새 항목을 추가할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-328">Gets a value indicating whether new items can be added to the list using the <see cref="M:System.ComponentModel.BindingList`1.AddNew" /> method.</span></span></summary>
        <value><span data-ttu-id="bbce8-329"><see cref="M:System.ComponentModel.BindingList`1.AddNew" /> 메서드를 사용하여 목록에 항목을 추가할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-329"><see langword="true" /> if you can add items to the list with the <see cref="M:System.ComponentModel.BindingList`1.AddNew" /> method; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-330">기본값은 목록에 포함된 내부 형식에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-330">The default depends on the underlying type contained in the list.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AllowRemove">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IBindingList.AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IBindingList.AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowRemove" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AllowRemove As Boolean Implements IBindingList.AllowRemove" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IBindingList::AllowRemove { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.AllowRemove" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowRemove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-331">목록에서 항목을 제거할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-331">Gets a value indicating whether items can be removed from the list.</span></span></summary>
        <value><span data-ttu-id="bbce8-332"><see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" /> 메서드를 사용하여 목록에서 항목을 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-332"><see langword="true" /> if you can remove items from the list with the <see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" /> method; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-333">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-333">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.ApplySort">
      <MemberSignature Language="C#" Value="void IBindingList.ApplySort (System.ComponentModel.PropertyDescriptor prop, System.ComponentModel.ListSortDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.ApplySort(class System.ComponentModel.PropertyDescriptor prop, valuetype System.ComponentModel.ListSortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplySort (prop As PropertyDescriptor, direction As ListSortDirection) Implements IBindingList.ApplySort" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.ApplySort(System::ComponentModel::PropertyDescriptor ^ prop, System::ComponentModel::ListSortDirection direction) = System::ComponentModel::IBindingList::ApplySort;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bbce8-334">정렬에 사용할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-334">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to sort by.</span></span></param>
        <param name="direction"><span data-ttu-id="bbce8-335"><see cref="T:System.ComponentModel.ListSortDirection" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-335">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values.</span></span></param>
        <summary><span data-ttu-id="bbce8-336"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 및 <see cref="T:System.ComponentModel.ListSortDirection" />에 따라 목록을 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-336">Sorts the list based on a <see cref="T:System.ComponentModel.PropertyDescriptor" /> and a <see cref="T:System.ComponentModel.ListSortDirection" />.</span></span> <span data-ttu-id="bbce8-337">이 멤버에 대한 전체 설명은 <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-337">For a complete description of this member, see <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-338">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-338">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-339"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-339">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.Find">
      <MemberSignature Language="C#" Value="int IBindingList.Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.ComponentModel.IBindingList.Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Find (prop As PropertyDescriptor, key As Object) As Integer Implements IBindingList.Find" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.ComponentModel.IBindingList.Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key) = System::ComponentModel::IBindingList::Find;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bbce8-340">검색할 대상 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-340">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search on.</span></span></param>
        <param name="key"><span data-ttu-id="bbce8-341">검색할 <paramref name="prop" /> 매개 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-341">The value of the <paramref name="prop" /> parameter to search for.</span></span></param>
        <summary><span data-ttu-id="bbce8-342">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-342">For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="bbce8-343">지정된 <see cref="T:System.ComponentModel.PropertyDescriptor" />가 있는 행의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-343">The index of the row that has the given <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-344">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-344">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-345"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-345">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.IsSorted">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IBindingList.IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IBindingList.IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#IsSorted" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSorted As Boolean Implements IBindingList.IsSorted" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IBindingList::IsSorted { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.IsSorted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.IsSorted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-346">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-346">For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</span></span></summary>
        <value><span data-ttu-id="bbce8-347"><see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />가 호출되고 <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />는 호출되지 않았으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-347"><see langword="true" /> if <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" /> has been called and <see cref="M:System.ComponentModel.IBindingList.RemoveSort" /> has not been called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-348">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-348">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-349"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-349">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bbce8-350">검색에 사용되는 인덱스에서 제거할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-350">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span></span></param>
        <summary><span data-ttu-id="bbce8-351">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-351">For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-352">이 메서드의 기본 구현은 아무 작업도 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-352">The base implementation of this method does nothing.</span></span> <span data-ttu-id="bbce8-353">이 기능을 원하는 경우 파생된 클래스 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-353">If this functionality is desired, a derived class must implement it.</span></span>  
  
 <span data-ttu-id="bbce8-354">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-354">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-355"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-355">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveSort">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSort () Implements IBindingList.RemoveSort" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveSort() = System::ComponentModel::IBindingList::RemoveSort;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveSort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbce8-356">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-356">For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.RemoveSort" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-357">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-357">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-358"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-358">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.SortDirection">
      <MemberSignature Language="C#" Value="System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortDirection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SortDirection As ListSortDirection Implements IBindingList.SortDirection" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::ListSortDirection System::ComponentModel::IBindingList::SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.SortDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-359">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-359">For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</span></span></summary>
        <value><span data-ttu-id="bbce8-360"><see cref="T:System.ComponentModel.ListSortDirection" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-360">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-361">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-361">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-362"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-362">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.SortProperty">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortProperty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SortProperty As PropertyDescriptor Implements IBindingList.SortProperty" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptor ^ System::ComponentModel::IBindingList::SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.SortProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-363">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-363">For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</span></span></summary>
        <value><span data-ttu-id="bbce8-364">정렬에 사용되는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-364">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-365">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-365">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-366"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-366">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.SupportsChangeNotification">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IBindingList.SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IBindingList.SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportsChangeNotification As Boolean Implements IBindingList.SupportsChangeNotification" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IBindingList::SupportsChangeNotification { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.SupportsChangeNotification" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsChangeNotification</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-367">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-367">For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</span></span></summary>
        <value><span data-ttu-id="bbce8-368">목록이나 항목이 변경될 때 <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> 이벤트가 발생하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-368"><see langword="true" /> if a <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> event is raised when the list changes or when an item changes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-369">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-369">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-370"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-370">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.SupportsSearching">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IBindingList.SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IBindingList.SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSearching" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportsSearching As Boolean Implements IBindingList.SupportsSearching" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IBindingList::SupportsSearching { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.SupportsSearching" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSearching</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-371">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-371">For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</span></span></summary>
        <value><span data-ttu-id="bbce8-372">목록에서 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> 메서드를 사용한 검색 기능을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-372"><see langword="true" /> if the list supports searching using the <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-373">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-373">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-374"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-374">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.SupportsSorting">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IBindingList.SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IBindingList.SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSorting" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportsSorting As Boolean Implements IBindingList.SupportsSorting" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IBindingList::SupportsSorting { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IBindingList.SupportsSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-375">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bbce8-375">For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</span></span></summary>
        <value><span data-ttu-id="bbce8-376">목록에서 정렬 기능을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-376"><see langword="true" /> if the list supports sorting; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-377">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="bbce8-377">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbce8-378"><xref:System.ComponentModel.BindingList%601> 인스턴스가 <xref:System.ComponentModel.IBindingList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-378">It can be used only when the <xref:System.ComponentModel.BindingList%601> instance is cast to an <xref:System.ComponentModel.IBindingList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindingList`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RaisesItemChangedEvents As Boolean Implements IRaiseItemChangedEvents.RaisesItemChangedEvents" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IRaiseItemChangedEvents::RaisesItemChangedEvents { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbce8-379">항목 속성 값이 변경되면 <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> 형식의 <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" /> 이벤트가 발생하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-379">Gets a value indicating whether item property value changes raise <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> events of type <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" />.</span></span> <span data-ttu-id="bbce8-380">이 멤버는 파생 클래스에서 재정의될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-380">This member cannot be overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="bbce8-381"><see langword="true" /> 목록 형식이 구현 하는 경우 <see cref="T:System.ComponentModel.INotifyPropertyChanged" />고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-381"><see langword="true" /> if the list type implements <see cref="T:System.ComponentModel.INotifyPropertyChanged" />, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbce8-382">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-382">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbce8-383"><xref:System.ComponentModel.BindingList%601.System%23ComponentModel%23IRaiseItemChangedEvents%23RaisesItemChangedEvents%2A> 구현 되었는지 확인 하려면 목록 형식을 확인 합니다 <xref:System.ComponentModel.INotifyPropertyChanged> 발생 하는지 나타내기 위해 인터페이스 <xref:System.ComponentModel.BindingList%601.ListChanged> 이벤트의 <xref:System.ComponentModel.ListChangedType.ItemChanged> 개별 목록 항목의 속성 값이 변경 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="bbce8-383"><xref:System.ComponentModel.BindingList%601.System%23ComponentModel%23IRaiseItemChangedEvents%23RaisesItemChangedEvents%2A> checks the list type to see if it implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface to indicate that it raises <xref:System.ComponentModel.BindingList%601.ListChanged> events of <xref:System.ComponentModel.ListChangedType.ItemChanged> when property values are changed on individual list items.</span></span> <span data-ttu-id="bbce8-384">이 멤버는 파생 클래스에서 재정의될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bbce8-384">This member cannot be overridden in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>