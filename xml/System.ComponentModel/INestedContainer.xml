<Type Name="INestedContainer" FullName="System.ComponentModel.INestedContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff0f65452bcbb199e88e5693fd7dec10ef6cdccf" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58705917" /></Metadata><TypeSignature Language="C#" Value="public interface INestedContainer : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INestedContainer implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.INestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INestedContainer&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class INestedContainer : IDisposable, System::ComponentModel::IContainer" />
  <TypeSignature Language="F#" Value="type INestedContainer = interface&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9702d-101">논리적으로 다른 구성 요소를 0개 이상 포함하고 부모 구성 요소가 소유하는 중첩 컨테이너에 대한 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-101">Provides functionality for nested containers, which logically contain zero or more other components and are owned by a parent component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9702d-102">합니다 <xref:System.ComponentModel.INestedContainer> 인터페이스는 소유 구성 요소의 개념을 추가 합니다 <xref:System.ComponentModel.IContainer> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-102">The <xref:System.ComponentModel.INestedContainer> interface adds the concept of an owning component to the <xref:System.ComponentModel.IContainer> interface.</span></span> <span data-ttu-id="9702d-103">중첩 된 컨테이너는 논리적으로 하지만 반드시 시각적 하지 0 개 이상의 자식 요소가 있고 일부 부모 구성 요소에서 소유 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-103">A nested container is an object that logically, but not necessarily visually, contains zero or more child components and is owned by some parent component.</span></span> <span data-ttu-id="9702d-104">시각적 포함의 소유 구성 요소는 종종 다른 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-104">For visual containment, the owning component is often another container.</span></span>  
  
 <span data-ttu-id="9702d-105">중첩 된 컨테이너는 각 하위 컨트롤에는 serialize 된 명시적 멤버 변수 또는 사용자 지정 serializer를 요구 하지 않고을 디자인할 수 있는 컨트롤의 섹션을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-105">Nested containers allow sections of a control to be designable, without requiring an explicit serialized member variable or a custom serializer for each subcontrol.</span></span> <span data-ttu-id="9702d-106">대신 폼 디자이너에는 하나의 마스터 컨테이너 구성 요소를 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-106">Instead, the form designer maintains one master container of components.</span></span> <span data-ttu-id="9702d-107">각 구성 요소의 사이트 추가 구성 요소를 배치할 위치를 제공 하는 중첩 된 컨테이너에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-107">Each component's site may have a nested container that provides a place to put extra components.</span></span> <span data-ttu-id="9702d-108">구성 요소는 중첩 된 컨테이너에 배치 됩니다을 하는 경우 받는 이름은 해당 소유 구성 요소의 이름과 지정 된 이름과의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-108">When a component is sited in a nested container, the name it receives is a combination of its given name and its owning component's name.</span></span> <span data-ttu-id="9702d-109">또한 중첩된 된 컨테이너에 추가 하는 구성 요소는 부모 컨테이너의 서비스에 대 한 전체 액세스와 중첩 된 컨테이너를 새 구성 요소를 추가 하는 관련 하 여 부모 동일한 동작을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-109">Additionally, components added to a nested container have full access to the services of the parent container, and the nested container provides the same behavior of the parent with respect to adding new components.</span></span> <span data-ttu-id="9702d-110">중첩 된 컨테이너에 포함 된 각 구성 요소에 대 한 디자인 타임 지원 되므로 디자이너를 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-110">The nested container will create the designer for each component it contains, thereby enabling design-time support.</span></span> <span data-ttu-id="9702d-111">표준 코드 serializer 중첩 된 컨테이너에 게 표시 되지 않음, 때문에 이러한 구성 요소는 경우에 직렬화 한 경로를 기본 컨테이너의 구성 요소를 검색 하 여 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-111">Because standard code serializers do not look at nested containers, these components are only serialized if a path to them can be obtained by walking the components in the primary container.</span></span>  
  
 <span data-ttu-id="9702d-112">형식의 서비스에 대 한 구성 요소의 사이트를 쿼리하여 중첩 된 컨테이너를 찾을 수 있습니다 <xref:System.ComponentModel.INestedContainer>합니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-112">Nested containers can be found by querying a component's site for services of type <xref:System.ComponentModel.INestedContainer>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NestedContainer" />
    <altmember cref="T:System.ComponentModel.ContainerFilterService" />
    <altmember cref="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.INestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.INestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9702d-113">중첩 컨테이너의 소유 구성 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-113">Gets the owning component for the nested container.</span></span></summary>
        <value><span data-ttu-id="9702d-114">중첩 컨테이너를 소유하는 <see cref="T:System.ComponentModel.IComponent" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-114">The <see cref="T:System.ComponentModel.IComponent" /> that owns the nested container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9702d-115">소유 구성 요소는 일반 컨테이너에서 중첩 된 컨테이너를 구분할 수 있는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="9702d-115">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.NestedContainer.Owner" />
      </Docs>
    </Member>
  </Members>
</Type>