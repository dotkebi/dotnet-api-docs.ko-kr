<Type Name="TypeConverterAttribute" FullName="System.ComponentModel.TypeConverterAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf93ee6e8ef41f3d74ae150a56c2d6d8966388de" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56383208" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeConverterAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeConverterAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeConverterAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverterAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TypeConverterAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4c2b3-101">이 특성이 바인딩되는 개체에 대한 변환기로 사용할 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-101">Specifies what type to use as a converter for the object this attribute is bound to.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c2b3-102">변환을 위해 사용 하는 클래스에서 상속 해야 <xref:System.ComponentModel.TypeConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-102">The class you use for conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="4c2b3-103">사용 하 여는 <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> 개체에 대 한 데이터 변환 하 여이 특성을 제공 하는 클래스의 이름을 가져오려면 속성에 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-103">Use the <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</span></span>  
  
 <span data-ttu-id="4c2b3-104">특성에 대한 자세한 내용은 [특성](~/docs/standard/attributes/index.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-104">For more information about attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span> <span data-ttu-id="4c2b3-105">형식 변환기에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.TypeConverter> 기본 클래스 및 [방법: 형식 변환기를 구현](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120))합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-105">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span></span>  
  
 <span data-ttu-id="4c2b3-106">XAML에 대 한 형식 변환 동작을 제공 하는 사용자 지정 클래스에서 형식 변환기를 설정 하기 위해 적용 된 <xref:System.ComponentModel.TypeConverterAttribute> 특성을 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-106">In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to your type.</span></span> <span data-ttu-id="4c2b3-107">특성의 인수는 형식 변환기 구현을 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-107">The argument of the attribute references your type converter implementation.</span></span> <span data-ttu-id="4c2b3-108">형식 변환기를 사용 하 여 특성 또는 XAML 태그에 대 한 초기화 텍스트에 사용 되는 문자열에서 값을 허용할 수 하 고 해당 문자열에 의도 된 대상 형식으로 변환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-108">Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</span></span> <span data-ttu-id="4c2b3-109">자세한 내용은 [Typeconverter 및 XAML](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-109">For more information, see [TypeConverters and XAML](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md).</span></span>  
  
 <span data-ttu-id="4c2b3-110">형식의 모든 값에 적용 하는 대신 XAML에 대 한 형식 변환기 동작 특정 속성에 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-110">Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</span></span> <span data-ttu-id="4c2b3-111">적용 하는 예에서 <xref:System.ComponentModel.TypeConverterAttribute> 속성 정의에 (외부 정의 특정 없습니다 `get` 및 `set` 정의).</span><span class="sxs-lookup"><span data-stu-id="4c2b3-111">In this case, you apply <xref:System.ComponentModel.TypeConverterAttribute> to the property definition (the outer definition, not the specific `get` and `set` definitions).</span></span>  
  
 <span data-ttu-id="4c2b3-112">사용자 지정 연결 가능한 멤버의 XAML 사용에 대 한 형식 변환기 동작을 적용 하 여 할당할 수 있습니다 <xref:System.ComponentModel.TypeConverterAttribute> 에 `get` XAML 사용을 지 원하는 메서드 접근자입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-112">A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <xref:System.ComponentModel.TypeConverterAttribute> to the `get` method accessor that supports the XAML usage.</span></span> <span data-ttu-id="4c2b3-113">자세한 내용은 [연결된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-113">For more information, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="4c2b3-114">복잡 한 XAML serialization의 경우 개체 런타임에서 상태를 추가 해야 하는 사용자 지정 형식 또는 사용자 지정 멤버에 형식 변환기 및 특성 외에도 값 직렬 변환기를 모두 지원 클래스를 정의 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-114">For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</span></span> <span data-ttu-id="4c2b3-115">자세한 내용은 <xref:System.Windows.Markup.ValueSerializer>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-115">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c2b3-116">다음 예제에서는 선언 `MyClass` 호출 형식 변환기를 사용할 `MyClassConverter`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-116">The following example declares `MyClass` to use the type converter called `MyClassConverter`.</span></span> <span data-ttu-id="4c2b3-117">이 예에서는 가정 `MyClassConverter` 다른 곳에서 구현 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-117">This example assumes that `MyClassConverter` has been implemented elsewhere.</span></span> <span data-ttu-id="4c2b3-118">변환기를 구현 하는 클래스 (`MyClassConverter`)에서 상속 해야 합니다는 <xref:System.ComponentModel.TypeConverter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-118">The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverterAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverterAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4c2b3-119">다음 예제에서는의 인스턴스를 만들고 `MyClass`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-119">The next example creates an instance of `MyClass`.</span></span> <span data-ttu-id="4c2b3-120">클래스에 대 한 특성을 가져옵니다 고에서 사용 하는 형식 변환기의 이름을 출력 `MyClass`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-120">Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverterAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverterAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="4c2b3-121">사용자 지정 형식 및 라이브러리에 대 한 XAML 관련 CLR 특성</span><span class="sxs-lookup"><span data-stu-id="4c2b3-121">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="4c2b3-122">.NET Framework XAML 서비스에서 사용할 사용자 지정 형식 정의</span><span class="sxs-lookup"><span data-stu-id="4c2b3-122">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="4c2b3-123">NET XAML Services 개념 설명서</span><span class="sxs-lookup"><span data-stu-id="4c2b3-123">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4c2b3-124"><see cref="T:System.ComponentModel.TypeConverterAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-124">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c2b3-125">기본 형식 변환기를 사용하여 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 클래스의 새 인스턴스를 초기화합니다. 기본 형식 변환기는 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-125">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class with the default type converter, which is an empty string ("").</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c2b3-126">데이터 변환 중에 제공 하는 클래스에서 상속 해야 <xref:System.ComponentModel.TypeConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-126">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : string -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="4c2b3-127">이 특성이 바인딩되는 개체의 데이터 변환에 사용할 클래스의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-127">The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</span></span></param>
        <summary><span data-ttu-id="4c2b3-128">지정된 형식 이름을 이 특성이 바인딩되는 개체의 데이터 변환기로 사용하여 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-128">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type name as the data converter for the object this attribute is bound to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c2b3-129">데이터 변환 중에 제공 하는 클래스에서 상속 해야 <xref:System.ComponentModel.TypeConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-129">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : Type -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4c2b3-130">이 특성이 바인딩되는 개체의 데이터 변환에 사용할 변환기 클래스의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-130">A <see cref="T:System.Type" /> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</span></span></param>
        <summary><span data-ttu-id="4c2b3-131">지정된 형식을 이 특성이 바인딩되는 개체의 데이터 변환기로 사용하여 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-131">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type as the data converter for the object this attribute is bound to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c2b3-132">데이터 변환 중에 제공 하는 클래스에서 상속 해야 <xref:System.ComponentModel.TypeConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-132">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConverterTypeName">
      <MemberSignature Language="C#" Value="public string ConverterTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConverterTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConverterTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterTypeName : string" Usage="System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c2b3-133">이 특성이 바인딩되는 개체의 변환기로 사용할 <see cref="T:System.Type" />의 정규화된 형식 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-133">Gets the fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to.</span></span></summary>
        <value><span data-ttu-id="4c2b3-134">이 특성이 바인딩되는 개체의 변환기로 사용할 <see cref="T:System.Type" />의 정규화된 형식 이름 또는 정규화된 이름이 없는 경우 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-134">The fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</span></span> <span data-ttu-id="4c2b3-135">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-135">The default value is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.TypeConverterAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.TypeConverterAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As TypeConverterAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::TypeConverterAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.TypeConverterAttribute" Usage="System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverterAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c2b3-136">이 특성이 바인딩되는 개체의 변환기로 사용할 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-136">Specifies the type to use as a converter for the object this attribute is bound to.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="typeConverterAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4c2b3-137">값이 같은지 테스트할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-137">The object to test the value equality of.</span></span></param>
        <summary><span data-ttu-id="4c2b3-138">주어진 개체의 값이 현재 <see cref="T:System.ComponentModel.TypeConverterAttribute" />와 같은지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-138">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="4c2b3-139">지정된 개체의 값이 현재 <see cref="T:System.ComponentModel.TypeConverterAttribute" />의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-139"><see langword="true" /> if the value of the given object is equal to that of the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="typeConverterAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c2b3-140">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-140">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4c2b3-141">현재 <see cref="T:System.ComponentModel.TypeConverterAttribute" />의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="4c2b3-141">A hash code for the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>