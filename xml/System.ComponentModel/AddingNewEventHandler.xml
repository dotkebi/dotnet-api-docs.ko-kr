<Type Name="AddingNewEventHandler" FullName="System.ComponentModel.AddingNewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c7a0107bbfd04b55a2ea4454c66cd6ea24377d0" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58720441" /></Metadata><TypeSignature Language="C#" Value="public delegate void AddingNewEventHandler(object sender, AddingNewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AddingNewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AddingNewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AddingNewEventHandler(sender As Object, e As AddingNewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AddingNewEventHandler(System::Object ^ sender, AddingNewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AddingNewEventHandler = delegate of obj * AddingNewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="69204-101">이벤트의 소스로, 대개 데이터 컨테이너나 데이터 바인딩된 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="69204-101">The source of the event, typically a data container or data-bound collection.</span></span></param>
    <param name="e"><span data-ttu-id="69204-102">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.AddingNewEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="69204-102">A <see cref="T:System.ComponentModel.AddingNewEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="69204-103"><see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> 이벤트를 처리할 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="69204-103">Represents the method that will handle the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69204-104"><xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=nameWithType> 데이터 바인딩 시나리오에서 일반적으로 컬렉션에 새 항목을 추가 하기 전에 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="69204-104">The <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=nameWithType> event occurs prior to adding a new item to a collection, typically in data-binding scenarios.</span></span> <span data-ttu-id="69204-105">이 이벤트의 처리기를 추가할 새 항목 컬렉션 클래스의 표준 동작을 재정의 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="69204-105">The handler of this event can supply the new item to be added, overriding the standard action of the collection class.</span></span> <span data-ttu-id="69204-106">설정 하 여 이렇게를 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 의 속성을 <xref:System.ComponentModel.AddingNewEventArgs> 매개 변수 `e` 이 새 항목에 합니다.</span><span class="sxs-lookup"><span data-stu-id="69204-106">This is accomplished by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter `e` to this new item.</span></span> <span data-ttu-id="69204-107">일반적으로이 항목은 받는 사람 컬렉션에서 예상한 유형 이거나 컬렉션 형식의 예외가 throw 됩니다 <xref:System.InvalidCastException>합니다.</span><span class="sxs-lookup"><span data-stu-id="69204-107">Typically this item must be of a type expected by the recipient collection, or the collection will throw an exception of type <xref:System.InvalidCastException>.</span></span>  
  
 <span data-ttu-id="69204-108">이 이벤트는 대개 클래스 내에서 데이터 바인딩 시나리오에서와 같은 <xref:System.Windows.Forms.BindingSource?displayProperty=nameWithType> 고 <xref:System.ComponentModel.BindingList%601?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="69204-108">This event is commonly used in data-binding scenarios, within classes such as <xref:System.Windows.Forms.BindingSource?displayProperty=nameWithType> and <xref:System.ComponentModel.BindingList%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="69204-109"><xref:System.ComponentModel.AddingNewEventHandler> 대리자를 만드는 경우 이벤트를 처리할 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="69204-109">When you create an <xref:System.ComponentModel.AddingNewEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="69204-110">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="69204-110">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="69204-111">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="69204-111">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="69204-112">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="69204-112">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69204-113">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.ComponentModel.AddingNewEventHandler> 처리 하는 대리자는 <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="69204-113">The following code example demonstrates how to use the <xref:System.ComponentModel.AddingNewEventHandler> delegate to handle the <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="69204-114">이 코드 예제에 제공 된 큰 예제의 일부는 [방법: Windows Forms BindingSource 사용 하 여 항목 추가 사용자 지정](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="69204-114">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
</Type>