<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="934ffb8077ecd76978887fb39f085bdbfad0adff" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58455385" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cbab3-101">base 64로 표현되는 이진 데이터와 UTF-8 인코딩 텍스트 간의 변환입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-101">Converts between binary data and UTF-8 encoded text that is represented in base 64.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="utf8"><span data-ttu-id="cbab3-102">디코딩되어야 하는 UTF-8 인코딩 텍스트(base 64)를 포함하는 입력 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-102">The input span that contains UTF-8 encoded text in base 64 that needs to be decoded.</span></span></param>
        <param name="bytes"><span data-ttu-id="cbab3-103">작업의 결과인 디코딩된 이진 데이터를 포함하는 출력 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-103">The output span that contains the result of the operation, that is, the decoded binary data.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="cbab3-104">작업 중에 사용된 입력 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-104">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="cbab3-105">필요한 경우 후속 호출에서 입력을 분할하는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-105">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="cbab3-106">입력 범위에 작성된 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-106">The number of bytes written into the output span.</span></span> <span data-ttu-id="cbab3-107">필요한 경우 후속 호출에서 출력을 분할하는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-107">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="cbab3-108">입력 범위에 디코딩할 전체 데이터가 포함되는 경우 <see langword="true" />(기본값)입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-108"><see langword="true" /> (default) if the input span contains the entire data to decode.</span></span> <span data-ttu-id="cbab3-109">입력 범위에 더 많은 데이터를 팔로우해야 하는 부분 데이터가 포함되는 경우 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-109"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="cbab3-110">base 64로 나타낸 UTF-8 인코딩 텍스트의 범위를 이진 데이터로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-110">Decodes the span of UTF-8 encoded text represented as base 64 into binary data.</span></span> <span data-ttu-id="cbab3-111">입력이 4의 배수가 아닌 경우 최대한 가장 가까운 4의 배수로 디코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-111">If the input is not a multiple of 4, it will decode as much as it can, to the closest multiple of 4.</span></span></summary>
        <returns><span data-ttu-id="cbab3-112">디코딩 작업의 상태를 나타내는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-112">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cbab3-113">반환 값은 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-113">The return value can be as follows:</span></span>

- <span data-ttu-id="cbab3-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: 전체 입력된 범위를 처리가 했습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="cbab3-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: 디코딩된 입력을 쓰는 출력 범위 내에 공간이 충분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There is not enough space in the output span to write the decoded input.</span></span>
- <span data-ttu-id="cbab3-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` 는 `false` 입력 4의 배수가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false` and the input is not a multiple of 4.</span></span> <span data-ttu-id="cbab3-117">부분 입력으로 간주 됩니다 그렇지 않으면 <xref:System.Buffers.OperationStatus.InvalidData>합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-117">Otherwise, the partial input is considered <xref:System.Buffers.OperationStatus.InvalidData>.</span></span>
- <span data-ttu-id="cbab3-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: 입력 바이트 예상된 기본 64 범위를 벗어났습니다 contains, 잘못 된 또는 두 개 이상의 패딩 문자가 또는 완전 하지 않습니다 (즉,의 배수가 아닌 4) 및 `isFinalBlock` 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4) and `isFinalBlock` is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cbab3-119">디코딩되어야 하는 base-64 텍스트 데이터를 포함하는 입력 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-119">The input span that contains the base-64 text data that needs to be decoded.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="cbab3-120">버퍼에 작성된 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-120">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="cbab3-121">UTF-8 인코딩 텍스트(base 64)의 범위를 이진 데이터로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-121">Decodes the span of UTF-8 encoded text in base 64 (in-place) into binary data.</span></span> <span data-ttu-id="cbab3-122">디코딩된 이진 출력은 입력에 포함된 텍스트 데이터보다 작습니다(이 작업은 데이터를 압축함).</span><span class="sxs-lookup"><span data-stu-id="cbab3-122">The decoded binary output is smaller than the text data contained in the input (the operation deflates the data).</span></span> <span data-ttu-id="cbab3-123">입력이 4의 배수가 아닌 경우 이 메서드는 데이터를 디코딩하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-123">If the input is not a multiple of 4, the method will not decode any data.</span></span></summary>
        <returns><span data-ttu-id="cbab3-124">디코딩 작업의 상태를 나타내는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-124">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cbab3-125">반환 값은 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-125">The return value can be as follows:</span></span>

- <span data-ttu-id="cbab3-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: 전체 입력된 범위를 처리가 했습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="cbab3-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: 입력 바이트 예상된 기본 64 범위를 벗어났습니다 contains, 잘못 된 또는 두 개 이상의 패딩 문자가 또는 완전 하지 않습니다 (즉,의 배수가 아닌 4).</span><span class="sxs-lookup"><span data-stu-id="cbab3-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4).</span></span>

<span data-ttu-id="cbab3-128">반환할 수 없습니다.이 메서드는 <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> 고 <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-128">This method cannot return the <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="cbab3-129">디코딩되어야 하는 이진 데이터를 포함하는 입력 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-129">The input span that contains binary data that needs to be encoded.</span></span></param>
        <param name="utf8"><span data-ttu-id="cbab3-130">작업의 결과인 UTF-8 인코딩 텍스트(base 64)를 포함하는 출력 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-130">The output span that contains the result of the operation, that is, the UTF-8 encoded text in base 64.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="cbab3-131">작업 중에 사용된 입력 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-131">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="cbab3-132">필요한 경우 후속 호출에서 입력을 분할하는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-132">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="cbab3-133">입력 범위에 작성된 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-133">The number of bytes written into the output span.</span></span> <span data-ttu-id="cbab3-134">필요한 경우 후속 호출에서 출력을 분할하는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-134">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="cbab3-135">입력 범위에 인코딩할 전체 데이터가 포함되는 경우 <see langword="true" />(기본값)입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-135"><see langword="true" /> (the default) if the input span contains the entire data to encode.</span></span> <span data-ttu-id="cbab3-136">입력 범위에 더 많은 데이터를 팔로우해야 하는 부분 데이터가 포함되는 경우 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-136"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="cbab3-137">이진 데이터의 범위를 base 64로 나타낸 UTF-8 인코딩 텍스트로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-137">Encodes the span of binary data into UTF-8 encoded text represented as base 64.</span></span></summary>
        <returns><span data-ttu-id="cbab3-138">인코딩 작업의 상태를 나타내는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-138">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cbab3-139">반환 값은 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-139">The return value can be as follows:</span></span>

- <span data-ttu-id="cbab3-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: 전체 입력된 범위를 처리가 했습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="cbab3-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: 인코딩된 입력에 맞게 출력 범위 내에 충분 한 공간이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the output span to fit the encoded input.</span></span>
- <span data-ttu-id="cbab3-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` 는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span></span> <span data-ttu-id="cbab3-143">그렇지 않고 `isFinalBlock` 는 `true`, 입력 3의 배수가 아닌 경우 출력 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-143">Otherwise, if `isFinalBlock` is `true`, the output is padded if the input is not a multiple of 3.</span></span>

<span data-ttu-id="cbab3-144">이 메서드가 반환할 수 없습니다. <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> base-64 인코딩으로 수 없기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-144">This method cannot return <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> since that is not possible for base-64 encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="dataLength" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cbab3-145">디코딩되어야 하는 이진 데이터를 포함하는 입력 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-145">The input span that contains binary data that needs to be encoded.</span></span> <span data-ttu-id="cbab3-146">메서드는 바로 전환을 수행하기 때문에 작업의 결과를 저장할 수 있을 만큼 커야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-146">Because the method performs an in-place conversion, it needs to be large enough to store the result of the operation.</span></span></param>
        <param name="dataLength"><span data-ttu-id="cbab3-147">인코딩되어야 하는 버퍼에 포함된 이진 데이터의 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-147">The number of bytes of binary data contained within the buffer that needs to be encoded.</span></span> <span data-ttu-id="cbab3-148">이 값은 버퍼 길이보다 작아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-148">This value must be smaller than the buffer length.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="cbab3-149">버퍼에 작성된 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-149">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="cbab3-150">이진 데이터(내부)의 범위를 base 64로 나타낸 UTF-8 인코딩 텍스트로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-150">Encodes the span of binary data (in-place) into UTF-8 encoded text represented as base 64.</span></span> <span data-ttu-id="cbab3-151">인코딩된 텍스트 출력은 입력에 포함된 이진 데이터보다 큽니다(이 작업은 데이터를 확장함).</span><span class="sxs-lookup"><span data-stu-id="cbab3-151">The encoded text output is larger than the binary data contained in the input (the operation inflates the data).</span></span></summary>
        <returns><span data-ttu-id="cbab3-152">인코딩 작업의 상태를 나타내는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-152">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cbab3-153">반환 값은 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-153">The return value can be as follows:</span></span>

- <span data-ttu-id="cbab3-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: 전체 버퍼의 처리에 성공 했습니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire buffer succeeded.</span></span>
- <span data-ttu-id="cbab3-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: 초과 버퍼에서 공간이 없으므로 `dataLength` 입력 인코딩의 결과 맞게 합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the buffer beyond `dataLength` to fit the result of encoding the input.</span></span>

<span data-ttu-id="cbab3-156">이 메서드가 반환할 수 없습니다 <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> 고 <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-156">This method cannot return <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="cbab3-157"><paramref name="length" /> 크기의 바이트 범위 내에서 base-64 인코딩 텍스트를 디코딩해야 하는 경우 결과의 최대 길이(바이트 단위)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-157">Returns the maximum length (in bytes) of the result if you were to decode base-64 encoded text within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cbab3-158"><paramref name="length" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="cbab3-158"><paramref name="length" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="cbab3-159"><paramref name="length" /> 크기의 바이트 범위 내에서 이진 데이터를 인코딩해야 하는 경우 결과의 최대 길이(바이트 단위)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-159">Returns the maximum length (in bytes) of the result if you were to encode binary data within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cbab3-160">인코딩이 데이터를 4/3으로 확장하므로 <paramref name="length" />는 0보다 작거나 1610612733보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="cbab3-160"><paramref name="length" /> is less than 0 or larger than 1610612733 (since encode inflates the data by 4/3).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>