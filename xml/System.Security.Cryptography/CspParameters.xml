<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e3b617a1a4e7131e7ab61f28ad96a640582583e" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56346956" /></Metadata><TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <TypeSignature Language="F#" Value="type CspParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b7917-101">암호화 계산을 수행하는 CSP(암호화 서비스 공급자)에 전달되는 매개 변수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-101">Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations.</span></span> <span data-ttu-id="b7917-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-103"><xref:System.Security.Cryptography.CspParameters> 클래스는 내부적으로 Microsoft 암호화 서비스 공급자 (Csp)에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 관리 되는 암호화 클래스에 전달할 수 있는 매개 변수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-103">The <xref:System.Security.Cryptography.CspParameters> class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI).</span></span> <span data-ttu-id="b7917-104">"CryptoServiceProvider"로 끝나는 이름의 클래스는 해당 CSP에 대 한 관리 코드 래퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-104">Classes with names ending in "CryptoServiceProvider" are managed code wrappers for the corresponding CSP.</span></span>  
  
 <span data-ttu-id="b7917-105">사용 된 <xref:System.Security.Cryptography.CspParameters> 다음을 수행 하는 클래스:</span><span class="sxs-lookup"><span data-stu-id="b7917-105">Use the <xref:System.Security.Cryptography.CspParameters> class to do the following:</span></span>  
  
-   <span data-ttu-id="b7917-106">특정 CSP의 공급자 형식을 전달 하 여 지정 된 <xref:System.Security.Cryptography.CspParameters.ProviderType> 또는 <xref:System.Security.Cryptography.CspParameters.ProviderName> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-106">Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.</span></span>  <span data-ttu-id="b7917-107">또한 생성자의 오버 로드를 사용 하 여 CSP를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-107">You can also specify a CSP using an overload of the constructor.</span></span>  
  
-   <span data-ttu-id="b7917-108">암호화 키를 저장할 수 있는 키 컨테이너를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-108">Create a key container where you can store cryptographic keys.</span></span>  <span data-ttu-id="b7917-109">키 컨테이너에는 암호화 키를 유지 하 고 악의적인 제 3 자에서 비밀로 유지 하세요는 가장 안전한 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-109">Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.</span></span>  <span data-ttu-id="b7917-110">키 컨테이너를 만드는 방법에 대 한 자세한 내용은 참조 하세요. [방법: 키 컨테이너에 비대칭 키 저장소](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-110">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
-   <span data-ttu-id="b7917-111">비대칭 서명 키 또는 비대칭 교환 키 사용을 만들지 여부를 지정 합니다 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-111">Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7917-112">다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-112">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 <span data-ttu-id="b7917-113">다음 코드 예제에서는 <xref:System.Security.Cryptography.CspParameters> 클래스 스마트 카드 암호화 서비스 공급자를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-113">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="b7917-114">그런 다음 서명 하 고 스마트 카드를 사용 하 여 데이터를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-114">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-115">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-115">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7917-116"><see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7917-117"><see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-118">이러한 형태의 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 를 초기화 합니다 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드의 값을 값 `24`, PROV_RSA_AES 공급자를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-118">This form of <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.</span></span>  <span data-ttu-id="b7917-119">이 기본 공급자와 호환 되는 <xref:System.Security.Cryptography.Aes> 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-119">This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.</span></span>  
  
 <span data-ttu-id="b7917-120">다른 공급자 형식에 대 한 자세한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-120">For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7917-121">다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-121">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-122">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-122">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters dwTypeIn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="b7917-123">만들 공급자 종류를 지정하는 공급자 유형 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-123">A provider type code that specifies the kind of provider to create.</span></span></param>
        <summary><span data-ttu-id="b7917-124">지정된 공급자 유형 코드를 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-124">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-125">사용 된 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 생성자는 숫자 값을 전달 하 여 공급자 형식을 지정 하는 공급자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-125">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="b7917-126">기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-126">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="b7917-127">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-127">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="b7917-128">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-128">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="b7917-129">다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-129">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="b7917-130">기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-130">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7917-131">다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-131">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-132">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-132">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="b7917-133">만들 공급자 종류를 지정하는 공급자 유형 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-133">A provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="b7917-134">공급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-134">A provider name.</span></span></param>
        <summary><span data-ttu-id="b7917-135">지정된 공급자 형식 코드와 이름을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-135">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-136">사용 된 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 공급자 형식 및 이름을 지정 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-136">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type and name.</span></span>  
  
 <span data-ttu-id="b7917-137">원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-137">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="b7917-138">기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-138">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="b7917-139">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-139">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="b7917-140">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-140">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="b7917-141">다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-141">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="b7917-142">기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-142">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7917-143">다음 코드 예제에서는 <xref:System.Security.Cryptography.CspParameters> 클래스 스마트 카드 암호화 서비스 공급자를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-143">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="b7917-144">그런 다음 서명 하 고 스마트 카드를 사용 하 여 데이터를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-144">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-145">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-145">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn, strContainerNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="b7917-146">만들 공급자 종류를 지정하는 공급자 유형 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-146">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="b7917-147">공급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-147">A provider name.</span></span></param>
        <param name="strContainerNameIn"><span data-ttu-id="b7917-148">컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-148">A container name.</span></span></param>
        <summary><span data-ttu-id="b7917-149">지정된 공급자 형식 코드와 이름, 지정된 컨테이너 이름을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-149">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name, and the specified container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-150">사용 된 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 공급자 형식, 공급자 이름 및 컨테이너 이름을 지정 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-150">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type, a provider name, and a container name.</span></span>  
  
 <span data-ttu-id="b7917-151">해당 컨테이너 내에서 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-151">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="b7917-152">원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-152">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="b7917-153">기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-153">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="b7917-154">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-154">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="b7917-155">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-155">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="b7917-156">다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-156">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="b7917-157">기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-157">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-158">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-158">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * nativeint -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="b7917-159">만들 공급자 종류를 지정하는 공급자 유형 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-159">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="b7917-160">공급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-160">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="b7917-161">컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-161">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="b7917-162">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-162">An object that represents access rights and audit rules for the container.</span></span></param>
        <param name="parentWindowHandle"><span data-ttu-id="b7917-163">스마트 카드 암호 대화 상자의 부모 창에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-163">A handle to the parent window for a smart card password dialog.</span></span></param>
        <summary><span data-ttu-id="b7917-164">공급자 형식, 공급자 이름, 컨테이너 이름, 액세스 정보 및 비관리 스마트 카드 암호 대화 상자에 대한 핸들을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-164">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-165">해당 컨테이너 내에서 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-165">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="b7917-166">원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-166">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="b7917-167">기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-167">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="b7917-168">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-168">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="b7917-169">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-169">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="b7917-170">다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-170">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="b7917-171">기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-171">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * System.Security.SecureString -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="b7917-172">만들 공급자 종류를 지정하는 공급자 유형 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-172">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="b7917-173">공급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-173">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="b7917-174">컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-174">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="b7917-175">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-175">An object that represents access rights and audit rules for a container.</span></span></param>
        <param name="keyPassword"><span data-ttu-id="b7917-176">스마트 카드 키와 관련된 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-176">A password associated with a smart card key.</span></span></param>
        <summary><span data-ttu-id="b7917-177">공급자 형식, 공급자 이름, 컨테이너 이름, 액세스 정보 및 스마트 카드 키와 관련된 암호를 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-177">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-178">해당 컨테이너 내에서 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-178">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="b7917-179">원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-179">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="b7917-180">기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-180">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="b7917-181">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-181">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="b7917-182">호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b7917-182">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="b7917-183">다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-183">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="b7917-184">기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-184">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity with get, set" Usage="System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-185">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-185">Gets or sets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></summary>
        <value><span data-ttu-id="b7917-186">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-186">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-187">사용 하 여는 <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> 지정 하는 속성을 <xref:System.Security.AccessControl.CryptoKeySecurity> 임의 액세스 제어의 생성을 관리 하는 개체 (DACL)를 나열 하 고 컨테이너에 대 한 (SACL)에 대 한 시스템 액세스 제어 목록.</span><span class="sxs-lookup"><span data-stu-id="b7917-187">Use the <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Cryptography.CspProviderFlags with get, set" Usage="System.Security.Cryptography.CspParameters.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-188">CSP(암호화 서비스 공급자)의 동작을 수정하는 <see cref="T:System.Security.Cryptography.CspParameters" />의 플래그를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-188">Represents the flags for <see cref="T:System.Security.Cryptography.CspParameters" /> that modify the behavior of the cryptographic service provider (CSP).</span></span></summary>
        <value><span data-ttu-id="b7917-189">열거형 값 또는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-189">An enumeration value, or a bitwise combination of enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7917-190">값이 유효한 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-190">Value is not a valid enumeration value.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-191">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-191">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberSignature Language="F#" Value="val mutable KeyContainerName : string" Usage="System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-192"><see cref="T:System.Security.Cryptography.CspParameters" />에 대한 키 컨테이너 이름을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-192">Represents the key container name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-193">사용 된 <xref:System.Security.Cryptography.CspParameters.KeyContainerName> 필드를 키 컨테이너의 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-193">Use the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field to specify a name for your key container.</span></span>  <span data-ttu-id="b7917-194">해당 컨테이너 내에서 유지 되는 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-194">You can use the container name to retrieve the persisted key within that container.</span></span>  
  
 <span data-ttu-id="b7917-195">키 컨테이너를 만드는 방법에 대 한 자세한 내용은 참조 하세요. [방법: 키 컨테이너에 비대칭 키 저장소](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-195">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7917-196">다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-196">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-197">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-197">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberSignature Language="F#" Value="val mutable KeyNumber : int" Usage="System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-198">비대칭 키를 서명 키 또는 교환 키로 만들지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-198">Specifies whether an asymmetric key is created as a signature key or an exchange key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-199"><xref:System.Security.Cryptography.CspParameters.KeyNumber> 초기화 필드를 <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> 초기화할 때 속성을 <xref:System.Security.Cryptography.CspKeyContainerInfo> 개체를 <xref:System.Security.Cryptography.CspParameters> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-199">The <xref:System.Security.Cryptography.CspParameters.KeyNumber> field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.</span></span>  
  
 <span data-ttu-id="b7917-200">exchange 키는 안전 하 게 저장 하 고 다른 사용자와 교환할 수 있도록 세션 키를 암호화 하는 데 사용 되는 비대칭 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-200">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="b7917-201">사용할 수는 <xref:System.Security.Cryptography.KeyNumber.Exchange> 값 (`1`) 교환 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-201">You can use the <xref:System.Security.Cryptography.KeyNumber.Exchange> value (`1`) to specify an exchange key.</span></span>  <span data-ttu-id="b7917-202">이 값에 해당 하는 `AT_KEYEXCHANGE` 에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-202">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="b7917-203">서명 키는 디지털 서명 된 메시지 또는 파일을 인증에 사용 되는 비대칭 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-203">A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.</span></span>  <span data-ttu-id="b7917-204">사용할 수는 <xref:System.Security.Cryptography.KeyNumber.Signature> 값 (`2`) 서명 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-204">You can use the <xref:System.Security.Cryptography.KeyNumber.Signature> value (`2`) to specify a signature key.</span></span>  <span data-ttu-id="b7917-205">이 값에 해당 하는 `AT_SIGNATURE` CAPI에 사용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-205">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="b7917-206">기본적으로 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 필드 교환 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-206">By default, the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field specifies an exchange key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7917-207">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.KeyNumber> 열거형에 대 한 키 형식을 지정 하는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-207">The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-208">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-208">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPassword : System.Security.SecureString with get, set" Usage="System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-209">스마트 카드 키와 관련된 암호를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-209">Gets or sets a password associated with a smart card key.</span></span></summary>
        <value><span data-ttu-id="b7917-210">스마트 카드 키와 관련된 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-210">A password associated with a smart card key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-211">사용 된 <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> 스마트 카드 키에 대 한 암호를 제공 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-211">Use the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property to supply a password for a smart card key.</span></span>  <span data-ttu-id="b7917-212">이 속성을 사용 하 여 암호를 지정 하는 경우 암호 대화 상자를 사용자에 게 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-212">When you specify a password using this property, a password dialog box will not be presented to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindowHandle : nativeint with get, set" Usage="System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-213">스마트 카드 암호 대화 상자의 비관리 부모 창에 대한 핸들을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-213">Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.</span></span></summary>
        <value><span data-ttu-id="b7917-214">스마트 카드 암호 대화 상자의 부모 창에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-214">A handle to the parent window for a smart card password dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-215">사용 된 <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> 속성을 통해 스마트 카드 암호 대화 상자의 비관리 부모 창에 대 한 핸들을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-215">Use the <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> property to specify a handle to the unmanaged parent window for a smart card password dialog box.</span></span>  <span data-ttu-id="b7917-216">이 속성을 사용 하 여 핸들을 지정 하면 스마트 카드 암호 대화 상자의 사용자에 게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-216">When you specify a handle using this property, a smart card password dialog box will be presented to the user.</span></span>  
  
 <span data-ttu-id="b7917-217">명시적으로 사용 하 여 암호를 지정 하 여 스마트 카드 암호 대화 상자를 표시 하지 않아도 <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-217">You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-218"><see cref="T:System.Security.Cryptography.CspParameters" />의 공급자 이름을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-218">Represents the provider name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-219">공급자 이름에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="b7917-219">See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-220">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-220">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberSignature Language="F#" Value="val mutable ProviderType : int" Usage="System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7917-221"><see cref="T:System.Security.Cryptography.CspParameters" />의 공급자 형식 코드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-221">Represents the provider type code for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7917-222">사용 된 <xref:System.Security.Cryptography.CspParameters.ProviderType> 해당 공급자를 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 하는 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-222">Use the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="b7917-223">기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-223">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="b7917-224">호환 공급자를 지정 합니다 <xref:System.Security.Cryptography.RSA> 클래스, 값을 전달 `1`합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-224">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.</span></span>  
  
-   <span data-ttu-id="b7917-225">호환 공급자를 지정 합니다 <xref:System.Security.Cryptography.DSA> 클래스, 값을 전달 `13`합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-225">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.</span></span>  
  
 <span data-ttu-id="b7917-226">다음 표에서 공급자 유형 및 WinCrypt.h 헤더 파일에 정의 된 해당 숫자 값을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-226">The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.</span></span>  
  
|<span data-ttu-id="b7917-227">공급자 유형</span><span class="sxs-lookup"><span data-stu-id="b7917-227">Provider Type</span></span>|<span data-ttu-id="b7917-228">숫자 값</span><span class="sxs-lookup"><span data-stu-id="b7917-228">Numeric Value</span></span>|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|<span data-ttu-id="b7917-229">1</span><span class="sxs-lookup"><span data-stu-id="b7917-229">1</span></span>|  
|`PROV_RSA_SIG`|<span data-ttu-id="b7917-230">2</span><span class="sxs-lookup"><span data-stu-id="b7917-230">2</span></span>|  
|`PROV_DSS`|<span data-ttu-id="b7917-231">3</span><span class="sxs-lookup"><span data-stu-id="b7917-231">3</span></span>|  
|`PROV_FORTEZZA`|<span data-ttu-id="b7917-232">4</span><span class="sxs-lookup"><span data-stu-id="b7917-232">4</span></span>|  
|`PROV_MS_EXCHANGE`|<span data-ttu-id="b7917-233">5</span><span class="sxs-lookup"><span data-stu-id="b7917-233">5</span></span>|  
|`PROV_SSL`|<span data-ttu-id="b7917-234">6</span><span class="sxs-lookup"><span data-stu-id="b7917-234">6</span></span>|  
|`PROV_RSA_SCHANNEL`|<span data-ttu-id="b7917-235">12</span><span class="sxs-lookup"><span data-stu-id="b7917-235">12</span></span>|  
|`PROV_DSS_DH`|<span data-ttu-id="b7917-236">13</span><span class="sxs-lookup"><span data-stu-id="b7917-236">13</span></span>|  
|`PROV_EC_ECDSA_SIG`|<span data-ttu-id="b7917-237">14</span><span class="sxs-lookup"><span data-stu-id="b7917-237">14</span></span>|  
|`PROV_EC_ECNRA_SIG`|<span data-ttu-id="b7917-238">15</span><span class="sxs-lookup"><span data-stu-id="b7917-238">15</span></span>|  
|`PROV_EC_ECDSA_FULL`|<span data-ttu-id="b7917-239">16</span><span class="sxs-lookup"><span data-stu-id="b7917-239">16</span></span>|  
|`PROV_EC_ECNRA_FULL`|<span data-ttu-id="b7917-240">17</span><span class="sxs-lookup"><span data-stu-id="b7917-240">17</span></span>|  
|`PROV_DH_SCHANNEL`|<span data-ttu-id="b7917-241">18</span><span class="sxs-lookup"><span data-stu-id="b7917-241">18</span></span>|  
|`PROV_SPYRUS_LYNKS`|<span data-ttu-id="b7917-242">20</span><span class="sxs-lookup"><span data-stu-id="b7917-242">20</span></span>|  
|`PROV_RNG`|<span data-ttu-id="b7917-243">21</span><span class="sxs-lookup"><span data-stu-id="b7917-243">21</span></span>|  
|`PROV_INTEL_SEC`|<span data-ttu-id="b7917-244">22</span><span class="sxs-lookup"><span data-stu-id="b7917-244">22</span></span>|  
|`PROV_REPLACE_OWF`|<span data-ttu-id="b7917-245">23</span><span class="sxs-lookup"><span data-stu-id="b7917-245">23</span></span>|  
|`PROV_RSA_AES`|<span data-ttu-id="b7917-246">24</span><span class="sxs-lookup"><span data-stu-id="b7917-246">24</span></span>|  
  
 <span data-ttu-id="b7917-247">기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7917-247">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="b7917-248">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="b7917-248">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>