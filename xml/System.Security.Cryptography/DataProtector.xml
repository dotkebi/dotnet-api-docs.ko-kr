<Type Name="DataProtector" FullName="System.Security.Cryptography.DataProtector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="829aa622b8291b8f4994c2f8b332b002febae197" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927983" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataProtector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataProtector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DataProtector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataProtector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataProtector abstract" />
  <TypeSignature Language="F#" Value="type DataProtector = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3c63d-101">데이터 보호자에 대한 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-101">Provides the base class for data protectors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c63d-102">이 클래스는 보기 및 변조에서 저장 된 데이터를 보호 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-102">This class protects stored data from viewing and tampering.</span></span> <span data-ttu-id="3c63d-103">보호 된 데이터에 대 한 액세스는이 클래스의 인스턴스를 만들고 데이터를 보호 하는 데 사용 된 정확한 목적 문자열을 사용 하 여 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-103">The access to the protected data is obtained by creating an instance of this class and using the exact purpose strings that were used to protect the data.</span></span>  <span data-ttu-id="3c63d-104">호출자는 키를 보호 하거나 데이터를 보호 해제할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-104">The caller does not need a key to either protect or unprotect the data.</span></span> <span data-ttu-id="3c63d-105">키는 암호화 알고리즘을 통해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-105">The key is provided by the encryption algorithm.</span></span>  
  
 <span data-ttu-id="3c63d-106">파생된 클래스에서 재정의 해야 합니다는 <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> 하 고 <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> 메서드는는 <xref:System.Security.Cryptography.DataProtector> 클래스 호출에 다시 기본.</span><span class="sxs-lookup"><span data-stu-id="3c63d-106">Derived classes must override the <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> and <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> methods, which the <xref:System.Security.Cryptography.DataProtector> base class calls back into.</span></span> <span data-ttu-id="3c63d-107">도 재정의 해야 합니다 <xref:System.Security.Cryptography.DataProtector.IsReprotectRequired%2A> 메서드를 항상 반환할 수 있는 `true` 효율성 응용 프로그램 저장 된 암호화 텍스트의 해당 데이터베이스를 새로 고칠 때 약간 잠재적인 손실을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-107">They must also override the <xref:System.Security.Cryptography.DataProtector.IsReprotectRequired%2A> method, which can always return `true` with a  potential small loss of efficiency when applications refresh their database of stored cipher text.</span></span> <span data-ttu-id="3c63d-108">파생된 클래스에서 설정 하는 기본 클래스 생성자를 호출 하는 생성자를 제공 해야 합니다 <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A>, 및 <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-108">Derived classes should provide a constructor that calls the base class constructor, which sets the <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A>, and <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c63d-109">다음 예제에서는 보호기 추가 엔트로피에 대 한 옵션을 사용 하 여 보호 클래스를 사용 하는 데이터를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-109">The following example demonstrates how to create a data protector that uses a protection class with an option for extra entropy.</span></span> <span data-ttu-id="3c63d-110">기본적으로 <xref:System.Security.Cryptography.DataProtector> 클래스는 데이터를 암호화 하는 용도 속성의 해시를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-110">By default, the <xref:System.Security.Cryptography.DataProtector> class prepends the hash of the purpose properties to the data to be encrypted.</span></span> <span data-ttu-id="3c63d-111">해당 기능을 해제 하 고 추가 엔트로피 옵션을 사용 하 여 데이터 보호자를 호출 하는 경우 추가 엔트로피도 해시 된 용도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-111">You can turn that functionality off and use the hashed purpose as extra entropy when calling a data protector with an extra entropy option.</span></span>  
  
 [!code-csharp[Cryptography.DataProtector#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.dataprotector/cs/class1.cs#1)]
 [!code-vb[Cryptography.DataProtector#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.dataprotector/vb/class1.vb#1)]  
  
 <span data-ttu-id="3c63d-112">다음 예제에서는 사용 하는 간단한 데이터 보호자를 <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> 의 기능을 <xref:System.Security.Cryptography.DataProtector> 클래스.</span><span class="sxs-lookup"><span data-stu-id="3c63d-112">The following example demonstrates a simple data protector that uses the <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> functionality of the <xref:System.Security.Cryptography.DataProtector> class.</span></span>  
  
 [!code-csharp[Cryptography.MemoryProtector#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#1)]
 [!code-vb[Cryptography.MemoryProtector#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataProtector (string applicationName, string primaryPurpose, string[] specificPurposes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string applicationName, string primaryPurpose, string[] specificPurposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.#ctor(System.String,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (applicationName As String, primaryPurpose As String, specificPurposes As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataProtector(System::String ^ applicationName, System::String ^ primaryPurpose, cli::array &lt;System::String ^&gt; ^ specificPurposes);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DataProtector : string * string * string[] -&gt; System.Security.Cryptography.DataProtector" Usage="new System.Security.Cryptography.DataProtector (applicationName, primaryPurpose, specificPurposes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="primaryPurpose" Type="System.String" />
        <Parameter Name="specificPurposes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="applicationName"><span data-ttu-id="3c63d-113">애플리케이션의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-113">The name of the application.</span></span></param>
        <param name="primaryPurpose"><span data-ttu-id="3c63d-114">보호된 데이터의 주요 용도입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-114">The primary purpose for the protected data.</span></span></param>
        <param name="specificPurposes"><span data-ttu-id="3c63d-115">보호되는 데이터의 특정 용도입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-115">The specific purposes for the protected data.</span></span></param>
        <summary><span data-ttu-id="3c63d-116">제공된 응용 프로그램 이름, 주 목적 및 특정 목적을 사용하여 <see cref="T:System.Security.Cryptography.DataProtector" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-116">Creates a new instance of the <see cref="T:System.Security.Cryptography.DataProtector" /> class by using the provided application name, primary purpose, and specific purposes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c63d-117">이 생성자를 설정 합니다 <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, 및 <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-117">This constructor sets the <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, and <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> properties.</span></span> <span data-ttu-id="3c63d-118">이러한 세 속성의 조합을 보호 하는 데이터를 고유 하 게 식별 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-118">The combination of these three properties must uniquely identify the data you are protecting.</span></span> <span data-ttu-id="3c63d-119">데이터를 고유 하 게 식별 되어 있지 않으면 실수로 잘못 된 데이터를 확인할 수 있습니다 또는 사용자에 대 한 기타 데이터를 대체할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-119">If the data is not uniquely identified, you might inadvertently read the wrong data, or other data might be substituted for yours.</span></span> <span data-ttu-id="3c63d-120">기본 및 특정 목적 쌍의 예 "송장" 되며 청구서 번호 ","선물 카드"" 및 "선물 카드 번호", "password" "및" URL 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-120">Examples of primary and specific purpose pairs are "invoice" and invoice number, "gift card" and gift card number, "password" and URL string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c63d-121"><paramref name="applicationName" />가 빈 문자열이거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3c63d-121"><paramref name="applicationName" /> is an empty string or <see langword="null" />.</span></span>  
  
<span data-ttu-id="3c63d-122">또는</span><span class="sxs-lookup"><span data-stu-id="3c63d-122">-or-</span></span> 
 <span data-ttu-id="3c63d-123"><paramref name="primaryPurpose" />가 빈 문자열이거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3c63d-123"><paramref name="primaryPurpose" /> is an empty string or <see langword="null" />.</span></span>  
  
<span data-ttu-id="3c63d-124">또는</span><span class="sxs-lookup"><span data-stu-id="3c63d-124">-or-</span></span> 
 <span data-ttu-id="3c63d-125"><paramref name="specificPurposes" />에 빈 문자열 또는 <see langword="null" />이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="3c63d-125"><paramref name="specificPurposes" /> contains an empty string or <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="protected string ApplicationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ApplicationName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string" Usage="System.Security.Cryptography.DataProtector.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c63d-126">응용 프로그램의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-126">Gets the name of the application.</span></span></summary>
        <value><span data-ttu-id="3c63d-127">애플리케이션의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-127">The name of the application.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DataProtector Create (string providerClass, string applicationName, string primaryPurpose, params string[] specificPurposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DataProtector Create(string providerClass, string applicationName, string primaryPurpose, string[] specificPurposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (providerClass As String, applicationName As String, primaryPurpose As String, ParamArray specificPurposes As String()) As DataProtector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DataProtector ^ Create(System::String ^ providerClass, System::String ^ applicationName, System::String ^ primaryPurpose, ... cli::array &lt;System::String ^&gt; ^ specificPurposes);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string[] -&gt; System.Security.Cryptography.DataProtector" Usage="System.Security.Cryptography.DataProtector.Create (providerClass, applicationName, primaryPurpose, specificPurposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DataProtector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerClass" Type="System.String" />
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="primaryPurpose" Type="System.String" />
        <Parameter Name="specificPurposes" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="providerClass"><span data-ttu-id="3c63d-128">데이터 보호자의 클래스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-128">The class name for the data protector.</span></span></param>
        <param name="applicationName"><span data-ttu-id="3c63d-129">애플리케이션의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-129">The name of the application.</span></span></param>
        <param name="primaryPurpose"><span data-ttu-id="3c63d-130">보호된 데이터의 주요 용도입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-130">The primary purpose for the protected data.</span></span></param>
        <param name="specificPurposes"><span data-ttu-id="3c63d-131">보호되는 데이터의 특정 용도입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-131">The specific purposes for the protected data.</span></span></param>
        <summary><span data-ttu-id="3c63d-132">데이터 보호자의 지정된 클래스 이름, 응용 프로그램 이름, 주 목적 및 특정 목적을 사용하여 데이터 보호자 구현의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-132">Creates an instance of a data protector implementation by using the specified class name of the data protector, the application name, the primary purpose, and the specific purposes.</span></span></summary>
        <returns><span data-ttu-id="3c63d-133">데이터 보호자 구현 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-133">A data protector implementation object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c63d-134"><paramref name="providerClass" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-134"><paramref name="providerClass" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashedPurpose">
      <MemberSignature Language="C#" Value="protected virtual byte[] GetHashedPurpose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] GetHashedPurpose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.GetHashedPurpose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHashedPurpose () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetHashedPurpose();" />
      <MemberSignature Language="F#" Value="abstract member GetHashedPurpose : unit -&gt; byte[]&#xA;override this.GetHashedPurpose : unit -&gt; byte[]" Usage="dataProtector.GetHashedPurpose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c63d-135">생성자로 지정된 속성 값의 해시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-135">Creates a hash of the property values specified by the constructor.</span></span></summary>
        <returns><span data-ttu-id="3c63d-136"><see cref="P:System.Security.Cryptography.DataProtector.ApplicationName" />, <see cref="P:System.Security.Cryptography.DataProtector.PrimaryPurpose" /> 및 <see cref="P:System.Security.Cryptography.DataProtector.SpecificPurposes" /> 속성의 해시를 포함하는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-136">An array of bytes that contain the hash of the <see cref="P:System.Security.Cryptography.DataProtector.ApplicationName" />, <see cref="P:System.Security.Cryptography.DataProtector.PrimaryPurpose" />, and <see cref="P:System.Security.Cryptography.DataProtector.SpecificPurposes" /> properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c63d-137"><xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> 응용 프로그램 이름 및 전체 목적은의 해시를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-137"><xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> computes the hash of the application name and the full purpose.</span></span>  <span data-ttu-id="3c63d-138">전체 목적은 모든 연결 된 <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> 고 <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-138">The full purpose is a concatenation of all the <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> and <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> properties.</span></span>  <span data-ttu-id="3c63d-139">세 부분 각 앞의 길이 사용 하 여 해시를 되돌릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-139">Each of the three parts is prefaced with its length so the hash can be reversed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c63d-140">다음 예제에서는 사용 하는 방법의 <xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> 추가 엔트로피를 사용할 용도 속성을 해시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-140">The following example shows how to use the <xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> method to hash the purpose properties for use as extra entropy.</span></span>  <span data-ttu-id="3c63d-141">더 큰 코드 예제에 대 한의 일부임을 <xref:System.Security.Cryptography.DataProtector> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-141">It is part of a larger code example for the <xref:System.Security.Cryptography.DataProtector> class.</span></span>  
  
 [!code-csharp[Cryptography.DataProtector#3](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.dataprotector/cs/class1.cs#3)]
 [!code-vb[Cryptography.DataProtector#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.dataprotector/vb/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReprotectRequired">
      <MemberSignature Language="C#" Value="public abstract bool IsReprotectRequired (byte[] encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsReprotectRequired(unsigned int8[] encryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.IsReprotectRequired(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsReprotectRequired (encryptedData As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsReprotectRequired(cli::array &lt;System::Byte&gt; ^ encryptedData);" />
      <MemberSignature Language="F#" Value="abstract member IsReprotectRequired : byte[] -&gt; bool" Usage="dataProtector.IsReprotectRequired encryptedData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="3c63d-142">계산할 암호화 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-142">The encrypted data to be evaluated.</span></span></param>
        <summary><span data-ttu-id="3c63d-143">지정된 암호화된 데이터를 다시 암호화해야 하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-143">Determines if re-encryption is required for the specified encrypted data.</span></span></summary>
        <returns><span data-ttu-id="3c63d-144">데이터를 다시 암호화해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-144"><see langword="true" /> if the data must be re-encrypted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependHashedPurposeToPlaintext">
      <MemberSignature Language="C#" Value="protected virtual bool PrependHashedPurposeToPlaintext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrependHashedPurposeToPlaintext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PrependHashedPurposeToPlaintext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool PrependHashedPurposeToPlaintext { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PrependHashedPurposeToPlaintext : bool" Usage="System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c63d-145">암호화하기 전에 해시를 텍스트에 추가할지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-145">Specifies whether the hash is prepended to the text array before encryption.</span></span></summary>
        <value><span data-ttu-id="3c63d-146">항상 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-146">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c63d-147">기본적으로 가정 파생된 클래스의 해시 앞에 추가 됩니다는 합니다 <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, 및 <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> 암호화 되며 앞에 있는 일반 텍스트 속성 확인 및 암호 해독 하는 동안 해시를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-147">By default, it is assumed that derived classes will prepend the hash of the <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, and <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> properties to the plain text before encryption, and will check and verify  the hash during decryption.</span></span>  <span data-ttu-id="3c63d-148">파생된 클래스에서 자체적으로 앞에 추가 데이터를 지정 하려는 경우 (예를 들어 선택적 entropy 값)으로이 속성 수 재정의 되 고 반환 하도록 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-148">If a derived class wants to specify the prepended data on its own (for example as an optional entropy value), this property can be overridden and set to return `false`.</span></span>  <span data-ttu-id="3c63d-149">하는 경우 <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> 는 `false`, <xref:System.Security.Cryptography.DataProtector.Protect%2A> 및 <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> 를 통해 직접 전달 합니다 <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> 및 <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> 바이트 배열을 변경 하지 않고 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-149">If <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> is `false`, <xref:System.Security.Cryptography.DataProtector.Protect%2A> and <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> passes directly through to the <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> and <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> overrides without altering the byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryPurpose">
      <MemberSignature Language="C#" Value="protected string PrimaryPurpose { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrimaryPurpose" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.PrimaryPurpose" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property PrimaryPurpose As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ PrimaryPurpose { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryPurpose : string" Usage="System.Security.Cryptography.DataProtector.PrimaryPurpose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c63d-150">보호된 데이터의 주요 용도를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-150">Gets the primary purpose for the protected data.</span></span></summary>
        <value><span data-ttu-id="3c63d-151">보호된 데이터의 주요 용도입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-151">The primary purpose for the protected data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public byte[] Protect (byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Protect(unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Protect (userData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="member this.Protect : byte[] -&gt; byte[]" Usage="dataProtector.Protect userData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="userData"><span data-ttu-id="3c63d-152">보호할 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-152">The data to be protected.</span></span></param>
        <summary><span data-ttu-id="3c63d-153">지정한 사용자 데이터를 보호합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-153">Protects the specified user data.</span></span></summary>
        <returns><span data-ttu-id="3c63d-154">암호화된 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-154">A byte array that contains the encrypted data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c63d-155"><paramref name="userData" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-155"><paramref name="userData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderProtect">
      <MemberSignature Language="C#" Value="protected abstract byte[] ProviderProtect (byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ProviderProtect(unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.ProviderProtect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ProviderProtect (userData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ProviderProtect(cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member ProviderProtect : byte[] -&gt; byte[]" Usage="dataProtector.ProviderProtect userData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="userData"><span data-ttu-id="3c63d-156">암호화할 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-156">The data to be encrypted.</span></span></param>
        <summary><span data-ttu-id="3c63d-157">파생 클래스에서 기본 클래스의 <see cref="M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])" /> 메서드가 다시 호출되는 대리자 메서드를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-157">Specifies the delegate method in the derived class that the <see cref="M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])" /> method in the base class calls back into.</span></span></summary>
        <returns><span data-ttu-id="3c63d-158">암호화된 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-158">A byte array that contains the encrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c63d-159">다음 예제에서는 <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-159">The following example shows an implementation of the <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> method.</span></span>  <span data-ttu-id="3c63d-160">더 큰 코드 예제에 대 한의 일부임을 <xref:System.Security.Cryptography.DataProtector> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-160">It is part of a larger code example for the <xref:System.Security.Cryptography.DataProtector> class.</span></span>  
  
 [!code-csharp[Cryptography.MemoryProtector#3](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#3)]
 [!code-vb[Cryptography.MemoryProtector#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderUnprotect">
      <MemberSignature Language="C#" Value="protected abstract byte[] ProviderUnprotect (byte[] encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ProviderUnprotect(unsigned int8[] encryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.ProviderUnprotect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ProviderUnprotect (encryptedData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ProviderUnprotect(cli::array &lt;System::Byte&gt; ^ encryptedData);" />
      <MemberSignature Language="F#" Value="abstract member ProviderUnprotect : byte[] -&gt; byte[]" Usage="dataProtector.ProviderUnprotect encryptedData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="3c63d-161">암호를 해독할 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-161">The data to be unencrypted.</span></span></param>
        <summary><span data-ttu-id="3c63d-162">파생 클래스에서 기본 클래스의 <see cref="M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])" /> 메서드가 다시 호출되는 대리자 메서드를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-162">Specifies the delegate method in the derived class that the <see cref="M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])" /> method in the base class calls back into.</span></span></summary>
        <returns><span data-ttu-id="3c63d-163">암호화되지 않은 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-163">The unencrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c63d-164">다음 예제에서는 <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-164">The following example shows an implementation of the <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> method.</span></span>  <span data-ttu-id="3c63d-165">더 큰 코드 예제에 대 한의 일부임을 <xref:System.Security.Cryptography.DataProtector> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-165">It is part of a larger code example for the <xref:System.Security.Cryptography.DataProtector> class.</span></span>  
  
 [!code-csharp[Cryptography.MemoryProtector#4](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#4)]
 [!code-vb[Cryptography.MemoryProtector#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecificPurposes">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IEnumerable&lt;string&gt; SpecificPurposes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; SpecificPurposes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.SpecificPurposes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SpecificPurposes As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ SpecificPurposes { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpecificPurposes : seq&lt;string&gt;" Usage="System.Security.Cryptography.DataProtector.SpecificPurposes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c63d-166">보호되는 데이터의 특정 용도를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-166">Gets the specific purposes for the protected data.</span></span></summary>
        <value><span data-ttu-id="3c63d-167">보호된 데이터에 대한 특정 용도의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-167">A collection of the specific purposes for the protected data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public byte[] Unprotect (byte[] encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Unprotect(unsigned int8[] encryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Unprotect (encryptedData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData);" />
      <MemberSignature Language="F#" Value="member this.Unprotect : byte[] -&gt; byte[]" Usage="dataProtector.Unprotect encryptedData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="3c63d-168">보호 해제할 암호화된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-168">The encrypted data to be unprotected.</span></span></param>
        <summary><span data-ttu-id="3c63d-169">지정한 보호된 데이터를 보호 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-169">Unprotects the specified protected data.</span></span></summary>
        <returns><span data-ttu-id="3c63d-170">일반 텍스트 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-170">A byte array that contains the plain-text data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c63d-171"><paramref name="encryptedData" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3c63d-171"><paramref name="encryptedData" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3c63d-172"><paramref name="encryptedData" />에 잘못된 용도가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="3c63d-172"><paramref name="encryptedData" /> contained an invalid purpose.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>