<Type Name="RijndaelManaged" FullName="System.Security.Cryptography.RijndaelManaged">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abecb72e70d2588c23f96a36567595e2807535c7" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874217" /></Metadata><TypeSignature Language="C#" Value="public sealed class RijndaelManaged : System.Security.Cryptography.Rijndael" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RijndaelManaged extends System.Security.Cryptography.Rijndael" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RijndaelManaged" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RijndaelManaged&#xA;Inherits Rijndael" />
  <TypeSignature Language="C++ CLI" Value="public ref class RijndaelManaged sealed : System::Security::Cryptography::Rijndael" />
  <TypeSignature Language="F#" Value="type RijndaelManaged = class&#xA;    inherit Rijndael" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Rijndael</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="92175-101"><see cref="T:System.Security.Cryptography.Rijndael" /> 알고리즘의 관리되는 버전에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-101">Accesses the managed version of the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span> <span data-ttu-id="92175-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="92175-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks 
 <span data-ttu-id="92175-103">이 알고리즘은 키 길이 128, 192 또는 256 비트; 지원 256 비트를 기본값으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-103">This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits.</span></span> <span data-ttu-id="92175-104">.NET framework에서이 알고리즘은 128, 192 또는 256 비트; 블록 크기를 지원 128 비트를 기본값으로 (<xref:System.Security.Cryptography.Aes>-호환).</span><span class="sxs-lookup"><span data-stu-id="92175-104">In .NET Framework, this algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).</span></span> <span data-ttu-id="92175-105">.NET Core에서 AES와 동일 하 고 128 비트 블록 크기만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-105">In .NET Core, it is the same as AES and supports only a 128-bit block size.</span></span> 
  
 <span data-ttu-id="92175-106">합니다 <xref:System.Security.Cryptography.Rijndael> 알고리즘은 선행 <xref:System.Security.Cryptography.Aes>합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-106">The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>.</span></span> <span data-ttu-id="92175-107">사용 해야 합니다 <xref:System.Security.Cryptography.Aes> 클래스 대신 <xref:System.Security.Cryptography.RijndaelManaged>합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-107">You should use the <xref:System.Security.Cryptography.Aes> class instead of <xref:System.Security.Cryptography.RijndaelManaged>.</span></span> <span data-ttu-id="92175-108">자세한 내용은 항목을 참조 하세요 [Rijndael 간에 차이점이 및 AES](https://go.microsoft.com/fwlink/?LinkId=200932) .NET Security 블로그의 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-108">For more information, see the entry [The Differences Between Rijndael and AES](https://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92175-109">다음 예제에서는 암호화 하 고 사용 하 여 샘플 데이터를 해독 하는 방법의 `RijndaelManaged` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-109">The following example demonstrates how to encrypt and decrypt sample data using the `RijndaelManaged` class.</span></span>  
  
 [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
 [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
 [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="92175-110">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="92175-110">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RijndaelManaged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RijndaelManaged();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92175-111"><see cref="T:System.Security.Cryptography.RijndaelManaged" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RijndaelManaged" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92175-112">다음 예제에서는의 새 인스턴스를 `RijndaelManaged` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-112">The following example creates a new instance of the `RijndaelManaged` class.</span></span>  
  
 [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
 [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
 [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="92175-113">이 클래스가 FIPS 알고르즘과 호환되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="92175-113">This class is not compliant with the FIPS algorithm.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="92175-114">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="92175-114">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public override int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManaged.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BlockSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int with get, set" Usage="System.Security.Cryptography.RijndaelManaged.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92175-115">암호화 작업의 블록 크기(비트 단위)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-115">Gets or sets the block size, in bits, of the cryptographic operation.</span></span></summary>
        <value><span data-ttu-id="92175-116">비트는 암호화 작업의 블록 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-116">The block size, in bits, of the cryptographic operation.</span></span> <span data-ttu-id="92175-117">기본값은 128 비트입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-117">The default is 128 bits.</span></span></value>
        <remarks><format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-118">.NET framework에서는 Rijndael 유효한 블록 크기 값은 128, 192 및 256 비트입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-118">In .NET Framework, the valid block size values for Rijndael are 128, 192 and 256 bits.</span></span> <span data-ttu-id="92175-119">.NET core에서는 Rijndael의 블록 크기는 128 비트 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92175-119">In .NET Core, the block size for Rijndael can only be 128 bits.</span></span> <span data-ttu-id="92175-120">참조 된 <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize?displayProperty=nameWithType> 블록 크기에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-120">See the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize?displayProperty=nameWithType> for more information about block size.</span></span>    
 ]]></format></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="92175-121">대칭 암호 해독기 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="92175-121">Creates a symmetric decryptor object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.CreateDecryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor();" />
      <MemberSignature Language="F#" Value="override this.CreateDecryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rijndaelManaged.CreateDecryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateDecryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rijndaelManaged.CreateDecryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="92175-122">대칭 알고리즘에 사용할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-122">The secret key to be used for the symmetric algorithm.</span></span> <span data-ttu-id="92175-123">키 크기는 128, 192 또는 256 비트여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-123">The key size must be 128, 192, or 256 bits.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="92175-124">대칭 알고리즘에 사용될 IV입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-124">The IV to be used for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="92175-125">지정한 <see cref="T:System.Security.Cryptography.Rijndael" />와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> decryptor 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="92175-125">Creates a symmetric <see cref="T:System.Security.Cryptography.Rijndael" /> decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="92175-126">대칭 <see cref="T:System.Security.Cryptography.Rijndael" /> decryptor 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-126">A symmetric <see cref="T:System.Security.Cryptography.Rijndael" /> decryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-127">이 메서드를 사용 하 여 만든 암호화 된 메시지를 해독 합니다 <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> 동일한 서명을 사용 하 여 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-127">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature.</span></span>  
  
 <span data-ttu-id="92175-128">`rgbkey` 크기는 128, 192 또는 256 비트 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-128">The `rgbkey` size must be 128, 192, or 256 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92175-129">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> 동일한 서명 매개 변수를 사용 하 여 인코딩된 메시지의 암호를 해독 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-129">The following code example demonstrates how to use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> method to decrypt messages encoded with the same signature parameter.</span></span>  
  
 [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
 [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
 [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="92175-130"><paramref name="rgbKey" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="92175-130">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="92175-131">또는</span><span class="sxs-lookup"><span data-stu-id="92175-131">-or-</span></span> 
<span data-ttu-id="92175-132"><paramref name="rgbIV" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="92175-132">The <paramref name="rgbIV" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="92175-133"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값은 <see cref="F:System.Security.Cryptography.CipherMode.ECB" />, <see cref="F:System.Security.Cryptography.CipherMode.CBC" /> 또는 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-133">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is not <see cref="F:System.Security.Cryptography.CipherMode.ECB" />, <see cref="F:System.Security.Cryptography.CipherMode.CBC" />, or <see cref="F:System.Security.Cryptography.CipherMode.CFB" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="92175-134">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="92175-134">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.CreateEncryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor();" />
      <MemberSignature Language="F#" Value="override this.CreateEncryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rijndaelManaged.CreateEncryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateEncryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rijndaelManaged.CreateEncryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="92175-135">대칭 알고리즘에 사용할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-135">The secret key to be used for the symmetric algorithm.</span></span> <span data-ttu-id="92175-136">키 크기는 128, 192 또는 256 비트여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-136">The key size must be 128, 192, or 256 bits.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="92175-137">대칭 알고리즘에 사용될 IV입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-137">The IV to be used for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="92175-138">지정한 <see cref="T:System.Security.Cryptography.Rijndael" />와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> encryptor 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="92175-138">Creates a symmetric <see cref="T:System.Security.Cryptography.Rijndael" /> encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="92175-139">대칭 <see cref="T:System.Security.Cryptography.Rijndael" /> encryptor 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-139">A symmetric <see cref="T:System.Security.Cryptography.Rijndael" /> encryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-140">사용 된 <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> 이 메서드의 결과 암호 해독에 동일한 서명을 사용 하 여 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-140">Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.</span></span>  
  
 <span data-ttu-id="92175-141">`rgbkey` 크기는 128, 192 또는 256 비트 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-141">The `rgbkey` size must be 128, 192, or 256 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92175-142">다음 코드 예제를 사용 하 여 메시지를 암호화 하는 방법에 설명 합니다 `CreateEncryptor` 메서드.</span><span class="sxs-lookup"><span data-stu-id="92175-142">The following code examples demonstrates how to encrypt a message using the `CreateEncryptor` method.</span></span>  
  
 [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
 [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
 [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="92175-143"><paramref name="rgbKey" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="92175-143">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="92175-144">또는</span><span class="sxs-lookup"><span data-stu-id="92175-144">-or-</span></span> 
<span data-ttu-id="92175-145"><paramref name="rgbIV" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="92175-145">The <paramref name="rgbIV" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="92175-146"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값은 <see cref="F:System.Security.Cryptography.CipherMode.ECB" />, <see cref="F:System.Security.Cryptography.CipherMode.CBC" /> 또는 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-146">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is not <see cref="F:System.Security.Cryptography.CipherMode.ECB" />, <see cref="F:System.Security.Cryptography.CipherMode.CBC" />, or <see cref="F:System.Security.Cryptography.CipherMode.CFB" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="92175-147">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="92175-147">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rijndaelManaged.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public override void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateIV();" />
      <MemberSignature Language="F#" Value="override this.GenerateIV : unit -&gt; unit" Usage="rijndaelManaged.GenerateIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92175-148">알고리즘에 사용할 임의의 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-148">Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to be used for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-149">지정 되지 않은 경우 임의 IV를 생성 하려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-149">Use this method to generate a random IV when none is specified.</span></span>  
  
   
  
## Examples  
 [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
 [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
 [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="92175-150">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="92175-150">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManaged.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey();" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : unit -&gt; unit" Usage="rijndaelManaged.GenerateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92175-151">알고리즘에 사용할 임의의 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-151">Generates a random <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> to be used for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-152">지정 되지 않은 경우 임의 키를 생성 하려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-152">Use this method to generate a random key when none is specified.</span></span>  
  
   
  
## Examples  
 [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
 [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
 [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="92175-153">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="92175-153">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IV">
      <MemberSignature Language="C#" Value="public override byte[] IV { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] IV" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManaged.IV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IV As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ IV { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IV : byte[] with get, set" Usage="System.Security.Cryptography.RijndaelManaged.IV" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92175-154">대칭 알고리즘에 대한 IV(초기화 벡터)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-154">Gets or sets the initialization vector (IV) to use for the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="92175-155">초기화 벡터 (IV) 대칭 알고리즘에 사용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-155">The initialization vector (IV) to use for the symmetric algorithm.</span></span></value>
        <remarks><format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-156">참조 된 <xref:System.Security.Cryptography.SymmetricAlgorithm.IV?displayProperty=nameWithType> 초기화 벡터에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-156">See the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV?displayProperty=nameWithType> for more information about initialization vectors.</span></span>  
 ]]></format></remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManaged.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.RijndaelManaged.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92175-157">대칭 알고리즘에 사용되는 비밀 키를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-157">Gets or sets the secret key used for the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="92175-158">대칭 알고리즘에 사용 되는 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-158">The secret key used for the symmetric algorithm.</span></span></value>
        <remarks><format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-159">참조 된 <xref:System.Security.Cryptography.SymmetricAlgorithm.Key?displayProperty=nameWithType> 비밀 키에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-159">See the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key?displayProperty=nameWithType> for more information about the secret key.</span></span>  
 ]]></format></remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManaged.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.RijndaelManaged.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92175-160">대칭 알고리즘에 사용되는 비밀 키의 크기(비트 단위)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-160">Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="92175-161">대칭 알고리즘에 사용 되는 비밀 키의 비트에서 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-161">The size, in bits, of the secret key used for the symmetric algorithm.</span></span> <span data-ttu-id="92175-162">기본값은 256 비트입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-162">The default is 256 bits.</span></span></value>
        <remarks><format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-163">Rijndael에 대 한 유효한 키 크기는 128, 192 및 256 비트입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-163">The valid key sizes for Rijndael are 128, 192 and 256 bits.</span></span>  
 ]]></format></remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManaged.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.RijndaelManaged.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92175-164">대칭 알고리즘에서 지원하는 키 크기(비트 단위)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="92175-164">Gets the key sizes, in bits, that are supported by the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="92175-165">대칭 알고리즘에서 지원 되는 비트의 키 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-165">The key sizes, in bits, that are supported by the symmetric algorithm.</span></span></value>
        <remarks><format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-166">Rijndael에 대 한 유효한 키 크기는 128, 192 및 256 비트입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-166">The valid key sizes for Rijndael are 128, 192 and 256 bits.</span></span>  
 ]]></format></remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManaged.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.RijndaelManaged.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92175-167">대칭 알고리즘의 작업 모드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-167">Gets or sets the mode for operation of the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="92175-168">대칭 알고리즘의 작업 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-168">The mode for operation of the symmetric algorithm.</span></span> <span data-ttu-id="92175-169">기본값은 <see cref="F:System.Security.Cryptography.CipherMode.CBC" />입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-169">The default is <see cref="F:System.Security.Cryptography.CipherMode.CBC" /></span></span></value>
        <remarks><format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-170">참조 된 <xref:System.Security.Cryptography.CipherMode> 특정 모드에 대 한 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-170">See the <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
 ]]></format></remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManaged.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.RijndaelManaged.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92175-171">대칭 알고리즘에 사용된 패딩 모드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92175-171">Gets or sets the padding mode used in the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="92175-172">대칭 알고리즘에 사용된 패딩 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-172">The padding mode used in the symmetric algorithm.</span></span> <span data-ttu-id="92175-173">기본값은 <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-173">The default is <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</span></span></value>
        <remarks><format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92175-174">참조 된 <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding?displayProperty=nameWithType> 안쪽 여백에 대 한 자세한 정보에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="92175-174">See the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding?displayProperty=nameWithType> property for more information about padding.</span></span>  
 ]]></format></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
