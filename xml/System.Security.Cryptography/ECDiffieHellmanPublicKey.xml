<Type Name="ECDiffieHellmanPublicKey" FullName="System.Security.Cryptography.ECDiffieHellmanPublicKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e848b9b73a772a96c4a0d8d4c32f2a20de00c8ee" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58709971" /></Metadata><TypeSignature Language="C#" Value="public abstract class ECDiffieHellmanPublicKey : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ECDiffieHellmanPublicKey extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ECDiffieHellmanPublicKey&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDiffieHellmanPublicKey abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanPublicKey = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d5f1a-101">모든 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 구현에서 상속해야 하는 추상 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-101">Provides an abstract base class from which all <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> implementations must inherit.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ECDiffieHellmanPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ECDiffieHellmanPublicKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f1a-102"><see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-102">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ECDiffieHellmanPublicKey (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ECDiffieHellmanPublicKey(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanPublicKey : byte[] -&gt; System.Security.Cryptography.ECDiffieHellmanPublicKey" Usage="new System.Security.Cryptography.ECDiffieHellmanPublicKey keyBlob" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBlob"><span data-ttu-id="d5f1a-103"><see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 개체를 나타내는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-103">A byte array that represents an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> object.</span></span></param>
        <summary><span data-ttu-id="d5f1a-104"><see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f1a-105">파생 된 클래스에서이 생성자를 호출 합니다 <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-105">This constructor is called by classes that derive from the <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> class.</span></span> <span data-ttu-id="d5f1a-106"><xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey> 클래스는 현재 지원 되는 유일한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-106">The <xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey> class is the only currently supported implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5f1a-107"><paramref name="keyBlob" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-107"><paramref name="keyBlob" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5f1a-108"><see cref="T:System.Security.Cryptography.ECDiffieHellman" /> 클래스에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-108">Releases the resources used by the <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eCDiffieHellmanPublicKey.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f1a-109"><see cref="T:System.Security.Cryptography.ECDiffieHellman" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-109">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f1a-110"><xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A> 사용을 마치면 <xref:System.Security.Cryptography.ECDiffieHellman>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-110">Call <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A> when you are finished using the <xref:System.Security.Cryptography.ECDiffieHellman>.</span></span> <span data-ttu-id="d5f1a-111"><xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A> 메서드를 사용하면 <xref:System.Security.Cryptography.ECDiffieHellman>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-111">The <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A> method leaves the <xref:System.Security.Cryptography.ECDiffieHellman> in an unusable state.</span></span> <span data-ttu-id="d5f1a-112">호출한 후 <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Security.Cryptography.ECDiffieHellman> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Security.Cryptography.ECDiffieHellman> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-112">After calling <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A>, you must release all references to the <xref:System.Security.Cryptography.ECDiffieHellman> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ECDiffieHellman> was occupying.</span></span>  
  
 <span data-ttu-id="d5f1a-113">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-113">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eCDiffieHellmanPublicKey.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d5f1a-114">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-114"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d5f1a-115"><see cref="T:System.Security.Cryptography.ECDiffieHellman" /> 클래스에 사용되는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-115">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f1a-116">이 메서드는 두 가지 시나리오에서 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-116">This method executes in two distinct scenarios:</span></span>  
  
-   <span data-ttu-id="d5f1a-117">하는 경우 `disposing` equals `true`는 메서드가 호출 된 직접 또는 간접적으로 사용자의 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-117">If `disposing` equals `true`, the method has been called directly or indirectly by a user's code.</span></span> <span data-ttu-id="d5f1a-118">관리 하 고 관리 되지 않는 리소스를 삭제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-118">Managed and unmanaged resources can be disposed.</span></span>  
  
-   <span data-ttu-id="d5f1a-119">하는 경우 `disposing` equals `false`, 메서드가 종료자 내부에서 런타임에 의해 호출 된 및 관리 되는 리소스를 참조 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-119">If `disposing` equals `false`, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources.</span></span> <span data-ttu-id="d5f1a-120">관리 되지 않는 리소스만 삭제 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-120">Only unmanaged resources can be disposed.</span></span>  
  
 <span data-ttu-id="d5f1a-121">개체가 생성 하는 관리 및 관리 되지 않는 리소스에 대 한 정리 코드를 제공 해야 할 경우이 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-121">If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.</span></span>  
  
 <span data-ttu-id="d5f1a-122">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-122">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d5f1a-123">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-123">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d5f1a-124"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-124"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d5f1a-125">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-125">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> references.</span></span> <span data-ttu-id="d5f1a-126">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-126">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d5f1a-127">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-127">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d5f1a-128">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-128">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d5f1a-129">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-129">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="d5f1a-130">에 대 한 자세한 내용은 <see langword="Dispose" /> 하 고 <see cref="M:System.Object.Finalize" />를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-130">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ECParameters ExportExplicitParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportExplicitParameters () As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ECParameters ExportExplicitParameters();" />
      <MemberSignature Language="F#" Value="abstract member ExportExplicitParameters : unit -&gt; System.Security.Cryptography.ECParameters&#xA;override this.ExportExplicitParameters : unit -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanPublicKey.ExportExplicitParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f1a-131">파생 클래스에서 재정의하는 경우 <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 대해 명시적 <see cref="T:System.Security.Cryptography.ECParameters" />를 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-131">When overridden in a derived class, exports the explicit <see cref="T:System.Security.Cryptography.ECParameters" /> for an <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span></span></summary>
        <returns><span data-ttu-id="d5f1a-132">이 키에 대한 곡선의 점을 나타내는 개체입니다(명시적 곡선 형식 사용).</span><span class="sxs-lookup"><span data-stu-id="d5f1a-132">An object that represents the point on the curve for this key, using the explicit curve format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5f1a-133">파생 클래스가 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-133">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ECParameters ExportParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportParameters () As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ECParameters ExportParameters();" />
      <MemberSignature Language="F#" Value="abstract member ExportParameters : unit -&gt; System.Security.Cryptography.ECParameters&#xA;override this.ExportParameters : unit -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanPublicKey.ExportParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f1a-134">파생 클래스에서 재정의하는 경우 <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 대해 명명된/명시적 <see cref="T:System.Security.Cryptography.ECParameters" />를 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-134">When overridden in a derived class, exports the named or explicit <see cref="T:System.Security.Cryptography.ECParameters" /> for an <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span></span></summary>
        <returns><span data-ttu-id="d5f1a-135">이 키에 대한 곡선의 점을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-135">An object that represents the point on the curve for this key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5f1a-136">파생 클래스가 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-136">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public virtual byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="abstract member ToByteArray : unit -&gt; byte[]&#xA;override this.ToByteArray : unit -&gt; byte[]" Usage="eCDiffieHellmanPublicKey.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f1a-137"><see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 키 BLOB을 바이트 배열로 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-137">Serializes the <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> key BLOB to a byte array.</span></span></summary>
        <returns><span data-ttu-id="d5f1a-138">serialize된 ECDH(Elliptic Curve Diffie-Hellman) 공개 키가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-138">A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public virtual string ToXmlString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToXmlString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXmlString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToXmlString();" />
      <MemberSignature Language="F#" Value="abstract member ToXmlString : unit -&gt; string&#xA;override this.ToXmlString : unit -&gt; string" Usage="eCDiffieHellmanPublicKey.ToXmlString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f1a-139"><see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 공개 키를 XML 문자열로 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-139">Serializes the <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> public key to an XML string.</span></span></summary>
        <returns><span data-ttu-id="d5f1a-140">serialize된 ECDH(Elliptic Curve Diffie-Hellman) 공개 키가 들어 있는 XML 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5f1a-140">An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>