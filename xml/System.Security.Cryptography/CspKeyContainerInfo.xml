<Type Name="CspKeyContainerInfo" FullName="System.Security.Cryptography.CspKeyContainerInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf74349c66eab68018afecce9e7a3af3b6089a3c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58711806" /></Metadata><TypeSignature Language="C#" Value="public sealed class CspKeyContainerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspKeyContainerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspKeyContainerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspKeyContainerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspKeyContainerInfo sealed" />
  <TypeSignature Language="F#" Value="type CspKeyContainerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9466c-101">암호화 키 쌍에 대한 추가 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-101">Provides additional information about a cryptographic key pair.</span></span> <span data-ttu-id="9466c-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9466c-103">이 클래스를 사용 하 여 키 쌍을 키 컨테이너 이름 또는 키 번호 같은 추가 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-103">Use this class to obtain additional information about a key pair, such as the key container name or the key number.</span></span>  
  
 <span data-ttu-id="9466c-104">임의 키를 생성 하는 있는 경우에는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 또는 <xref:System.Security.Cryptography.DSACryptoServiceProvider>, 키 컨테이너는 키를 사용 하는 메서드를 호출할 때까지 생성 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-104">In cases where a random key is generated by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> or the <xref:System.Security.Cryptography.DSACryptoServiceProvider>, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="9466c-105">일부 속성을 <xref:System.Security.Cryptography.CspKeyContainerInfo> 클래스에서 throw 한 <xref:System.Security.Cryptography.CryptographicException> 키 컨테이너를 만들지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="9466c-105">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> class will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9466c-106">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-106">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspKeyContainerInfo (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspKeyContainerInfo(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspKeyContainerInfo : System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.CspKeyContainerInfo" Usage="new System.Security.Cryptography.CspKeyContainerInfo parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="9466c-107">키에 대한 정보를 제공하는 <see cref="T:System.Security.Cryptography.CspParameters" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-107">A <see cref="T:System.Security.Cryptography.CspParameters" /> object that provides information about the key.</span></span></param>
        <summary><span data-ttu-id="9466c-108">지정된 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> class using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-109">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-109">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessible">
      <MemberSignature Language="C#" Value="public bool Accessible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Accessible" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Accessible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Accessible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Accessible : bool" Usage="System.Security.Cryptography.CspKeyContainerInfo.Accessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-110">키 컨테이너에 있는 키에 액세스할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-110">Gets a value indicating whether a key in a key container is accessible.</span></span></summary>
        <value><span data-ttu-id="9466c-111">키에 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-111"><see langword="true" /> if the key is accessible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-112">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-112">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9466c-113">해당 키 형식이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-113">The key type is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity" Usage="System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-114">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-114">Gets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></summary>
        <value><span data-ttu-id="9466c-115">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-115">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9466c-116">사용 하 여는 <xref:System.Security.Cryptography.CspKeyContainerInfo> 검색할 속성의 <xref:System.Security.AccessControl.CryptoKeySecurity> 임의 액세스 제어의 생성을 관리 하는 개체 목록 (DACL) 및 시스템 액세스 제어를 컨테이너에 대 한 (SACL)를 목록.</span><span class="sxs-lookup"><span data-stu-id="9466c-116">Use the <xref:System.Security.Cryptography.CspKeyContainerInfo> property to retrieve the  <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9466c-117">해당 키 형식이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-117">The key type is not supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9466c-118">암호화 서비스 공급자를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-118">The cryptographic service provider cannot be found.</span></span>  
  
<span data-ttu-id="9466c-119">또는</span><span class="sxs-lookup"><span data-stu-id="9466c-119">-or-</span></span> 
<span data-ttu-id="9466c-120">키 컨테이너를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-120">The key container was not found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="9466c-121">변경 및 보기에 대 한 액세스는이 키 컨테이너와 연결 된 목록을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-121">for  changing and viewing the access control list associated with this key container.</span></span>  
  
<span data-ttu-id="9466c-122">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-122">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span>  
  
<span data-ttu-id="9466c-123">연관 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl" />, <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl" />합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-123">Associated enumerations: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl" />, <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Exportable">
      <MemberSignature Language="C#" Value="public bool Exportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exportable" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Exportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exportable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exportable : bool" Usage="System.Security.Cryptography.CspKeyContainerInfo.Exportable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-124">키 컨테이너에서 키를 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-124">Gets a value indicating whether a key can be exported from a key container.</span></span></summary>
        <value><span data-ttu-id="9466c-125">키를 내보낼 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-125"><see langword="true" /> if the key can be exported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-126">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-126">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9466c-127">해당 키 형식이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-127">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9466c-128">암호화 서비스 공급자를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-128">The cryptographic service provider cannot be found.</span></span>  
  
<span data-ttu-id="9466c-129">또는</span><span class="sxs-lookup"><span data-stu-id="9466c-129">-or-</span></span> 
<span data-ttu-id="9466c-130">키 컨테이너를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-130">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HardwareDevice">
      <MemberSignature Language="C#" Value="public bool HardwareDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HardwareDevice" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardwareDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HardwareDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HardwareDevice : bool" Usage="System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-131">키가 하드웨어 키인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-131">Gets a value indicating whether a key is a hardware key.</span></span></summary>
        <value><span data-ttu-id="9466c-132">키가 하드웨어 키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-132"><see langword="true" /> if the key is a hardware key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-133">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-133">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9466c-134">암호화 서비스 공급자를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-134">The cryptographic service provider cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyContainerName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyContainerName : string" Usage="System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-135">키 컨테이너 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-135">Gets a key container name.</span></span></summary>
        <value><span data-ttu-id="9466c-136">키 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-136">The key container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-137">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-137">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.KeyNumber KeyNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.KeyNumber KeyNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyNumber As KeyNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::KeyNumber KeyNumber { System::Security::Cryptography::KeyNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyNumber : System.Security.Cryptography.KeyNumber" Usage="System.Security.Cryptography.CspKeyContainerInfo.KeyNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-138">비대칭 키가 서명 키로 만들어졌는지 또는 교환 키로 만들어졌는지를 설명하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-138">Gets a value that describes whether an asymmetric key was created as a signature key or an exchange key.</span></span></summary>
        <value><span data-ttu-id="9466c-139">비대칭 키가 서명 키로 만들어졌는지 또는 교환 키로 만들어졌는지를 설명하는 <see cref="T:System.Security.Cryptography.KeyNumber" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-139">One of the <see cref="T:System.Security.Cryptography.KeyNumber" /> values that describes whether an asymmetric key was created as a signature key or an exchange key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9466c-140">값을 <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> 속성에서 파생 됩니다는 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 필드를 <xref:System.Security.Cryptography.CspParameters> 초기화에 사용 된 개체는 <xref:System.Security.Cryptography.CspKeyContainerInfo> 개체.</span><span class="sxs-lookup"><span data-stu-id="9466c-140">The value of the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property is derived from the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the <xref:System.Security.Cryptography.CspParameters> object that was used to initialize the <xref:System.Security.Cryptography.CspKeyContainerInfo> object.</span></span>  
  
 <span data-ttu-id="9466c-141">exchange 키는 안전 하 게 저장 하 고 다른 사용자와 교환할 수 있도록 세션 키를 암호화 하는 데 사용 되는 비대칭 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-141">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="9466c-142"><xref:System.Security.Cryptography.KeyNumber.Exchange> 값 교환 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-142">The <xref:System.Security.Cryptography.KeyNumber.Exchange> value specifies an exchange key.</span></span>  <span data-ttu-id="9466c-143">이 값에 해당 하는 `AT_KEYEXCHANGE` 에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-143">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="9466c-144">서명 키가 파일 또는 메시지 (디지털 서명된) 인증에 사용 되는 비대칭 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-144">A signature key is an asymmetric key pair used for authenticating (digitally signed) messages or files.</span></span>  <span data-ttu-id="9466c-145"><xref:System.Security.Cryptography.KeyNumber.Signature> 값 서명 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-145">The <xref:System.Security.Cryptography.KeyNumber.Signature> value specifies a signature key.</span></span>  <span data-ttu-id="9466c-146">이 값에 해당 하는 `AT_SIGNATURE` CAPI에 사용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-146">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9466c-147">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-147">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineKeyStore">
      <MemberSignature Language="C#" Value="public bool MachineKeyStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MachineKeyStore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineKeyStore : bool" Usage="System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-148">키가 컴퓨터 키 집합에 속한 키인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-148">Gets a value indicating whether a key is from a machine key set.</span></span></summary>
        <value><span data-ttu-id="9466c-149">키가 컴퓨터 키 집합에 속한 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-149"><see langword="true" /> if the key is from the machine key set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-150">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-150">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protected">
      <MemberSignature Language="C#" Value="public bool Protected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Protected" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Protected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Protected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Protected : bool" Usage="System.Security.Cryptography.CspKeyContainerInfo.Protected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-151">키 쌍이 보호되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-151">Gets a value indicating whether a key pair is protected.</span></span></summary>
        <value><span data-ttu-id="9466c-152">키 쌍이 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-152"><see langword="true" /> if the key pair is protected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-153">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-153">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9466c-154">해당 키 형식이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-154">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9466c-155">암호화 서비스 공급자를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-155">The cryptographic service provider cannot be found.</span></span>  
  
<span data-ttu-id="9466c-156">또는</span><span class="sxs-lookup"><span data-stu-id="9466c-156">-or-</span></span> 
<span data-ttu-id="9466c-157">키 컨테이너를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-157">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string" Usage="System.Security.Cryptography.CspKeyContainerInfo.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-158">키의 공급자 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-158">Gets the provider name of a key.</span></span></summary>
        <value><span data-ttu-id="9466c-159">공급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-159">The provider name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9466c-160">이 속성의 키를 생성 하는 암호화 서비스 공급자를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-160">This property specifies the cryptographic service provider that created the key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9466c-161">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-161">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProviderType { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderType : int" Usage="System.Security.Cryptography.CspKeyContainerInfo.ProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-162">키의 공급자 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-162">Gets the provider type of a key.</span></span></summary>
        <value><span data-ttu-id="9466c-163">공급자 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-163">The provider type.</span></span> <span data-ttu-id="9466c-164">기본값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-164">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9466c-165">유효한 값은 키를 만드는 데 암호화 서비스 공급자에 의해 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-165">Valid values are determined by the cryptographic service provider used to create the key.</span></span> <span data-ttu-id="9466c-166">암호화 서비스 공급자는 일반적으로 그룹 또는 데이터 형식 및 프로세스의 고유한 집합이 각 패밀리로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-166">Cryptographic service providers are generally organized into groups or families, each of which has its own set of data formats and processes.</span></span> <span data-ttu-id="9466c-167">RC2 블록 암호화와 같은 동일한 알고리즘을 사용 하는 두 패밀리는 종종 다른 패딩 체계, 다른 키 길이 및 다른 기본 모드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-167">Two families that use the same algorithm, such as the RC2 block cipher, often use different padding schemes, different key lengths, and different default modes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9466c-168">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-168">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomlyGenerated">
      <MemberSignature Language="C#" Value="public bool RandomlyGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RandomlyGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RandomlyGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RandomlyGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RandomlyGenerated : bool" Usage="System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-169">키 컨테이너가 관리되는 암호화 클래스에서 무작위로 생성되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-169">Gets a value indicating whether a key container was randomly generated by a managed cryptography class.</span></span></summary>
        <value><span data-ttu-id="9466c-170">키 컨테이너가 무작위로 생성되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-170"><see langword="true" /> if the key container was randomly generated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9466c-171">일반적으로 임의로 생성 된 키 컨테이너를 만들면 키 컨테이너 이름은 "CLR {`guid value`}."</span><span class="sxs-lookup"><span data-stu-id="9466c-171">Usually, when a randomly generated key container is created, the key container is named "CLR{`guid value`}."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9466c-172">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-172">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Removable">
      <MemberSignature Language="C#" Value="public bool Removable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Removable" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Removable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Removable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Removable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Removable : bool" Usage="System.Security.Cryptography.CspKeyContainerInfo.Removable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-173">키 컨테이너에서 키를 제거할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-173">Gets a value indicating whether a key can be removed from a key container.</span></span></summary>
        <value><span data-ttu-id="9466c-174">키를 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-174"><see langword="true" /> if the key is removable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-175">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-175">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9466c-176">CSP(암호화 서비스 공급자))를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-176">The cryptographic service provider (CSP) was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UniqueKeyContainerName">
      <MemberSignature Language="C#" Value="public string UniqueKeyContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueKeyContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniqueKeyContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniqueKeyContainerName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueKeyContainerName : string" Usage="System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9466c-177">고유 키 컨테이너 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-177">Gets a unique key container name.</span></span></summary>
        <value><span data-ttu-id="9466c-178">고유 키 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-178">The unique key container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9466c-179">다음 코드 예제는 키 컨테이너를 만들고 해당 컨테이너에 대 한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9466c-179">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9466c-180">해당 키 형식이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-180">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9466c-181">암호화 서비스 공급자를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-181">The cryptographic service provider cannot be found.</span></span>  
  
<span data-ttu-id="9466c-182">또는</span><span class="sxs-lookup"><span data-stu-id="9466c-182">-or-</span></span> 
<span data-ttu-id="9466c-183">키 컨테이너를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9466c-183">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>