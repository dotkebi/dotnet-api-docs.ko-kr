<Type Name="RC2CryptoServiceProvider" FullName="System.Security.Cryptography.RC2CryptoServiceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9723508cbd462a1c45137514580392b30b4f675d" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58744435" /></Metadata><TypeSignature Language="C#" Value="public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RC2CryptoServiceProvider extends System.Security.Cryptography.RC2" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RC2CryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RC2CryptoServiceProvider&#xA;Inherits RC2" />
  <TypeSignature Language="C++ CLI" Value="public ref class RC2CryptoServiceProvider sealed : System::Security::Cryptography::RC2" />
  <TypeSignature Language="F#" Value="type RC2CryptoServiceProvider = class&#xA;    inherit RC2" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RC2</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eaa91-101">래퍼 개체를 정의하여 <see cref="T:System.Security.Cryptography.RC2" /> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span></span> <span data-ttu-id="eaa91-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa91-103"><xref:System.Security.Cryptography.RC2CryptoServiceProvider> 구현은 8 비트 단위로 증가 40 비트에서 128 비트 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-103">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.</span></span>  
  
 <span data-ttu-id="eaa91-104"><xref:System.Security.Cryptography.RC2CryptoServiceProvider> 개체는 블록 암호 암호화 하 고 8 바이트 블록 단위로 데이터를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-104">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.</span></span>  <span data-ttu-id="eaa91-105">이 클래스는 8 바이트 보다 작은 경우 데이터의 마지막 블록을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-105">This class pads the final block of data if it is less than 8 bytes.</span></span>  <span data-ttu-id="eaa91-106">따라서 암호화 된 데이터의 길이 원래의 일반 텍스트로 보다 클 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-106">As a result of this padding, the length of encrypted data could be greater than the original plaintext.</span></span>  
  
 <span data-ttu-id="eaa91-107"><xref:System.Security.Cryptography.RC2CryptoServiceProvider> 개체 솔트를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-107">Note that the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object does not use salt.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eaa91-108">고급 암호화 표준 (AES)을 최신 대칭 암호화 알고리즘을 사용할 수 있는 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-108">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="eaa91-109">사용 하는 것이 좋습니다 합니다 <xref:System.Security.Cryptography.Aes> 알고리즘과 대신 파생된 클래스는 <xref:System.Security.Cryptography.RC2CryptoServiceProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-109">Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> class.</span></span> <span data-ttu-id="eaa91-110">사용 하 여 <xref:System.Security.Cryptography.RC2CryptoServiceProvider> 레거시 응용 프로그램 및 데이터를 사용 하 여 호환성을 위해서만 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-110">Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> only for compatibility with legacy applications and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa91-111">다음 코드 예제에서는 암호화 한 다음 문자열을 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-111">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-112">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-112">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RC2CryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RC2CryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eaa91-113"><see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaa91-114">다음 코드 예제에서는 암호화 한 다음 문자열을 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-114">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eaa91-115">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-115">The cryptographic service provider (CSP) cannot be acquired.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eaa91-116">비규격 FIPS 알고리즘을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-116">A non-compliant FIPS algorithm was found.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-117">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-117">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecryptor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eaa91-118">대칭 암호 해독기 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-118">Creates a symmetric decryptor object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateDecryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rC2CryptoServiceProvider.CreateDecryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="eaa91-119">대칭 알고리즘에 사용할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-119">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="eaa91-120">대칭 알고리즘에 사용할 초기화 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-120">The initialization vector to use for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="eaa91-121">지정된 키(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 <see cref="T:System.Security.Cryptography.RC2" /> 암호 해독기 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-121">Creates a symmetric <see cref="T:System.Security.Cryptography.RC2" /> decryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="eaa91-122">대칭 <see cref="T:System.Security.Cryptography.RC2" /> decryptor 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-122">A symmetric <see cref="T:System.Security.Cryptography.RC2" /> decryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa91-123">이 메서드는 사용 하 여 만든 암호화 된 메시지를 암호 해독에 사용 된 <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> 동일한 매개 변수를 사용 하 여 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-123">This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa91-124">다음 코드 예제에서는 암호화 한 다음 문자열을 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-124">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eaa91-125"><see cref="F:System.Security.Cryptography.CipherMode.OFB" /> 암호화 모드가 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-125">An <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> cipher mode was used.</span></span>  
  
<span data-ttu-id="eaa91-126">또는</span><span class="sxs-lookup"><span data-stu-id="eaa91-126">-or-</span></span> 
<span data-ttu-id="eaa91-127">사용된 <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> 암호화 모드의 피드백 크기가 8비트가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-127">A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> cipher mode with a feedback size other than 8 bits was used.</span></span>  
  
<span data-ttu-id="eaa91-128">또는</span><span class="sxs-lookup"><span data-stu-id="eaa91-128">-or-</span></span> 
<span data-ttu-id="eaa91-129">잘못된 키 크기가 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-129">An invalid key size was used.</span></span>  
  
<span data-ttu-id="eaa91-130">또는</span><span class="sxs-lookup"><span data-stu-id="eaa91-130">-or-</span></span> 
<span data-ttu-id="eaa91-131">알고리즘 키 크기를 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-131">The algorithm key size was not available.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-132">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-132">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eaa91-133">대칭 암호기 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-133">Creates a symmetric encryptor object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateEncryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rC2CryptoServiceProvider.CreateEncryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="eaa91-134">대칭 알고리즘에 사용할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-134">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="eaa91-135">대칭 알고리즘에 사용할 초기화 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-135">The initialization vector to use for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="eaa91-136">지정된 키(<see cref="T:System.Security.Cryptography.RC2" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> encryptor 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-136">Creates a symmetric <see cref="T:System.Security.Cryptography.RC2" /> encryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="eaa91-137">대칭 <see cref="T:System.Security.Cryptography.RC2" /> encryptor 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-137">A symmetric <see cref="T:System.Security.Cryptography.RC2" /> encryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa91-138">사용 된 <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> 이 메서드의 결과 암호 해독에 동일한 매개 변수를 사용 하 여 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-138">Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa91-139">다음 코드 예제에서는 암호화 한 다음 문자열을 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-139">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eaa91-140"><see cref="F:System.Security.Cryptography.CipherMode.OFB" /> 암호화 모드가 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-140">An <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> cipher mode was used.</span></span>  
  
<span data-ttu-id="eaa91-141">또는</span><span class="sxs-lookup"><span data-stu-id="eaa91-141">-or-</span></span> 
<span data-ttu-id="eaa91-142">사용된 <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> 암호화 모드의 피드백 크기가 8비트가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-142">A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> cipher mode with a feedback size other than 8 bits was used.</span></span>  
  
<span data-ttu-id="eaa91-143">또는</span><span class="sxs-lookup"><span data-stu-id="eaa91-143">-or-</span></span> 
<span data-ttu-id="eaa91-144">잘못된 키 크기가 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-144">An invalid key size was used.</span></span>  
  
<span data-ttu-id="eaa91-145">또는</span><span class="sxs-lookup"><span data-stu-id="eaa91-145">-or-</span></span> 
<span data-ttu-id="eaa91-146">알고리즘 키 크기를 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-146">The algorithm key size was not available.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-147">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-147">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EffectiveKeySize">
      <MemberSignature Language="C#" Value="public override int EffectiveKeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EffectiveKeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EffectiveKeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EffectiveKeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EffectiveKeySize : int with get, set" Usage="System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eaa91-148"><see cref="T:System.Security.Cryptography.RC2" /> 알고리즘에서 사용하는 비밀 키의 효과적인 크기(비트 단위)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-148">Gets or sets the effective size, in bits, of the secret key used by the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span></span></summary>
        <value><span data-ttu-id="eaa91-149"><see cref="T:System.Security.Cryptography.RC2" /> 알고리즘에서 사용하는 효과적인 키 크기(비트 단위)입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-149">The effective key size, in bits, used by the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="eaa91-150"><see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /> 속성에 설정된 값이 <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /> 속성과 다른 경우</span><span class="sxs-lookup"><span data-stu-id="eaa91-150">The <see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /> property was set to a value other than the <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /> property.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-151">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-151">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public override void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateIV();" />
      <MemberSignature Language="F#" Value="override this.GenerateIV : unit -&gt; unit" Usage="rC2CryptoServiceProvider.GenerateIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eaa91-152">알고리즘에 사용할 임의의 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-152">Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa91-153">이 메서드를 사용 하 여 임의 생성 <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> 경우 아무 것도 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-153">Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa91-154">다음 코드 예제에서는 암호화 한 다음 문자열을 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-154">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-155">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-155">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey();" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : unit -&gt; unit" Usage="rC2CryptoServiceProvider.GenerateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eaa91-156">알고리즘에 사용할 임의의 키(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-156">Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) to be used for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa91-157">지정 되지 않은 경우 임의 키를 생성 하려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-157">Use this method to generate a random key when none is specified.</span></span>  
  
 <span data-ttu-id="eaa91-158"><xref:System.Security.Cryptography.RC2CryptoServiceProvider> 구현은 8 비트 단위로 증가 40 비트에서 128 비트 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-158">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa91-159">다음 코드 예제에서는 암호화 한 다음 문자열을 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-159">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-160">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-160">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UseSalt">
      <MemberSignature Language="C#" Value="public bool UseSalt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSalt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSalt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSalt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSalt : bool with get, set" Usage="System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eaa91-161">11바이트 길이의 0값 솔트를 사용하여 키를 만들 것인지 여부를 결정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-161">Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.</span></span></summary>
        <value><span data-ttu-id="eaa91-162">11바이트 길이의 0값 솔트를 사용하여 키를 만들어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-162"><see langword="true" /> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eaa91-163">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-163">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa91-164"><xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> 속성을 11 바이트 길이의 0 값 솔트를 사용 하는 기존 응용 프로그램과 상호 운용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-164">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.</span></span>  <span data-ttu-id="eaa91-165">대부분의 시나리오에서 사용 하지 않아야와 솔트를 <xref:System.Security.Cryptography.RC2CryptoServiceProvider> 키입니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-165">For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa91-166">다음 코드 예제에서는 합니다 <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> 속성을 `true`, 그런 다음 암호화 하 고 값의 암호를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="eaa91-166">The following code example sets the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property to `true`, and then encrypts and decrypts a value.</span></span>  
  
 [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/cpp/example.cpp#1)]
 [!code-csharp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/CS/example.cs#1)]
 [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="eaa91-167">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="eaa91-167">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>