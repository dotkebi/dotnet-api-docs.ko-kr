<Type Name="DES" FullName="System.Security.Cryptography.DES">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a1f762c8ee5dad633c80fda54fd4e5b92a9a95b1" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56356495" /></Metadata><TypeSignature Language="C#" Value="public abstract class DES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type DES = class&#xA;    inherit SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8f779-101">모든 <see cref="T:System.Security.Cryptography.DES" /> 구현이 파생되어야 하는 DES(데이터 암호화 표준) 알고리즘에 대한 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-101">Represents the base class for the Data Encryption Standard (DES) algorithm from which all <see cref="T:System.Security.Cryptography.DES" /> implementations must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f779-102">이 알고리즘은 64 비트의 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-102">This algorithm supports a key length of 64 bits.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="8f779-103">고급 암호화 표준 (AES)을 최신 대칭 암호화 알고리즘을 사용할 수 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8f779-103">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="8f779-104">사용을 고려 합니다 <xref:System.Security.Cryptography.Aes> 클래스 대신는 <xref:System.Security.Cryptography.DES> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8f779-104">Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class.</span></span> <span data-ttu-id="8f779-105">사용 하 여 <xref:System.Security.Cryptography.DES> 레거시 애플리케이션 및 데이터를 사용 하 여 호환성을 위해서만 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-105">Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.</span></span>
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8f779-106">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="8f779-106">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f779-107"><see cref="T:System.Security.Cryptography.DES" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f779-108">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-108">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="8f779-109">애플리케이션 코드에서는 파생된 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-109">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="8f779-110">이 메서드는 보호 되는 필드의 초기화를 <xref:System.Security.Cryptography.SymmetricAlgorithm> 클래스를 다음 표에 나와 있는 기본 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-110">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="8f779-111">필드</span><span class="sxs-lookup"><span data-stu-id="8f779-111">Field</span></span>|<span data-ttu-id="8f779-112">기본값</span><span class="sxs-lookup"><span data-stu-id="8f779-112">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="8f779-113">64</span><span class="sxs-lookup"><span data-stu-id="8f779-113">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="8f779-114">64</span><span class="sxs-lookup"><span data-stu-id="8f779-114">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="8f779-115">64</span><span class="sxs-lookup"><span data-stu-id="8f779-115">64</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8f779-116">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="8f779-116">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f779-117">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘을 수행하는 암호화 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-117">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.DES" Usage="System.Security.Cryptography.DES.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f779-118">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘을 수행하는 암호화 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-118">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="8f779-119">암호화 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-119">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f779-120">인스턴스를 만듭니다는 <xref:System.Security.Cryptography.DES> 데이터 암호화 및 해독에 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-120">Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f779-121">다음 코드 예제를 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-121">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="8f779-122">다음 코드 예제를 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-122">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8f779-123">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="8f779-123">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.DES" Usage="System.Security.Cryptography.DES.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="8f779-124">사용하려는 <see cref="T:System.Security.Cryptography.DES" />의 특정 구현에 대한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-124">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DES" /> to use.</span></span></param>
        <summary><span data-ttu-id="8f779-125">암호화 개체의 인스턴스를 만들어 지정된 데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-125">Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="8f779-126">암호화 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-126">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f779-127">다음 코드 예제를 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-127">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="8f779-128">다음 코드 예제를 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-128">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8f779-129">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="8f779-129">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSemiWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsSemiWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSemiWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSemiWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSemiWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="static member IsSemiWeakKey : byte[] -&gt; bool" Usage="System.Security.Cryptography.DES.IsSemiWeakKey rgbKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="8f779-130">semi-weak 키인지 여부를 테스트할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-130">The secret key to test for semi-weakness.</span></span></param>
        <summary><span data-ttu-id="8f779-131">지정한 키가 semi-weak인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-131">Determines whether the specified key is semi-weak.</span></span></summary>
        <returns><span data-ttu-id="8f779-132">키가 semi-weak이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-132"><see langword="true" /> if the key is semi-weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f779-133">Semi-weak 키는 암호를 해독 하기 쉬운 만드는 발생 하는 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-133">Semi-weak keys are pairs of keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="8f779-134">텍스트 semi-weak 키로 암호화 된 키가 semi-weak 파트너를 사용 하 여 암호를 만들면 원본 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-134">If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.</span></span> <span data-ttu-id="8f779-135">가지 6 알려진된 semi-weak 키 쌍에 대 한 데이터 암호화 표준 (<xref:System.Security.Cryptography.DES>) 알고리즘;이 메서드는 해당 semi-weak 키에 대 한 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-135">There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.</span></span>  
  
 <span data-ttu-id="8f779-136">Semi-weak 키 결과 설정 하려고 한 <xref:System.Security.Cryptography.CryptographicException>합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-136">Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="8f779-137">때 <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> semi-weak 키 반환 되지 것입니다 임의 키를 생성 하기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-137">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8f779-138"><paramref name="rgbKey" /> 매개 변수의 크기가 올바르지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8f779-138">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8f779-139">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="8f779-139">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="static member IsWeakKey : byte[] -&gt; bool" Usage="System.Security.Cryptography.DES.IsWeakKey rgbKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="8f779-140">weak 키인지 여부를 테스트할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-140">The secret key to test for weakness.</span></span></param>
        <summary><span data-ttu-id="8f779-141">지정한 키가 weak인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-141">Determines whether the specified key is weak.</span></span></summary>
        <returns><span data-ttu-id="8f779-142">키가 weak이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-142"><see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f779-143">약한 키는 암호를 해독 하기 쉬운 만드는 발생 하는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-143">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="8f779-144">텍스트 weak 키로 암호화 된 키가 같은 취약 한 결과 암호를 다시 암호화 원래 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-144">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="8f779-145">데이터 암호화 표준에 대 한 네 가지 알려진된 weak 키가 (<xref:System.Security.Cryptography.DES>) 알고리즘;이 메서드는 약한 해당 키에 대 한 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-145">There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.</span></span>  
  
 <span data-ttu-id="8f779-146">Weak 키 결과 설정 하려고 한 <xref:System.Security.Cryptography.CryptographicException>합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-146">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="8f779-147">때 <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> 라고 임의 키를 만들려면 weak 키 반환 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-147">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8f779-148"><paramref name="rgbKey" /> 매개 변수의 크기가 올바르지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8f779-148">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8f779-149">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="8f779-149">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.DES.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f779-150">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘에 대한 비밀 키를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-150">Gets or sets the secret key for the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <value><span data-ttu-id="8f779-151"><see cref="T:System.Security.Cryptography.DES" /> 알고리즘에 대한 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-151">The secret key for the <see cref="T:System.Security.Cryptography.DES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f779-152">이 속성이 `null` 를 사용 하는 경우 <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> 새 임의 값을 만들기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-152">If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.</span></span>  
  
 <span data-ttu-id="8f779-153">키의 길이 동일 해야 합니다. <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-153">The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.</span></span>  
  
 <span data-ttu-id="8f779-154">이 알고리즘은 64 비트의 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f779-154">This algorithm supports a key length of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8f779-155">키를 <see langword="null" />로 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="8f779-155">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8f779-156"><see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />와 길이가 다른 키를 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="8f779-156">An attempt was made to set a key whose length is not equal to <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8f779-157">weak 키(<see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" /> 참조)나 semi-weak 키(<see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" /> 참조)를 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="8f779-157">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />) or a semi-weak key (see <see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />).</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8f779-158">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="8f779-158">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>