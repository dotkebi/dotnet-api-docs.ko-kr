<Type Name="RSAPKCS1KeyExchangeFormatter" FullName="System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8993f09c9653a7105eb1d0c060edb0a6131b9f8e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58696760" /></Metadata><TypeSignature Language="C#" Value="public class RSAPKCS1KeyExchangeFormatter : System.Security.Cryptography.AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RSAPKCS1KeyExchangeFormatter extends System.Security.Cryptography.AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class RSAPKCS1KeyExchangeFormatter&#xA;Inherits AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RSAPKCS1KeyExchangeFormatter : System::Security::Cryptography::AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="F#" Value="type RSAPKCS1KeyExchangeFormatter = class&#xA;    inherit AsymmetricKeyExchangeFormatter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.AsymmetricKeyExchangeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="66de1-101"><see cref="T:System.Security.Cryptography.RSA" />를 사용하여 PKCS#1 키 교환 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-101">Creates the PKCS#1 key exchange data using <see cref="T:System.Security.Cryptography.RSA" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66de1-102">키 교환을 통해 비밀 정보 (예: 대칭 암호화 알고리즘의 키로 사용할 수 있는 임의 데이터)를 만드는 데 보낸 사람 및 받는 사람된에 게 보낼 암호화를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-102">Key exchange allows a sender to create secret information (such as random data that can be used as a key in a symmetric encryption algorithm) and use encryption to send it to the intended recipient.</span></span>  
  
 <span data-ttu-id="66de1-103">사용 하 여 <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter> 키 교환이 수신에서 비밀 정보를 추출 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-103">Use <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter> to receive the key exchange and extract the secret information from it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="66de1-104">성공 하려면 키 교환에 대 한 순서 대로 작업의 많은 세부 정보를 신중 하 게 수행 해야 하기 때문에 제공 된 기본 기능에서 사용자 고유의 키 교환 메서드를 만들 하려고 하지 않는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-104">We recommend that you do not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66de1-105">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter> 메시지 받는 사람에 대 한 교환 키를 만드는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-105">The following example shows how to use the <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter> class to create an exchange key for a message recipient.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-106">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-106">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66de1-107"><see cref="T:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSAPKCS1KeyExchangeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSAPKCS1KeyExchangeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66de1-108"><see cref="T:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66de1-109">사용 하 여 <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey%2A> 메서드를 호출 하기 전에 키 교환에 사용할 키를 설정 하려면 <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-109">Use <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey%2A> method to set the key to be used for key exchange before calling <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-110">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-110">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSAPKCS1KeyExchangeFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSAPKCS1KeyExchangeFormatter(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" Usage="new System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="66de1-111">공개 키를 보유하는 <see cref="T:System.Security.Cryptography.RSA" /> 알고리즘의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-111">The instance of the <see cref="T:System.Security.Cryptography.RSA" /> algorithm that holds the public key.</span></span></param>
        <summary><span data-ttu-id="66de1-112">지정된 키를 사용하여 <see cref="T:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter" /> class with the specified key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66de1-113"><paramref name="key" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="66de1-113"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-114">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-114">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateKeyExchange">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66de1-115">암호화된 키 교환 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-115">Creates the encrypted key exchange data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateKeyExchange">
      <MemberSignature Language="C#" Value="public override byte[] CreateKeyExchange (byte[] rgbData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateKeyExchange(unsigned int8[] rgbData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyExchange (rgbData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateKeyExchange(cli::array &lt;System::Byte&gt; ^ rgbData);" />
      <MemberSignature Language="F#" Value="override this.CreateKeyExchange : byte[] -&gt; byte[]" Usage="rSAPKCS1KeyExchangeFormatter.CreateKeyExchange rgbData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="66de1-116">키 교환 시 전달할 비밀 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-116">The secret information to be passed in the key exchange.</span></span></param>
        <summary><span data-ttu-id="66de1-117">지정된 입력 데이터에서 암호화된 키 교환 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-117">Creates the encrypted key exchange data from the specified input data.</span></span></summary>
        <returns><span data-ttu-id="66de1-118">지정된 수신자에게 보낼 암호화된 키 교환 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-118">The encrypted key exchange data to be sent to the intended recipient.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66de1-119">데이터를 암호화 하는 데 공개 키에 해당 개인 키 보유자가만이 데이터를 해석할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-119">This data can be interpreted only by the holder of the private key corresponding to the public key used to encrypt the data.</span></span> <span data-ttu-id="66de1-120">이렇게 하면 의도 한 받는 사람만 비밀 정보에 액세스할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-120">This helps to ensure that only the intended recipient can access the secret information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="66de1-121"><paramref name="rgbData" />가 너무 큽니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-121"><paramref name="rgbData" /> is too big.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="66de1-122">키가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="66de1-122">The key is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-123">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-123">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyExchange">
      <MemberSignature Language="C#" Value="public override byte[] CreateKeyExchange (byte[] rgbData, Type symAlgType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateKeyExchange(unsigned int8[] rgbData, class System.Type symAlgType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyExchange (rgbData As Byte(), symAlgType As Type) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateKeyExchange(cli::array &lt;System::Byte&gt; ^ rgbData, Type ^ symAlgType);" />
      <MemberSignature Language="F#" Value="override this.CreateKeyExchange : byte[] * Type -&gt; byte[]" Usage="rSAPKCS1KeyExchangeFormatter.CreateKeyExchange (rgbData, symAlgType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="symAlgType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="66de1-124">키 교환 시 전달할 비밀 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-124">The secret information to be passed in the key exchange.</span></span></param>
        <param name="symAlgType"><span data-ttu-id="66de1-125">이 매개 변수는 현재 버전에서 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-125">This parameter is not used in the current version.</span></span></param>
        <summary><span data-ttu-id="66de1-126">지정된 입력 데이터에서 암호화된 키 교환 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-126">Creates the encrypted key exchange data from the specified input data.</span></span></summary>
        <returns><span data-ttu-id="66de1-127">지정된 수신자에게 보낼 암호화된 키 교환 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-127">The encrypted key exchange data to be sent to the intended recipient.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66de1-128">데이터를 암호화 하는 데 공개 키에 해당 개인 키 보유자가만이 데이터를 해석할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-128">This data can be interpreted only by the holder of the private key corresponding to the public key used to encrypt the data.</span></span> <span data-ttu-id="66de1-129">이렇게 하면 의도 한 받는 사람만 비밀 정보에 액세스할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-129">This helps to ensure that only the intended recipient can access the secret information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66de1-130">다음 예제에서는 사용 하는 방법의 <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange%2A?displayProperty=nameWithType> 메시지 받는 사람에 대 한 교환 키를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="66de1-130">The following example shows how to use the <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange%2A?displayProperty=nameWithType> method to create an exchange key for a message recipient.</span></span> <span data-ttu-id="66de1-131">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-131">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter> class.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/cs/program.cs#2)]
 [!code-vb[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-132">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-132">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public override string Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Parameters { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string" Usage="System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66de1-133">PKCS #1 키 교환을 위한 매개 변수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-133">Gets the parameters for the PKCS #1 key exchange.</span></span></summary>
        <value><span data-ttu-id="66de1-134">PKCS #1 키 교환 작업의 매개 변수를 포함하는 XML 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-134">An XML string containing the parameters of the PKCS #1 key exchange operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66de1-135"><xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters%2A> 속성 여 pkcs#1 키 교환 작업의 매개 변수를 설명 하는 Uniform Resource Identifier (Uri)를 포함 하는 XML 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-135">The <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters%2A> property returns an XML string that contains Uniform Resource Identifiers (URIs) that describe the parameters of the PKCS #1 key exchange operation.</span></span>  <span data-ttu-id="66de1-136">Uri가 현재 주소를 가리키도록 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-136">Note that the URIs are not guaranteed to point to active addresses.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-137">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-137">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rng">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.RandomNumberGenerator Rng { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RandomNumberGenerator Rng" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Rng" />
      <MemberSignature Language="VB.NET" Value="Public Property Rng As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::RandomNumberGenerator ^ Rng { System::Security::Cryptography::RandomNumberGenerator ^ get(); void set(System::Security::Cryptography::RandomNumberGenerator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Rng : System.Security.Cryptography.RandomNumberGenerator with get, set" Usage="System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Rng" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66de1-138">키 교환을 만들 때 사용할 난수 생성기 알고리즘을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-138">Gets or sets the random number generator algorithm to use in the creation of the key exchange.</span></span></summary>
        <value><span data-ttu-id="66de1-139">사용할 난수 생성기 알고리즘의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-139">The instance of a random number generator algorithm to use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66de1-140">이 속성이 `null`를 기본 난수 생성기 알고리즘이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-140">If this property is `null`, the default random number generator algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-141">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-141">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetKey(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetKey (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="override this.SetKey : System.Security.Cryptography.AsymmetricAlgorithm -&gt; unit" Usage="rSAPKCS1KeyExchangeFormatter.SetKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="66de1-142">공개 키를 보유하는 <see cref="T:System.Security.Cryptography.RSA" /> 알고리즘의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-142">The instance of the <see cref="T:System.Security.Cryptography.RSA" /> algorithm that holds the public key.</span></span></param>
        <summary><span data-ttu-id="66de1-143">키 교환 데이터를 암호화하는 데 사용할 공개 키를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-143">Sets the public key to use for encrypting the key exchange data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66de1-144">호출 하기 전에 키를 설정 해야 <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-144">You must set the key before calling <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66de1-145"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="66de1-145"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="66de1-146">암호화 서비스</span><span class="sxs-lookup"><span data-stu-id="66de1-146">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>