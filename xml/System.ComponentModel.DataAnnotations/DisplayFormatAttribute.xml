<Type Name="DisplayFormatAttribute" FullName="System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f71f8c0707d50feb941ab33dd571688966d4fb3c" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56383466" /></Metadata><TypeSignature Language="C#" Value="public class DisplayFormatAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DisplayFormatAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class DisplayFormatAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DisplayFormatAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type DisplayFormatAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8f9e9-101">ASP.NET Dynamic Data가 데이터 필드를 표시하고 서식 지정하는 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-101">Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f9e9-102">데이터 필드에이 특성을 적용 하면 특성의 사용에 대 한 지침을 따라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-102">When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes.</span></span> <span data-ttu-id="8f9e9-103">자세한 내용은 [ASP.NET 동적 데이터 지침](https://msdn.microsoft.com/library/c563bbf3-feb9-484e-81d1-a585f1b0e192)합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-103">For more information, see [ASP.NET Dynamic Data Guidelines](https://msdn.microsoft.com/library/c563bbf3-feb9-484e-81d1-a585f1b0e192).</span></span>  

## Examples  
 <span data-ttu-id="8f9e9-104">이 기능의 온라인 예제를 참조 하세요. [실행](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute)합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-104">See an online example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute).</span></span>  
  
 <span data-ttu-id="8f9e9-105">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 데이터 필드의 서식을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-105">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to customize formatting for a data field.</span></span> <span data-ttu-id="8f9e9-106">이 예제에서는 다음 단계를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-106">The example performs the following steps:</span></span>  
  
-   <span data-ttu-id="8f9e9-107">메타 데이터 부분 클래스 및 관련된 메타 데이터 클래스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-107">Implements a metadata partial class and an associated metadata class.</span></span>  
  
-   <span data-ttu-id="8f9e9-108">연결 된 메타 데이터 클래스에 적용 되는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 다음 결과 지정 하는 특성:</span><span class="sxs-lookup"><span data-stu-id="8f9e9-108">In the associated metadata class, it applies the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute to specify the following results:</span></span>  
  
    -   <span data-ttu-id="8f9e9-109">데이터 필드를 비어 있는 경우 "[Null]" 텍스트를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-109">Display the text "[Null]" when a data field is empty.</span></span>  
  
    -   <span data-ttu-id="8f9e9-110">로캘별 통화 형식에서 통화 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-110">Display currency data in locale specific currency format.</span></span>  
  
    -   <span data-ttu-id="8f9e9-111">약식 (mm/dd/yy)의 날짜 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-111">Display date information in short format (mm/dd/yy).</span></span> <span data-ttu-id="8f9e9-112">이 형식은 편집 모드에도 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-112">This format also applies in edit mode.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#1)]  
  
 <span data-ttu-id="8f9e9-113">예제를 컴파일하려면 다음이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-113">To compile the example, you need the following:</span></span>  
  
-   <span data-ttu-id="8f9e9-114">Visual Studio 2010 이상 모든 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-114">Any edition of Visual Studio 2010 or later.</span></span>
  
-   <span data-ttu-id="8f9e9-115">AdventureWorksLT 샘플 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-115">The AdventureWorksLT sample database.</span></span> <span data-ttu-id="8f9e9-116">다운로드 하 여 SQL Server 예제 데이터베이스를 설치 하는 방법에 대 한 정보를 참조 하세요. [Microsoft SQL Server Product Samples: 데이터베이스](https://github.com/Microsoft/sql-server-samples/releases) github입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-116">For information about how to download and install the SQL Server sample database, see [Microsoft SQL Server Product Samples: Database](https://github.com/Microsoft/sql-server-samples/releases) on GitHub.</span></span> <span data-ttu-id="8f9e9-117">실행 중인 SQL Server의 버전에 대 한 샘플 데이터베이스의 올바른 버전을 설치 하 고 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-117">Make sure that you install the correct version of the sample database for the version of SQL Server that you are running.</span></span>
  
-   <span data-ttu-id="8f9e9-118">데이터 기반 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-118">A data-driven Web site.</span></span> <span data-ttu-id="8f9e9-119">이 옵션을 사용 하면 데이터베이스 및 사용자 지정 데이터 필드를 포함 하는 클래스에 대 한 데이터 컨텍스트를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-119">This enables you to create a data context for the database and the class that contains the data field to customize.</span></span> <span data-ttu-id="8f9e9-120">자세한 내용은 `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-120">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  

 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0"><span data-ttu-id="8f9e9-121">방법: ASP.NET 웹 페이지 세계화를 위한 문화권 및 UI 문화권 설정</span><span class="sxs-lookup"><span data-stu-id="8f9e9-121">How to: Set the Culture and UI Culture for ASP.NET Web Page Globalization</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DisplayFormatAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DisplayFormatAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f9e9-122"><see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-122">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f9e9-123">데이터 필드가 편집 모드에 있는 경우 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> 속성에서 지정하는 서식 문자열이 필드 값에 적용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-123">Gets or sets a value that indicates whether the formatting string that is specified by the <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> property is applied to the field value when the data field is in edit mode.</span></span></summary>
        <value><span data-ttu-id="8f9e9-124">편집 모드에서 필드 값에 서식 문자열이 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-124"><see langword="true" /> if the formatting string applies to the field value in edit mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8f9e9-125">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-125">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f9e9-126">기본적으로 지정 된 서식 문자열을 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> 데이터 바인딩된 컨트롤을 읽기 전용 모드에 있을 때만 속성 필드 값에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-126">By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f9e9-127">다음 예제에서는 사용 하는 방법의 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A> 데이터 필드가 편집 모드에 있을 때 날짜 정보에 대 한 표시 형식을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-127">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A> property to set the display format for date information when the data field is in edit mode.</span></span> <span data-ttu-id="8f9e9-128">데이터 필드에 사용할 데이터 필드 형식을 설정 하 여 지정 된 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-128">The data field format to use for the data field is specified by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f9e9-129">데이터 소스에서 데이터 필드가 업데이트되는 경우 빈 문자열 값("")이 자동으로 <see langword="null" />로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-129">Gets or sets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="8f9e9-130">빈 문자열 값이 자동으로 <see langword="true" />로 변환되면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-130"><see langword="true" /> if empty string values are automatically converted to <see langword="null" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8f9e9-131">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-131">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f9e9-132">필드 값에 대 한 빈 문자열을 입력할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-132">Users might enter an empty string for a field value.</span></span> <span data-ttu-id="8f9e9-133">사용 된 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> 빈 문자열 값을 자동으로 변환 되며 여부를 지정 하는 속성 `null` 데이터베이스에서 데이터 필드가 업데이트 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-133">Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f9e9-134">기본적으로 <xref:System.Web.DynamicData.DynamicField> 표시 개체 `null` 빈 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-134">By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings.</span></span> <span data-ttu-id="8f9e9-135">표시 하려면 다른 값으로 설정 된 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-135">To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f9e9-136">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> 빈 문자열 값을 변환할 수 있도록 하려면 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-136">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> to enable the conversion of empty string values to `null`.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f9e9-137">필드 값의 표시 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-137">Gets or sets the display format for the field value.</span></span></summary>
        <value><span data-ttu-id="8f9e9-138">데이터 필드 값의 표시 형식을 지정하는 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-138">A formatting string that specifies the display format for the value of the data field.</span></span> <span data-ttu-id="8f9e9-139">기본값은 빈 문자열("")로, 필드 값에 특정 형식이 적용되지 않음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-139">The default is an empty string (""), which indicates that no special formatting is applied to the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f9e9-140">사용 합니다 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> 속성에 표시 되는 값에 대 한 사용자 지정 표시 형식을 지정 하는 <xref:System.Web.DynamicData.DynamicField> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-140">Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="8f9e9-141">경우는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> 속성이 설정 되지 않은, 특별 한 서식 없이 필드의 값이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-141">If the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting.</span></span> <span data-ttu-id="8f9e9-142">자세한 내용은 [서식 지정 형식](~/docs/standard/base-types/formatting-types.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-142">For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f9e9-143">경우는 <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> 속성은 `true`, 필드의 값은 HTML 서식 문자열이 적용 되기 전에 해당 문자열 표현으로 인코드 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-143">When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied.</span></span> <span data-ttu-id="8f9e9-144">날짜와 같은 일부 개체에 대 한 개체 형식 문자열로 표시 되는 방식을 제어 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-144">For some objects, such as dates, you might want to control how the object is displayed with a formatting string.</span></span> <span data-ttu-id="8f9e9-145">이러한 경우에 설정 해야 합니다 <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-145">In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> property to `false`.</span></span>  
  
 <span data-ttu-id="8f9e9-146">기본적으로 서식 문자열은 적용할 필드 값을 데이터 바인딩된 컨트롤을 포함 하는 경우에는 <xref:System.Web.DynamicData.DynamicField> 개체는 읽기 전용 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-146">By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode.</span></span> <span data-ttu-id="8f9e9-147">편집 모드에 있을 때 서식 문자열이 필드 값에 적용을 설정 합니다 <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-147">To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="8f9e9-148">서식 문자열이 모든 리터럴 문자열이 될 수 있으며 일반적으로 필드의 값에 대 한 자리 표시자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-148">The formatting string can be any literal string and usually includes a placeholder for the field's value.</span></span> <span data-ttu-id="8f9e9-149">서식 문자열의 예를 들어, "항목 값: {0}"를 대체 하는 필드의 값을 {0} 자리 표시자 문자열에 표시 되 면를 <xref:System.Web.DynamicData.DynamicField> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-149">For example, in the formatting string "Item Value: {0}", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="8f9e9-150">서식 문자열의 나머지는 리터럴 텍스트로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-150">The remainder of the formatting string is displayed as literal text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f9e9-151">서식 문자열에 자리 표시 자가 포함 되어 있지 않으면, 데이터 원본에서 필드의 값 최종 표시 텍스트에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-151">If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f9e9-152">다음 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> 속성을 데이터 필드의 표시 형식을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-152">The following examples show how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to set the display format of data fields.</span></span> <span data-ttu-id="8f9e9-153">첫 번째 예제에서는 통화 형식 데이터 필드의 표시 형식을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-153">The first example sets the display format for a currency type data field.</span></span> <span data-ttu-id="8f9e9-154">두 번째 예에서는 날짜 형식의 데이터 필드에 대 한 표시 형식을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-154">The second example sets the display format for a date type data field.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#3)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#3)]  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="8f9e9-155">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="8f9e9-155">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetNullDisplayText">
      <MemberSignature Language="C#" Value="public string GetNullDisplayText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNullDisplayText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNullDisplayText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNullDisplayText();" />
      <MemberSignature Language="F#" Value="member this.GetNullDisplayText : unit -&gt; string" Usage="displayFormatAttribute.GetNullDisplayText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f9e9-156">필드가 HTML 인코딩되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-156">Gets or sets a value that indicates whether the field should be HTML-encoded.</span></span></summary>
        <value><span data-ttu-id="8f9e9-157">필드가 HTML 인코딩되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-157"><see langword="true" /> if the field should be HTML-encoded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f9e9-158">필드 값이 <see langword="null" />인 경우 해당 필드에 대해 표시되는 텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-158">Gets or sets the text that is displayed for a field when the field's value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="8f9e9-159">필드 값이 <see langword="null" />인 경우 해당 필드에 대해 표시되는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-159">The text that is displayed for a field when the field's value is <see langword="null" />.</span></span> <span data-ttu-id="8f9e9-160">기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-160">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f9e9-161">경우에 따라 데이터 필드의 값은 원본의 null 값으로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-161">Sometimes a data field's value is stored as null values in the source.</span></span> <span data-ttu-id="8f9e9-162">설정 하 여 null 값이 있는 데이터 필드에 대해 표시할 사용자 지정 텍스트를 지정할 수는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-162">You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.</span></span> <span data-ttu-id="8f9e9-163">Null 필드 값에 빈 문자열로 표시 되는이 속성을 설정 하지 않으면 ("").</span><span class="sxs-lookup"><span data-stu-id="8f9e9-163">If this property is not set, null field values are displayed as empty strings ("").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f9e9-164">빈 문자열 필드 값을 null 값으로 변환 하려면 설정 해야 합니다 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-164">To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f9e9-165">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> 정의할 경우 데이터 필드에 표시할 캡션을 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f9e9-165">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> to define a caption to display when the data field is `null`.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="NullDisplayTextResourceType">
      <MemberSignature Language="C#" Value="public Type NullDisplayTextResourceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type NullDisplayTextResourceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayTextResourceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ NullDisplayTextResourceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayTextResourceType : Type with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>