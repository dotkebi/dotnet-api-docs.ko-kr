<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0bf47bde339246351634f2a85b9a87db5546ac4" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56399549" /></Metadata><TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <TypeSignature Language="F#" Value="type RegularExpressionAttribute = class&#xA;    inherit ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2ee07-101">ASP.NET Dynamic Data에 있는 데이터 필드 값이 지정된 정규식과 일치해야 한다고 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee07-102">정규식에 대 한 속성 값의 유효성을 검사 해야 할 때 속성에 RegularExpressionAttribute 특성을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="2ee07-103">정규식을 사용 하면 매우 정확 하 게 유효한 값의 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="2ee07-104">Pattern 속성 정규식을 포함합니다. 속성의 값이 null 또는 빈 문자열 (""), 값은 자동으로 RegularExpressionAttribute 특성에 대 한 유효성 검사를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-104">The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="2ee07-105">값 아닌지 유효성을 검사 하 `null` 이거나 빈 문자열을 사용 합니다 **RequiredAttribute** 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-105">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee07-106">다음 예제에서는 사용 하는 방법의 <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> FirstName 및 LastName 데이터 필드의 유효성을 검사 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-106">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="2ee07-107">정규식에는 최대 40 대 문자와 소문자 자를 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-107">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="2ee07-108">이 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-108">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="2ee07-109">메타 데이터 부분 클래스 및 관련된 메타 데이터 클래스를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-109">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="2ee07-110">연결 된 메타 데이터 클래스에 적용 됩니다.는 <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> 특성을 FirstName 및 LastName 데이터 필드에 패턴 및 사용자 지정 오류 메시지를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-110">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute : string -&gt; System.ComponentModel.DataAnnotations.RegularExpressionAttribute" Usage="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="2ee07-111">데이터 필드 값의 유효성을 검사하는 데 사용되는 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-111">The regular expression that is used to validate the data field value.</span></span></param>
        <summary><span data-ttu-id="2ee07-112"><see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ee07-113">다음 예제에 적용 하는 방법을 보여 줍니다는 <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> 데이터 필드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-113">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="2ee07-114">유효성 검사에 실패 하는 경우 예제에서 코드를 동적 데이터에서 제공 하는 유효성 검사 오류 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-114">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2ee07-115"><paramref name="pattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-115"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.FormatErrorMessage : string -&gt; string" Usage="regularExpressionAttribute.FormatErrorMessage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2ee07-116">유효성 검사 오류를 발생시킨 필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-116">The name of the field that caused the validation failure.</span></span></param>
        <summary><span data-ttu-id="2ee07-117">정규식 유효성 검사에 실패할 경우 표시할 오류 메시지의 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-117">Formats the error message to display if the regular expression validation fails.</span></span></summary>
        <returns><span data-ttu-id="2ee07-118">형식이 지정된 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-118">The formatted error message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee07-119"><xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> 유효성 검사 오류를 발생 시킨 데이터 필드의 이름을 사용 하 여 오류 메시지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-119">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="2ee07-120">오류를 만드는 방법을 사용자 지정 하거나 런타임 시 계산 되는 매개 변수를 포함 하는 더 복잡 한 메시지를 제공 하는 사용자 지정 유효성 검사 특성에이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-120">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="regularExpressionAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2ee07-121">유효성을 검사할 데이터 필드 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-121">The data field value to validate.</span></span></param>
        <summary><span data-ttu-id="2ee07-122">사용자가 입력한 값이 정규식 패턴과 일치하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-122">Checks whether the value entered by the user matches the regular expression pattern.</span></span></summary>
        <returns><span data-ttu-id="2ee07-123">유효성 검사가 성공하는 경우 <see langword="true" />, 아닌 경우 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-123"><see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="2ee07-124">데이터 필드 값이 정규식 패턴과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="2ee07-124">The data field value did not match the regular expression pattern.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeoutInMilliseconds : int with get, set" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ee07-125">작업의 제한 시간이 초과되기 전에 단일 일치 작업을 실행하는 총 시간(밀리초)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-125">Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.</span></span></summary>
        <value><span data-ttu-id="2ee07-126">단일 일치 작업을 실행하는 총 시간(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-126">The amount of time in milliseconds to execute a single matching operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ee07-127">정규식 패턴을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-127">Gets the regular expression pattern.</span></span></summary>
        <value><span data-ttu-id="2ee07-128">일치시킬 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="2ee07-128">The pattern to match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>