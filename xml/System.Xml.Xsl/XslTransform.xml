<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56c2b4ff793499c653610da3b24ae254bfe9e9b3" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875374" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="70554-101">XSLT(Extensible Stylesheet Language for Transformations) 스타일시트를 사용하여 XML 데이터를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-102"><xref:System.Xml.Xsl.XslTransform> 클래스는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-103"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-104">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-105"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-106">XSLT 스타일 시트를 네임 스페이스를 사용 해야 `http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-107">추가 인수를 사용 하 여 스타일 시트에 추가할 수도 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="70554-108">이 클래스는 스타일 시트에서 호출할 수 있는 스타일 시트 및 확장 개체에 대 한 입력된 매개 변수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="70554-109">XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="70554-110">만들기는 <xref:System.Xml.Xsl.XslTransform> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="70554-111">사용 된 <xref:System.Xml.Xsl.XslTransform.Load%2A> 변환에 대 한 스타일 시트를 로드 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="70554-112">이 메서드는 여러 오버 로드가 및 사용 하 여 스타일 시트를 로드할 수는 <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, 또는 파일의 위치를 사용 하 여 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="70554-113">사용 된 <xref:System.Xml.Xsl.XslTransform.Transform%2A> XML 데이터를 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="70554-114">이 메서드는 여러 오버 로드가 하며 다양 한 유형의 입력 및 출력을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="70554-115">지정할 수도 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList> 변환 중에 입력으로 사용할 추가 인수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="70554-116">**보안 고려 사항**</span><span class="sxs-lookup"><span data-stu-id="70554-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="70554-117"><xref:System.Xml.Xsl.XslTransform> 클래스를 사용하는 응용 프로그램을 만드는 경우 다음 항목 및 그 의미에 대해 알아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="70554-118">확장 개체는 기본적으로 활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="70554-119">확장 개체가 포함된 <xref:System.Xml.Xsl.XsltArgumentList> 개체를 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드에 전달하면 이 확장 개체가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="70554-120">XSLT 스타일시트에는 다른 파일에 대한 참조 및 포함 스크립트 블록이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="70554-121">악의적인 사용자 데이터를 사용 하 여 제공 하 여 악용할 수 있습니다 또는 실행 하는 경우 스타일 시트를 시스템의 컴퓨터 리소스가 부족 해질 때까지 처리 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="70554-122">혼합 신뢰 환경에서 XSLT 응용 프로그램을 실행하면 스타일시트가 스푸핑될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="70554-123">예를 들어, 악의적인 사용자는 해로운 스타일시트가 포함된 개체를 로드한 후 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드를 호출하고 변형을 실행할 다른 사용자에게 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="70554-124">허용 하지 않음으로써 이러한 보안 문제를 완화할 수 있습니다 <xref:System.Xml.Xsl.XslTransform> 개체, XSLT 스타일 시트 또는 신뢰할 수 없는 소스의 XML 원본 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="70554-125">**스크립팅 지원**</span><span class="sxs-lookup"><span data-stu-id="70554-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="70554-126">이 클래스를 사용 하 여 포함 스크립트를 지원 합니다 `msxsl:script` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="70554-127">.NET Framework 버전 1.1 스타일 시트의 증명 정보는 포함 된 스크립트에 지정 된 권한을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="70554-128">스타일 시트에서 한 리소스 URI (Uniform Identifier)를 로드 하는 경우 URI는 증명 정보를 만드는 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="70554-129">이 증명 정보는 사이트 및 영역와 함께 URI를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="70554-130">다른 원본을 사용 하 여 스타일 시트를 로드 하는 경우 전달 하 여 증명 정보를 제공할 수 있습니다는 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 개체는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="70554-131">그렇지 않으면 스크립트 어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="70554-132">부분적으로 신뢰할 수 있는 호출자: `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="70554-133">`ControlEvidence` 사용 권한을 제공 해야 합니다. <xref:System.Security.Policy.Evidence> 에 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="70554-134"><xref:System.Security.SecurityException> 호출자에 게 필요한 권한이 없는 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="70554-135">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="70554-136">`msxsl:script` 요소가 다음 요구 사항:</span><span class="sxs-lookup"><span data-stu-id="70554-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="70554-137">합니다 `msxsl:script` 요소가 속하는 `urn:schemas-microsoft-com:xslt` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="70554-138">스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:msxsl=urn:schemas-microsoft-com:xslt`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="70554-139">합니다 `msxsl:script` 요소가 포함 될 수 있습니다는 `language` 사용할 스크립트 언어를 지정 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="70554-140">값을 `language` 특성 중 하나 여야 합니다. C#CSharp, VB, VisualBasic, JScript 또는 JavaScript입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="70554-141">언어 이름은 대/소문자 구분 되어 JavaScript와 javascript는 모두 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="70554-142">경우는 `language` 특성을 지정 하지 않으면 기본값은 JScript로 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="70554-143">합니다 `msxsl:script` 요소에 포함 해야 합니다는 `implements-prefix` 스크립트 블록에 연결 된 네임 스페이스를 나타내는 접두사를 포함 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="70554-144">이 네임 스페이스는 스타일 시트 내에서 정의 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="70554-145">스타일 시트는 네임 스페이스에 의해 그룹화 되는 여러 스크립트 블록을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="70554-146">동일한 네임 스페이스 내에서 여러 언어를 사용 하 여 스크립트 블록 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="70554-147">스크립트 블록이 동일한 네임 스페이스 내에 제공 된 스크립트 블록에서 다른 스크립트 블록에 정의 된 함수를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="70554-148">규칙 및 스크립트 언어의 구문에 따라 스크립트 블록의 내용을 구문 분석 됩니다 (제공한는 `language` 특성).</span><span class="sxs-lookup"><span data-stu-id="70554-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="70554-149">예를 들어 C# 스크립트 블록을 설치한 경우 주석 접두사로 옵니다는 `//` 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="70554-150">설명에는 유효한 XML 콘텐츠 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-150">The comments must be valid XML content.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="70554-151">CDATA 섹션의 스크립트 블록을 래핑하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-151">It is recommended that you wrap script blocks in a CDATA section.</span></span>
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 <span data-ttu-id="70554-152">함수는 `msxsl:script` 요소 내에서 선언할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="70554-153">다음 표에서는 기본적으로 지원되는 네임스페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="70554-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="70554-154">지원 되는 네임 스페이스</span><span class="sxs-lookup"><span data-stu-id="70554-154">Supported Namespaces</span></span>|<span data-ttu-id="70554-155">설명</span><span class="sxs-lookup"><span data-stu-id="70554-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="70554-156">시스템 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="70554-157">Collection 클래스</span><span class="sxs-lookup"><span data-stu-id="70554-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="70554-158">텍스트 처리 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="70554-159">핵심 XML 클래스</span><span class="sxs-lookup"><span data-stu-id="70554-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="70554-160">XSLT 클래스</span><span class="sxs-lookup"><span data-stu-id="70554-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="70554-161">XPath(XML Path Language) 클래스</span><span class="sxs-lookup"><span data-stu-id="70554-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="70554-162">제공 된 인수 및 반환 값 스크립트 함수에 의해 정의 아래에 나열 된 World Wide Web Consortium (W3C) 형식 중 하나 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="70554-163">다음 표에서 XPath 또는 XSLT는 W3C 형식 간의 매핑을 설명 하 고 해당 하는.NET Framework 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="70554-164">W3C 형식</span><span class="sxs-lookup"><span data-stu-id="70554-164">W3C Type</span></span>|<span data-ttu-id="70554-165">해당.NET 클래스</span><span class="sxs-lookup"><span data-stu-id="70554-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="70554-166">문자열 (XPath)</span><span class="sxs-lookup"><span data-stu-id="70554-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="70554-167">부울 값 (XPath)</span><span class="sxs-lookup"><span data-stu-id="70554-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="70554-168">수 (XPath)</span><span class="sxs-lookup"><span data-stu-id="70554-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="70554-169">결과 트리 조각 (XSLT)</span><span class="sxs-lookup"><span data-stu-id="70554-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="70554-170">노드 집합 (XPath)</span><span class="sxs-lookup"><span data-stu-id="70554-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="70554-171">스크립트 함수가 다음 숫자 유형 중 하나를 사용하는 경우: 이러한 형식 강제 변환 된 Int16, UInt16, Int32, UInt32, Int64, UInt64, Single 또는 Decimal, W3C XPath 형식의 숫자에 매핑되는 Double입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="70554-172">예외가 발생 하는 함수가 호출 될 때 필요한 형식 중 하나를 인수 결과 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-173">`msxsl:script` 및 `msxsl:node-list` 에서 유일한 함수는 `urn:schemas-microsoft-com:xslt` 에서 지원 되는 네임 스페이스는 <xref:System.Xml.Xsl.XslTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="70554-174"><xref:System.Xml.Xsl.XslTransform> 공용 언어 런타임 (CLR) 코드 확장 메커니즘으로 활용할 수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="70554-175">클래스의 인스턴스를 전달 하 여 이렇게는 <xref:System.Xml.Xsl.XslTransform> 클래스 및 XSLT 스타일 시트 내에서 공용 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="70554-176">정의 된 메서드는 `params` 키워드 전달할 매개 변수 개수는 지정 되지 않은 허용 하는이 시나리오에서는 올바르게 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="70554-177">참조 [params](~/docs/csharp/language-reference/keywords/params.md) 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="70554-178">자세한 내용은 참조 [XslTransform 클래스를 사용 하 여 XSLT 변환을](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-179">다음 예제에서는 지정된 된 XML 문서를 변환 하 고 결과를 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="70554-180"><see cref="T:System.Xml.Xsl.XslTransform" /> 개체는 변환 작업에 대 한 유일한 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="70554-181">다른 작업은 스레드로부터 안전한 되도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="70554-182">로드 작업 중 다른 방법이 없습니다 개체에서 호출 되는 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70554-183"><see cref="T:System.Xml.Xsl.XslTransform" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70554-184"><see langword="xsl:include" /> 및 <see langword="xsl:import" /> 요소에서 참조하는 스타일시트가 들어 있는 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-185"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-186"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-187">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="70554-188">로드할 XSLT 스타일시트를 지정하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="70554-189">URL로 지정된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-190"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-191"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-192">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-193"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-194">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="70554-195">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="70554-196">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="70554-197">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="70554-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="70554-198">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-199">스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-200">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-201">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-202">다음 예제에서는 HTML 문서를 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-202">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="70554-203">테이블에서 ISBN, 제목 및 각 책의 가격은 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-203">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="70554-204">이 샘플에서는 다음 두 입력 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-204">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-205">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="70554-205">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-206">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="70554-206">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-207">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-207">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="70554-208"><see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-209"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-210"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-211">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-212"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-213">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-214">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="70554-215">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="70554-216">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="70554-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="70554-217">스타일 시트의 현재 노드의 로드를 <xref:System.Xml.XmlReader> 모든 자식을 통해.</span><span class="sxs-lookup"><span data-stu-id="70554-217">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="70554-218">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-218">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="70554-219">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 된 <xref:System.Xml.XmlReader> 스타일 시트의 끝 뒤에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-219">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="70554-220">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-220">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="70554-221">지정 해야 하는 경우 스타일 시트에 엔터티를 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="70554-221">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="70554-222">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-222">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="70554-223">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-223">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-224">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-224">The assembly has full trust.</span></span> <span data-ttu-id="70554-225">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-225">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-226">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-226">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-227">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-227">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-228">다음 예제에서는 모든 책 제목을 기준으로 정렬 하는 XML 파일을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-228">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="70554-229">이 예제에서는 입력으로 다음 데이터 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-229">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-230">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-230">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-231">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-231">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-232"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-232">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-233">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-233">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="70554-234"><see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-234">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-235"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-235">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-236"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-236">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-237">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-237">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-238"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-238"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-239">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-239">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-240">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-240">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="70554-241">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-241">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="70554-242">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="70554-242">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="70554-243">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-243">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-244">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-244">The assembly has full trust.</span></span> <span data-ttu-id="70554-245">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-245">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-246">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-246">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-247">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-247">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-248">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="70554-248">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-249">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-249">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-250">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-250">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="70554-251"><see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-251">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-252"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-253"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-254">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-255"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-256">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-257">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-257">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="70554-258">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-258">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="70554-259">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="70554-259">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="70554-260">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-260">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="70554-261">로드 된 문서의 일부만 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-261">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="70554-262">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 합니다 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="70554-262">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="70554-263">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-263">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-264">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-264">The assembly has full trust.</span></span> <span data-ttu-id="70554-265">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-265">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-266">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-266">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-267">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-267">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-268">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-268">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-269">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-269">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="70554-270">로드할 XSLT 스타일시트를 지정하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-270">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-271">스타일시트와 <c>xsl:import</c> 및 <c>xsl:include</c> 요소에 참조된 모든 스타일시트를 로드하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-271">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="70554-272">이 값이 <see langword="null" />이면 사용자 자격 증명 없는 기본 <see cref="T:System.Xml.XmlUrlResolver" />를 사용하여 스타일시트를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="70554-272">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="70554-273">스타일시트의 외부 리소스를 확인하는 데 기본 <see cref="T:System.Xml.XmlUrlResolver" />가 사용되지 않으므로 <c>xsl:import</c> 및 <c>xsl:include</c> 요소는 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-273">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="70554-274"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-274">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-275">URL로 지정된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-275">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-276"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-276">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-277"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-277">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-278">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-278">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-279"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-279"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-280">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-280">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-281">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-281">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-282">스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-282">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-283">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-284">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-285">다음 예제에서는 HTML 문서를 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-285">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="70554-286">포함 된 XSLT 스타일 시트를 로드 하는 예제는 `xsl:include` 다른 스타일 시트를 참조 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-286">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="70554-287"><xref:System.Xml.XmlUrlResolver> 에 전달 되는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함된 스타일 시트에 대 한 네트워크 리소스에 액세스 하는 데 필요한 자격 증명을 설정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-287">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="70554-288">이 예제에서는 입력으로 다음 데이터 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-288">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-289">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="70554-289">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-290">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="70554-290">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-291">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-291">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-292"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-292">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="70554-293">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-293">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="70554-294"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-294">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-295"><see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-295">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-296"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-296">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-297"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-297">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-298">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-298">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-299"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-299"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-300">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-300">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-301">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-301">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="70554-302">스타일 시트의 현재 노드의 로드를 <xref:System.Xml.XmlReader> 모든 자식을 통해.</span><span class="sxs-lookup"><span data-stu-id="70554-302">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="70554-303">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-303">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="70554-304">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 된 <xref:System.Xml.XmlReader> 스타일 시트의 끝 뒤에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-304">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="70554-305">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-305">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="70554-306">지정 해야 하는 경우 스타일 시트에 엔터티를 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="70554-306">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="70554-307">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-307">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="70554-308">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-308">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-309">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-309">The assembly has full trust.</span></span> <span data-ttu-id="70554-310">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-310">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-311">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-311">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-312">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-312">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-313">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-313">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-314">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-314">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-315"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-315">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-316">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-316">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-317"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-317">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="70554-318">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-318">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="70554-319"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-319">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-320"><see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-320">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-321"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-321">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-322"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-322">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-323">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-323">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-324"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-324"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-325">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-325">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-326">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-326">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-327">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-327">The assembly has full trust.</span></span> <span data-ttu-id="70554-328">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-328">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-329">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-330">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-331">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="70554-331">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-332">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-333">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-333">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-334"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="70554-335">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-335">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="70554-336"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-337"><see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-337">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-338"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-338">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-339"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-339">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-340">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-340">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-341"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-341"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-342">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-342">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-343">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-343">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="70554-344">스타일 시트를 로드 된 문서의 부분으로 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-344">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="70554-345">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 합니다 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="70554-345">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="70554-346">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-346">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="70554-347">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-347">The assembly has full trust.</span></span> <span data-ttu-id="70554-348">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-348">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="70554-349">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-349">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="70554-350">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-350">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-351">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-351">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-352">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-352">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-353">로드할 스타일시트를 포함하는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-353">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-354"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-354">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="70554-355">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-355">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="70554-356"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-356">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="70554-357">XSLT 스타일시트의 스크립트 블록에 대해 생성된 어셈블리에 설정된 <see cref="T:System.Security.Policy.Evidence" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-357">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="70554-358">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-358">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="70554-359">스크립트 어셈블리에 대해 증명 정보를 제공하려면 호출자에게 <see langword="ControlEvidence" /> 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-359">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="70554-360">부분적으로 신뢰할 수 있는 호출자의 경우 이 매개 변수를 <see langword="null" />로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-360">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="70554-361"><see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-361">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="70554-362">이 메서드를 사용하면 증명 정보를 지정하여 스타일시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-362">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-363"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-363">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-364"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-364">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-365">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-365">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-366"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-366"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-367">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-367">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-368">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-368">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="70554-369">스타일 시트의 현재 노드의 로드를 <xref:System.Xml.XmlReader> 모든 자식을 통해.</span><span class="sxs-lookup"><span data-stu-id="70554-369">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="70554-370">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-370">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="70554-371">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 된 <xref:System.Xml.XmlReader> 스타일 시트의 끝 뒤에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-371">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="70554-372">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-372">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="70554-373">지정 해야 하는 경우 스타일 시트에 엔터티를 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="70554-373">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="70554-374">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-374">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="70554-375">증명 정보를 제공 하는 방법은 여러 가지입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-375">There are different ways to provide evidence.</span></span> <span data-ttu-id="70554-376">다음 표에서 일반적인 사용자 시나리오에 대해 제공할 증명 정보 형식을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-376">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="70554-377">시나리오</span><span class="sxs-lookup"><span data-stu-id="70554-377">Scenario</span></span>|<span data-ttu-id="70554-378">제공할 증명 정보 형식</span><span class="sxs-lookup"><span data-stu-id="70554-378">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="70554-379">XSLT 스타일 시트를 자체 포함 되었거나 신뢰할 수 있는 코드 베이스에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-379">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="70554-380">어셈블리에서 증명 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-380">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="70554-381">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-381">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-382">소스의 원본을 알 수 있으며 검증할 수 있는 URL이 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-382">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="70554-383">URL을 사용 하 여 증명 정보를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="70554-383">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="70554-384">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-384">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-385">소스의 원본을 알 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-385">The origin of the source is not known.</span></span>|<span data-ttu-id="70554-386">증명 정보를 `null`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-386">Set evidence to `null`.</span></span> <span data-ttu-id="70554-387">스크립트 블록이 처리되지 않고, XSLT `document()` 함수가 지원되지 않으며, 권한 있는 확장 개체는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-387">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="70554-388">또한 설정할 수도 있습니다는 `resolver` 매개 변수를 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-388">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="70554-389">이렇게 `xsl:import` 고 `xsl:include` 요소가 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-389">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="70554-390">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-390">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-391">소스의 원본을 알 수 없지만 스크립트 지원이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-391">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="70554-392">호출자의 증명 정보를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-392">Request evidence from the caller.</span></span> <span data-ttu-id="70554-393">API 호출자의 증명 정보, 일반적으로 제공 하는 방법을 제공 해야 합니다는 <xref:System.Security.Policy.Evidence> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-393">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="70554-394">다음 예제에서는 XSLT 변환을 수행 위치 `xsltReader` 되는 <xref:System.Xml.XmlReader> 스타일 시트가 포함 된 및 `secureURL` 만드는 데 사용할 수 있는 신뢰할 수 있는 url <xref:System.Security.Policy.Evidence>.</span><span class="sxs-lookup"><span data-stu-id="70554-394">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="70554-395">합니다 <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> 메서드는 만드는 데 <xref:System.Security.Policy.Evidence> 스타일 시트에 적용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-395">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-396">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-396">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-397">참조되는 스타일시트에는 제공된 증명 정보에서 허용하지 않는 기능이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-397">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="70554-398">호출자가 증명 정보를 제공하려 했지만 <see langword="ControlEvidence" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="70554-398">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70554-399">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-399">for providing evidence.</span></span> <span data-ttu-id="70554-400">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="70554-400">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-401"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-401">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-402">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-402">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-403"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-403">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="70554-404">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-404">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="70554-405"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-405">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="70554-406">XSLT 스타일시트의 스크립트 블록에 대해 생성된 어셈블리에 설정된 <see cref="T:System.Security.Policy.Evidence" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-406">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="70554-407">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-407">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="70554-408">스크립트 어셈블리에 대해 증명 정보를 제공하려면 호출자에게 <see langword="ControlEvidence" /> 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-408">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="70554-409">부분적으로 신뢰할 수 있는 호출자의 경우 이 매개 변수를 <see langword="null" />로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-409">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="70554-410"><see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-410">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="70554-411">이 메서드를 사용하면 증명 정보를 지정하여 스타일시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-411">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-412"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-412">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-413"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-413">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-414">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-414">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-415"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-415"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-416">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-416">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="70554-417">증명 정보를 제공 하는 방법은 여러 가지입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-417">There are different ways to provide evidence.</span></span> <span data-ttu-id="70554-418">다음 표에서 일반적인 사용자 시나리오에 대해 제공할 증명 정보 형식을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-418">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="70554-419">시나리오</span><span class="sxs-lookup"><span data-stu-id="70554-419">Scenario</span></span>|<span data-ttu-id="70554-420">제공할 증명 정보 형식</span><span class="sxs-lookup"><span data-stu-id="70554-420">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="70554-421">XSLT 스타일 시트를 자체 포함 되었거나 신뢰할 수 있는 코드 베이스에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-421">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="70554-422">어셈블리에서 증명 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-422">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="70554-423">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-423">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-424">소스의 원본을 알 수 있으며 검증할 수 있는 URL이 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-424">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="70554-425">URL을 사용 하 여 증명 정보를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="70554-425">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="70554-426">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-426">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-427">소스의 원본을 알 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-427">The origin of the source is not known.</span></span>|<span data-ttu-id="70554-428">증명 정보를 `null`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-428">Set evidence to `null`.</span></span> <span data-ttu-id="70554-429">스크립트 블록이 처리되지 않고, XSLT `document()` 함수가 지원되지 않으며, 권한 있는 확장 개체는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-429">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="70554-430">또한 설정할 수도 있습니다는 `resolver` 매개 변수를 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-430">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="70554-431">이렇게 `xsl:import` 고 `xsl:include` 요소가 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-431">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="70554-432">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-432">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-433">소스의 원본을 알 수 없지만 스크립트 지원이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-433">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="70554-434">호출자의 증명 정보를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-434">Request evidence from the caller.</span></span> <span data-ttu-id="70554-435">API 호출자의 증명 정보, 일반적으로 제공 하는 방법을 제공 해야 합니다는 <xref:System.Security.Policy.Evidence> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-435">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-436">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="70554-436">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-437">참조되는 스타일시트에는 제공된 증명 정보에서 허용하지 않는 기능이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-437">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="70554-438">호출자가 증명 정보를 제공하려 했지만 <see langword="ControlEvidence" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="70554-438">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70554-439">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-439">for providing evidence.</span></span> <span data-ttu-id="70554-440">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="70554-440">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="70554-441">로드할 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-441">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-442"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-442">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="70554-443">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-443">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="70554-444"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-444">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="70554-445">XSLT 스타일시트의 스크립트 블록에 대해 생성된 어셈블리에 설정된 <see cref="T:System.Security.Policy.Evidence" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-445">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="70554-446">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-446">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="70554-447">스크립트 어셈블리에 대해 증명 정보를 제공하려면 호출자에게 <see langword="ControlEvidence" /> 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-447">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="70554-448">부분적으로 신뢰할 수 있는 호출자의 경우 이 매개 변수를 <see langword="null" />로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-448">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="70554-449"><see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-449">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="70554-450">이 메서드를 사용하면 증명 정보를 지정하여 스타일시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-450">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-451"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-451">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-452"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-452">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-453">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-453">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-454"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-454"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-455">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-455">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-456">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-456">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="70554-457">스타일 시트를 로드 된 문서의 부분으로 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-457">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="70554-458">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 합니다 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="70554-458">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="70554-459">증명 정보를 제공 하는 방법은 여러 가지입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-459">There are different ways to provide evidence.</span></span> <span data-ttu-id="70554-460">다음 표에서 일반적인 사용자 시나리오에 대해 제공할 증명 정보 형식을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-460">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="70554-461">시나리오</span><span class="sxs-lookup"><span data-stu-id="70554-461">Scenario</span></span>|<span data-ttu-id="70554-462">제공할 증명 정보 형식</span><span class="sxs-lookup"><span data-stu-id="70554-462">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="70554-463">XSLT 스타일 시트를 자체 포함 되었거나 신뢰할 수 있는 코드 베이스에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-463">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="70554-464">어셈블리에서 증명 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-464">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="70554-465">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-465">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-466">소스의 원본을 알 수 있으며 검증할 수 있는 URL이 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-466">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="70554-467">URL을 사용 하 여 증명 정보를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="70554-467">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="70554-468">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-468">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-469">소스의 원본을 알 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-469">The origin of the source is not known.</span></span>|<span data-ttu-id="70554-470">증명 정보를 `null`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-470">Set evidence to `null`.</span></span> <span data-ttu-id="70554-471">스크립트 블록이 처리되지 않고, XSLT `document()` 함수가 지원되지 않으며, 권한 있는 확장 개체는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-471">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="70554-472">또한 설정할 수도 있습니다는 `resolver` 매개 변수를 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-472">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="70554-473">이렇게 `xsl:import` 고 `xsl:include` 요소가 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-473">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="70554-474">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="70554-474">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="70554-475">소스의 원본을 알 수 없지만 스크립트 지원이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-475">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="70554-476">호출자의 증명 정보를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-476">Request evidence from the caller.</span></span> <span data-ttu-id="70554-477">API 호출자의 증명 정보, 일반적으로 제공 하는 방법을 제공 해야 합니다는 `Evidence` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-477">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="70554-478">다음 예제에서는 외부 소스에서 스타일 시트를 사용 하 여 XSLT 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-478">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="70554-479">신뢰할 수 없는 소스에서 스타일 시트를 제공 하므로 합니다 `resolver` 하 고 `evidence` 매개 변수를 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-479">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="70554-480">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-480">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="70554-481">참조되는 스타일시트에는 제공된 증명 정보에서 허용하지 않는 기능이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-481">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="70554-482">호출자가 증명 정보를 제공하려 했지만 <see langword="ControlEvidence" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="70554-482">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70554-483">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-483">for providing evidence.</span></span> <span data-ttu-id="70554-484">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="70554-484">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70554-485">로드한 XSLT 스타일시트를 사용하여 XML 데이터를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-485">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-486"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-486">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-487"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-487">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-488">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-488">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="70554-489">변환할 소스 문서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-489">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="70554-490">출력 파일의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-490">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="70554-491">입력 파일의 XML 데이터를 변환하고 그 결과를 출력 파일로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-491">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-492"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-492">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-493"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-493">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-494">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-494">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-495"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-495"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-496">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-496">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-497">이 메서드는.NET Framework의 버전 1.1에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-497">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="70554-498">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-498">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-499">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-499">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-500">다음 예제에서는 변환 합니다 `books.xml` 를 사용 하 여 파일을 `output.xsl` 스타일 시트 결과를 출력를 `books.html` 파일.</span><span class="sxs-lookup"><span data-stu-id="70554-500">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="70554-501">이 샘플에서는 다음 두 개의 입력된 파일 사용:</span><span class="sxs-lookup"><span data-stu-id="70554-501">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-502">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-502">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-503">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-503">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-504"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-504">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-505">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-505">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-506">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-506">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="70554-507">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-507">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="70554-508">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-508">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-509"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-509">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-510"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-510">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-511">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-511">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-512"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-512"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-513">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-513">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-514">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-514">This method is now obsolete.</span></span> <span data-ttu-id="70554-515">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-515">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-516">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-516">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="70554-517">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-517">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-518">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader> (의 `xsl:output` 요소는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="70554-518">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="70554-519">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-519">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="70554-520">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-520">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="70554-521">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-521">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-522">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-522">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-523">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-523">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-524">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-524">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="70554-525">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-525">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-526">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-526">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-527">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-527">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-528">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-528">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-529">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-529">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="70554-530">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-530">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="70554-531">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-531">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-532"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-532">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-533"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-533">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-534">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-534">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-535"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-535"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-536">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-536">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-537">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-537">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-538">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-538">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-539">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-539">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-540">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-540">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-541">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-541">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-542">때문에 <xref:System.Xml.XmlReader> 읽기 전용 출력을 제공 합니다 `xsl:output` 요소는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-542">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="70554-543">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-543">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="70554-544">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-544">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-545">이 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-545">This method is obsolete.</span></span> <span data-ttu-id="70554-546">설정 된 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 XSLT document () 함수를 확인 하는 방법을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-546">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="70554-547">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-547">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-548">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-548">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-549">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-549">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-550">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-550">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-551">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-551">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="70554-552">변환할 소스 문서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-552">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="70554-553">출력 파일의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-553">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-554">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-554">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-555">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-555">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-556"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-556">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-557">입력 파일의 XML 데이터를 변환하고 그 결과를 출력 파일로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-557">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-558"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-558">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-559"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-559">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-560">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-560">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-561"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-561"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-562">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-562">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-563">다음 예제에서는 XSLT 변환을 수행 하 고 파일에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-563">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="70554-564"><xref:System.Xml.XmlUrlResolver> 기본 사용 자격 증명을 사용 하는 외부 리소스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-564">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="70554-565">자세한 내용은 <xref:System.Net.CredentialCache.DefaultCredentials%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="70554-565">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-566"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-566">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-567">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-567">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-568">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-568">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-569">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-569">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="70554-570">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-570">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-571"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-571">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-572"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-572">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-573">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-573">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-574"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-574"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-575">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-575">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-576">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-576">This method is now obsolete.</span></span> <span data-ttu-id="70554-577">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-577">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-578">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-578">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="70554-579">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-579">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="70554-580">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-580">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-581">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-581">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-582">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-582">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-583">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-583">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="70554-584">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-584">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-585">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-585">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-586">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-586">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-587">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-587">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-588">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-588">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-589">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-589">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-590"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-590">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-591">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-591">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-592">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-592">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-593">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-593">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="70554-594">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-595"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-595">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-596"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-596">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-597">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-597">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-598"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-598"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-599">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-599">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-600">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-600">This method is now obsolete.</span></span> <span data-ttu-id="70554-601">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-601">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-602">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-602">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="70554-603">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-603">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="70554-604">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-604">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="70554-605">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-605">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="70554-606">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-606">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-607">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-607">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-608">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 조각, 노드만 포함 하 고 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-608">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-609">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-609">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="70554-610">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-610">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-611">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-611">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-612">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-612">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-613">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-613">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-614">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-614">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-615">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-615">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-616"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-616">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-617">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-617">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-618">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-618">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-619">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-619">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-620">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-620">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-621"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-621">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-622">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-622">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="70554-623">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-623">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-624"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-624">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-625"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-625">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-626">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-626">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-627"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-627"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-628">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-628">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-629">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-629">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-630">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader> (의 `xsl:output` 요소는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="70554-630">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="70554-631">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-631">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="70554-632">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-632">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="70554-633">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-633">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-634">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-634">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-635">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 조각, 노드만 포함 하 고 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-635">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-636">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-636">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="70554-637">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-637">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="70554-638">다음 예제에서는 XML 문서를 변환 하 고 결과를 출력 합니다는 `XmlReader`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-638">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="70554-639"><xref:System.Xml.XmlUrlResolver> 에 필요한 자격 증명을 사용 하 여 XSLT를 처리 하는 데 `document()` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-639">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-640">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-640">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-641">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-641">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-642"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-642">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-643">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-643">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-644">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-644">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-645">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-645">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="70554-646">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-646">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-647"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-647">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-648"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-648">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-649">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-649">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-650"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-650"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-651">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-651">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-652">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-652">This method is now obsolete.</span></span> <span data-ttu-id="70554-653">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-653">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-654">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-654">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="70554-655">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-655">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-656">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="70554-656">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="70554-657">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-657">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="70554-658">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-658">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-659">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-659">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-660">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-660">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-661">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-661">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="70554-662">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-662">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-663">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-663">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-664">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-664">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-665">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-665">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-666">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-666">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-667">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-667">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-668">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-668">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-669">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-669">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-670">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-670">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="70554-671">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-671">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-672"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-672">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-673"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-673">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-674">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-674">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-675"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-675"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-676">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-676">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-677">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-677">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-678">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-678">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-679">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-679">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-680">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-680">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-681">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-681">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-682">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-682">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-683">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-683">This method is now obsolete.</span></span> <span data-ttu-id="70554-684">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-684">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-685">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-685">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-686">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-686">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-687">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-687">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-688">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-688">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-689">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-689">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-690">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-690">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-691">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-691">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-692">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-692">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="70554-693">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-693">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-694"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-694">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-695"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-695">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-696">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-696">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-697"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-697"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-698">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-698">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-699">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-699">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-700">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-700">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-701">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-701">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-702">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-702">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-703">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-703">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-704">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-704">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="70554-705">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-705">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-706">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-706">This method is now obsolete.</span></span> <span data-ttu-id="70554-707">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-707">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-708">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-708">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-709">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-709">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-710">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-710">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-711">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-711">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-712">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-712">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-713">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-713">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-714">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-714">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-715">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-715">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-716">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-716">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-717"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-717">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-718">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-718">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="70554-719">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-719">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-720"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-720">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-721"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-721">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-722">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-722">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-723"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-723"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-724">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-724">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-725">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-725">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-726">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-726">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-727">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-727">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-728">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-728">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-729">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-729">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-730">때문에 <xref:System.Xml.XmlReader> 읽기 전용 출력을 제공 합니다 `xsl:output` 요소는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-730">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="70554-731">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-731">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="70554-732">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-732">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-733">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-733">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-734">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-734">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-735">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-735">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-736">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-736">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-737">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-737">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-738">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-738">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-739">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-739">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="70554-740">지정된 인수를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-740">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-741"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-741">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-742"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-742">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-743">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-743">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-744"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-744"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-745">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-745">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-746">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-746">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-747">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-747">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-748">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-748">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-749">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-749">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-750">이 변환 프로세스 전에 현재 된 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-750">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-751">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="70554-751">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="70554-752">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-752">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-753">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-753">This method is now obsolete.</span></span> <span data-ttu-id="70554-754">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-754">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="70554-755">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-755">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-756">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-756">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-757">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-757">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-758">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-758">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-759">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-759">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-760"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-760">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-761">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-761">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-762">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-762">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-763">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-763">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-764">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-764">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-765">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-765">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-766"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-766">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-767">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-767">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-768"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-768">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-769"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-769">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-770">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-770">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-771"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-771"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-772">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-772">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-773">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-773">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="70554-774">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-774">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-775">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-775">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-776">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-776">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-777">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-777">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="70554-778">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-778">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="70554-779">다음 예제에서는 ASP.NET 페이지 내에서 변환을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-779">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-780">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-780">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-781">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-781">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-782">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-782">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-783">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-783">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-784">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-784">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-785"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-785">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-786">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-786">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-787">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-787">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-788">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-788">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-789">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-789">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-790">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-790">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-791"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-791">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-792">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-792">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-793"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-793">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-794"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-794">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-795">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-795">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-796"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-796"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-797">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-797">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-798">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-798">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="70554-799">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-799">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="70554-800">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-800">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="70554-801">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-801">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-802">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-802">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-803">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-803">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-804">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-804">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="70554-805">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-805">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="70554-806">다음 예제에서는 XML 파일을 변환 하 고 HTML 문자열을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-806">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="70554-807">합니다 <xref:System.IO.StringReader> 고 <xref:System.IO.StringWriter> 클래스는 문자열을 읽고 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-807">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="70554-808">이 예제에서는 `books.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-808">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-809">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-809">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-810">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-810">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-811">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-811">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-812">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-812">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-813">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-813">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-814"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-814">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="70554-815">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-815">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-816">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-817">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-817">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-818">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-819">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-820"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-821">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-822"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-823"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-824">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-825"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-826">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-827">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-828">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="70554-828">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="70554-829">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-829">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="70554-830">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-830">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="70554-831">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-831">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-832">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70554-832">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="70554-833">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-833">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="70554-834">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-834">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="70554-835">다음 예제에서는 HTML 문서를 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-835">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="70554-836">테이블에서 ISBN, 제목 및 각 책의 가격은 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-836">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="70554-837">이 샘플에서는 다음 두 입력 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-837">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-838">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-838">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-839">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-839">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-840">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-840">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-841">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-841">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="70554-842">XslTransform의 출력</span><span class="sxs-lookup"><span data-stu-id="70554-842">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-843">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-843">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-844">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-844">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-845">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-845">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-846">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-846">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-847">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-847">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-848"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-848">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-849">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-849">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-850"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-850">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-851"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-851">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-852">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-852">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-853"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-853"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-854">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-854">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-855">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-855">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-856">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-856">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-857">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-857">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-858">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-858">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-859">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-859">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-860">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-860">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-861">다음 예제에는 customer 테이블 로드는 <xref:System.Xml.XmlDataDocument> HTML 테이블에 고객 데이터를 가져올 XSLT 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-861">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="70554-862">이 예제에서는 Microsoft SQL Server 2000 Northwind 데이터베이스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-862">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="70554-863">이 예제에서는 `customers.xsl` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-863">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-864">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-864">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-865">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-865">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-866">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-866">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-867">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-867">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-868">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-868">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-869">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-869">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-870">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-870">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-871">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-871">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-872">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-872">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-873"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-873">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-874">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-874">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-875"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-875">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-876"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-876">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-877">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-877">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-878"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-878"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-879">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-879">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-880">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-880">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-881">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-881">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-882">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-882">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-883">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-883">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-884">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-884">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-885">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-885">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="70554-886">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-886">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-887">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-887">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-888">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-888">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-889">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-889">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-890">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-890">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="70554-891">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-891">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="70554-892">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-892">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="70554-893">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-893">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="70554-894">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-894">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="70554-895">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-895">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="70554-896"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-896">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="70554-897">지정된 인수를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-897">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-898"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-898">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-899"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-899">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-900">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-900">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-901"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-901"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="70554-902">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-902">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="70554-903">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-903">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="70554-904">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-904">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="70554-905">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-905">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="70554-906">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-906">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="70554-907">이 변환 프로세스 전에 현재 된 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-907">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="70554-908">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="70554-908">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="70554-909">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-909">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70554-910">다음 예제에서는 로드 하 고 XSLT 변형을 수행 하기 전에 XML 문서를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-910">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70554-911">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="70554-911">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="70554-912">참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-912">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="70554-913">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-913">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="70554-914">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="70554-914">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70554-915"><see cref="T:System.Xml.XmlResolver" /> 메서드를 호출할 때 외부 리소스를 확인하기 위해 사용하는 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-915">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="70554-916">변환을 수행하는 동안 사용할 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-916">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="70554-917">경우 설정 <see langword="null" />, XSLT <c>document ()</c> 함수가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-917">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70554-918"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-918">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="70554-919"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-919">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="70554-920">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="70554-920">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="70554-921">.NET Framework 버전 1.1 응용 프로그램의 신뢰 수준을 기본 동작을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-921">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="70554-922">`Fully trusted code:` 기본값 <xref:System.Xml.XmlUrlResolver> 사용자를 사용 하 여 자격 증명 사용에 해결 하는 `document()` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-922">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="70554-923">외부 리소스에 액세스할 수에 인증이 필요한 경우이 속성을 사용 하 여 지정 하는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-923">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="70554-924">`Semi-trusted code:` 속성 설정할지 `null`, 즉을 `document()` 함수가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-924">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="70554-925">완전 신뢰를 지정 해야 하기 때문에 <xref:System.Xml.XmlResolver>,이 속성 또한 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-925">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="70554-926">이 확인자를 사용 하면 XSLT `document()` 함수가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70554-926">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="70554-927">해결 하려면 사용 되지 않습니다 `xsl:import` 고 `xsl:include` 스타일 시트에서 참조 되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70554-927">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="70554-928">지정 하는 <xref:System.Xml.XmlResolver> 해결 하는 데 `xsl:import` 및 `xsl:include` 스타일 시트에서 참조 되는 요소를 사용 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 오버 로드를 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로.</span><span class="sxs-lookup"><span data-stu-id="70554-928">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70554-929">이 속성은.NET Framework의 버전 1.1에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-929">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="70554-930">지정 하는 <xref:System.Xml.XmlResolver> 를 사용 하는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="70554-930">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="70554-931">이 경우에 <xref:System.Xml.XmlResolver> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="70554-931">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>
