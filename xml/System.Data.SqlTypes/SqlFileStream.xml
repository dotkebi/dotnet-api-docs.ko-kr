<Type Name="SqlFileStream" FullName="System.Data.SqlTypes.SqlFileStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cb31f6f3e65ecc87ea26c245d449c77a5233fc0" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57945470" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlFileStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlFileStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlTypes.SqlFileStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlFileStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlFileStream sealed : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type SqlFileStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="80c5a-101">FILESTREAM 열 특성에 바이트 시쿼스로 저장된 SQL Server 데이터를 노출합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-101">Exposes SQL Server data that is stored with the FILESTREAM column attribute as a sequence of bytes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-102">합니다 <xref:System.Data.SqlTypes.SqlFileStream> 클래스를 사용 하는 데 사용 됩니다 `varbinary(max)` SQL Server 2008 데이터베이스에 FILESTREAM 특성을 사용 하 여 저장 된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-102">The <xref:System.Data.SqlTypes.SqlFileStream> class is used to work with `varbinary(max)` data stored with the FILESTREAM attribute in a SQL Server 2008 database.</span></span> <span data-ttu-id="80c5a-103">.NET Framework 3.5 SP1을 설치 해야 합니다 (또는 이상)를 사용 하 여 <xref:System.Data.SqlTypes.SqlFileStream> FILESTREAM 데이터로 작업 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-103">You must install the .NET Framework 3.5 SP1 (or later) to use <xref:System.Data.SqlTypes.SqlFileStream> to work with FILESTREAM data.</span></span>  
  
 <span data-ttu-id="80c5a-104">특성에서 FILESTREAM을 지정 하는 `varbinary(max)` 열 하면 SQL Server 데이터베이스 파일에 로컬 NTFS 파일 시스템 대신에 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-104">Specifying the FILESTREAM attribute on a `varbinary(max)` column causes SQL Server to store the data in the local NTFS file system instead of in the database file.</span></span> <span data-ttu-id="80c5a-105">서버 내에서 데이터 조작 기능을 제공 하는 TRANSACT-SQL 문 및 Win32 파일 시스템 인터페이스는 데이터에 대 한 스트리밍 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-105">Transact-SQL statements provide data manipulation capabilities within the server, and Win32 file system interfaces provide streaming access to the data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80c5a-106">FILESTREAM 열에 저장 된 개별 파일은 NTFS 파일 시스템에서 직접 열 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-106">Individual files stored in a FILESTREAM column cannot be opened directly from the NTFS file system.</span></span> <span data-ttu-id="80c5a-107">스트리밍 FILESTREAM 데이터를 SQL Server 트랜잭션 컨텍스트 에서만에서 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-107">Streaming FILESTREAM data works only in the context of a SQL Server transaction.</span></span>  
  
 <span data-ttu-id="80c5a-108"><xref:System.Data.SqlTypes.SqlFileStream> 에서 파생 된 클래스는 <xref:System.IO.Stream> 클래스 파일을 메모리 블록을 등 임의의 데이터 원본의 바이트 시퀀스의 추상화를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-108">The <xref:System.Data.SqlTypes.SqlFileStream> class is derived from the <xref:System.IO.Stream> class, which represents an abstraction of a sequence of bytes from some arbitrary data source such as a file or a block of memory.</span></span> <span data-ttu-id="80c5a-109">스트림에서 바이트 배열과 같은 데이터 구조에 데이터를 전송 하 여 FILESTREAM에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-109">You can read from a FILESTREAM by transferring data from a stream into a data structure such as an array of bytes.</span></span> <span data-ttu-id="80c5a-110">FILESTREAM에 대 한 데이터 구조에서 스트림으로 데이터를 전송 하 여 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-110">You can write to a FILESTREAM by transferring the data from a data structure into a stream.</span></span> <span data-ttu-id="80c5a-111">쿼리 및 스트림 내의 현재 위치에서 데이터를 수정할 수 있는 스트림 내에서 시도할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-111">You can also seek within the stream, which allows you to query and modify data at the current position within the stream.</span></span>  
  
 <span data-ttu-id="80c5a-112">개념 설명서 및 코드 예제를 참조 하세요 [FILESTREAM 데이터](~/docs/framework/data/adonet/sql/filestream-data.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-112">For conceptual documentation and code examples, see [FILESTREAM Data](~/docs/framework/data/adonet/sql/filestream-data.md).</span></span>  
  
 <span data-ttu-id="80c5a-113">설정 및 SQL Server에서 FILESTREAM 데이터를 구성 하는 방법에 대 한 설명서를 참조 하세요 [디자인 52f1ffe0961a">designing and Implementing FILESTREAM](https://go.microsoft.com/fwlink/?LinkId=121499) SQL Server 2008 Books Online에서.</span><span class="sxs-lookup"><span data-stu-id="80c5a-113">For documentation about setting up and configuring FILESTREAM data on SQL Server,  see [Designing and Implementing FILESTREAM Storage](https://go.microsoft.com/fwlink/?LinkId=121499) in SQL Server 2008 Books Online.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-114">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-114">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/fafdc31a-f435-4cd3-883f-1dfadd971277"><span data-ttu-id="80c5a-115">SQL Server 데이터 형식 매핑(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-115">SQL Server Data Type Mappings (ADO.NET)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e00827b3-7511-4b2d-91d7-851ca86cc6b5"><span data-ttu-id="80c5a-116">SQL Server 이진 및 큰 값 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-116">SQL Server Binary and Large-Value Data (ADO.NET)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80c5a-117"><see cref="T:System.Data.SqlTypes.SqlFileStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-117">Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-118">다음 표에서 스택의 모든 호출자에 게 사용 해야 하는 코드 액세스 보안 (CA) 사용 권한을 나열 합니다 `SqlFileStream` 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-118">The following table lists the code access security (CAS) permissions that all callers in the stack must have to use the `SqlFileStream` constructors.</span></span>  
  
|<span data-ttu-id="80c5a-119">파일 액세스</span><span class="sxs-lookup"><span data-stu-id="80c5a-119">File access</span></span>|<span data-ttu-id="80c5a-120">사용 권한</span><span class="sxs-lookup"><span data-stu-id="80c5a-120">Permission</span></span>|  
|-----------------|----------------|  
|<span data-ttu-id="80c5a-121">읽기</span><span class="sxs-lookup"><span data-stu-id="80c5a-121">Read</span></span>|<xref:System.Security.Permissions.FileIOPermissionAccess.Read>|  
|<span data-ttu-id="80c5a-122">Write</span><span class="sxs-lookup"><span data-stu-id="80c5a-122">Write</span></span>|<xref:System.Security.Permissions.FileIOPermissionAccess.Write>|  
|<span data-ttu-id="80c5a-123">ReadWrite</span><span class="sxs-lookup"><span data-stu-id="80c5a-123">ReadWrite</span></span>|<span data-ttu-id="80c5a-124"><xref:System.Security.Permissions.FileIOPermissionAccess.Read> 및 <xref:System.Security.Permissions.FileIOPermissionAccess.Write></span><span class="sxs-lookup"><span data-stu-id="80c5a-124"><xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.Write></span></span>|  
  
 <span data-ttu-id="80c5a-125">CA에 대 한 자세한 내용은 참조 하세요. [코드 액세스 보안 및 ADO.NET](~/docs/framework/data/adonet/code-access-security.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-125">For more information about CAS, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-126">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-126">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, unsigned int8[] transactionContext, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, transactionContext As Byte(), access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlFileStream(System::String ^ path, cli::array &lt;System::Byte&gt; ^ transactionContext, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlTypes.SqlFileStream : string * byte[] * System.IO.FileAccess -&gt; System.Data.SqlTypes.SqlFileStream" Usage="new System.Data.SqlTypes.SqlFileStream (path, transactionContext, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactionContext" Type="System.Byte[]" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="80c5a-127">파일에 대한 논리 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-127">The logical path to the file.</span></span> <span data-ttu-id="80c5a-128">테이블의 기본 FILESTREAM 열에 대해 Transact-SQL Pathname 함수를 사용하여 경로를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-128">The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</span></span></param>
        <param name="transactionContext"><span data-ttu-id="80c5a-129"><see langword="SqlFileStream" /> 개체에 대한 트랜잭션 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-129">The transaction context for the <see langword="SqlFileStream" /> object.</span></span> <span data-ttu-id="80c5a-130">애플리케이션은 GET_FILESTREAM_TRANSACTION_CONTEXT 메서드를 호출하여 반환된 바이트 배열을 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-130">Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</span></span></param>
        <param name="access"><span data-ttu-id="80c5a-131">파일을 열 때 사용할 액세스 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-131">The access mode to use when opening the file.</span></span> <span data-ttu-id="80c5a-132">지원되는 <see cref="T:System.IO.FileAccess" /> 열거 값은 <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> 및 <see cref="F:System.IO.FileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-132">Supported <see cref="T:System.IO.FileAccess" /> enumeration values are <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, and <see cref="F:System.IO.FileAccess.ReadWrite" />.</span></span>  
  
<span data-ttu-id="80c5a-133"><see langword="FileAccess.Read" />를 사용하는 경우 <see langword="SqlFileStream" /> 개체를 사용하여 모든 기존 데이터를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-133">When using <see langword="FileAccess.Read" />, the <see langword="SqlFileStream" /> object can be used to read all of the existing data.</span></span>  
  
<span data-ttu-id="80c5a-134"><see langword="FileAccess.Write" />를 사용하는 경우 <see langword="SqlFileStream" />은 0바이트 파일을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-134">When using <see langword="FileAccess.Write" />, <see langword="SqlFileStream" /> points to a zero byte file.</span></span> <span data-ttu-id="80c5a-135">개체가 닫히고 트랜잭션이 커밋되면 기존 데이터를 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-135">Existing data will be overwritten when the object is closed and the transaction is committed.</span></span>  
  
<span data-ttu-id="80c5a-136"><see langword="FileAccess.ReadWrite" />를 사용하는 경우 <see langword="SqlFileStream" />은 기존의 모든 데이터가 포함된 파일을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-136">When using <see langword="FileAccess.ReadWrite" />, the <see langword="SqlFileStream" /> points to a file which has all the existing data in it.</span></span> <span data-ttu-id="80c5a-137">핸들은 파일의 시작 부분에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-137">The handle is positioned at the beginning of the file.</span></span> <span data-ttu-id="80c5a-138"><see langword="System.IO" /><see langword="Seek" /> 메서드 중 하나를 사용하여 새 데이터를 쓰거나 첨부할 파일 내로 핸들 위치를 이동할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-138">You can use one of the <see langword="System.IO" /><see langword="Seek" /> methods to move the handle position within the file to write or append new data.</span></span></param>
        <summary><span data-ttu-id="80c5a-139"><see cref="T:System.Data.SqlTypes.SqlFileStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-139">Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-140">예외가 throw 되 면 열려 있는 모든 트랜잭션은 롤백해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-140">If an exception is thrown, any open transactions should be rolled back.</span></span> <span data-ttu-id="80c5a-141">그렇지 않은 경우 데이터 손실이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-141">Otherwise, data loss can occur.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80c5a-142"><paramref name="path" />가 null 참조이거나 <paramref name="transactionContext" />가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-142"><paramref name="path" /> is a null reference, or <paramref name="transactionContext" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="80c5a-143"><paramref name="path" />가 빈 문자열("")이거나 공백만 포함하거나 하나 이상의 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-143"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
 <span data-ttu-id="80c5a-144"><paramref name="path" />가 "\\\\.\\"로 시작됩니다(예: "\\\\.\PHYSICALDRIVE0 ").</span><span class="sxs-lookup"><span data-stu-id="80c5a-144"><paramref name="path" /> begins with "\\\\.\\", for example "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
<span data-ttu-id="80c5a-145">NTCreateFile에 대한 호출로 반환된 핸들이 FILE_TYPE_DISK 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-145">The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK.</span></span>  
  
 <span data-ttu-id="80c5a-146"><paramref name="options" />에 지원되지 않는 값이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-146"><paramref name="options" /> contains an unsupported value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="80c5a-147">파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-147">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="80c5a-148">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-148">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="80c5a-149">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-149">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="80c5a-150">지정된 <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span><span class="sxs-lookup"><span data-stu-id="80c5a-150">The specified <paramref name="path" /> is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="80c5a-151">운영 체제에서 지정된 경로에 대해 요청된 액세스를 허용하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-151">The access requested is not permitted by the operating system for the specified path.</span></span> <span data-ttu-id="80c5a-152">이 문제는 Write 또는 ReadWrite 액세스 권한이 지정되고, 파일 또는 디렉터리가 읽기 전용 액세스용으로 설정된 경우에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-152">This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="80c5a-153">오류 코드가 ERROR_SHARING_VIOLATION으로 설정된 상태로 NtCreateFile이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-153">NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-154">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-154">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access, System.IO.FileOptions options, long allocationSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, unsigned int8[] transactionContext, valuetype System.IO.FileAccess access, valuetype System.IO.FileOptions options, int64 allocationSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, transactionContext As Byte(), access As FileAccess, options As FileOptions, allocationSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlFileStream(System::String ^ path, cli::array &lt;System::Byte&gt; ^ transactionContext, System::IO::FileAccess access, System::IO::FileOptions options, long allocationSize);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlTypes.SqlFileStream : string * byte[] * System.IO.FileAccess * System.IO.FileOptions * int64 -&gt; System.Data.SqlTypes.SqlFileStream" Usage="new System.Data.SqlTypes.SqlFileStream (path, transactionContext, access, options, allocationSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactionContext" Type="System.Byte[]" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="options" Type="System.IO.FileOptions" />
        <Parameter Name="allocationSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="80c5a-155">파일에 대한 논리 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-155">The logical path to the file.</span></span> <span data-ttu-id="80c5a-156">테이블의 기본 FILESTREAM 열에 대해 Transact-SQL Pathname 함수를 사용하여 경로를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-156">The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</span></span></param>
        <param name="transactionContext"><span data-ttu-id="80c5a-157"><see langword="SqlFileStream" /> 개체에 대한 트랜잭션 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-157">The transaction context for the <see langword="SqlFileStream" /> object.</span></span> <span data-ttu-id="80c5a-158">null로 설정되면 <see langword="SqlFileStream" /> 개체에 암시적 트랜잭션이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-158">When set to null, an implicit transaction will be used for the <see langword="SqlFileStream" /> object.</span></span> <span data-ttu-id="80c5a-159">애플리케이션은 GET_FILESTREAM_TRANSACTION_CONTEXT 메서드를 호출하여 반환된 바이트 배열을 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-159">Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</span></span></param>
        <param name="access"><span data-ttu-id="80c5a-160">파일을 열 때 사용할 액세스 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-160">The access mode to use when opening the file.</span></span> <span data-ttu-id="80c5a-161">지원되는 <see cref="T:System.IO.FileAccess" /> 열거 값은 <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> 및 <see cref="F:System.IO.FileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-161">Supported <see cref="T:System.IO.FileAccess" /> enumeration values are <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, and <see cref="F:System.IO.FileAccess.ReadWrite" />.</span></span>  
  
<span data-ttu-id="80c5a-162"><see langword="FileAccess.Read" />를 사용하는 경우 <see langword="SqlFileStream" /> 개체를 사용하여 모든 기존 데이터를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-162">When using <see langword="FileAccess.Read" />, the <see langword="SqlFileStream" /> object can be used to read all of the existing data.</span></span>  
  
<span data-ttu-id="80c5a-163"><see langword="FileAccess.Write" />를 사용하는 경우 <see langword="SqlFileStream" />은 0바이트 파일을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-163">When using <see langword="FileAccess.Write" />, <see langword="SqlFileStream" /> points to a zero byte file.</span></span> <span data-ttu-id="80c5a-164">개체가 닫히고 트랜잭션이 커밋되면 기존 데이터를 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-164">Existing data will be overwritten when the object is closed and the transaction is committed.</span></span>  
  
<span data-ttu-id="80c5a-165"><see langword="FileAccess.ReadWrite" />를 사용하는 경우 <see langword="SqlFileStream" />은 기존의 모든 데이터가 포함된 파일을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-165">When using <see langword="FileAccess.ReadWrite" />, the <see langword="SqlFileStream" /> points to a file which has all the existing data in it.</span></span> <span data-ttu-id="80c5a-166">핸들은 파일의 시작 부분에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-166">The handle is positioned at the beginning of the file.</span></span> <span data-ttu-id="80c5a-167"><see langword="System.IO" /><see langword="Seek" /> 메서드 중 하나를 사용하여 새 데이터를 쓰거나 첨부할 파일 내로 핸들 위치를 이동할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-167">You can use one of the <see langword="System.IO" /><see langword="Seek" /> methods to move the handle position within the file to write or append new data.</span></span></param>
        <param name="options"><span data-ttu-id="80c5a-168">파일을 여는 동안 사용할 옵션을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-168">Specifies the option to use while opening the file.</span></span> <span data-ttu-id="80c5a-169">지원되는 <see cref="T:System.IO.FileOptions" /> 값은 <see cref="F:System.IO.FileOptions.Asynchronous" />, <see cref="F:System.IO.FileOptions.WriteThrough" />, <see cref="F:System.IO.FileOptions.SequentialScan" /> 및 <see cref="F:System.IO.FileOptions.RandomAccess" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-169">Supported <see cref="T:System.IO.FileOptions" /> values are <see cref="F:System.IO.FileOptions.Asynchronous" />, <see cref="F:System.IO.FileOptions.WriteThrough" />, <see cref="F:System.IO.FileOptions.SequentialScan" />, and <see cref="F:System.IO.FileOptions.RandomAccess" />.</span></span></param>
        <param name="allocationSize"><span data-ttu-id="80c5a-170">파일을 만드는 동안 사용할 할당 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-170">The allocation size to use while creating a file.</span></span> <span data-ttu-id="80c5a-171">0으로 설정되면 기본값이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-171">If set to 0, the default value is used.</span></span></param>
        <summary><span data-ttu-id="80c5a-172"><see cref="T:System.Data.SqlTypes.SqlFileStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-172">Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-173">예외가 throw 되 면 열려 있는 모든 트랜잭션은 롤백해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-173">If an exception is thrown, any open transactions should be rolled back.</span></span> <span data-ttu-id="80c5a-174">그렇지 않은 경우 데이터 손실이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-174">Otherwise, data loss can occur.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80c5a-175"><paramref name="path" />가 null 참조이거나 <paramref name="transactionContext" />가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-175"><paramref name="path" /> is a null reference, or <paramref name="transactionContext" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="80c5a-176"><paramref name="path" />가 빈 문자열("")이거나 공백만 포함하거나 하나 이상의 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-176"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
 <span data-ttu-id="80c5a-177"><paramref name="path" />가 "\\\\.\\"로 시작됩니다(예: "\\\\.\PHYSICALDRIVE0 ").</span><span class="sxs-lookup"><span data-stu-id="80c5a-177"><paramref name="path" /> begins with "\\\\.\\", for example "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
<span data-ttu-id="80c5a-178">NTCreateFile에 대한 호출에서 반환된 핸들이 FILE_TYPE_DISK 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-178">The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK.</span></span>  
  
 <span data-ttu-id="80c5a-179"><paramref name="options" />에 지원되지 않는 값이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-179"><paramref name="options" /> contains an unsupported value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="80c5a-180">파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-180">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="80c5a-181">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-181">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="80c5a-182">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-182">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="80c5a-183">지정된 <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span><span class="sxs-lookup"><span data-stu-id="80c5a-183">The specified <paramref name="path" /> is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="80c5a-184">운영 체제에서 지정된 경로에 대해 요청된 액세스를 허용하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-184">The access requested is not permitted by the operating system for the specified path.</span></span> <span data-ttu-id="80c5a-185">이 문제는 Write 또는 ReadWrite 액세스 권한이 지정되고, 파일 또는 디렉터리가 읽기 전용 액세스용으로 설정된 경우에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-185">This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="80c5a-186">오류 코드가 ERROR_SHARING_VIOLATION으로 설정된 상태로 NtCreateFile이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-186">NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-187">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-187">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlFileStream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="80c5a-188">데이터를 읽을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-188">The buffer to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="80c5a-189">스트림에서 읽은 데이터를 쓰기 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-189">The byte offset in <paramref name="buffer" /> at which to begin writing data read from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="80c5a-190">읽을 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-190">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="80c5a-191">읽기가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-191">An optional asynchronous callback, to be called when the read is complete.</span></span></param>
        <param name="state"><span data-ttu-id="80c5a-192">다른 요청에서 특정 비동기 읽기 요청을 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-192">A user-provided object that distinguishes this particular asynchronous read request from other requests</span></span></param>
        <summary><span data-ttu-id="80c5a-193">비동기 읽기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-193">Begins an asynchronous read operation.</span></span></summary>
        <returns><span data-ttu-id="80c5a-194">보류 중인 비동기 읽기를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-194">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-195">사용 된 <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> 현재 인스턴스가 읽기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-195">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80c5a-196">이 스트림에서는 데이터 읽기가 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-196">Reading data is not supported on the stream.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-197">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-197">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlFileStream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="80c5a-198">데이터를 쓸 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-198">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="80c5a-199">쓰기를 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-199">The byte offset in <paramref name="buffer" /> from which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="80c5a-200">쓸 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-200">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="80c5a-201">쓰기가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-201">An optional asynchronous callback, to be called when the write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="80c5a-202">다른 요청에서 특정 비동기 쓰기 요청을 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-202">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="80c5a-203">비동기 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-203">Begins an asynchronous write operation.</span></span></summary>
        <returns><span data-ttu-id="80c5a-204">보류 중인 비동기 쓰기를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-204">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-205">사용 된 <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-205">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80c5a-206">스트림에서 데이터 쓰기가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-206">Writing data is not supported on the stream.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-207">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-207">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-208">현재 스트림이 읽기를 지원하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-208">Gets a value indicating whether the current stream supports reading.</span></span></summary>
        <value><span data-ttu-id="80c5a-209">현재 스트림이 읽기를 지원하면 <see langword="true" />이고, 지원하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-209"><see langword="true" /> if the current stream supports reading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-210">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-210">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-211">현재 스트림이 검색을 지원하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-211">Gets a value indicating whether the current stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="80c5a-212">현재 스트림이 검색을 지원하면 <see langword="true" />이고, 지원하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-212"><see langword="true" /> if the current stream supports seeking; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-213">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-213">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-214">현재 스트림이 시간 초과될 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-214">Gets a value indicating whether the current stream can time out.</span></span></summary>
        <value><span data-ttu-id="80c5a-215">현재 스트림이 시간 초과될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-215"><see langword="true" /> if the current stream can time out; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-216">현재 스트림이 쓰기를 지원하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-216">Gets a value indicating whether the current stream supports writing.</span></span></summary>
        <value><span data-ttu-id="80c5a-217">현재 스트림이 쓰기를 지원하면 <see langword="true" />이고, 지원하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-217"><see langword="true" /> if the current stream supports writing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-218">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-218">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlFileStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sqlFileStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="80c5a-219">완료할 보류 중인 비동기 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-219">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="80c5a-220">보류 중인 비동기 읽기가 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-220">Waits for the pending asynchronous read to complete.</span></span></summary>
        <returns><span data-ttu-id="80c5a-221">0과 요청한 바이트 수 사이의 스트림에서 읽은 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-221">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span></span> <span data-ttu-id="80c5a-222">스트림은 스트림의 끝에서만 0을 반환하며, 그렇지 않으면 사용할 수 있는 바이트가 1바이트 이상이 될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-222">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80c5a-223"><see cref="T:System.IAsyncResult" /> 개체를 해당하는 <see langword="BeginRead" /> 메서드에서 가져오지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-223">The <see cref="T:System.IAsyncResult" /> object did not come from the corresponding <see langword="BeginRead" /> method.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-224">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-224">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sqlFileStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="80c5a-225">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-225">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="80c5a-226">비동기 쓰기 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-226">Ends an asynchronous write operation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80c5a-227"><see cref="T:System.IAsyncResult" /> 개체를 해당하는 <see langword="BeginWrite" /> 메서드에서 가져오지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-227">The <see cref="T:System.IAsyncResult" /> object did not come from the corresponding <see langword="BeginWrite" /> method.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-228">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-228">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SqlFileStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SqlFileStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="sqlFileStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80c5a-229">가비지 수집기에서 <see cref="T:System.Data.SqlTypes.SqlFileStream" />을 회수할 때 리소스가 해제되고 다른 정리 작업이 수행되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-229">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sqlFileStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80c5a-230">이 스트림에 대한 모든 버퍼를 지우고 버퍼링된 모든 데이터가 내부 장치에 쓰여지도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-230">clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-231">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-231">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.SqlTypes.SqlFileStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-232">현재 스트림의 길이(바이트)를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-232">Gets a value indicating the length of the current stream in bytes.</span></span></summary>
        <value><span data-ttu-id="80c5a-233">현재 스트림의 길이(바이트)를 나타내는 <see cref="T:System.Int64" />입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-233">An <see cref="T:System.Int64" /> indicating the length of the current stream in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-234">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-234">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.SqlTypes.SqlFileStream.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-235">생성자에 전달된 <see cref="T:System.Data.SqlTypes.SqlFileStream" />의 논리 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-235">Gets the logical path of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> passed to the constructor.</span></span></summary>
        <value><span data-ttu-id="80c5a-236"><see cref="T:System.Data.SqlTypes.SqlFileStream" />의 이름을 나타내는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-236">A string value indicating the name of the <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-237">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-237">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.SqlTypes.SqlFileStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-238">현재 스트림 내의 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-238">Gets or sets the position within the current stream.</span></span></summary>
        <value><span data-ttu-id="80c5a-239"><see cref="T:System.Data.SqlTypes.SqlFileStream" /> 내의 현재 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-239">The current position within the <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-240">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-240">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sqlFileStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="80c5a-241">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-241">An array of bytes.</span></span> <span data-ttu-id="80c5a-242">이 메서드가 반환될 때 버퍼에는 지정된 바이트 배열의 값이 오프셋 및 (오프셋 + 카운트 - 1) 사이에서 현재 소스로부터 읽어온 바이트로 교체된 상태로 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-242">When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="80c5a-243">현재 스트림에서 읽은 데이터를 저장하기 시작하는 버퍼의 바이트 오프셋(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-243">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="80c5a-244">현재 스트림에서 읽을 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-244">The maximum number of bytes to be read from the current stream.</span></span></param>
        <summary><span data-ttu-id="80c5a-245">현재 스트림에서 바이트 시퀀스를 읽고 읽은 바이트 수만큼 스트림에서 위치를 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-245">Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="80c5a-246">버퍼로 읽어온 총 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-246">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="80c5a-247">이 바이트 수는 현재 바이트가 충분하지 않은 경우 요청된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달하면 0이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-247">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-248">사용 된 <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-248">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80c5a-249">개체에서 데이터 읽기를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-249">The object does not support reading of data.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-250">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-250">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="sqlFileStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80c5a-251">스트림에서 바이트를 읽고 스트림 내 위치를 한 바이트씩 앞으로 이동하거나 스트림 끝일 경우 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-251">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="80c5a-252"><see cref="T:System.Int32" />로 캐스팅된 부호 없는 바이트이거나 스트림의 끝에 있는 경우 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-252">The unsigned byte cast to an <see cref="T:System.Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-253">사용 된 <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> 현재 인스턴스가 읽기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-253">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80c5a-254">개체에서 데이터 읽기를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-254">The object does not support reading of data.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-255">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-255">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Data.SqlTypes.SqlFileStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-256">스트림 읽기 시도가 만료되기 전까지 기다릴 시간을 결정하는 값(밀리초)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-256">Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.</span></span></summary>
        <value><span data-ttu-id="80c5a-257">스트림 읽기 시도가 만료되기 전까지 기다릴 시간을 결정한는 값(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-257">A value, in milliseconds, that determines how long the stream will attempt to read before timing out.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-258">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-258">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sqlFileStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="80c5a-259"><paramref name="origin" /> 매개 변수에 상대적인 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-259">A byte offset relative to the <paramref name="origin" /> parameter</span></span></param>
        <param name="origin"><span data-ttu-id="80c5a-260">새 위치를 가져오는 데 사용되는 참조 위치를 나타내는 <see cref="T:System.IO.SeekOrigin" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-260">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position</span></span></param>
        <summary><span data-ttu-id="80c5a-261">현재 스트림 내에서 위치를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-261">Sets the position within the current stream.</span></span></summary>
        <returns><span data-ttu-id="80c5a-262">현재 스트림 내의 새 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-262">The new position within the current stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-263">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-263">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sqlFileStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="80c5a-264">원하는 현재 스트림의 길이(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-264">The desired length of the current stream in bytes.</span></span></param>
        <summary><span data-ttu-id="80c5a-265">현재 스트림의 길이를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-265">Sets the length of the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-266">사용 된 <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> 현재 인스턴스가 읽기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-266">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80c5a-267">개체에서 데이터 읽기를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-267">The object does not support reading of data.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-268">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-268">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransactionContext">
      <MemberSignature Language="C#" Value="public byte[] TransactionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] TransactionContext" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.TransactionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionContext As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ TransactionContext { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionContext : byte[]" Usage="System.Data.SqlTypes.SqlFileStream.TransactionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-269">이 <see cref="T:System.Data.SqlTypes.SqlFileStream" /> 개체의 트랜잭션 컨텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-269">Gets or sets the transaction context for this <see cref="T:System.Data.SqlTypes.SqlFileStream" /> object.</span></span></summary>
        <value><span data-ttu-id="80c5a-270">이 <see cref="T:System.Data.SqlTypes.SqlFileStream" /> 개체의 생성자에 전달된 <paramref name="transactionContext" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-270">The <paramref name="transactionContext" /> array that was passed to the constructor for this <see cref="T:System.Data.SqlTypes.SqlFileStream" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-271">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-271">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sqlFileStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="80c5a-272">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-272">An array of bytes.</span></span> <span data-ttu-id="80c5a-273">이 메서드는 <paramref name="buffer" />의 <paramref name="count" /> 바이트를 현재 스트림으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-273">This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="80c5a-274">현재 스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-274">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="80c5a-275">현재 스트림에 쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-275">The number of bytes to be written to the current stream.</span></span></param>
        <summary><span data-ttu-id="80c5a-276">현재 스트림에 바이트 시퀀스를 쓰고 쓴 바이트 수만큼 이 스트림에서 현재 위치를 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-276">Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-277">사용 된 <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-277">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80c5a-278">개체에서 데이터 쓰기를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-278">The object does not support writing of data.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-279">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-279">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="sqlFileStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="80c5a-280">스트림에 쓸 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-280">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="80c5a-281">스트림의 현재 위치에 바이트를 쓰고 스트림 내 위치를 1바이트씩 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-281">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c5a-282">사용 된 <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-282">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="80c5a-283">개체에서 데이터 쓰기를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="80c5a-283">The object does not support writing of data.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-284">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-284">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Data.SqlTypes.SqlFileStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c5a-285">스트림 쓰기 시도가 만료되기 전까지 기다릴 시간을 결정하는 값(밀리초)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-285">Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.</span></span></summary>
        <value><span data-ttu-id="80c5a-286">스트림 쓰기 시도가 만료되기 전까지 기다릴 시간을 결정하는 값(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="80c5a-286">A value, in milliseconds, that determines how long the stream will attempt to write before timing out.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8"><span data-ttu-id="80c5a-287">SQL Server 2008에서 FILESTREAM 데이터(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="80c5a-287">FILESTREAM Data in SQL Server 2008 (ADO.NET)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>