<Type Name="JsonReaderState" FullName="System.Text.Json.JsonReaderState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6225284e1ba227a6a73f861d5fdaba59c0849938" /><Meta Name="ms.sourcegitcommit" Value="e28b7b371ead27d99e20387b8243f09b0cdb9fb3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/12/2019" /><Meta Name="ms.locfileid" Value="59541478" /></Metadata><TypeSignature Language="C#" Value="public struct JsonReaderState" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonReaderState extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonReaderState" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonReaderState" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonReaderState" />
  <TypeSignature Language="F#" Value="type JsonReaderState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="93940-101">불완전한 데이터를 처리한 후에도 계속 읽기 위해 <see cref="T:System.Text.Json.Utf8JsonReader" />에 제공되어야 하는 모든 관련 상태 정보를 보유하고 저장하는 불투명 형식을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-101">Defines an opaque type that holds and saves all the relevant state information, which must be provided to the <see cref="T:System.Text.Json.Utf8JsonReader" /> to continue reading after processing incomplete data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="93940-102">`JsonReaderState` 불완전 한 데이터를 읽을 때 재진입을 지원 하 고 계속 해 서 더 많은 데이터를 사용할 수 있으면 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-102">`JsonReaderState` is required to support reentrancy when reading incomplete data, and to continue reading once more data is available.</span></span> <span data-ttu-id="93940-103">와 달리 합니다 <xref:System.Text.Json.Utf8JsonReader> 구조체에 ref 구조체는,이 형식은 async/await 경계를 넘어 감당할 수 있습니다 및의 새 인스턴스를 사용 하 여 계속 하기 전에 더 많은 데이터를 비동기적으로 읽을 수 있도록 하는 데 필요한 것 이므로 <xref:System.Text.Json.Utf8JsonReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-103">Unlike the <xref:System.Text.Json.Utf8JsonReader> struct, which is a ref struct, this type can survive across async/await boundaries, and hence it's required to provide support for reading more data asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonReader>.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonReaderState (int maxDepth = 64, System.Text.Json.JsonReaderOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxDepth, valuetype System.Text.Json.JsonReaderOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonReaderState.#ctor(System.Int32,System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional maxDepth As Integer = 64, Optional options As JsonReaderOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonReaderState : int * System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonReaderState" Usage="new System.Text.Json.JsonReaderState (maxDepth, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxDepth" Type="System.Int32" />
        <Parameter Name="options" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="maxDepth"><span data-ttu-id="93940-104">JSON을 읽을 때 허용되는 최대 깊이입니다.</span><span class="sxs-lookup"><span data-stu-id="93940-104">The maximum depth allowed when reading JSON.</span></span> <span data-ttu-id="93940-105">선택적 매개 변수이며 기본값은 64입니다.</span><span class="sxs-lookup"><span data-stu-id="93940-105">This is an optional parameter, and its default value is 64.</span></span> <span data-ttu-id="93940-106">이 깊이를 초과해서 읽으면 <see cref="T:System.Text.Json.JsonReaderException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-106">Reading past this depth throws a <see cref="T:System.Text.Json.JsonReaderException" /></span></span></param>
        <param name="options"><span data-ttu-id="93940-107">JSON RFC와 다른 사용자 지정 동작 <see cref="T:System.Text.Json.Utf8JsonReader" />입니다(예: 주석을 처리하는 방법).</span><span class="sxs-lookup"><span data-stu-id="93940-107">The customized behavior of the <see cref="T:System.Text.Json.Utf8JsonReader" /> that is different from the JSON RFC (for example, how to handle comments).</span></span>
<span data-ttu-id="93940-108">선택적 매개 변수이며, 기본적으로 <see cref="T:System.Text.Json.Utf8JsonReader" /> 구조체는 JSON RFC를 엄격하게 따릅니다(즉, JSON 내의 주석이 유효하지 않음).</span><span class="sxs-lookup"><span data-stu-id="93940-108">This is an optional parameter and, by default, the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct follows the JSON RFC strictly (that is, comments within the JSON are invalid).</span></span></param>
        <summary><span data-ttu-id="93940-109"><see cref="T:System.Text.Json.JsonReaderState" /> 구조체의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-109">Initializes a new instance of the <see cref="T:System.Text.Json.JsonReaderState" /> struct.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="93940-110">A <xref:System.Text.Json.JsonReaderState> 인스턴스를 전달 해야 합니다 <xref:System.Text.Json.Utf8JsonReader> JSON 데이터를 사용 하 여 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="93940-110">A <xref:System.Text.Json.JsonReaderState> instance must be passed to the <xref:System.Text.Json.Utf8JsonReader> constructor with the JSON data.</span></span>
<span data-ttu-id="93940-111">와 달리 합니다 <xref:System.Text.Json.Utf8JsonReader>, ref 구조체는, 상태 async/await 경계를 넘어 생존할 수 및이 형식은의 새 인스턴스를 사용 하 여 계속 하기 전에 더 많은 데이터를 비동기적으로 읽을 수 있도록 하는 데 필요한입니다. 따라서는 <xref:System.Text.Json.Utf8JsonReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="93940-111">Unlike the <xref:System.Text.Json.Utf8JsonReader>, which is a ref struct, the state can survive across async/await boundaries, and hence this type is required to provide support for reading more data asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonReader> class.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93940-112"><paramref name="maxDepth" />가 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="93940-112"><paramref name="maxDepth" /> is less than or equal to 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BytesConsumed">
      <MemberSignature Language="C#" Value="public long BytesConsumed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesConsumed" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.BytesConsumed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesConsumed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesConsumed { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesConsumed : int64" Usage="System.Text.Json.JsonReaderState.BytesConsumed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93940-113">지정된 UTF-8 인코딩 입력 텍스트에 대해 지금까지 <see cref="T:System.Text.Json.Utf8JsonReader" />에 의해 사용된 바이트의 총 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="93940-113">Gets the total number of bytes consumed by the <see cref="T:System.Text.Json.Utf8JsonReader" /> so far for the given UTF-8 encoded input text.</span></span></summary>
        <value><span data-ttu-id="93940-114">사용 하는 바이트의 총 수를 <see cref="T:System.Text.Json.Utf8JsonReader" /> 지금 합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-114">The total number of bytes consumed by the <see cref="T:System.Text.Json.Utf8JsonReader" /> so far.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int" Usage="System.Text.Json.JsonReaderState.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93940-115">JSON을 읽을 때 허용되는 최대 깊이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="93940-115">Gets the maximum depth allowed when reading JSON.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks
        
<span data-ttu-id="93940-116">지난 읽기용 `MaxDepth` throw를 <xref:System.Text.Json.JsonReaderException>입니다.</span><span class="sxs-lookup"><span data-stu-id="93940-116">Reading past `MaxDepth` throws a <xref:System.Text.Json.JsonReaderException>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonReaderOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonReaderOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonReaderOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonReaderOptions Options { System::Text::Json::JsonReaderOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonReaderOptions" Usage="System.Text.Json.JsonReaderState.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonReaderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93940-117">기본 동작인 JSON 사양을 엄격하게 준수하지 않는 <see cref="T:System.Text.Json.Utf8JsonReader" /> 구조체를 사용하여 JSON 데이터를 읽을 때 사용할 사용자 지정 동작을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="93940-117">Gets the custom behavior to use when reading JSON data using the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct that may deviate from strict adherence to the JSON specification, which is the default behavior.</span></span></summary>
        <value><span data-ttu-id="93940-118">JSON 데이터를 읽을 때 사용할 사용자 지정 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="93940-118">The custom behavior to use when reading JSON data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public SequencePosition Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.SequencePosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As SequencePosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property SequencePosition Position { SequencePosition get(); };" />
      <MemberSignature Language="F#" Value="member this.Position : SequencePosition" Usage="System.Text.Json.JsonReaderState.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SequencePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93940-119">제공된 UTF-8 인코딩 입력 ReadOnlySequence&lt;byte&gt; 내에서 현재 <see cref="T:System.SequencePosition" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="93940-119">Gets the current <see cref="T:System.SequencePosition" /> within the provided UTF-8 encoded input ReadOnlySequence&lt;byte&gt;.</span></span> <span data-ttu-id="93940-120">대신 <see cref="T:System.Text.Json.Utf8JsonReader" /> 구조체를 ReadOnlySpan&lt;byte&gt;로 생성한 경우 항상 기본 <see cref="T:System.SequencePosition" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-120">If the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct was constructed with a ReadOnlySpan&lt;byte&gt; instead, this will always return a default <see cref="T:System.SequencePosition" />.</span></span></summary>
        <value><span data-ttu-id="93940-121">현재 <see cref="T:System.SequencePosition" /> 제공 된 utf-8 인코딩 내 입력 ReadOnlySequence&lt;바이트&gt;합니다.</span><span class="sxs-lookup"><span data-stu-id="93940-121">The current <see cref="T:System.SequencePosition" /> within the provided UTF-8 encoded input ReadOnlySequence&lt;byte&gt;.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
