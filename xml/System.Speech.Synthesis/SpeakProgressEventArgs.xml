<Type Name="SpeakProgressEventArgs" FullName="System.Speech.Synthesis.SpeakProgressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ad1b44ffb76626304234c6c3814b274fa5c085a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58691466" /></Metadata><TypeSignature Language="C#" Value="public class SpeakProgressEventArgs : System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpeakProgressEventArgs extends System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeakProgressEventArgs&#xA;Inherits PromptEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeakProgressEventArgs : System::Speech::Synthesis::PromptEventArgs" />
  <TypeSignature Language="F#" Value="type SpeakProgressEventArgs = class&#xA;    inherit PromptEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Synthesis.PromptEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="38bcc-101"><see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> 이벤트에서 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-101">Returns data from the <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38bcc-102">인스턴스의 <xref:System.Speech.Synthesis.SpeakProgressEventArgs> 때 생성 되는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 발생 시키는 개체를 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-102">An instance of <xref:System.Speech.Synthesis.SpeakProgressEventArgs> is created when the <xref:System.Speech.Synthesis.SpeechSynthesizer> object raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event.</span></span> <span data-ttu-id="38bcc-103">합니다 <xref:System.Speech.Synthesis.SpeechSynthesizer> 중 하나를 사용 하 여 프롬프트에서 강연 하는 새로운 각 단어에 대해이 이벤트를 발생 시킵니다 합니다 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="38bcc-103">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="38bcc-104">반환된 된 데이터에는 음성 합성 태그 언어 (SSML) 코드를 생성 하는 기반입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-104">The returned data is based on the Speech Synthesis Markup Language (SSML) that the code generates.</span></span> <span data-ttu-id="38bcc-105">반환 된 값 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> 공백 문자 및 코드에서 생성 되는 SSML 태그의 내용을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-105">The values returned for <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> include spaces and the characters and contents of the SSML tags generated by the code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38bcc-106">다음 예제에서는에서 사용할 수 있는 정보 <xref:System.Speech.Synthesis.SpeakProgressEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-106">The following example demonstrates the information that is available from <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span> <span data-ttu-id="38bcc-107">참고 하는 방법을 <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, 및 <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A> 방법에 영향을 합니다 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> 가 추가 하 여  **\<p >** 를  **\< /p >** 하십시오  **\<s >**, 및  **\</s >** 생성 된 SSML 태그.</span><span class="sxs-lookup"><span data-stu-id="38bcc-107">Note how the <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A> methods affect the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> by their addition of **\<p>**, **\</p>**, **\<s>**, and **\</s>** tags to the generated SSML.</span></span> <span data-ttu-id="38bcc-108">또한 두 항목의에서 경우이 숫자 문자열 (30%)을 말하는 각 단어에 대 한 "30%"에 대 한 출력</span><span class="sxs-lookup"><span data-stu-id="38bcc-108">Also, there are two entries in the output for "30%", one for each word to speak this number string (thirty percent).</span></span> <span data-ttu-id="38bcc-109">합니다 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> 및 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 각 항목에 대해 동일 하 고 나타내는 문자 "30%입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-109">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> are the same for each entry and represent the characters "30%.</span></span> <span data-ttu-id="38bcc-110">그러나 합니다 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> 말하기 "30" 단어와 "percent" 하 여 반영 하도록 변경 합니다 <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="38bcc-110">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> changes to reflect the speaking of the words "thirty" and "percent" by the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt containing a paragraph and two sentences.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.StartParagraph();  
        builder.StartSentence();  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.EndSentence();  
        builder.StartSentence();  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.EndSentence();  
        builder.EndParagraph();  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("CharPos: {0}   CharCount: {1}   AudioPos: {2}    \"{3}\"",  
        e.CharacterPosition, e.CharacterCount, e.AudioPosition, e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AudioPosition">
      <MemberSignature Language="C#" Value="public TimeSpan AudioPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AudioPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AudioPosition As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AudioPosition { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.AudioPosition : TimeSpan" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38bcc-111">이벤트의 오디오 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-111">Gets the audio position of the event.</span></span></summary>
        <value><span data-ttu-id="38bcc-112">오디오 출력 스트림에 이벤트의 위치를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-112">Returns the position of the event in the audio output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38bcc-113"><xref:System.Speech.Synthesis.SpeechSynthesizer> 숫자 수 읽을 하는 방법에 해당 하는 단어를 정규화 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="38bcc-114">예를 들어 신시사이저 "4 천 3"와 "4003" 수를 말합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-114">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="38bcc-115">발생을 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 각 음성된 단어로 및 반환에 대 한 이벤트는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> 각 단어에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-115">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words, and returns the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> for each word.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCount">
      <MemberSignature Language="C#" Value="public int CharacterCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterCount" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCount : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38bcc-116">이벤트가 발생하기 직전에 음성으로 변환 된 단어의 문자 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-116">Gets the number of characters in the word that was spoken just before the event was raised.</span></span></summary>
        <value><span data-ttu-id="38bcc-117">이벤트가 발생하기 직전에 음성으로 변환된 단어의 문자 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-117">Returns the number of characters in the word that was spoken just before the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38bcc-118"><xref:System.Speech.Synthesis.SpeechSynthesizer> 숫자 수 읽을 하는 방법에 해당 하는 단어를 정규화 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-118">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="38bcc-119">예를 들어 신시사이저 "4 천 3"와 "4003" 수를 말합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-119">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="38bcc-120">발생 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 음성의 각각에 대 한 이벤트.</span><span class="sxs-lookup"><span data-stu-id="38bcc-120">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="38bcc-121">그러나는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> 세 단어의 각 속성이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-121">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="38bcc-122">이 경우 수가 "4003" 텍스트에 프롬프트 문자 수는 4입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-122">It is the count of the characters in the number "4003" in the text of the prompt, in this case, four.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterPosition">
      <MemberSignature Language="C#" Value="public int CharacterPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterPosition : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38bcc-123">프롬프트의 처음부터 방금 읽은 단어의 첫 번째 문자 바로 앞의 위치까지 문자 및 공백의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-123">Gets the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></summary>
        <value><span data-ttu-id="38bcc-124">프롬프트의 처음부터 방금 읽은 단어의 첫 번째 문자 바로 앞의 위치까지 문자와 공백의 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-124">Returns the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38bcc-125"><xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 해당 바깥쪽 괄호를 포함 하 여 XML 태그에 문자 수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-125">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> includes the count for characters in XML tags, including their enclosing brackets.</span></span> <span data-ttu-id="38bcc-126">중 하나를 사용 하는 경우는 <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>를 <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, 또는 <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> 메서드를 콘텐츠 열기 및 닫기 포함 하는 SSML 프롬프트를 추가할 `speak` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-126">When using any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods, the contents are added to an SSML prompt that includes the opening and closing `speak` elements.</span></span> <span data-ttu-id="38bcc-127">열기 `speak` 요소 82 문자 오프셋을 추가 하 고 공간에 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 모든 단어의 문자와 프롬프트에서.</span><span class="sxs-lookup"><span data-stu-id="38bcc-127">The opening `speak` element adds an offset of 82 characters and spaces to the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the all the words and letters in the prompt.</span></span> <span data-ttu-id="38bcc-128">예를 들어, 다음 코드 조각과,는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 첫 번째 단어의 "this"는 82입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-128">For example, in the following snippet, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", is 82.</span></span>  
  
```csharp  
builder.AppendText("This is a test");  
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="38bcc-129">위의 예제는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 단어 "test"은 92 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-129">In the above example the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 92.</span></span> <span data-ttu-id="38bcc-130">다음 코드 조각에는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 단어의 "테스트" 이므로 더 높은 23 자 (115) 열기  **\<prosody 피치 = "높음" >** 23 문자 및 공백을 (두 이스케이프를 앞에 오는 태그 포함 문자 "\\" 계산 되지 않습니다).</span><span class="sxs-lookup"><span data-stu-id="38bcc-130">In the following snippet the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 23 characters higher (115) because the opening **\<prosody pitch="high">**  tag that precedes it contains 23 characters and spaces (the two escape characters "\\" are not counted).</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("This is a <prosody pitch=\"high\"> test </prosody>.");   
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="38bcc-131">사용 하는 경우는 <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> 프롬프트를 여는 파일을 지정 하 여 콘텐츠를 추가 하는 방법 `xml` 선언 및 `speak` 파일의 요소는 사용 되지 않거나 계산 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-131">If you use the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods to add content to a prompt by specifying a file, the opening `xml` declaration and `speak` elements in the file are not used or counted.</span></span> <span data-ttu-id="38bcc-132">연 후 파일의 첫 번째 문자 `speak` 프롬프트의 첫 내용 있으면 82 위치의 태그 됩니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-132">The first character in the file after the opening `speak` tag will be at position 82 if it is the first content in the prompt.</span></span>  
  
 <span data-ttu-id="38bcc-133">반대로, 문자열 매개 변수는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드는 추가 되지 SSML 프롬프트를 내레이션 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-133">By contrast, the string parameter of a <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method does not get added to an SSML prompt before being spoken.</span></span> <span data-ttu-id="38bcc-134">따라서는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 첫 번째 단어를 "this"에 다음 코드 조각과에서 0입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-134">Therefore, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", in the following snippet is zero.</span></span>  
  
```csharp  
Synthesizer.Speak("This is a test.");  
```  
  
 <span data-ttu-id="38bcc-135"><xref:System.Speech.Synthesis.SpeechSynthesizer> 숫자 수 읽을 하는 방법에 해당 하는 단어를 정규화 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-135">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="38bcc-136">예를 들어 신시사이저 "4 천 3"와 "4003" 수를 말합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-136">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="38bcc-137">발생 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 각 세 가지 음성된 단어에 대 한 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-137">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the three spoken words.</span></span> <span data-ttu-id="38bcc-138">그러나는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 세 단어의 각 속성이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-138">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="38bcc-139">프롬프트의 텍스트에 "4003" 번호의 첫 번째 문자 앞의 위치는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-139">It is the position before the first character of the number "4003" in the text of the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38bcc-140">다음 예제는 <xref:System.Speech.Synthesis.PromptBuilder> SSML 내용을 사용 하 여 XML 파일을 추가 하 고 <xref:System.Xml.XmlReader>입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-140">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> and appends the SSML contents of an XML file using <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="38bcc-141">이 예제에서는 음성 WAV 파일 재생에 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-141">The example outputs speech to a WAV file for playback.</span></span> <span data-ttu-id="38bcc-142">SSML를 포함 하는 XML 파일 내용의 코드 예제에서는 아래에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-142">The contents of the XML file containing the SSML appear below the code example.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a path to the file that contains SSML.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.ssml");  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress: {0} {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
  
```  
  
```xml  
<!-- The following are the contents of the file Weather.ssml.   
Note that because of the <p> tag and the space that follows it,   
that the character position of the first word "The" will be 86. -->  
  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <p> The weather forecast for today is partly cloudy with   
some sun breaks. </p>  
  
  <break strength="medium" />  
  
  <p> Tonight's weather will be cloudy with a 30% chance of   
showers. </p>  
  
</speak>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38bcc-143">이벤트가 발생할 때 호출된 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-143">The text that was just spoken when the event was raised.</span></span></summary>
        <value><span data-ttu-id="38bcc-144">이벤트가 발생할 때 호출된 텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-144">Returns the text that was just spoken when the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38bcc-145"><xref:System.Speech.Synthesis.SpeechSynthesizer> 숫자 수 읽을 하는 방법에 해당 하는 단어를 정규화 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-145">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="38bcc-146">예를 들어 신시사이저 "4 천 3"와 "4003" 수를 말합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-146">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="38bcc-147">발생 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 음성의 각각에 대 한 이벤트.</span><span class="sxs-lookup"><span data-stu-id="38bcc-147">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="38bcc-148">그러나는 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> 세 단어의 각 속성이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-148">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="38bcc-149">프롬프트에서 "4003" 텍스트는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-149">It is the text "4003" from the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38bcc-150">다음 예제는 방법에는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 이벤트 보고서를 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 및 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> 숫자가 포함 된 문자열에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="38bcc-150">The following example illustrates the how the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event reports the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> properties for strings that contain numbers.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("4003");  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress -    Character position:  {0}    Text:  {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>