<Type Name="ObjectQuery&lt;T&gt;" FullName="System.Data.Objects.ObjectQuery&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="020d5a22af28a5020c9db9d5510fae6719d86487" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57919288" /></Metadata><TypeSignature Language="C#" Value="public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectQuery`1&lt;T&gt; extends System.Data.Objects.ObjectQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectQuery(Of T)&#xA;Inherits ObjectQuery&#xA;Implements IEnumerable(Of T), IListSource, IOrderedQueryable(Of T), IQueryable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ObjectQuery : System::Data::Objects::ObjectQuery, System::Collections::Generic::IEnumerable&lt;T&gt;, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable&lt;T&gt;, System::Linq::IQueryable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="18269-101">쿼리의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-101">The entity type of the query.</span></span></typeparam>
    <summary><span data-ttu-id="18269-102">지정된 개체 컨텍스트의 개념적 모델에 대해 형식화된 쿼리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="18269-102">Represents a typed query against a conceptual model in a given object context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-103"><xref:System.Data.Objects.ObjectQuery%601> 제네릭 클래스는 0개 이상의 특정 형식에 대한 개체로 구성된 컬렉션을 반환하는 쿼리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="18269-103">The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type.</span></span> <span data-ttu-id="18269-104">개체 쿼리를 실행하기 전에 <xref:System.Data.Objects.ObjectContext>를 정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-104">The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed.</span></span> <span data-ttu-id="18269-105">이 컨텍스트는 쿼리를 작성하고 실행하는 데 필요한 연결 및 메타데이터 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-105">This context provides the connection and metadata information that is required to compose and execute the query.</span></span> <span data-ttu-id="18269-106">개체 쿼리는 다음 시나리오에서 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-106">An object query is executed in the following scenarios:</span></span>  
  
-   <span data-ttu-id="18269-107">`foreach`(C#) 또는 `For Each`(Visual Basic) 열거 작업 등이 수행된 경우</span><span class="sxs-lookup"><span data-stu-id="18269-107">When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration.</span></span>  
  
-   <span data-ttu-id="18269-108"><xref:System.Collections.Generic.List%601> 컬렉션을 채우기 위해 할당된 경우</span><span class="sxs-lookup"><span data-stu-id="18269-108">When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.</span></span>  
  
-   <span data-ttu-id="18269-109"><xref:System.Data.Objects.ObjectQuery%601.Execute%2A> 메서드를 명시적으로 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="18269-109">When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.</span></span>  
  
 <span data-ttu-id="18269-110">쿼리 자체는 [!INCLUDE[esql](~/includes/esql-md.md)] 문 또는 LINQ 쿼리를 사용하여 만들거나 클래스에 포함된 쿼리 작성기 메서드를 사용하여 증분 빌드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-110">The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class.</span></span> <span data-ttu-id="18269-111">그 결과, 명시적으로 실행되거나 열거되면 실행할 데이터 소스에 쿼리를 보내고 결과를 반환하는 새 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="18269-111">In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.</span></span>  
  
 <span data-ttu-id="18269-112"><xref:System.Data.Objects.ObjectQuery%601>는 대개 엔터티 형식이지만 익명 형식에 대한 프로젝션의 경우 <xref:System.Data.Common.DbDataRecord> 형식일 수도 있으며 정수나 문자열 같은 기본 형식일 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-112">An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string.</span></span> <span data-ttu-id="18269-113">자세한 내용은 [개체 쿼리](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-113">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-114">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-114">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="18269-115">예제에서는 <xref:System.Data.Objects.ObjectQuery%601> 클래스의 인스턴스를 생성하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="18269-115">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9e7d8837-28c5-429d-a824-7bafb59724cf"><span data-ttu-id="18269-116">Entity SQL 언어</span><span class="sxs-lookup"><span data-stu-id="18269-116">Entity SQL Language</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/641f9b68-9046-47a1-abb0-1c8eaeda0e2d"><span data-ttu-id="18269-117">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="18269-117">LINQ to Entities</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-118">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-118">Querying Data as Objects (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18269-119"><see cref="T:System.Data.Objects.ObjectQuery`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-119">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-120">@FSHO2@스칼라 결과의 컬렉션이 아닌 단일 스칼라 결과를 나타내는 방식으로 <xref:System.Data.Objects.ObjectQuery%601>를 초기화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-120">An <xref:System.Data.Objects.ObjectQuery%601> can be initialized in such a way that it represents a single scalar result and not a collection of scalar results.</span></span> <span data-ttu-id="18269-121">@FSHO2@몇몇 확장 메서드는 입력으로 컬렉션 결과를 필요로 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-121">Some extension methods require collection results as input.</span></span> <span data-ttu-id="18269-122">@FSHO2@이러한 메서드 중 하나를 호출하면 <xref:System.ArgumentException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-122">In this case, an <xref:System.ArgumentException> is thrown when one of these methods is called.</span></span> <span data-ttu-id="18269-123">자세한 내용은 [개체 쿼리](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-123">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="18269-124">응용 프로그램에서 런타임에 Entity SQL 쿼리를 생성할 때 데이터 원본의 모든 명령 길이 제한을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-124">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="18269-125">Entity SQL 쿼리 명령 텍스트의 길이에 제한을 적용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-125">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-126">데이터를 개체로 쿼리 및 결과 (Entity Framework) 셰이핑</span><span class="sxs-lookup"><span data-stu-id="18269-126">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="18269-127">[!INCLUDE[esql](~/includes/esql-md.md)] 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-127">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="18269-128">쿼리를 실행할 <see cref="T:System.Data.Objects.ObjectContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-128">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <summary><span data-ttu-id="18269-129">지정된 [!INCLUDE[esql](~/includes/esql-md.md)] 명령을 초기 쿼리로 사용하여 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-129">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-130">응용 프로그램에서 런타임에 Entity SQL 쿼리를 생성할 때 데이터 원본의 모든 명령 길이 제한을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-130">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="18269-131">Entity SQL 쿼리 명령 텍스트의 길이에 제한을 적용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-131">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-132">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-132">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-133">예제에서는 <xref:System.Data.Objects.ObjectQuery%601> 클래스의 인스턴스를 생성하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="18269-133">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-134">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-134">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context, mergeOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="18269-135">[!INCLUDE[esql](~/includes/esql-md.md)] 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-135">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="18269-136">쿼리를 실행할 <see cref="T:System.Data.Objects.ObjectContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-136">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="18269-137">이 쿼리를 통해 검색한 엔터티를 같은 <see cref="T:System.Data.Objects.ObjectContext" />의 이전 쿼리에서 반환된 엔터티와 병합할 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-137">Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="18269-138">지정된 [!INCLUDE[esql](~/includes/esql-md.md)] 명령을 초기 쿼리로 사용하고 지정된 병합 옵션을 사용하여 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-138">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-139">응용 프로그램에서 런타임에 Entity SQL 쿼리를 생성할 때 데이터 원본의 모든 명령 길이 제한을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-139">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="18269-140">Entity SQL 쿼리 명령 텍스트의 길이에 제한을 적용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-140">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-141">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-141">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-142"><xref:System.Data.Objects.ObjectQuery%601>는 지정된 쿼리, <xref:System.Data.Objects.ObjectContext> 및 <xref:System.Data.Objects.MergeOption>을 사용하여 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-142">The <xref:System.Data.Objects.ObjectQuery%601> is initialized with the specified query, <xref:System.Data.Objects.ObjectContext>, and <xref:System.Data.Objects.MergeOption>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Function Distinct () As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Distinct();" />
      <MemberSignature Language="F#" Value="member this.Distinct : unit -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Distinct " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18269-143">결과가 고유하도록 쿼리를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-143">Limits the query to unique results.</span></span></summary>
        <returns><span data-ttu-id="18269-144">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see>가 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-144">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-145">이 쿼리 작성기 메서드를 반환 합니다는 <xref:System.Data.Objects.ObjectQuery%601> 사용 하 여 원래 쿼리에 해당 하는 인스턴스 [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-145">This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span></span>  
  
 <span data-ttu-id="18269-146">`DISTINCT` 연산자 (예: ntext) 데이터 소스의 비교할 수 없는 열에 대 한 매핑을 포함 하는 개체에 적용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-146">The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-147">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-147">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-148">예제에서는 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 메서드를 사용하여 새 <xref:System.Data.Objects.ObjectQuery%601> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-148">The example uses <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="18269-149">그런 다음 새 <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> 개체에 대해 <xref:System.Data.Objects.ObjectQuery%601>를 호출하여 이 쿼리의 고유한 결과를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="18269-149">Then it calls <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-150">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-150">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Except(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Except(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Except : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Except query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="18269-151">쿼리에서 제외시킬 결과를 나타내는 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-151">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to exclude from the query.</span></span></param>
        <summary><span data-ttu-id="18269-152">다른 개체 쿼리의 결과를 기반으로 결과를 제외시켜 쿼리 결과를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-152">Limits the query results by excluding results based on the results of another object query.</span></span></summary>
        <returns><span data-ttu-id="18269-153">원래 인스턴스에 지정된 <paramref name="query" />를 기반으로 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">EXCEPT</see>가 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-153">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">EXCEPT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-154">제공 된 `query` 반드시 제외 시킬 결과 정의 하는 동일한 형식 이거나 호환 되는 형식 이어야 합니다 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-154">The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="18269-155">정의 된 매개 변수에 제공 된 `query` 에 정의 된 매개 변수를 사용 하 여 병합 되는 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="18269-155">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="18269-156">@FSHO2@매개 변수는 결합된 <xref:System.Data.Objects.ObjectParameterCollection>에서 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-156">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="18269-157">@FSHO2@결합된 컬렉션에 같은 이름의 매개 변수가 두 개 있을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-157">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="18269-158">자세한 내용은 [쿼리 작성기 메서드](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-158">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="18269-159">결과 쿼리는 <xref:System.Data.Objects.ObjectQuery%601>이 호출된 <xref:System.Data.Objects.ObjectQuery%601.Except%2A> 인스턴스에서 연결을 상속합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-159">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-160">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-160">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-161">예제에서는 <xref:System.Data.Objects.ObjectQuery%601.Except%2A> 메서드를 사용하여 새 <xref:System.Data.Objects.ObjectQuery%601> 개체를 만든 다음 새 쿼리의 결과를 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-161">The example uses <xref:System.Data.Objects.ObjectQuery%601.Except%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object and then iterates through the result of the new query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-162"><paramref name="query" /> 매개 변수가 <see langword="null" />이거나 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-162">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-163">데이터를 개체로 쿼리 및 결과 (Entity Framework) 셰이핑</span><span class="sxs-lookup"><span data-stu-id="18269-163">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!T&gt; Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult&lt;T&gt; ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'T&gt;" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="18269-164">쿼리를 실행할 때 사용할 <see cref="T:System.Data.Objects.MergeOption" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-164">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="18269-165">기본값은 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-165">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="18269-166">지정된 병합 옵션을 사용하여 개체 쿼리를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-166">Executes the object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="18269-167">쿼리에서 반환되는 엔터티 개체의 컬렉션을 포함하는 <see cref="T:System.Data.Objects.ObjectResult`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-167">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-168">개체 쿼리에 대한 기본 병합 옵션은 <xref:System.Data.Objects.MergeOption.AppendOnly>입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-168">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="18269-169">자세한 내용은 [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-169">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-170">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-170">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-171">예제에서는 <xref:System.Data.Objects.ObjectResult%601> 메서드를 사용하여 <xref:System.Data.Objects.ObjectQuery.Execute%2A>를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-171">The example returns an <xref:System.Data.Objects.ObjectResult%601> from <xref:System.Data.Objects.ObjectQuery.Execute%2A> method.</span></span> <span data-ttu-id="18269-172">@FSHO2@그런 다음 열거자를 가져오고 쿼리 결과를 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-172">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="18269-173">끝으로 열거자와 <xref:System.Data.Objects.ObjectResult%601> 개체를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-173">At the end it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-174">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-174">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; GroupBy(string keys, string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBy (keys As String, projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ GroupBy(System::String ^ keys, System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.GroupBy (keys, projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="18269-175">결과를 그룹화할 기준 키 열입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-175">The key columns by which to group the results.</span></span></param>
        <param name="projection"><span data-ttu-id="18269-176">프로젝션을 정의하는 선택한 속성 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-176">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="18269-177">이 메서드에 사용되는 0개 이상의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-177">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="18269-178">지정된 조건으로 쿼리 결과를 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-178">Groups the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="18269-179">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">GROUP BY</see>가 적용된 것과 동일한 <see cref="T:System.Data.Common.DbDataRecord" /> 형식의 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-179">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">GROUP BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> 지정 된 프로젝션을 적용 합니다 `projection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="18269-181">즉, <xref:System.Data.Objects.ObjectQuery%601> 메서드에서 반환되는 <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A>는 항상 <xref:System.Data.Common.DbDataRecord> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-181">This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="18269-182">자세한 내용은 [개체 쿼리](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-182">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-183">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-183">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="18269-184">이 예제에서는 제품 이름을 기준으로 그룹화된 기존 쿼리의 결과를 포함하는 새 <xref:System.Data.Objects.ObjectQuery%601> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-184">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query grouped by product name.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]  
  
 <span data-ttu-id="18269-185">이 예제에서는 포함 된 중첩 된 데이터 레코드 집합을 반환 합니다 `Contact.LastName` 열을 그룹화 하 고 첫 번째 문자로 사전순으로 정렬 `Contact.LastName`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-185">This example returns a set of nested data records that contain the `Contact.LastName` column, grouped and sorted alphabetically by the first letter of `Contact.LastName`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]
 [!code-vb[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-186"><paramref name="query" /> 매개 변수가 <see langword="null" />이거나 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-186">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="18269-187">또는</span><span class="sxs-lookup"><span data-stu-id="18269-187">-or-</span></span> 
<span data-ttu-id="18269-188"><paramref name="projection" /> 매개 변수가 <see langword="null" />이거나 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-188">The <paramref name="projection" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-189">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-189">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Include(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Include(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Include (path As String) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Include(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Include : string -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Include path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="18269-190">쿼리 결과에 반환할 관련 개체의 목록입니다(점으로 구분됨).</span><span class="sxs-lookup"><span data-stu-id="18269-190">Dot-separated list of related objects to return in the query results.</span></span></param>
        <summary><span data-ttu-id="18269-191">쿼리 결과에 포함할 관련 개체를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-191">Specifies the related objects to include in the query results.</span></span></summary>
        <returns><span data-ttu-id="18269-192">쿼리 경로가 정의된 새 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-192">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> with the defined query path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-193">쿼리 경로는 Entity SQL 및 LINQ 쿼리에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-193">Query paths can be used with Entity SQL and LINQ queries.</span></span>  
  
 <span data-ttu-id="18269-194">경로에는 전체가 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-194">Paths are all-inclusive.</span></span> <span data-ttu-id="18269-195">예를 들어 include 호출을 나타냅니다 `Include("Orders.OrderLines")`, 뿐만 아니라 됩니다 `OrderLines` 도 포함 될 `Orders`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-195">For example, if an include call indicates `Include("Orders.OrderLines")`, not only will `OrderLines` be included, but also `Orders`.</span></span> <span data-ttu-id="18269-196">자세한 내용은 [관련 개체 로드](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-196">For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span></span>  
  
 <span data-ttu-id="18269-197"><xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드를 호출하는 경우 쿼리 경로는 <xref:System.Data.Objects.ObjectQuery%601>의 반환된 인스턴스에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-197">When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="18269-198"><xref:System.Data.Objects.ObjectQuery%601>의 다른 인스턴스와 개체 컨텍스트 자체에는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-198">Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.</span></span>  
  
 <span data-ttu-id="18269-199"><xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드는 쿼리 개체를 반환하므로 이 메서드를 <xref:System.Data.Objects.ObjectQuery%601>에 대해 여러 번 호출하여 쿼리에 여러 경로를 지정할 수 있습니다. 예를 들면 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-199">Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]
 [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]  
  
   
  
## Examples  
 [!code-csharp[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]
 [!code-vb[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-200"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-200"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-201"><paramref name="path" />가 <see langword="empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-201"><paramref name="path" /> is <see langword="empty" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-202">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-202">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Intersect(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Intersect(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Intersect query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="18269-203">쿼리에 포함할 결과를 나타내는 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-203">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to include in the query.</span></span></param>
        <summary><span data-ttu-id="18269-204">다른 개체 쿼리에 있는 결과만 포함하여 쿼리 결과를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-204">Limits the query results by including only the results that exist in another object query.</span></span></summary>
        <returns><span data-ttu-id="18269-205">원래 인스턴스에 지정된 <paramref name="query" />를 기반으로 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql">INTERSECT</see>가 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-205">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql">INTERSECT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-206">제공 된 `query` 반드시 포함 하도록 결과 정의 하는 동일한 형식 이거나 호환 되는 형식 이어야 합니다 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-206">The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="18269-207">정의 된 매개 변수에 제공 된 `query` 에 정의 된 매개 변수를 사용 하 여 병합 되는 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="18269-207">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="18269-208">@FSHO2@매개 변수는 결합된 <xref:System.Data.Objects.ObjectParameterCollection>에서 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-208">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="18269-209">@FSHO2@결합된 컬렉션에 같은 이름의 매개 변수가 두 개 있을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-209">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="18269-210">자세한 내용은 [쿼리 작성기 메서드](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-210">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="18269-211">결과 쿼리는 <xref:System.Data.Objects.ObjectQuery%601> 메서드가 호출된 <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> 인스턴스에서 연결을 상속합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-211">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-212">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-212">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-213">이 예제에서는 두 개의 다른 쿼리에 대한 결과를 포함하는 새 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-213">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of two other queries.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-214"><paramref name="query" /> 매개 변수가 <see langword="null" /> 또는 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-214">The <paramref name="query" /> parameter is <see langword="null" /> or is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-215">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-215">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Objects.ObjectQuery&lt;'T&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18269-216">이 개체 쿼리의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-216">Gets or sets the name of this object query.</span></span></summary>
        <value><span data-ttu-id="18269-217">이 <see cref="T:System.Data.Objects.ObjectQuery`1" />의 이름인 <see langword="string" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-217">A <see langword="string" /> value that is the name of this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-218">개체 쿼리의 이름은 쿼리 작성기 메서드를 생성할 때 이름으로 시퀀스의 현재 개체 쿼리를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-218">The name of the object query identifies the current object query in the sequence by name when constructing query builder methods.</span></span> <span data-ttu-id="18269-219">기본적으로 쿼리 이름은 `it`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-219">By default, the query name is `it`.</span></span> <span data-ttu-id="18269-220"><xref:System.Data.Objects.ObjectQuery`1.Where*> 메서드 내부의 조인 또는 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 메서드에서 현재 시퀀스를 참조할 때 유용하게 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-220">This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.ObjectQuery`1.Where*> method or in the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method.</span></span> <span data-ttu-id="18269-221">자세한 내용은 [쿼리 작성기 메서드](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-221">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="18269-222"><xref:System.Data.Objects.ObjectQuery%601.Name%2A>의 <xref:System.Data.Objects.ObjectQuery%601> 속성을 설정하면 해당 값은 후속 메서드에서 별칭이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-222">When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.</span></span>  
  
 <span data-ttu-id="18269-223"><xref:System.Data.Objects.ObjectQuery%601.Name%2A> 속성 값은 영문자로 시작해야 하며 영문자, 숫자 및 밑줄을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-223">The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-224">이 예제에서는 첫 번째 <xref:System.Data.Objects.ObjectQuery%601>의 이름을 "product"로 설정하고 후속 <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> 메서드에서 이 별칭을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-224">This example sets the name of the first <xref:System.Data.Objects.ObjectQuery%601> to "product" and then uses this alias in the successive <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> method.</span></span> <span data-ttu-id="18269-225">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-225">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]
 [!code-vb[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-226">잘못된 값을 설정하도록 지정한 경우</span><span class="sxs-lookup"><span data-stu-id="18269-226">The value specified on set is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-227">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-227">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; OfType&lt;TResultType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResultType) () As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ OfType();" />
      <MemberSignature Language="F#" Value="member this.OfType : unit -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.OfType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="18269-228">적용된 필터를 사용하여 쿼리가 실행될 때 반환되는 <see cref="T:System.Data.Objects.ObjectResult`1" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-228">The type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the query is executed with the applied filter.</span></span></typeparam>
        <summary><span data-ttu-id="18269-229">특정 형식의 결과로 쿼리를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-229">Limits the query to only results of a specific type.</span></span></summary>
        <returns><span data-ttu-id="18269-230">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see>이 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-230">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="18269-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*>은 특정 엔터티 또는 복합 형식으로 쿼리 결과를 필터링하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*> is used to filter query results by a specific entity or complex type.</span></span> <span data-ttu-id="18269-232">이 개체 상속을 사용 하 여 개념적 모델을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-232">This supports a conceptual model with object inheritance.</span></span> <span data-ttu-id="18269-233">자세한 내용은 참조 하세요. [엔터티 데이터 모델: 상속](~/docs/framework/data/adonet/entity-data-model-inheritance.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-233">For more information, see [Entity Data Model: Inheritance](~/docs/framework/data/adonet/entity-data-model-inheritance.md).</span></span>

<span data-ttu-id="18269-234"><xref:System.Data.Objects.ObjectQuery`1.OfType*> 메서드만 적용할 수는 <xref:System.Data.Objects.ObjectQuery%601> 엔터티 형식 또는 EDM에 정의 된 복합 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-234">The <xref:System.Data.Objects.ObjectQuery`1.OfType*> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.EntitySqlException"><span data-ttu-id="18269-235">지정된 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="18269-235">The type specified is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/be01614e-070e-41be-9746-bb674b41e488(v=vs.90)"><span data-ttu-id="18269-236">방법: 계층당 하나의 테이블 상속을 사용하여 개체 쿼리 만들기 및 실행(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-236">How to: Create and Execute Object Queries using Table-per-Hierarchy Inheritance (Entity Framework)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-237">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-237">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; OrderBy(string keys, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OrderBy (keys As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ OrderBy(System::String ^ keys, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.OrderBy (keys, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="18269-238">결과를 정렬할 기준 키 열입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-238">The key columns by which to order the results.</span></span></param>
        <param name="parameters"><span data-ttu-id="18269-239">이 메서드에 사용되는 0개 이상의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-239">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="18269-240">지정된 조건으로 쿼리 결과를 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-240">Orders the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="18269-241">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see>가 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-241">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-242">중첩 쿼리의 결과는 정렬되지 않을 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-242">The ordering of results in a nested query cannot be guaranteed.</span></span>  
  
 <span data-ttu-id="18269-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>는 항상 시퀀스의 마지막 쿼리 작성기 메서드여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-244">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-244">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-245">이 예제에서는 새 <xref:System.Data.Objects.ObjectQuery%601> 기존 쿼리에 order by의 결과 포함 하는 개체 `ProductID`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-245">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query order by `ProductID`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-246"><paramref name="keys" /> 또는 <paramref name="parameters" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-246">The <paramref name="keys" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-247"><paramref name="key" />이 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-247">The <paramref name="key" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-248">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-248">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; Select(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ Select(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Select : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.Select (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="projection"><span data-ttu-id="18269-249">프로젝션을 정의하는 선택한 속성 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-249">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="18269-250">이 메서드에 사용되는 0개 이상의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-250">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="18269-251">지정된 프로젝션에 정의된 속성만으로 쿼리 결과를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-251">Limits the query results to only the properties that are defined in the specified projection.</span></span></summary>
        <returns><span data-ttu-id="18269-252">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see>가 적용된 것과 동일한 <see cref="T:System.Data.Common.DbDataRecord" /> 형식의 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-252">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> 지정 된 프로젝션을 적용 합니다 `projection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="18269-254"><xref:System.Data.Objects.ObjectQuery%601> 메서드에서 반환되는 <xref:System.Data.Objects.ObjectQuery%601.Select%2A>는 항상 <xref:System.Data.Common.DbDataRecord> 행 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-254">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="18269-255"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 메서드를 사용하여 간단한 형식, 엔터티 형식 또는 복합 형식인 값을 반환하십시오.</span><span class="sxs-lookup"><span data-stu-id="18269-255">Use the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="18269-256">자세한 내용은 [LINQ to Entities](~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-256">For more information, see [LINQ to Entities](~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md).</span></span>  
  
 <span data-ttu-id="18269-257">프로젝션에 탐색 속성이 포함되어 있으면 쿼리 결과에 중첩 <xref:System.Data.Common.DbDataRecord> 개체의 컬렉션이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-257">When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects.</span></span> <span data-ttu-id="18269-258">자세한 내용은 [방법: 탐색 속성을 사용 하 여 관계 탐색](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-258">For more information, see [How to: Navigate Relationships Using Navigation Properties](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-259">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-259">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-260">이 예제에서는 새 <xref:System.Data.Objects.ObjectQuery%601> 결과가 포함 된 데이터 레코드를 `ProductID` 이 쿼리 결과의 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-260">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> whose results are data records that contain the `ProductID` fields of the results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-261"><paramref name="projection" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-261"><paramref name="projection" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="18269-262">또는</span><span class="sxs-lookup"><span data-stu-id="18269-262">-or-</span></span> 
 <span data-ttu-id="18269-263"><paramref name="parameters" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-263"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-264"><paramref name="projection" />이 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-264">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-265">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-265">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectValue&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; SelectValue&lt;TResultType&gt;(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectValue(Of TResultType) (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ SelectValue(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SelectValue : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.SelectValue (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="18269-266"><see cref="T:System.Data.Objects.ObjectQuery`1" /> 메서드에서 반환하는 <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-266">The type of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> returned by the <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> method.</span></span></typeparam>
        <param name="projection"><span data-ttu-id="18269-267">프로젝션 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-267">The projection list.</span></span></param>
        <param name="parameters"><span data-ttu-id="18269-268">구문 분석 범위에 포함되어야 하는 쿼리 매개 변수의 선택적 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-268">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="18269-269">프로젝션에 지정된 속성만으로 쿼리 결과를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-269">Limits the query results to only the property specified in the projection.</span></span></summary>
        <returns><span data-ttu-id="18269-270">특정 프로젝션과 호환되는 형식의 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-270">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of a type compatible with the specific projection.</span></span> <span data-ttu-id="18269-271">반환되는 <see cref="T:System.Data.Objects.ObjectQuery`1" />는 원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT VALUE</see>가 적용된 것과 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-271">The returned <see cref="T:System.Data.Objects.ObjectQuery`1" /> is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT VALUE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*>는 간단한 형식, 엔터티 형식 또는 복합 형식인 값을 반환하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> is used to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="18269-273">값 형식 대신 행 형식이 필요한 프로젝션에 대해서는 <xref:System.Data.Objects.ObjectQuery%601.Select%2A> 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="18269-273">Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type.</span></span> <span data-ttu-id="18269-274">자세한 내용은 [개체 쿼리](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-274">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="18269-275">합니다 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 메서드는 지정 된 프로젝션을 적용 합니다 `projection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-275">The <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="18269-276"><xref:System.Data.Objects.ObjectQuery%601> 메서드에서 반환되는 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>는 프로젝션과 호환되는 값 형식이어야 하며 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 형식과 같은 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-276">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-277">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-277">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-278">이 예제에서는 새 <xref:System.Data.Objects.ObjectQuery%601> 결과의 시퀀스를 포함 하는 `ProductID` 기존 쿼리의 결과에서 프로젝션 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-278">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results that are a sequence of `ProductID` values projected from the results of the existing query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-279"><paramref name="projection" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-279"><paramref name="projection" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="18269-280">또는</span><span class="sxs-lookup"><span data-stu-id="18269-280">-or-</span></span> 
 <span data-ttu-id="18269-281"><paramref name="parameters" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-281"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-282"><paramref name="projection" />이 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-282">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-283">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-283">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Skip(string keys, string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (keys As String, count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Skip(System::String ^ keys, System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Skip : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Skip (keys, count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="18269-284">결과를 정렬할 기준 키 열입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-284">The key columns by which to order the results.</span></span></param>
        <param name="count"><span data-ttu-id="18269-285">건너뛸 결과의 개수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-285">The number of results to skip.</span></span> <span data-ttu-id="18269-286">상수 또는 매개 변수 참조여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-286">This must be either a constant or a parameter reference.</span></span></param>
        <param name="parameters"><span data-ttu-id="18269-287">구문 분석 범위에 포함되어야 하는 쿼리 매개 변수의 선택적 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-287">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="18269-288">지정된 조건으로 쿼리 결과를 정렬하고 지정된 개수의 결과를 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="18269-288">Orders the query results by the specified criteria and skips a specified number of results.</span></span></summary>
        <returns><span data-ttu-id="18269-289">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> 및 [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md)이 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-289">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with both <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-290"><xref:System.Data.Objects.ObjectQuery%601.Skip%2A> 메서드를 호출한 후에는 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-290">The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method.</span></span> <span data-ttu-id="18269-291">사용 하는 경우 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> 후 <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, 처럼 작동 합니다 [제한](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) 절을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-291">When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an  clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-292">이 예제에서는 5 개를 가져옵니다 `Product` 별로 정렬 된 쿼리 결과에서 처음 세 개를 건너뛰고 개체 `Product.ListPrice`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-292">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-293">인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-293">Any argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-294"><paramref name="keys" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-294"><paramref name="keys" /> is an empty string.</span></span>  
  
<span data-ttu-id="18269-295">또는</span><span class="sxs-lookup"><span data-stu-id="18269-295">-or-</span></span> 
 <span data-ttu-id="18269-296"><paramref name="count" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-296"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-297">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-297">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18269-298">쿼리의 결과를 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-298">Returns an enumerator that iterates through the results of the query.</span></span></summary>
        <returns><span data-ttu-id="18269-299">결과를 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-299">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the results.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-300"><xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A>를 호출하면 쿼리가 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="18269-300">Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-301">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-301">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Top(string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Top (count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Top(System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Top : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Top (count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="18269-302">문자열 형태의 결과 항목 개수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-302">The number of items in the results as a string.</span></span></param>
        <param name="parameters"><span data-ttu-id="18269-303">구문 분석 범위에 포함되어야 하는 쿼리 매개 변수의 선택적 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-303">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="18269-304">지정된 개수의 항목으로 쿼리 결과를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-304">Limits the query results to a specified number of items.</span></span></summary>
        <returns><span data-ttu-id="18269-305">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">TOP</see>이 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-305">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">TOP</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-306">쿼리가 정렬되지 않는 한 <xref:System.Data.Objects.ObjectQuery%601.Top%2A>은 비결정적입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-306"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.</span></span>  
  
 <span data-ttu-id="18269-307">사용 하는 경우는 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> 처럼 작동 하는 메서드를 합니다 [제한](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) 설명은 [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) 절.</span><span class="sxs-lookup"><span data-stu-id="18269-307">When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-308">이러한 예제를 기반으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-308">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="18269-309">이 예제에서는 기존 쿼리의 처음 두 결과를 포함하는 새 <xref:System.Data.Objects.ObjectQuery%601>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-309">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains the first two results of the existing query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]  
  
 <span data-ttu-id="18269-310">이 예제에서는 5 개를 가져옵니다 `Product` 별로 정렬 된 쿼리 결과에서 처음 세 개를 건너뛰고 개체 `Product.ListPrice`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-310">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span> <span data-ttu-id="18269-311"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> 대신 사용 됩니다 [제한](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) 페이징에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-311"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is used instead of [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) for paging.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-312"><paramref name="count" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-312"><paramref name="count" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-313"><paramref name="count" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-313"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-314">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-314">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Union(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Union(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Union query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="18269-315">추가할 결과를 나타내는 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-315">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="18269-316">중복 없이 쿼리 결과를 다른 개체 쿼리의 결과와 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-316">Combines the results of the query with the results of another object query, without any duplicates.</span></span></summary>
        <returns><span data-ttu-id="18269-317">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION</see>을 적용하여 지정된 <paramref name="query" />의 결과를 추가하는 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-317">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> 제공 된 결과 추가 `query` 중복 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.</span></span>  
  
 <span data-ttu-id="18269-319">제공 된 `query` 추가할 해야 결과를 정의 하는 동일한 형식 이거나이 형식으로 승격 될 수 있는 형식 이어야 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-319">The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="18269-320">예를 들어, 다음은 유효 하기 때문에 `DiscontinuedProducts` 승격 시킬 수 `Products`:</span><span class="sxs-lookup"><span data-stu-id="18269-320">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 <span data-ttu-id="18269-321">다음 때문에 예외가 throw 됩니다 `Products` 으로 승격 될 수 없습니다. `DiscontinuedProducts`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-321">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <span data-ttu-id="18269-322">에 대 한는 <xref:System.Data.Objects.ObjectQuery%601> 형식의 <xref:System.Data.Common.DbDataRecord>, 두 쿼리 모두에 있는 레코드의 열에 동일한 수의 열 및 형식이 있어야 합니다 <xref:System.Data.Common.DbDataRecord> 고 전달 되는 `query` 의 열 형식으로 승격 될 수 있어야는 <xref:System.Data.Common.DbDataRecord> 의 <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="18269-322">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="18269-323">정의 된 매개 변수에 제공 된 `query` 에 정의 된 매개 변수를 사용 하 여 병합 되는 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="18269-323">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="18269-324">@FSHO2@매개 변수는 결합된 <xref:System.Data.Objects.ObjectParameterCollection>에서 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-324">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="18269-325">@FSHO2@결합된 컬렉션에 같은 이름의 매개 변수가 두 개 있을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-325">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="18269-326">자세한 내용은 [쿼리 작성기 메서드](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-326">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="18269-327">결과 쿼리는 <xref:System.Data.Objects.ObjectQuery%601>이 호출된 <xref:System.Data.Objects.ObjectQuery%601.Union%2A> 인스턴스에서 연결을 상속합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-327">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-328">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-328">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-329">예제에서는 <xref:System.Data.Objects.ObjectQuery%601.Union%2A> 메서드를 사용하여 새 <xref:System.Data.Objects.ObjectQuery%601> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-329">The example uses <xref:System.Data.Objects.ObjectQuery%601.Union%2A> method to creates a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-330"><paramref name="query" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-330">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-331">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-331">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; UnionAll(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function UnionAll (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ UnionAll(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.UnionAll : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.UnionAll query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="18269-332">추가할 결과를 나타내는 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-332">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="18269-333">모든 중복을 포함하여 쿼리 결과를 다른 개체 쿼리의 결과와 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-333">Combines the results of the query with the results of another object query, including all duplicates.</span></span></summary>
        <returns><span data-ttu-id="18269-334">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION ALL</see>을 적용하여 지정된 <paramref name="query" />의 결과를 추가하는 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-334">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION ALL</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18269-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 제공 된 결과 추가 `query` 모든 중복을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.</span></span>  
  
 <span data-ttu-id="18269-336">제공 된 `query` 추가 해야 하는 결과 정의 하는 동일한 형식 이거나이 형식으로 승격 될 수 있는 형식 이어야 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-336">The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="18269-337">예를 들어, 다음은 유효 하기 때문에 `DiscontinuedProducts` 승격 시킬 수 `Products`:</span><span class="sxs-lookup"><span data-stu-id="18269-337">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 <span data-ttu-id="18269-338">다음 때문에 예외가 throw 됩니다 `Products` 으로 승격 될 수 없습니다. `DiscontinuedProducts`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-338">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <span data-ttu-id="18269-339">에 대 한는 <xref:System.Data.Objects.ObjectQuery%601> 형식의 <xref:System.Data.Common.DbDataRecord>, 두 쿼리 모두에 있는 레코드의 열에 동일한 수의 열 및 형식이 있어야 합니다 <xref:System.Data.Common.DbDataRecord> 고 전달 되는 `query` 의 열 형식으로 승격 될 수 있어야는 <xref:System.Data.Common.DbDataRecord> 의 <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="18269-339">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="18269-340">정의 된 매개 변수에 제공 된 `query` 에 정의 된 매개 변수를 사용 하 여 병합 되는 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="18269-340">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="18269-341">@FSHO2@매개 변수는 결합된 <xref:System.Data.Objects.ObjectParameterCollection>에서 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-341">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="18269-342">@FSHO2@결합된 컬렉션에 같은 이름의 매개 변수가 두 개 있을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="18269-342">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="18269-343">자세한 내용은 [쿼리 작성기 메서드](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-343">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="18269-344">결과 쿼리는 <xref:System.Data.Objects.ObjectQuery%601>이 호출된 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 인스턴스에서 연결을 상속합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-344">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18269-345">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-345">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-346">예제에서는 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 메서드를 사용하여 새 <xref:System.Data.Objects.ObjectQuery%601> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="18269-346">The example uses the <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="18269-347">그런 다음 새 <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> 개체에 대해 <xref:System.Data.Objects.ObjectQuery%601> 메서드를 호출하여 이 쿼리의 고유한 결과를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="18269-347">Then it calls the <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> method on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-348"><paramref name="query" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="18269-348">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-349">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-349">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Where(string predicate, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Where (predicate As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Where(System::String ^ predicate, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Where : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Where (predicate, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="18269-350">필터 조건자입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-350">The filter predicate.</span></span></param>
        <param name="parameters"><span data-ttu-id="18269-351">이 메서드에 사용되는 0개 이상의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-351">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="18269-352">지정된 필터링 조건과 일치하는 결과로 쿼리를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-352">Limits the query to results that match specified filtering criteria.</span></span></summary>
        <returns><span data-ttu-id="18269-353">원래 인스턴스에 <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">WHERE</see>가 적용된 것과 동일한 새 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-353">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">WHERE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="18269-354">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-354">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="18269-355">이 예제에서는 새 <xref:System.Data.Objects.ObjectQuery%601> 다음 기준으로 필터링 된 기존 쿼리의 결과 포함 하는: `"it.ProductID = 900"`합니다.</span><span class="sxs-lookup"><span data-stu-id="18269-355">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results of the existing query filtered by the following criteria: `"it.ProductID = 900"`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18269-356"><paramref name="predicate" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-356"><paramref name="predicate" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="18269-357">또는</span><span class="sxs-lookup"><span data-stu-id="18269-357">-or-</span></span> 
 <span data-ttu-id="18269-358"><paramref name="parameters" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-358"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18269-359"><paramref name="predicate" />이 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="18269-359">The <paramref name="predicate" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="18269-360">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="18269-360">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>