<Type Name="ObjectContext" FullName="System.Data.Objects.ObjectContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6e3d77576cbef4a1c6b8633b1cb2a53ec47581e" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/15/2019" /><Meta Name="ms.locfileid" Value="57923417" /></Metadata><TypeSignature Language="C#" Value="public class ObjectContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectContext : IDisposable" />
  <TypeSignature Language="F#" Value="type ObjectContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d5ffe-101">엔터티 데이터를 개체로 쿼리 및 사용할 수 있는 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-101">Provides facilities for querying and working with entity data as objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d5ffe-102"><xref:System.Data.Objects.ObjectContext> 클래스는 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-102">The <xref:System.Data.Objects.ObjectContext> class is not thread safe.</span></span> <span data-ttu-id="d5ffe-103">데이터 개체의 무결성을 <xref:System.Data.Objects.ObjectContext> 다중 스레드 시나리오에서 보장할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-103">The integrity of data objects in an <xref:System.Data.Objects.ObjectContext> cannot be ensured in multithreaded scenarios.</span></span>  
  
 <span data-ttu-id="d5ffe-104"><xref:System.Data.Objects.ObjectContext> 클래스는 개념적 모델에 정의 된 엔터티 형식의 인스턴스인 개체로 데이터와 상호 작용에 대 한 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-104">The <xref:System.Data.Objects.ObjectContext> class is the primary class for interacting with data as objects that are instances of entity types that are defined in a conceptual model.</span></span> <span data-ttu-id="d5ffe-105"><xref:System.Data.Objects.ObjectContext> 클래스의 인스턴스는 다음을 캡슐화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-105">An instance of the <xref:System.Data.Objects.ObjectContext> class encapsulates the following:</span></span>  
  
-   <span data-ttu-id="d5ffe-106"><xref:System.Data.EntityClient.EntityConnection> 개체 형태의 데이터베이스 연결</span><span class="sxs-lookup"><span data-stu-id="d5ffe-106">A connection to the database, in the form of an <xref:System.Data.EntityClient.EntityConnection> object.</span></span>  
  
-   <span data-ttu-id="d5ffe-107">모델을 설명하는 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 개체 형태의 메타데이터</span><span class="sxs-lookup"><span data-stu-id="d5ffe-107">Metadata that describes the model, in the form of a <xref:System.Data.Metadata.Edm.MetadataWorkspace> object.</span></span>  
  
-   <span data-ttu-id="d5ffe-108">캐시에 보관된 개체를 관리하는 <xref:System.Data.Objects.ObjectStateManager> 개체</span><span class="sxs-lookup"><span data-stu-id="d5ffe-108">An <xref:System.Data.Objects.ObjectStateManager> object that manages objects persisted in the cache.</span></span>  
  
 <span data-ttu-id="d5ffe-109">개념적 모델을 나타내는 개체 계층이 엔터티 데이터 모델 도구에서 생성 되 면 클래스를 나타내는 합니다 <xref:System.Data.Metadata.Edm.EntityContainer> 모델에서 파생 되는 <xref:System.Data.Objects.ObjectContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-109">When the object layer that represents a conceptual model is generated by the Entity Data Model tools, the class that represents the <xref:System.Data.Metadata.Edm.EntityContainer> for the model is derived from the <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-110">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-110">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-111">예제에서는 <xref:System.Data.Objects.ObjectContext>를 생성하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-111">The example shows you how to construct an <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectcontext)]
 [!code-vb[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectcontext)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="d5ffe-112">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-112">Querying Data as Objects (Entity Framework)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-113">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-113">Working with Objects (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ffe-114"><see cref="T:System.Data.Objects.ObjectContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-114">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectContext (System.Data.EntityClient.EntityConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As EntityConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectContext(System::Data::EntityClient::EntityConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : System.Data.EntityClient.EntityConnection -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="d5ffe-115">모델 및 데이터 소스 연결에 대한 참조가 포함된 <see cref="T:System.Data.EntityClient.EntityConnection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-115">An <see cref="T:System.Data.EntityClient.EntityConnection" /> that contains references to the model and to the data source connection.</span></span></param>
        <summary><span data-ttu-id="d5ffe-116">지정된 연결을 사용하여 <see cref="T:System.Data.Objects.ObjectContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-116">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with the given connection.</span></span> <span data-ttu-id="d5ffe-117">생성하는 동안 메타데이터 작업 영역이 <see cref="T:System.Data.EntityClient.EntityConnection" /> 개체에서 추출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-117">During construction, the metadata workspace is extracted from the <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-118"><paramref name="connection" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-118">The <paramref name="connection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-119"><paramref name="connection" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-119">The <paramref name="connection" /> is invalid.</span></span>  
  
<span data-ttu-id="d5ffe-120">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-120">-or-</span></span> 
<span data-ttu-id="d5ffe-121">메타데이터 작업 영역이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-121">The metadata workspace is invalid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-122">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-122">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectContext (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectContext(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : string -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="d5ffe-123">연결 문자열로, 메타데이터 정보에 대한 액세스도 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-123">The connection string, which also provides access to the metadata information.</span></span></param>
        <summary><span data-ttu-id="d5ffe-124">지정된 연결 문자열 및 기본 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Objects.ObjectContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-124">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with the given connection string and default entity container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-125">`connectionString` 는 개념적 모델을 액세스 하 고 데이터 원본에 연결 하는 데 필요한 정보를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-125">The `connectionString` is a string that contains information that is required to access a conceptual model and to connect to a data source.</span></span> <span data-ttu-id="d5ffe-126"><xref:System.Data.EntityClient.EntityConnectionStringBuilder> 클래스를 사용하여 문자열의 형식을 올바로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-126">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class can be used to correctly format the string.</span></span>  
  
 <span data-ttu-id="d5ffe-127">응용 프로그램의 구성 파일에 저장 되어 있는 명명 된 연결 문자열을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-127">The  generate a named connection string that is stored in the application's configuration file.</span></span> <span data-ttu-id="d5ffe-128">대신이 명명 된 연결 문자열을 제공할 수 있습니다 합니다 `connectionString` 인스턴스화할 때 매개 변수는 <xref:System.Data.Objects.ObjectContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-128">This named connection string can be supplied instead of the `connectionString` parameter when instantiating the <xref:System.Data.Objects.ObjectContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-129">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-129">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-130">예제에서는 <xref:System.Data.Objects.ObjectContext>를 생성하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-130">The example shows how to construct an <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectcontext)]
 [!code-vb[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectcontext)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-131"><paramref name="connectionString" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-131">The <paramref name="connectionString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-132"><paramref name="connectionString" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-132">The <paramref name="connectionString" /> is invalid.</span></span>  
  
<span data-ttu-id="d5ffe-133">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-133">-or-</span></span> 
<span data-ttu-id="d5ffe-134">메타데이터 작업 영역이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-134">The metadata workspace is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-135">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-135">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectContext (System.Data.EntityClient.EntityConnection connection, string defaultContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection, string defaultContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (connection As EntityConnection, defaultContainerName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectContext(System::Data::EntityClient::EntityConnection ^ connection, System::String ^ defaultContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : System.Data.EntityClient.EntityConnection * string -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext (connection, defaultContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
        <Parameter Name="defaultContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="d5ffe-136">모델 및 데이터 소스 연결에 대한 참조가 포함된 <see cref="T:System.Data.EntityClient.EntityConnection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-136">An <see cref="T:System.Data.EntityClient.EntityConnection" /> that contains references to the model and to the data source connection.</span></span></param>
        <param name="defaultContainerName"><span data-ttu-id="d5ffe-137">기본 엔터티 컨테이너의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-137">The name of the default entity container.</span></span> <span data-ttu-id="d5ffe-138">이 메서드를 통해 <paramref name="defaultContainerName" />을 설정하면 속성이 읽기 전용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-138">When the <paramref name="defaultContainerName" /> is set through this method, the property becomes read-only.</span></span></param>
        <summary><span data-ttu-id="d5ffe-139">지정된 연결 및 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Objects.ObjectContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-139">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with a given connection and entity container name.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-140"><paramref name="connection" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-140">The <paramref name="connection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-141"><paramref name="connection" />, <paramref name="defaultContainerName" /> 또는 메타데이터 작업 영역이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-141">The <paramref name="connection" />, <paramref name="defaultContainerName" />, or metadata workspace is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-142">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-142">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectContext (string connectionString, string defaultContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string connectionString, string defaultContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (connectionString As String, defaultContainerName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectContext(System::String ^ connectionString, System::String ^ defaultContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : string * string -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext (connectionString, defaultContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="defaultContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="d5ffe-143">연결 문자열로, 메타데이터 정보에 대한 액세스도 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-143">The connection string, which also provides access to the metadata information.</span></span></param>
        <param name="defaultContainerName"><span data-ttu-id="d5ffe-144">기본 엔터티 컨테이너의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-144">The name of the default entity container.</span></span> <span data-ttu-id="d5ffe-145">이 메서드를 통해 <paramref name="defaultContainerName" />을 설정하면 속성이 읽기 전용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-145">When the <paramref name="defaultContainerName" /> is set through this method, the property becomes read-only.</span></span></param>
        <summary><span data-ttu-id="d5ffe-146">지정된 연결 문자열 및 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Objects.ObjectContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-146">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with a given connection string and entity container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-147">`connectionString` 는 개념적 모델을 액세스 하 고 데이터 원본에 연결 하는 데 필요한 정보를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-147">The `connectionString` is a string that contains information that is required to access a conceptual model and to connect to a data source.</span></span> <span data-ttu-id="d5ffe-148"><xref:System.Data.EntityClient.EntityConnectionStringBuilder> 클래스를 사용하여 문자열의 형식을 올바로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-148">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class can be used to correctly format the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-149"><paramref name="connectionString" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-149">The <paramref name="connectionString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-150"><paramref name="connectionString" />, <paramref name="defaultContainerName" /> 또는 메타데이터 작업 영역이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-150">The <paramref name="connectionString" />, <paramref name="defaultContainerName" />, or metadata workspace is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-151">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-151">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptAllChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.AcceptAllChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptAllChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptAllChanges : unit -&gt; unit" Usage="objectContext.AcceptAllChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-152">개체 컨텍스트에서 개체에 대한 변경 내용을 모두 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-152">Accepts all changes made to objects in the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-153"><xref:System.Data.Objects.ObjectStateManager>의 모든 관련 항목에 대한 변경 내용을 허용하여 결과 상태가 변경되지 않은 상태나 분리된 상태 중 하나가 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-153">Accepts the changes on all associated entries in the <xref:System.Data.Objects.ObjectStateManager> so their resultant state is either unchanged or detached.</span></span>  
  
 <span data-ttu-id="d5ffe-154">이 메서드는 <xref:System.Data.Objects.ObjectStateEntry>에서 Added 또는 Modified인 모든 <xref:System.Data.Objects.ObjectStateManager> 개체를 반복한 다음 항목의 상태를 Unchanged로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-154">This method iterates all the <xref:System.Data.Objects.ObjectStateEntry> objects within the <xref:System.Data.Objects.ObjectStateManager> that are Added or Modified, and then sets the state of the entry to Unchanged.</span></span> <span data-ttu-id="d5ffe-155">Deleted 항목이 분리된 상태가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-155">The Deleted items become detached.</span></span>  
  
 <span data-ttu-id="d5ffe-156">경우는 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드를 호출한 하며 <xref:System.Data.Objects.SaveOptions.AcceptAllChangesAfterSave> 을 지정 하지 않았으므로 사용자 호출 해야 합니다는 <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-156">If the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method was called and the <xref:System.Data.Objects.SaveOptions.AcceptAllChangesAfterSave> was not specified, the user must call the <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> method.</span></span> <span data-ttu-id="d5ffe-157"><xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> 메서드는 트랜잭션이 실패하여 사용자가 다시 시도하려는 경우에 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-157">The <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> method is useful in the scenario where a transaction has failed and a user wants to retry.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-158">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-158">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="objectContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="d5ffe-159">엔터티 컨테이너 이름으로 정규화될 수도 있는 엔터티 집합 이름을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-159">Represents the entity set name, which may optionally be qualified by the entity container name.</span></span></param>
        <param name="entity"><span data-ttu-id="d5ffe-160">추가할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-160">The <see cref="T:System.Object" /> to add.</span></span></param>
        <summary><span data-ttu-id="d5ffe-161">개체를 개체 컨텍스트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-161">Adds an object to the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-162"><xref:System.Data.Objects.ObjectContext.AddObject%2A>에 대해 <xref:System.Data.Objects.ObjectContext>를 호출하여 개체를 개체 컨텍스트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-162">Call <xref:System.Data.Objects.ObjectContext.AddObject%2A> on the <xref:System.Data.Objects.ObjectContext> to add the object to the object context.</span></span> <span data-ttu-id="d5ffe-163">개체가 데이터 원본에 아직 존재하지 않는 새 개체일 경우 이 메서드를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-163">Do this when the object is a new object that does not yet exist in the data source.</span></span> <span data-ttu-id="d5ffe-164">자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-164">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="d5ffe-165"><xref:System.Data.Objects.ObjectStateManager>, <xref:System.Data.EntityState.Detached> 또는 <xref:System.Data.EntityState.Deleted> 상태의 개체가 <xref:System.Data.EntityState.Added>에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-165">Objects are added to the <xref:System.Data.Objects.ObjectStateManager> in the <xref:System.Data.EntityState.Detached>, <xref:System.Data.EntityState.Deleted> or <xref:System.Data.EntityState.Added> state.</span></span>  
  
 <span data-ttu-id="d5ffe-166">개체 컨텍스트 내의 다른 개체와 연관된 새 개체를 만들 때는 다음 메서드 중 하나를 사용하여 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-166">When you create a new object that is related to another object in the object context, add the object by using one of the following methods:</span></span>  
  
-   <span data-ttu-id="d5ffe-167"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>에 대해 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 메서드를 호출하고 관련 개체를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-167">Call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601> and specify the related object.</span></span> <span data-ttu-id="d5ffe-168">일대다 또는 다대다 관계의 경우 이 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-168">Do this for a one-to-many or many-to-many relationship.</span></span>  
  
-   <span data-ttu-id="d5ffe-169"><xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>의 <xref:System.Data.Objects.DataClasses.EntityReference%601> 속성을 관련 개체에 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-169">Set the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> to the related object.</span></span> <span data-ttu-id="d5ffe-170">일대일 또는 다대일 관계의 경우 이 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-170">Do this for a one-to-one or many-to-one relationship.</span></span>  
  
 <span data-ttu-id="d5ffe-171">자세한 내용은 [만들기, 추가, 수정, 및 개체 삭제](https://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-171">For more information, see [Creating, Adding, Modifying, and Deleting Objects](https://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1).</span></span>  
  
 <span data-ttu-id="d5ffe-172">개체가 분리 된 상태의 경우 없어야는 <xref:System.Data.EntityKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-172">If the object is in a detached state it must not have an <xref:System.Data.EntityKey>.</span></span>  
  
 <span data-ttu-id="d5ffe-173">에 대 한 규칙을 `entitySetName` 형식으로 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-173">The rules for the `entitySetName` format are as follows:</span></span>  
  
-   <span data-ttu-id="d5ffe-174">경우는 <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> 속성은 `null`, 해당 `entitySetName` 에서처럼 정규화 해야  *\<엔터티 컨테이너 이름 >*. *\<엔터티 집합 이름 >* 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-174">If the <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> property is `null`, then the `entitySetName` has to be fully qualified as in *\<Entity Container Name>*.*\<Entity Set Name>*.</span></span>  
  
-   <span data-ttu-id="d5ffe-175">하는 경우 <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> 아닙니다 `null`, 해당 `entitySetName` 일 수 있습니다  *\<엔터티 컨테이너 이름 >*. *\<엔터티 집합 이름 >* 하거나  *\<엔터티 집합 이름 >* 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-175">If <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> is not `null`, then the `entitySetName` can be either *\<Entity Container Name>*.*\<Entity Set Name>* or *\<Entity Set Name>*.</span></span>  
  
 <span data-ttu-id="d5ffe-176">경우는 `object` 에 <xref:System.Data.EntityKey> 및 `entitySetName` 에 값이 해당 <xref:System.Data.Metadata.Edm.EntitySet> 엔터티 키와 일치 해야 합니다는 <xref:System.Data.Metadata.Edm.EntitySet> 기준으로 검색 된는 `entitySetName` 및 엔터티 컨테이너 이름.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-176">If the `object` has an <xref:System.Data.EntityKey> and `entitySetName` has a value, then the <xref:System.Data.Metadata.Edm.EntitySet> of the entity key must match the <xref:System.Data.Metadata.Edm.EntitySet> that was found based on the `entitySetName` and entity container name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-177">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-177">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-178">새 제품을 추가 하 고 데이터베이스에 변경 내용을 저장 하는 예제.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-178">The example adds a new product and saves the changes to the database.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObject](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobject)]
 [!code-vb[DP ObjectServices Concepts#AddObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobject)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-179"><paramref name="entity" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-179">The <paramref name="entity" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d5ffe-180">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-180">-or-</span></span> 
<span data-ttu-id="d5ffe-181"><paramref name="entitySetName" />을 정규화할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-181">The <paramref name="entitySetName" /> does not qualify.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.AddObject(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-182">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-182">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplyCurrentValues&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public TEntity ApplyCurrentValues&lt;TEntity&gt; (string entitySetName, TEntity currentEntity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TEntity ApplyCurrentValues&lt;class TEntity&gt;(string entitySetName, !!TEntity currentEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyCurrentValues(Of TEntity As Class) (entitySetName As String, currentEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class TEntity ApplyCurrentValues(System::String ^ entitySetName, TEntity currentEntity);" />
      <MemberSignature Language="F#" Value="member this.ApplyCurrentValues : string * 'Entity -&gt; 'Entity (requires 'Entity : null)" Usage="objectContext.ApplyCurrentValues (entitySetName, currentEntity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="currentEntity" Type="TEntity" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-183">개체의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-183">The entity type of the object.</span></span></typeparam>
        <param name="entitySetName"><span data-ttu-id="d5ffe-184">개체가 속한 엔터티 집합의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-184">The name of the entity set to which the object belongs.</span></span></param>
        <param name="currentEntity"><span data-ttu-id="d5ffe-185">원래 개체에 적용할 속성 업데이트가 있는 분리된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-185">The detached object that has property updates to apply to the original object.</span></span> <span data-ttu-id="d5ffe-186"><paramref name="currentEntity" />의 엔터티 키는 <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" />에 있는 항목의 <see cref="T:System.Data.Objects.ObjectContext" /> 속성과 일치해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-186">The entity key of <paramref name="currentEntity" /> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="d5ffe-187">제공된 개체의 스칼라 값을 같은 키를 가진 <see cref="T:System.Data.Objects.ObjectContext" />의 개체에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-187">Copies the scalar values from the supplied object into the object in the <see cref="T:System.Data.Objects.ObjectContext" /> that has the same key.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-188">업데이트된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-188">The updated object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-189">합니다 <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 메서드 밖에 있는 개체에 대 한 변경 내용을 적용 하는 <xref:System.Data.Objects.ObjectContext>, 웹 서비스에서 수신 되는 분리 된 개체와 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-189">The <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method is used to apply changes that were made to objects outside the <xref:System.Data.Objects.ObjectContext>, such as detached objects that are received by a Web service.</span></span> <span data-ttu-id="d5ffe-190">메서드를 개체에 제공된 된 개체의 스칼라 값을 복사 합니다 <xref:System.Data.Objects.ObjectContext> 동일한 키를 가진 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-190">The method copies the scalar values from the supplied object into the object in the <xref:System.Data.Objects.ObjectContext> that has the same key.</span></span> <span data-ttu-id="d5ffe-191">사용할 수는 <xref:System.Data.EntityKey> 데이터 원본에서이 개체의 인스턴스를 검색 하려면 분리 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-191">You can use the <xref:System.Data.EntityKey> of the detached object to retrieve an instance of this object from the data source.</span></span> <span data-ttu-id="d5ffe-192">자세한 내용은 [방법: 해당 키를 사용 하 여 특정 개체를 반환할](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-192">For more information, see [How to: Return a Specific Object Using its Key](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd).</span></span> <span data-ttu-id="d5ffe-193">개체의 원래 값에서과 다른 모든 값은 수정 된 것으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-193">Any values that differ from the original values of the object are marked as modified.</span></span> <span data-ttu-id="d5ffe-194">참고, 메서드가 현재 값의 관련된 개체에 적용 되지 않습니다 `currentEntity`합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-194">Note, the method does not apply the current values to the related objects of `currentEntity`.</span></span>  
  
 <span data-ttu-id="d5ffe-195">현재 값을 사용 하 여 그래프를 있고 원래 값을 적용할 경우 호출 <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-195">If you have a graph with the current values and want to apply the original values, call <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-196">사용할 수도 있습니다는 <xref:System.Data.Objects.ObjectSet%601.ApplyCurrentValues%2A> 의 합니다 <xref:System.Data.Objects.ObjectSet%601> 또는 <xref:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues%2A> 메서드를 <xref:System.Data.Objects.ObjectStateEntry>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-196">You may also use the <xref:System.Data.Objects.ObjectSet%601.ApplyCurrentValues%2A> of the <xref:System.Data.Objects.ObjectSet%601> or <xref:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues%2A> method of the <xref:System.Data.Objects.ObjectStateEntry>.</span></span> <span data-ttu-id="d5ffe-197">자세한 내용은 [N 계층 응용 프로그램 빌드](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-197">For more information, see [Building N-Tier Applications](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-198"><paramref name="entitySetName" /> 또는 <paramref name="current" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-198"><paramref name="entitySetName" /> or <paramref name="current" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-199"><paramref name="entitySetName" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />이 개체 <see cref="T:System.Data.EntityKey" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />과 일치하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-199">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="d5ffe-200">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-200">-or-</span></span> 
<span data-ttu-id="d5ffe-201">개체가 <see cref="T:System.Data.Objects.ObjectStateManager" /> 상태에 있지 않거나 <see cref="F:System.Data.EntityState.Detached" /> 상태에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-201">The object is not in the <see cref="T:System.Data.Objects.ObjectStateManager" /> or it is in a <see cref="F:System.Data.EntityState.Detached" /> state.</span></span>  
  
<span data-ttu-id="d5ffe-202">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-202">-or-</span></span> 
<span data-ttu-id="d5ffe-203">제공된 개체의 엔터티 키가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-203">The entity key of the supplied object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-204"><paramref name="entitySetName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-204"><paramref name="entitySetName" /> is an empty string.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)" />
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyOriginalValues&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public TEntity ApplyOriginalValues&lt;TEntity&gt; (string entitySetName, TEntity originalEntity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TEntity ApplyOriginalValues&lt;class TEntity&gt;(string entitySetName, !!TEntity originalEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOriginalValues(Of TEntity As Class) (entitySetName As String, originalEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class TEntity ApplyOriginalValues(System::String ^ entitySetName, TEntity originalEntity);" />
      <MemberSignature Language="F#" Value="member this.ApplyOriginalValues : string * 'Entity -&gt; 'Entity (requires 'Entity : null)" Usage="objectContext.ApplyOriginalValues (entitySetName, originalEntity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="originalEntity" Type="TEntity" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-205">엔터티 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-205">The type of the entity object.</span></span></typeparam>
        <param name="entitySetName"><span data-ttu-id="d5ffe-206">개체가 속한 엔터티 집합의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-206">The name of the entity set to which the object belongs.</span></span></param>
        <param name="originalEntity"><span data-ttu-id="d5ffe-207">개체에 적용할 원래 값이 있는 분리된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-207">The detached object that has original values to apply to the object.</span></span> <span data-ttu-id="d5ffe-208"><paramref name="originalEntity" />의 엔터티 키는 <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" />에 있는 항목의 <see cref="T:System.Data.Objects.ObjectContext" /> 속성과 일치해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-208">The entity key of <paramref name="originalEntity" /> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="d5ffe-209">제공된 개체의 스칼라 값을 같은 키를 가진 <see cref="T:System.Data.Objects.ObjectContext" />에 있는 개체의 원래 값 집합에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-209">Copies the scalar values from the supplied object into set of original values for the object in the <see cref="T:System.Data.Objects.ObjectContext" /> that has the same key.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-210">업데이트된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-210">The updated object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-211">합니다 <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> 메서드 밖에 있는 개체에 대 한 변경 내용을 적용 하는 <xref:System.Data.Objects.ObjectContext>, 웹 서비스에서 수신 되는 분리 된 개체와 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-211">The <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method is used to apply changes that were made to objects outside the <xref:System.Data.Objects.ObjectContext>, such as detached objects that are received by a Web service.</span></span> <span data-ttu-id="d5ffe-212">메서드를 개체에 제공된 된 개체의 스칼라 값을 복사 합니다 <xref:System.Data.Objects.ObjectContext> 동일한 키를 가진 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-212">The method copies the scalar values from the supplied object into the object in the <xref:System.Data.Objects.ObjectContext> that has the same key.</span></span> <span data-ttu-id="d5ffe-213">사용할 수는 <xref:System.Data.EntityKey> 데이터 원본에서이 개체의 인스턴스를 검색 하려면 분리 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-213">You can use the <xref:System.Data.EntityKey> of the detached object to retrieve an instance of this object from the data source.</span></span> <span data-ttu-id="d5ffe-214">자세한 내용은 [방법: 해당 키를 사용 하 여 특정 개체를 반환할](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-214">For more information, see [How to: Return a Specific Object Using its Key](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd).</span></span> <span data-ttu-id="d5ffe-215">개체의 현재 값과 다른 모든 값은 수정 된 것으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-215">Any values that differ from the current values of the object are marked as modified.</span></span> <span data-ttu-id="d5ffe-216">참고, 메서드가 현재 값의 관련된 개체에 적용 되지 않습니다 `originalEntity`합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-216">Note, the method does not apply the current values to the related objects of `originalEntity`.</span></span>  
  
 <span data-ttu-id="d5ffe-217">원래 값을 사용 하 여 그래프를 있고 현재 값을 적용할 경우 호출 <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-217">If you have a graph with the original values and want to apply the current values, call <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-218">사용할 수도 있습니다는 <xref:System.Data.Objects.ObjectSet%601.ApplyOriginalValues%2A> 의 합니다 <xref:System.Data.Objects.ObjectSet%601> 또는 <xref:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues%2A> 메서드를 <xref:System.Data.Objects.ObjectStateEntry>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-218">You may also use the <xref:System.Data.Objects.ObjectSet%601.ApplyOriginalValues%2A> of the <xref:System.Data.Objects.ObjectSet%601> or <xref:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues%2A> method of the <xref:System.Data.Objects.ObjectStateEntry>.</span></span> <span data-ttu-id="d5ffe-219">자세한 내용은 [N 계층 응용 프로그램 빌드](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-219">For more information, see [Building N-Tier Applications](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-220"><paramref name="entitySetName" /> 또는 <paramref name="original" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-220"><paramref name="entitySetName" /> or <paramref name="original" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-221"><paramref name="entitySetName" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />이 개체 <see cref="T:System.Data.EntityKey" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />과 일치하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-221">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="d5ffe-222">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-222">-or-</span></span> 
<span data-ttu-id="d5ffe-223"><see cref="T:System.Data.Objects.ObjectStateEntry" /> 개체는 <see cref="T:System.Data.Objects.ObjectStateManager" />에서 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-223">An <see cref="T:System.Data.Objects.ObjectStateEntry" /> for the object cannot be found in the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span> <span data-ttu-id="d5ffe-224">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-224">-or-</span></span> 
<span data-ttu-id="d5ffe-225">개체가 <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Detached" /> 상태에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-225">The object is in an <see cref="F:System.Data.EntityState.Added" /> or a <see cref="F:System.Data.EntityState.Detached" /> state.</span></span>  
  
<span data-ttu-id="d5ffe-226">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-226">-or-</span></span> 
<span data-ttu-id="d5ffe-227">제공된 개체의 엔터티 키가 잘못되었거나 속성이 변경되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-227">The entity key of the supplied object is invalid or has property changes.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-228"><paramref name="entitySetName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-228"><paramref name="entitySetName" /> is an empty string.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)" />
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyPropertyChanges">
      <MemberSignature Language="C#" Value="public void ApplyPropertyChanges (string entitySetName, object changed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPropertyChanges(string entitySetName, object changed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPropertyChanges (entitySetName As String, changed As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPropertyChanges(System::String ^ entitySetName, System::Object ^ changed);" />
      <MemberSignature Language="F#" Value="member this.ApplyPropertyChanges : string * obj -&gt; unit" Usage="objectContext.ApplyPropertyChanges (entitySetName, changed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use ApplyCurrentValues instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="changed" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="d5ffe-229">개체가 속한 엔터티 집합의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-229">The name of the entity set to which the object belongs.</span></span></param>
        <param name="changed"><span data-ttu-id="d5ffe-230">원래 개체에 적용할 속성 업데이트가 있는 분리된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-230">The detached object that has property updates to apply to the original object.</span></span></param>
        <summary><span data-ttu-id="d5ffe-231">분리된 개체의 속성 변경을 개체 컨텍스트에 이미 연결된 개체에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-231">Applies property changes from a detached object to an object already attached to the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-232"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 메서드는 수정된 분리 버전의 개체에 대한 속성 변경을 <xref:System.Data.Objects.ObjectContext>에 연결된 원래 버전에 적용하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-232">The <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method is used to apply property changes from a modified, detached version of an object to the original version attached to the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="d5ffe-233">이 메서드는 엔터티 개체를 분리하여 속성이 업데이트된 원격 응용 프로그램에 전송하는 웹 서비스 같은 시나리오를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-233">This supports scenarios, such as Web services, where an entity object is detached and sent to a remote application where property updates are made.</span></span> <span data-ttu-id="d5ffe-234">이 메서드를 사용하면 이러한 변경 내용을 보다 쉽게 원래 개체에 다시 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-234">This method enables you to more easily apply these changes back to the original object.</span></span>  
  
 <span data-ttu-id="d5ffe-235"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A>를 실행한 후에는 개체의 상태가 <xref:System.Data.EntityState.Modified>가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-235">After <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A>, the object is in the <xref:System.Data.EntityState.Modified> state.</span></span> <span data-ttu-id="d5ffe-236"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드를 호출하여 데이터 원본을 업데이트해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-236">You must call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method to update the data source.</span></span>  
  
 <span data-ttu-id="d5ffe-237">원래 개체는 <xref:System.Data.Objects.ObjectStateManager>에 있어야 하고 <xref:System.Data.EntityState.Modified> 또는 <xref:System.Data.EntityState.Unchanged> 상태여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-237">The original object must exist in the <xref:System.Data.Objects.ObjectStateManager> and must be in the <xref:System.Data.EntityState.Modified> or <xref:System.Data.EntityState.Unchanged> state.</span></span> <span data-ttu-id="d5ffe-238">원래 개체는 수정 된 속성의 경우에 수정 됩니다는 `changed` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-238">The original object is only modified if there are modified properties in the `changed` object.</span></span>  
  
 <span data-ttu-id="d5ffe-239">제공된 개체의 <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> 속성은 유효한 <xref:System.Data.EntityKey>로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-239">The <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> property of the supplied object must be set to a valid <xref:System.Data.EntityKey>.</span></span>  
  
 <span data-ttu-id="d5ffe-240"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A>는 탐색 속성 또는 관련 개체에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-240"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> does not affect navigation properties or related objects.</span></span>  
  
 <span data-ttu-id="d5ffe-241"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A>는 형식에 대한 엔터티 메타데이터에 있는 속성만 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-241"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> only sets properties that exist in the entity metadata for the type.</span></span> <span data-ttu-id="d5ffe-242">예를 들어 partial 클래스에 추가된 속성은 <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 작업에 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-242">For example, properties that are added in a partial class are not included in the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-243"><paramref name="entitySetName" />이 <see langword="null" />이거나 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-243">When <paramref name="entitySetName" /> is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="d5ffe-244">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-244">-or-</span></span> 
<span data-ttu-id="d5ffe-245"><paramref name="changed" />가 <see langword="null" />일 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-245">When <paramref name="changed" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-246"><paramref name="entitySetName" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />가 개체 <see cref="T:System.Data.EntityKey" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-246">When the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="d5ffe-247">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-247">-or-</span></span> 
<span data-ttu-id="d5ffe-248">엔터티의 상태가 <see cref="F:System.Data.EntityState.Modified" /> 또는 <see cref="F:System.Data.EntityState.Unchanged" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-248">When the entity is in a state other than <see cref="F:System.Data.EntityState.Modified" /> or <see cref="F:System.Data.EntityState.Unchanged" />.</span></span>  
  
<span data-ttu-id="d5ffe-249">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-249">-or-</span></span> 
<span data-ttu-id="d5ffe-250">원래 개체가 컨텍스트에 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-250">The original object is not attached to the context.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-251"><paramref name="changed" /> 개체의 형식이 원래 개체의 형식과 다른 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-251">When the type of the <paramref name="changed" /> object is not the same type as the original object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.Data.Objects.DataClasses.IEntityWithKey entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(class System.Data.Objects.DataClasses.IEntityWithKey entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As IEntityWithKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Data::Objects::DataClasses::IEntityWithKey ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Attach : System.Data.Objects.DataClasses.IEntityWithKey -&gt; unit" Usage="objectContext.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithKey" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="d5ffe-252">연결할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-252">The object to attach.</span></span></param>
        <summary><span data-ttu-id="d5ffe-253">개체에 엔터티 키가 있으면 개체 또는 개체 그래프를 개체 컨텍스트에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-253">Attaches an object or object graph to the object context when the object has an entity key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-254"><xref:System.Data.Objects.ObjectContext.Attach%2A>에 대해 <xref:System.Data.Objects.ObjectContext>를 호출하여 개체를 개체 컨텍스트에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-254">Call <xref:System.Data.Objects.ObjectContext.Attach%2A> on the <xref:System.Data.Objects.ObjectContext> to attach the object to the object context.</span></span> <span data-ttu-id="d5ffe-255">개체가 이미 데이터 원본에 있지만 현재 컨텍스트에 연결되지 않은 경우 이 메서드를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-255">Do this when the object already exists in the data source but is currently not attached to the context.</span></span> <span data-ttu-id="d5ffe-256">자세한 내용은 [사용자 지정 개체](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-256">For more information, see [Customizing Objects](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).</span></span>  
  
 <span data-ttu-id="d5ffe-257"><xref:System.Data.Objects.ObjectContext.Attach%2A>는 개체 또는 개체 그래프의 최상위 개체를 연결하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-257"><xref:System.Data.Objects.ObjectContext.Attach%2A> is used to attach an object or the top-level object in an object graph.</span></span>  
  
 <span data-ttu-id="d5ffe-258">연결되고 있는 개체는 <xref:System.Data.Objects.DataClasses.IEntityWithKey>를 구현하여 <xref:System.Data.EntityKey>를 노출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-258">The object being attached must implement <xref:System.Data.Objects.DataClasses.IEntityWithKey> to expose an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="d5ffe-259">생성된 엔터티 클래스는 모두 <xref:System.Data.Objects.DataClasses.IEntityWithKey>를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-259">All generated entity classes implement <xref:System.Data.Objects.DataClasses.IEntityWithKey>.</span></span>  
  
 <span data-ttu-id="d5ffe-260">관련된 개체를 연결 하는 경우 호출 해야 `Attach` 에 <xref:System.Data.Objects.DataClasses.EntityReference%601> 또는 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 관계를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-260">When you attach related objects, you must also call `Attach` on the <xref:System.Data.Objects.DataClasses.EntityReference%601> or the <xref:System.Data.Objects.DataClasses.EntityCollection%601> to define the relationship.</span></span>  
  
 <span data-ttu-id="d5ffe-261">이 메서드는 <xref:System.Data.Objects.ObjectContext.AttachTo%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-261">This method calls the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-262">개체를 연결할 때는 다음 사항을 고려해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-262">The following considerations apply when attaching objects:</span></span>  
  
-   <span data-ttu-id="d5ffe-263">연결되고 있는 개체에 관련 개체가 있으면 이러한 개체도 개체 컨텍스트에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-263">If the object being attached has related objects, those objects will also be attached to the object context.</span></span>  
  
-   <span data-ttu-id="d5ffe-264">개체는 변경되지 않은 상태로 개체 컨텍스트에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-264">Objects are added to the object context in an unchanged state.</span></span>  
  
-   <span data-ttu-id="d5ffe-265"><xref:System.Data.Objects.ObjectContext.Attach%2A> 메서드에 전달되는 개체에는 올바른 <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> 값이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-265">The object that is passed to the <xref:System.Data.Objects.ObjectContext.Attach%2A> method must have a valid <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> value.</span></span> <span data-ttu-id="d5ffe-266">개체에 올바른 <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> 값이 없으면 <xref:System.Data.Objects.ObjectContext.AttachTo%2A> 메서드를 사용하여 엔터티 집합의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-266">If the object does not have a valid <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> value, use the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method to specify the name of the entity set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-267">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-267">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-268">이 예제에서는 두 개체를 연결한 다음 관계를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-268">In this example, two objects are attached and then the relationship is defined.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#attachrelatedobjects)]
 [!code-vb[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#attachrelatedobjects)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-269"><paramref name="entity" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-269">The <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-270">엔터티 키가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-270">Invalid entity key.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.Attach(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="objectContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="d5ffe-271">엔터티 컨테이너 이름으로 정규화될 수도 있는 엔터티 집합 이름을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-271">Represents the entity set name, which may optionally be qualified by the entity container name.</span></span></param>
        <param name="entity"><span data-ttu-id="d5ffe-272">연결할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-272">The <see cref="T:System.Object" /> to attach.</span></span></param>
        <summary><span data-ttu-id="d5ffe-273">특정 엔터티 집합에서 개체 또는 개체 그래프를 개체 컨텍스트에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-273">Attaches an object or object graph to the object context in a specific entity set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-274">호출 <xref:System.Data.Objects.ObjectContext.AttachTo%2A> 에 <xref:System.Data.Objects.ObjectContext> 개체를 특정 엔터티 집합 개체 컨텍스트에 연결할 아니면 개체에는 `null` (`Nothing` Visual Basic의) <xref:System.Data.EntityKey> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-274">Call <xref:System.Data.Objects.ObjectContext.AttachTo%2A> on the <xref:System.Data.Objects.ObjectContext> to attach the object to a specific entity set in the object context or if the object has a `null` (`Nothing` in Visual Basic) <xref:System.Data.EntityKey> value.</span></span> <span data-ttu-id="d5ffe-275">자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-275">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="d5ffe-276">연결되고 있는 개체는 단일 개체 또는 그래프의 일부일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-276">The object being attached can be a single object or be part of the graph.</span></span>  
  
 <span data-ttu-id="d5ffe-277">에 대 한 규칙을 `entitySetName` 형식으로 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-277">The rules for the `entitySetName` format are as follows:</span></span>  
  
-   <span data-ttu-id="d5ffe-278">경우는 <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> 속성은 `null`, 해당 `entitySetName` 에서처럼 정규화 해야  *\<엔터티 컨테이너 이름 >*. *\<엔터티 집합 이름 >* 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-278">If the <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> property is `null`, then the `entitySetName` has to be fully qualified as in *\<Entity Container Name>*.*\<Entity Set Name>*.</span></span>  
  
-   <span data-ttu-id="d5ffe-279">경우는 <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> 아닙니다 `null`, 해당 `entitySetName` 일 수 있습니다  *\<엔터티 컨테이너 이름 >*. *\<엔터티 집합 이름 >* 하거나  *\<엔터티 집합 이름 >* 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-279">If the <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> is not `null`, then the `entitySetName` can be either *\<Entity Container Name>*.*\<Entity Set Name>* or *\<Entity Set Name>*.</span></span>  
  
 <span data-ttu-id="d5ffe-280">연결되고 있는 개체에는 관련 <xref:System.Data.EntityKey>가 없어도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-280">The object being attached is not required to have an <xref:System.Data.EntityKey> associated with it.</span></span> <span data-ttu-id="d5ffe-281">개체에 없는 경우 엔터티 키가 다음 `entitySetName` 빈 문자열일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-281">If the object does not have an entity key, then `entitySetName` cannot be an empty string.</span></span>  
  
 <span data-ttu-id="d5ffe-282">연결 중인 개체가 있으면는 <xref:System.Data.EntityKey> 및 `entitySetName` 에 값이 해당 <xref:System.Data.Metadata.Edm.EntitySet> 엔터티 키와 일치 해야 합니다는 <xref:System.Data.Metadata.Edm.EntitySet> 를 기반으로 찾을 수는 `entitySetName` 및 엔터티 컨테이너 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-282">If the object being attached has an <xref:System.Data.EntityKey> and `entitySetName` has a value, then the <xref:System.Data.Metadata.Edm.EntitySet> of the entity key must match the <xref:System.Data.Metadata.Edm.EntitySet> that was found based on the `entitySetName` and entity container name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-283"><paramref name="entity" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-283">The <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-284">엔터티 집합이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-284">Invalid entity set.</span></span>  
  
<span data-ttu-id="d5ffe-285">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-285">-or-</span></span> 
<span data-ttu-id="d5ffe-286">개체에 임시 키가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-286">The object has a temporary key.</span></span>  
  
<span data-ttu-id="d5ffe-287">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-287">-or-</span></span> 
<span data-ttu-id="d5ffe-288">개체에 <see cref="T:System.Data.EntityKey" />가 있고 <see cref="T:System.Data.Metadata.Edm.EntitySet" />이 메서드의 인수로 전달된 엔터티 집합과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-288">The object has an <see cref="T:System.Data.EntityKey" /> and the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> does not match with the entity set passed in as an argument of the method.</span></span>  
  
<span data-ttu-id="d5ffe-289">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-289">-or-</span></span> 
<span data-ttu-id="d5ffe-290">개체에 <see cref="T:System.Data.EntityKey" />가 없고 엔터티 집합이 제공되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-290">The object does not have an <see cref="T:System.Data.EntityKey" /> and no entity set is provided.</span></span>  
  
<span data-ttu-id="d5ffe-291">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-291">-or-</span></span> 
<span data-ttu-id="d5ffe-292">개체 그래프의 개체에 임시 <see cref="T:System.Data.EntityKey" />가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-292">Any object from the object graph has a temporary <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="d5ffe-293">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-293">-or-</span></span> 
<span data-ttu-id="d5ffe-294">개체 그래프의 개체에 잘못된 <see cref="T:System.Data.EntityKey" />가 있는 경우(예: 키에 있는 값이 개체에 있는 값과 일치하지 않는 경우)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-294">Any object from the object graph has an invalid <see cref="T:System.Data.EntityKey" /> (for example, values in the key do not match values in the object).</span></span>  
  
<span data-ttu-id="d5ffe-295">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-295">-or-</span></span> 
<span data-ttu-id="d5ffe-296">지정된 <paramref name="entitySetName" /> 이름 및 엔터티 컨테이너 이름에서 엔터티 집합을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-296">The entity set could not be found from a given <paramref name="entitySetName" /> name and entity container name.</span></span>  
  
<span data-ttu-id="d5ffe-297">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-297">-or-</span></span> 
<span data-ttu-id="d5ffe-298">개체 그래프의 개체가 다른 상태 관리자에 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-298">Any object from the object graph already exists in another state manager.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.Attach(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-299">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-299">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; CommandTimeout { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : Nullable&lt;int&gt; with get, set" Usage="System.Data.Objects.ObjectContext.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-300">모든 개체 컨텍스트 작업에 대한 제한 시간(초) 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-300">Gets or sets the timeout value, in seconds, for all object context operations.</span></span> <span data-ttu-id="d5ffe-301"><see langword="null" /> 값을 지정하면 내부 공급자의 기본값이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-301">A <see langword="null" /> value indicates that the default value of the underlying provider will be used.</span></span></summary>
        <value><span data-ttu-id="d5ffe-302">제한 시간(초) 값인 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-302">An <see cref="T:System.Int32" /> value that is the timeout value, in seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-303">개체 쿼리 및 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 작업의 기본 제한 시간은 기본 연결 공급자에 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-303">The default timeout for object queries and the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> operation is defined by the underlying connection provider.</span></span> <span data-ttu-id="d5ffe-304">그러나 다음 예제에서와 같이 <xref:System.Data.Objects.ObjectContext.CommandTimeout%2A>의 <xref:System.Data.Objects.ObjectContext> 속성을 사용하여 이 기본 제한 시간 값을 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-304">However, you can override this default timeout value by using the <xref:System.Data.Objects.ObjectContext.CommandTimeout%2A> property on the <xref:System.Data.Objects.ObjectContext>, as shown in the following example.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryTimeout](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querytimeout)]
 [!code-vb[DP ObjectServices Concepts#QueryTimeout](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querytimeout)]  
  
 <span data-ttu-id="d5ffe-305">쿼리가 복잡하거나 다른 성능 문제로 인해 쿼리 또는 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 호출의 제한 시간이 자주 초과될 때 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-305">Do this when you have a complex query or when other performance issues cause queries or calls to <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> to time out frequently.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="d5ffe-306">개체 쿼리</span><span class="sxs-lookup"><span data-stu-id="d5ffe-306">Object Queries</span></span>](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-307">제한 시간 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-307">The timeout value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Objects.ObjectContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-308">개체 컨텍스트에서 사용하는 연결을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-308">Gets the connection used by the object context.</span></span></summary>
        <value><span data-ttu-id="d5ffe-309">연결인 <see cref="T:System.Data.Common.DbConnection" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-309">A <see cref="T:System.Data.Common.DbConnection" /> object that is the connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-310">이 속성은 생성자에 전달되었거나 생성 도중 만들어진 연결 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-310">This property returns the connection object that was passed into the constructor or created during construction.</span></span> <span data-ttu-id="d5ffe-311">연결의 소유권은 사용 되는 생성자에 의해 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-311">The connection's ownership is determined by the constructors used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-312">이 예제에서는 장기 실행 <xref:System.Data.EntityClient.EntityConnection>의 생성자에 전달되는 <xref:System.Data.Objects.ObjectContext> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-312">This example creates an <xref:System.Data.EntityClient.EntityConnection> object that is passed into the constructor of a long-running <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="d5ffe-313">이 연결은 수동으로 열립니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-313">The connection is opened manually.</span></span> <span data-ttu-id="d5ffe-314"><xref:System.Data.EntityClient.EntityConnection> 개체와 <xref:System.Data.Objects.ObjectContext> 개체는 모두 수동으로 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-314">Both the <xref:System.Data.EntityClient.EntityConnection> object and the <xref:System.Data.Objects.ObjectContext> object are disposed of manually.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#OpenEntityConnection](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#openentityconnection)]
 [!code-vb[DP ObjectServices Concepts#OpenEntityConnection](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#openentityconnection)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d5ffe-315"><see cref="T:System.Data.Objects.ObjectContext" /> 인스턴스가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-315">When the <see cref="T:System.Data.Objects.ObjectContext" /> instance has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-316">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-316">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContextOptions">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContextOptions ContextOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContextOptions ContextOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.ContextOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextOptions As ObjectContextOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContextOptions ^ ContextOptions { System::Data::Objects::ObjectContextOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextOptions : System.Data.Objects.ObjectContextOptions" Usage="System.Data.Objects.ObjectContext.ContextOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-317"><see cref="T:System.Data.Objects.ObjectContextOptions" />의 동작에 영향을 미치는 옵션이 포함된 <see cref="T:System.Data.Objects.ObjectContext" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-317">Gets the <see cref="T:System.Data.Objects.ObjectContextOptions" /> instance that contains options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></summary>
        <value><span data-ttu-id="d5ffe-318"><see cref="T:System.Data.Objects.ObjectContextOptions" />의 동작에 영향을 미치는 옵션이 포함된 <see cref="T:System.Data.Objects.ObjectContext" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-318">The <see cref="T:System.Data.Objects.ObjectContextOptions" /> instance that contains options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : unit -&gt; unit" Usage="objectContext.CreateDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-319">현재 데이터 소스 연결과 <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />에 있는 메타데이터를 사용하여 데이터베이스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-319">Creates the database by using the current data source connection and the metadata in the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-320">호출 <xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A> 데이터 정의 언어 (DDL) 스크립트를 볼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-320">Call <xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A> to view the data definition language (DDL) script.</span></span> <span data-ttu-id="d5ffe-321">호출 <xref:System.Data.Objects.ObjectContext.CreateDatabase%2A> 스크립트를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-321">Call <xref:System.Data.Objects.ObjectContext.CreateDatabase%2A> to execute the script.</span></span>  
  
 <span data-ttu-id="d5ffe-322">대부분의 작업에 위임 되는 <xref:System.Data.Common.DbProviderServices.CreateDatabase%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-322">Most of the work is delegated to the <xref:System.Data.Common.DbProviderServices.CreateDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-323">자세한 내용은 [데이터 정의 언어로 작업](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-323">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
        <altmember cref="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseScript">
      <MemberSignature Language="C#" Value="public string CreateDatabaseScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string CreateDatabaseScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDatabaseScript () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateDatabaseScript();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabaseScript : unit -&gt; string" Usage="objectContext.CreateDatabaseScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-324"><see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />에 있는 메타데이터에 대한 스키마 개체(테이블, 기본 키, 외래 키)를 만드는 DLL(데이터 정의 언어) 스크립트를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-324">Generates a data definition language (DDL) script that creates schema objects (tables, primary keys, foreign keys) for the metadata in the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</span></span> <span data-ttu-id="d5ffe-325"><see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />은 SSDL(저장소 스키마 정의 언어) 파일의 메타데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-325">The <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> loads metadata from store schema definition language (SSDL) files.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-326"><see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />에 있는 메타데이터에 대한 스키마 개체를 만드는 DLL 스크립트입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-326">A DDL script that creates schema objects for the metadata in the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-327">호출 <xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A> DDL 스크립트를 볼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-327">Call <xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A> to view the DDL script.</span></span> <span data-ttu-id="d5ffe-328">호출 <xref:System.Data.Objects.ObjectContext.CreateDatabase%2A> 스크립트를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-328">Call <xref:System.Data.Objects.ObjectContext.CreateDatabase%2A> to execute the script.</span></span>  
  
 <span data-ttu-id="d5ffe-329">대부분의 작업에 위임 되는 <xref:System.Data.Common.DbProviderServices.CreateDatabase%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-329">Most of the work is delegated to the <xref:System.Data.Common.DbProviderServices.CreateDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-330">자세한 내용은 [데이터 정의 언어로 작업](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-330">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabase" />
        <altmember cref="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      </Docs>
    </Member>
    <Member MemberName="CreateEntityKey">
      <MemberSignature Language="C#" Value="public System.Data.EntityKey CreateEntityKey (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityKey CreateEntityKey(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntityKey (entitySetName As String, entity As Object) As EntityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityKey ^ CreateEntityKey(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.CreateEntityKey : string * obj -&gt; System.Data.EntityKey" Usage="objectContext.CreateEntityKey (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="d5ffe-331">엔터티 개체가 속한 엔터티 집합의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-331">The fully qualified name of the entity set to which the entity object belongs.</span></span></param>
        <param name="entity"><span data-ttu-id="d5ffe-332">엔터티 키를 검색 중인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-332">The object for which the entity key is being retrieved.</span></span></param>
        <summary><span data-ttu-id="d5ffe-333">특정 개체에 대한 엔터티 키를 만들거나 엔터티 키가 이미 있는 경우 해당 엔터티 키를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-333">Creates the entity key for a specific object, or returns the entity key if it already exists.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-334">개체의 <see cref="T:System.Data.EntityKey" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-334">The <see cref="T:System.Data.EntityKey" /> of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-335">경우는 <xref:System.Data.EntityKey> 존재 하지 않는 합니다 `entity`, <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> 메서드에 대 한 새 키를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-335">If an <xref:System.Data.EntityKey> does not exist for the `entity`, the <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> method creates a new key for it.</span></span>  
  
 <span data-ttu-id="d5ffe-336">이 메서드는 같은 <xref:System.Data.EntityKey>가 있는 개체가 <xref:System.Data.Objects.ObjectContext>에 이미 연결되어 있는지 여부를 확인하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-336">This method is used to determine whether an object that has the same <xref:System.Data.EntityKey> is already attached to the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="d5ffe-337">같은 <xref:System.Data.EntityKey>가 있는 개체가 이미 연결되어 있으면 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-337">If an object that has the same <xref:System.Data.EntityKey> is already attached, an exception is raised.</span></span> <span data-ttu-id="d5ffe-338"><xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> 메서드를 호출하기 전에 <xref:System.Data.EntityKey> 메서드를 사용하여 분리된 개체의 <xref:System.Data.Objects.ObjectContext.Attach%2A>를 검색해 보십시오.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-338">Use the <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> method to try to retrieve the <xref:System.Data.EntityKey> of the detached object before calling the <xref:System.Data.Objects.ObjectContext.Attach%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-339">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-339">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-340">이 예제에서는 <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A>를 사용하여 기존 개체의 엔터티 키를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-340">In this example, <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> is used to retrieve the entity key of an existing object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdatesGetObject](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdatesgetobject)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdatesGetObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdatesgetobject)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-341">매개 변수 중 하나가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-341">When either parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-342"><paramref name="entitySetName" />이 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-342">When <paramref name="entitySetName" /> is empty.</span></span>  
  
<span data-ttu-id="d5ffe-343">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-343">-or-</span></span> 
<span data-ttu-id="d5ffe-344"><paramref name="entity" /> 개체의 형식이 엔터티 집합에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-344">When the type of the <paramref name="entity" /> object does not exist in the entity set.</span></span>  
  
<span data-ttu-id="d5ffe-345">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-345">-or-</span></span> 
<span data-ttu-id="d5ffe-346"><paramref name="entitySetName" />이 정규화되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-346">When the <paramref name="entitySetName" /> is not fully qualified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-347">제공된 매개 변수를 기반으로 엔터티 키를 성공적으로 생성할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-347">When the entity key cannot be constructed successfully based on the supplied parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T CreateObject&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T CreateObject&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateObject``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T CreateObject();" />
      <MemberSignature Language="F#" Value="member this.CreateObject : unit -&gt; 'T (requires 'T : null)" Usage="objectContext.CreateObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="d5ffe-348">반환될 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-348">Type of object to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="d5ffe-349">요청된 형식의 인스턴스를 만들고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-349">Creates and returns an instance of the requested type .</span></span></summary>
        <returns><span data-ttu-id="d5ffe-350">요청된 형식 <paramref name="T" />의 인스턴스이거나, Entity Framework에서 <paramref name="T" />를 사용할 수 있게 만드는 파생 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-350">An instance of the requested type <paramref name="T" />, or an instance of a derived type that enables <paramref name="T" /> to be used with the Entity Framework.</span></span> <span data-ttu-id="d5ffe-351">반환된 개체는 요청된 형식의 인스턴스이거나, Entity Framework에서 요청된 형식을 사용할 수 있게 만드는 파생 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-351">The returned object is either an instance of the requested type or an instance of a derived type that enables the requested type to be used with the Entity Framework.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-352"><xref:System.Data.Objects.ObjectContext.CreateObject%2A> Entity Framework에 의해 반환된 된 개체는 올바르게 관리할 수 있습니다 있도록 POCO 사용자 지정 데이터 클래스에 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-352">The <xref:System.Data.Objects.ObjectContext.CreateObject%2A> method is used with POCO custom data classes to make sure that the returned object can be managed correctly by the Entity Framework.</span></span> <span data-ttu-id="d5ffe-353">자세한 내용은 참조 하세요. [POCO 프록시 만들기에 대 한 요구 사항](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) 하 고 [POCO 엔터티 작업](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-353">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectSet&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectSet&lt;TEntity&gt; CreateObjectSet&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectSet`1&lt;!!TEntity&gt; CreateObjectSet&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateObjectSet``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectSet(Of TEntity As Class) () As ObjectSet(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectSet&lt;TEntity&gt; ^ CreateObjectSet();" />
      <MemberSignature Language="F#" Value="member this.CreateObjectSet : unit -&gt; System.Data.Objects.ObjectSet&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="objectContext.CreateObjectSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectSet&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-354">요청된 <see cref="T:System.Data.Objects.ObjectSet`1" />의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-354">Entity type of the requested <see cref="T:System.Data.Objects.ObjectSet`1" />.</span></span></typeparam>
        <summary><span data-ttu-id="d5ffe-355">지정된 엔터티 형식의 개체에 대한 쿼리, 추가, 수정 및 삭제에 사용되는 새 <see cref="T:System.Data.Objects.ObjectSet`1" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-355">Creates a new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance that is used to query, add, modify, and delete objects of the specified entity type.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-356">새 <see cref="T:System.Data.Objects.ObjectSet`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-356">The new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-357"><see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> 속성이 <see cref="T:System.Data.Objects.ObjectContext" />에 설정되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-357">The <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> property is not set on the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span>  
  
<span data-ttu-id="d5ffe-358">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-358">-or-</span></span> 
<span data-ttu-id="d5ffe-359">지정된 형식은 둘 이상의 엔터티 집합에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-359">The specified type belongs to more than one entity set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectSet&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectSet&lt;TEntity&gt; CreateObjectSet&lt;TEntity&gt; (string entitySetName) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectSet`1&lt;!!TEntity&gt; CreateObjectSet&lt;class TEntity&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateObjectSet``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectSet(Of TEntity As Class) (entitySetName As String) As ObjectSet(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectSet&lt;TEntity&gt; ^ CreateObjectSet(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateObjectSet : string -&gt; System.Data.Objects.ObjectSet&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="objectContext.CreateObjectSet entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectSet&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-360">요청된 <see cref="T:System.Data.Objects.ObjectSet`1" />의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-360">Entity type of the requested <see cref="T:System.Data.Objects.ObjectSet`1" />.</span></span></typeparam>
        <param name="entitySetName"><span data-ttu-id="d5ffe-361">반환된 <see cref="T:System.Data.Objects.ObjectSet`1" />에 대한 엔터티 집합의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-361">Name of the entity set for the returned <see cref="T:System.Data.Objects.ObjectSet`1" />.</span></span> <span data-ttu-id="d5ffe-362"><see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" />에 <see cref="T:System.Data.Objects.ObjectContext" /> 속성이 설정되어 있지 않은 경우 문자열을 기본 컨테이너 이름으로 정규화해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-362">The string must be qualified by the default container name if the <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> property is not set on the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="d5ffe-363">지정된 형식과 지정된 엔터티 집합 이름을 갖는 개체의 쿼리, 추가, 수정 및 삭제에 사용되는 새 <see cref="T:System.Data.Objects.ObjectSet`1" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-363">Creates a new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance that is used to query, add, modify, and delete objects of the specified type and with the specified entity set name.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-364">새 <see cref="T:System.Data.Objects.ObjectSet`1" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-364">The new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-365"><paramref name="entitySetName" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />이 개체 <see cref="T:System.Data.EntityKey" />의 <see cref="T:System.Data.Metadata.Edm.EntitySet" />과 일치하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-365">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="d5ffe-366">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-366">-or-</span></span> 
<span data-ttu-id="d5ffe-367"><see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> 속성이 <see cref="T:System.Data.Objects.ObjectContext" />에 설정되어 있지 않고 이름이 <paramref name="entitySetName" /> 매개 변수의 일부로 정규화되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-367">The <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> property is not set on the <see cref="T:System.Data.Objects.ObjectContext" /> and the name is not qualified as part of the <paramref name="entitySetName" /> parameter.</span></span>  
  
<span data-ttu-id="d5ffe-368">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-368">-or-</span></span> 
<span data-ttu-id="d5ffe-369">지정된 형식은 둘 이상의 엔터티 집합에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-369">The specified type belongs to more than one entity set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProxyTypes">
      <MemberSignature Language="C#" Value="public void CreateProxyTypes (System.Collections.Generic.IEnumerable&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateProxyTypes(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateProxyTypes (types As IEnumerable(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateProxyTypes(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CreateProxyTypes : seq&lt;Type&gt; -&gt; unit" Usage="objectContext.CreateProxyTypes types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="d5ffe-370">개념적 모델에 매핑되는 사용자 지정 데이터 클래스를 나타내는 <see cref="T:System.Type" /> 개체의 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-370">An enumeration of <see cref="T:System.Type" /> objects that represent custom data classes that map to the conceptual model.</span></span></param>
        <summary><span data-ttu-id="d5ffe-371">제공된 열거형의 각 형식에 대해 Entity Framework에서 사용할 수 있는 동등한 형식을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-371">Generates an equivalent type that can be used with the Entity Framework for each type in the supplied enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-372">개별 형식에 `types` 개념적 모델의 엔터티 형식에 매핑되지 않는 열거형은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-372">Individual types in the `types` enumeration that do not map to an entity type in the conceptual model are ignored.</span></span>  
  
 <span data-ttu-id="d5ffe-373">자세한 내용은 참조 하세요. [POCO 프록시 만들기에 대 한 요구 사항](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) 하 고 [POCO 엔터티 작업](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-373">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; CreateQuery&lt;T&gt; (string queryString, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string queryString, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (queryString As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ CreateQuery(System::String ^ queryString, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectContext.CreateQuery (queryString, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="d5ffe-374">반환된 <see cref="T:System.Data.Objects.ObjectQuery`1" />의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-374">The entity type of the returned <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></typeparam>
        <param name="queryString"><span data-ttu-id="d5ffe-375">실행할 쿼리 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-375">The query string to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="d5ffe-376">쿼리에 전달할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-376">Parameters to pass to the query.</span></span></param>
        <summary><span data-ttu-id="d5ffe-377">지정된 쿼리 문자열을 사용하여 현재 개체 컨텍스트에서 <see cref="T:System.Data.Objects.ObjectQuery`1" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-377">Creates an <see cref="T:System.Data.Objects.ObjectQuery`1" /> in the current object context by using the specified query string.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-378">지정된 형식의 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-378">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-379"><xref:System.Data.Objects.ObjectContext.CreateQuery%2A>를 사용하여 현재 개체 컨텍스트에 속하는 지정된 형식의 <xref:System.Data.Objects.ObjectQuery%601>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-379">Use <xref:System.Data.Objects.ObjectContext.CreateQuery%2A> to create an <xref:System.Data.Objects.ObjectQuery%601> of the specified type that belongs to the current object context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-380">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-380">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="d5ffe-381">예제에서는 간단한 쿼리를 만들어 결과 컬렉션에서 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-381">The example creates a simple query and iterates through the collection of results.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#CreateQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#createquery)]
 [!code-vb[DP ObjectServices Concepts#CreateQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#createquery)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-382"><paramref name="queryString" /> 또는 <paramref name="parameters" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-382">The <paramref name="queryString" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="d5ffe-383">개념적 모델 쿼리</span><span class="sxs-lookup"><span data-stu-id="d5ffe-383">Querying a Conceptual Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : unit -&gt; bool" Usage="objectContext.DatabaseExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-384">현재 데이터 소스 연결에서 데이터베이스로 지정된 데이터베이스가 데이터 소스에 존재하는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-384">Checks if the database that is specified as the database in the current data source connection exists on the data source.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-385">데이터베이스가 있으면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-385"><see langword="true" /> if the database exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-386">대부분의 작업에 위임 되는 <xref:System.Data.Common.DbProviderServices.DatabaseExists%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-386">Most of the work is delegated to the <xref:System.Data.Common.DbProviderServices.DatabaseExists%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-387">자세한 내용은 [데이터 정의 언어로 작업](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-387">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabase" />
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
      </Docs>
    </Member>
    <Member MemberName="DefaultContainerName">
      <MemberSignature Language="C#" Value="public string DefaultContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.DefaultContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultContainerName : string with get, set" Usage="System.Data.Objects.ObjectContext.DefaultContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-388">기본 컨테이너 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-388">Gets or sets the default container name.</span></span></summary>
        <value><span data-ttu-id="d5ffe-389">기본 컨테이너 이름인 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-389">A <see cref="T:System.String" /> that is the default container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-390"><xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> 반환 하지 않습니다 `null`; 값 집합 또는 빈 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-390"><xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> never returns `null`; it either returns the value that was set or an empty string.</span></span> <span data-ttu-id="d5ffe-391">사용자는이 속성을 설정할 수 `null`에 있지만 내부적으로 이름을 설정 빈 문자열인 경우에 모두 빈 문자열을 확인할 필요가 있으므로 및 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-391">The user can set this property to `null`, but internally the name will be set to an empty string, so the user never needs to check for both an empty string and `null`.</span></span>  
  
 <span data-ttu-id="d5ffe-392">기본 컨테이너 이름도 생성자의 일부로 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-392">The default container name is also defined as part of a constructor.</span></span> <span data-ttu-id="d5ffe-393">기본 컨테이너 이름이 protected 생성자를 통해 설정되는 경우 속성은 읽기 전용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-393">If the default container name is set through the protected constructor, the property becomes read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-394">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-394">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : unit -&gt; unit" Usage="objectContext.DeleteDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-395">현재 데이터 소스 연결에서 데이터베이스로 지정된 데이터베이스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-395">Deletes the database that is specified as the database in the current data source connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-396">대부분의 작업에 위임 되는 <xref:System.Data.Common.DbProviderServices.DeleteDatabase%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-396">Most of the work is delegated to the  <xref:System.Data.Common.DbProviderServices.DeleteDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-397">자세한 내용은 [데이터 정의 언어로 작업](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-397">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabase" />
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
        <altmember cref="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="objectContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="d5ffe-398">삭제할 엔터티를 지정하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-398">An object that specifies the entity to delete.</span></span> <span data-ttu-id="d5ffe-399">개체는 <see cref="F:System.Data.EntityState.Detached" />를 제외한 모든 상태일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-399">The object can be in any state except <see cref="F:System.Data.EntityState.Detached" />.</span></span></param>
        <summary><span data-ttu-id="d5ffe-400">개체에 삭제 표시를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-400">Marks an object for deletion.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-401"><xref:System.Data.Objects.ObjectStateManager>에서 삭제하도록 개체에 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-401">Marks an object for deletion from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="d5ffe-402"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드가 호출되면 개체가 데이터 원본에서 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-402">The object is deleted in the data source when the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method is called.</span></span>  
  
 <span data-ttu-id="d5ffe-403">부모 개체를 삭제하면 제약 조건 관계의 자식 개체도 모두 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-403">Deleting the parent object also deletes all the child objects in the constrained relationship.</span></span> <span data-ttu-id="d5ffe-404">이 결과는 해당 관계에 대한 연결에 `CascadeDelete` 속성을 사용하는 것과 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-404">This result is the same as enabling the `CascadeDelete` property on the association for the relationship.</span></span>  
  
 <span data-ttu-id="d5ffe-405"><xref:System.Data.Objects.ObjectContext.DeleteObject%2A> 는 이미 삭제 된 개체에서 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-405">The <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method can be called on objects that are already deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-406">이러한 예제를 기반으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-406">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="d5ffe-407">이 예에서는 <xref:System.Data.EntityKey> 데이터 원본에서 제품 개체를 검색 하는 특정 제품 Id를 사용 하 여 키를 사용 하 고 제품을 삭제 한 다음 데이터베이스에 변경 내용을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-407">This example constructs an <xref:System.Data.EntityKey> with a specific ProductID, uses the key to retrieve a Product object from the data source, deletes the product, and saves the changes to the database.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#DeleteObject](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#deleteobject)]
 [!code-vb[DP ObjectServices Concepts#DeleteObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#deleteobject)]  
  
 <span data-ttu-id="d5ffe-408">이 예제에서는 기존 주문 항목을 삭제, 새 항목을 추가 및 데이터베이스에 변경 내용을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-408">This example deletes an existing order item, adds a new item, and saves the changes to the database.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#SaveChanges](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#savechanges)]
 [!code-vb[DP ObjectServices Concepts#SaveChanges](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#savechanges)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-409"><paramref name="entity" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-409"><paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-410"><paramref name="entity" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-410"><paramref name="entity" /> does not exist.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.DeleteObject(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-411">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-411">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; unit" Usage="objectContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="d5ffe-412">분리할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-412">Object to be detached.</span></span> <span data-ttu-id="d5ffe-413"><paramref name="entity" />만 제거됩니다. 같은 <see cref="T:System.Data.Objects.ObjectStateManager" />에서 추적하는 관련 개체가 있는 경우 이러한 개체는 자동으로 분리되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-413">Only the <paramref name="entity" /> is removed; if there are any related objects that are being tracked by the same <see cref="T:System.Data.Objects.ObjectStateManager" />, those will not be detached automatically.</span></span></param>
        <summary><span data-ttu-id="d5ffe-414">개체 컨텍스트에서 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-414">Removes the object from the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-415"><xref:System.Data.Objects.ObjectStateManager>에서 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-415">Removes the object from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="d5ffe-416">이렇게 하면 해당 개체에 대한 변경 내용 추적 및 ID 확인을 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-416">This disables change tracking and identity resolution for that object.</span></span> <span data-ttu-id="d5ffe-417">자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-417">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="d5ffe-418"><xref:System.Data.Objects.ObjectContext.Detach%2A> 메서드를 호출한 후에는 시스템에서 이 개체를 가리키는 참조를 더 이상 유지하지 않으므로 가비지 수집기에서 수집할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-418">After the <xref:System.Data.Objects.ObjectContext.Detach%2A> method is called, the system will no longer keep references that point to this object and it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5ffe-419">가비지 수집은 사용자 코드에 분리된 개체에 대한 참조가 없을 경우에만 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-419">Garbage collection can only occur if the user code does not have any references to the detached object.</span></span>  
  
 <span data-ttu-id="d5ffe-420">개체를 분리할 때는 다음 사항을 고려해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-420">The following considerations apply when detaching objects:</span></span>  
  
-   <span data-ttu-id="d5ffe-421"><xref:System.Data.Objects.ObjectContext.Detach%2A>는 메서드에 전달되는 특정 개체에만 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-421"><xref:System.Data.Objects.ObjectContext.Detach%2A> only affects the specific object that is passed to the method.</span></span> <span data-ttu-id="d5ffe-422">분리할 개체의 관련 개체가 개체 컨텍스트에 있는 경우 해당 개체는 분리되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-422">If the object being detached has related objects in the object context, those objects are not detached.</span></span>  
  
-   <span data-ttu-id="d5ffe-423">개체 분리는 데이터 원본의 데이터에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-423">Detaching objects does not affect data in the data source.</span></span>  
  
-   <span data-ttu-id="d5ffe-424">하위 삭제 지시문 및 참조 제약 조건은 분리 작업 동안 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-424">Cascade delete directives and referential constraints are not enforced during a detach operation.</span></span>  
  
 <span data-ttu-id="d5ffe-425">자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-425">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
   
  
## Examples  
 [!code-csharp[DP ObjectServices Concepts#DetachObjects](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#detachobjects)]
 [!code-vb[DP ObjectServices Concepts#DetachObjects](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#detachobjects)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-426"><paramref name="entity" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-426">The <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-427"><paramref name="entity" />가 이 <see cref="T:System.Data.Objects.ObjectContext" />와 연결되어 있지 않은 경우(예: 새로 만들어진 후 컨텍스트에 아직 연결되지 않았거나, 다른 컨텍스트를 통해 가져왔거나, 이미 분리된 경우)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-427">The <paramref name="entity" /> is not associated with this <see cref="T:System.Data.Objects.ObjectContext" /> (for example, was newly created and not associated with any context yet, or was obtained through some other context, or was already detached).</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.Detach(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-428">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-428">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DetectChanges">
      <MemberSignature Language="C#" Value="public void DetectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DetectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DetectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetectChanges();" />
      <MemberSignature Language="F#" Value="member this.DetectChanges : unit -&gt; unit" Usage="objectContext.DetectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-429"><see cref="T:System.Data.Objects.ObjectStateEntry" /> 변경 내용이 <see cref="T:System.Data.Objects.ObjectStateManager" />로 추적되는 모든 개체의 변경 내용과 동기화되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-429">Ensures that <see cref="T:System.Data.Objects.ObjectStateEntry" /> changes are synchronized with changes in all objects that are tracked by the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ffe-430">개체 컨텍스트에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-430">Releases the resources used by the object context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="objectContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-431">개체 컨텍스트에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-431">Releases the resources used by the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-432">이 메서드는 Entity Framework에서 열려 있는 경우 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-432">This method closes the connection if it was opened by the Entity Framework.</span></span> <span data-ttu-id="d5ffe-433">이후 <xref:System.Data.Objects.ObjectContext.Dispose%2A> 호출 되는 쿼리 실행 또는 호출 같은 연결을 열어야 하는 작업을 <xref:System.Data.Objects.ObjectQuery.ToTraceString%2A> 메서드에서 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-433">After <xref:System.Data.Objects.ObjectContext.Dispose%2A> is called, operations that require an open connection, such as executing a query or calling the <xref:System.Data.Objects.ObjectQuery.ToTraceString%2A> method, will cause an exception.</span></span> <span data-ttu-id="d5ffe-434">쿼리 작성 또는 개체 연결과 같이 연결을 열 필요가 없는 작업의 경우에는 예외가 발생하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-434">Operations that do not require an open connection, such as composing a query or attaching objects, will not cause an exception.</span></span> <span data-ttu-id="d5ffe-435"><xref:System.Data.Objects.ObjectContext.Dispose%2A> 메서드는 명시적으로 열린된 모든 연결을 닫지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-435">The <xref:System.Data.Objects.ObjectContext.Dispose%2A> method does not close any explicitly opened connections.</span></span>  
  
 <span data-ttu-id="d5ffe-436">범위를 제한는 <xref:System.Data.Objects.ObjectContext> 내에 `using` 블록 (`Using` Visual Basic의) 하면 리소스가 올바로 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-436">Limiting the scope of an <xref:System.Data.Objects.ObjectContext> within a `using` block (`Using` in Visual Basic) ensures that resources are correctly disposed.</span></span> <span data-ttu-id="d5ffe-437">자세한 내용은 [트랜잭션과 연결 관리](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-437">For more information, see [Managing Connections and Transactions](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99).</span></span>  
  
 <span data-ttu-id="d5ffe-438">합니다 <xref:System.Data.Objects.ObjectContext.Dispose> 메서드 호출을 `virtual` (`Overridable` Visual basic에서) <xref:System.Data.Objects.ObjectContext.Dispose%28System.Boolean%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-438">The <xref:System.Data.Objects.ObjectContext.Dispose> method calls the `virtual` (`Overridable` in Visual Basic) <xref:System.Data.Objects.ObjectContext.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-439">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-439">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="objectContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d5ffe-440">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-440"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d5ffe-441">개체 컨텍스트에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-441">Releases the resources used by the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-442">이 메서드는 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-442">This method closes the connection.</span></span> <span data-ttu-id="d5ffe-443">이후 <xref:System.Data.Objects.ObjectContext.Dispose%2A> 호출 되는 쿼리 실행 또는 호출 같은 연결을 열어야 하는 작업을 <xref:System.Data.Objects.ObjectQuery.ToTraceString%2A> 메서드에서 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-443">After <xref:System.Data.Objects.ObjectContext.Dispose%2A> is called, operations that require an open connection, such as executing a query or calling the <xref:System.Data.Objects.ObjectQuery.ToTraceString%2A> method, will cause an exception.</span></span> <span data-ttu-id="d5ffe-444">쿼리 작성 또는 개체 연결과 같이 연결을 열 필요가 없는 작업의 경우에는 예외가 발생하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-444">Operations that do not require an open connection, such as composing a query or attaching objects, will not cause an exception.</span></span>  
  
 <span data-ttu-id="d5ffe-445">범위를 제한는 <xref:System.Data.Objects.ObjectContext> 내에서 `using` 블록 (`Using` Visual basic에서) 하면 리소스가 제대로 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-445">Limiting the scope of an <xref:System.Data.Objects.ObjectContext> within a `using` block (`Using` in Visual Basic) ensures that resources are properly disposed.</span></span> <span data-ttu-id="d5ffe-446">자세한 내용은 [트랜잭션과 연결 관리](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-446">For more information, see [Managing Connections and Transactions](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-447">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-447">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteFunction">
      <MemberSignature Language="C#" Value="public int ExecuteFunction (string functionName, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteFunction(string functionName, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteFunction (functionName As String, ParamArray parameters As ObjectParameter()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteFunction(System::String ^ functionName, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteFunction : string * System.Data.Objects.ObjectParameter[] -&gt; int" Usage="objectContext.ExecuteFunction (functionName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="functionName"><span data-ttu-id="d5ffe-448">저장 프로시저나 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-448">The name of the stored procedure or function.</span></span> <span data-ttu-id="d5ffe-449">이름에는 <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>과 같은 컨테이너 이름이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-449">The name can include the container name, such as <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>.</span></span> <span data-ttu-id="d5ffe-450">기본 컨테이너 이름이 알려져 있으면 함수 이름만 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-450">When the default container name is known, only the function name is required.</span></span></param>
        <param name="parameters"><span data-ttu-id="d5ffe-451"><see cref="T:System.Data.Objects.ObjectParameter" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-451">An array of <see cref="T:System.Data.Objects.ObjectParameter" /> objects.</span></span></param>
        <summary><span data-ttu-id="d5ffe-452">데이터 소스에 정의되어 있으며 개념적 모델로 표현되는 저장 프로시저 또는 함수를 실행합니다. 함수에서 반환되는 결과는 모두 무시되고 실행의 영향을 받는 행 수가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-452">Executes a stored procedure or function that is defined in the data source and expressed in the conceptual model; discards any results returned from the function; and returns the number of rows affected by the execution.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-453">영향을 받은 행 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-453">The number of rows affected.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-454"><paramref name="function" />이 null이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-454"><paramref name="function" /> is null or empty</span></span> 
<span data-ttu-id="d5ffe-455">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-455">-or-</span></span> 
 <span data-ttu-id="d5ffe-456"><paramref name="function" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-456"><paramref name="function" /> is not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-457">엔터티 판독기에서 이 <paramref name="function" />을 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-457">The entity reader does not support this <paramref name="function" />.</span></span>  
  
<span data-ttu-id="d5ffe-458">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-458">-or-</span></span> 
<span data-ttu-id="d5ffe-459">판독기와 <paramref name="function" />에서 형식이 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-459">There is a type mismatch on the reader and the <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteFunction&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; ExecuteFunction&lt;TElement&gt; (string functionName, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; ExecuteFunction&lt;TElement&gt;(string functionName, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteFunction(Of TElement) (functionName As String, ParamArray parameters As ObjectParameter()) As ObjectResult(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ ExecuteFunction(System::String ^ functionName, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteFunction : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.ExecuteFunction (functionName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="d5ffe-460">함수가 데이터 소스에 대해 실행될 때 반환되는 <see cref="T:System.Data.Objects.ObjectResult`1" />의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-460">The entity type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the function is executed against the data source.</span></span> <span data-ttu-id="d5ffe-461">이 형식은 <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-461">This type must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />.</span></span></typeparam>
        <param name="functionName"><span data-ttu-id="d5ffe-462">저장 프로시저나 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-462">The name of the stored procedure or function.</span></span> <span data-ttu-id="d5ffe-463">이름에는 <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>과 같은 컨테이너 이름이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-463">The name can include the container name, such as <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>.</span></span> <span data-ttu-id="d5ffe-464">기본 컨테이너 이름이 알려져 있으면 함수 이름만 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-464">When the default container name is known, only the function name is required.</span></span></param>
        <param name="parameters"><span data-ttu-id="d5ffe-465"><see cref="T:System.Data.Objects.ObjectParameter" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-465">An array of <see cref="T:System.Data.Objects.ObjectParameter" /> objects.</span></span></param>
        <summary><span data-ttu-id="d5ffe-466">데이터 소스에 정의되어 있으며 개념적 모델에 매핑되는 저장 프로시저 또는 함수를 지정된 매개 변수를 사용하여 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-466">Executes a stored procedure or function that is defined in the data source and mapped in the conceptual model, with the specified parameters.</span></span> <span data-ttu-id="d5ffe-467">형식화된 <see cref="T:System.Data.Objects.ObjectResult`1" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-467">Returns a typed <see cref="T:System.Data.Objects.ObjectResult`1" />.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-468">저장 프로시저에서 반환하는 데이터의 <see cref="T:System.Data.Objects.ObjectResult`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-468">An <see cref="T:System.Data.Objects.ObjectResult`1" /> for the data that is returned by the stored procedure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-469"><xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> 메서드는 데이터 원본에 정의 되어 있고 개념적 모델로 표현 되는 함수나 저장된 프로시저를 실행 하는 데 사용 되는 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-469">The <xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> method is a helper method that is used to execute stored procedures or functions that are defined in the data source and expressed in the conceptual model.</span></span> <span data-ttu-id="d5ffe-470">엔터티 데이터 모델 도구는 개념적 모델의 각 메서드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-470">The Entity Data Model tools generate a method for each  in the conceptual model.</span></span> <span data-ttu-id="d5ffe-471">이러한 메서드는 강력한 형식의 호출 `ExecuteFunction` 형식화 된 반환할 <xref:System.Data.Objects.ObjectResult%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-471">These methods call a strongly-typed `ExecuteFunction` to return a typed <xref:System.Data.Objects.ObjectResult%601>.</span></span> <span data-ttu-id="d5ffe-472">자세한 내용은 [저장 프로시저 (엔터티 프레임 워크)를 사용 하 여 응용 프로그램 코드](https://msdn.microsoft.com/library/d13dd33f-fcf9-4e86-bd00-74bc31521536)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-472">For more information, see [Application Code using Stored Procedures (Enity Framework)](https://msdn.microsoft.com/library/d13dd33f-fcf9-4e86-bd00-74bc31521536).</span></span>  
  
 <span data-ttu-id="d5ffe-473">매개 변수 배열에 필요한 함수에 대 한 모든 매개 변수 및 모든 형식을 가져오기 함수의 경우 함수 자체의 유형을 포함 하 여 메타 데이터에 대해 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-473">All parameters for the function are required in the parameters array and all types are checked against the metadata for the import function, including the type of the function itself.</span></span> <span data-ttu-id="d5ffe-474">`null` CLR 값 형식에 대 한 값이 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-474">`null` values are permitted for CLR value types.</span></span> <span data-ttu-id="d5ffe-475">매개 변수 유효성 검사는 공급자에서 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-475">Parameter validation is performed by the provider.</span></span>  
  
 <span data-ttu-id="d5ffe-476">합니다 <xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> 메서드를 <xref:System.Data.Objects.MergeOption> 의 값 <xref:System.Data.Objects.MergeOption.AppendOnly>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-476">The <xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> method uses the <xref:System.Data.Objects.MergeOption> value of <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="d5ffe-477">따라서 개체를 개체 컨텍스트에 이미 있는 경우 데이터 원본에서 로드 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-477">Therefore, if an object already exists in the object context, it will not be loaded from the data source.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-478"><paramref name="function" />이 null이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-478"><paramref name="function" /> is null or empty</span></span> 
<span data-ttu-id="d5ffe-479">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-479">-or-</span></span> 
 <span data-ttu-id="d5ffe-480"><paramref name="function" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-480"><paramref name="function" /> is not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-481">엔터티 판독기에서 이 <paramref name="function" />을 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-481">The entity reader does not support this <paramref name="function" />.</span></span>  
  
<span data-ttu-id="d5ffe-482">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-482">-or-</span></span> 
<span data-ttu-id="d5ffe-483">판독기와 <paramref name="function" />에서 형식이 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-483">There is a type mismatch on the reader and the <paramref name="function" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-484">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-484">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteFunction&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; ExecuteFunction&lt;TElement&gt; (string functionName, System.Data.Objects.MergeOption mergeOption, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; ExecuteFunction&lt;TElement&gt;(string functionName, valuetype System.Data.Objects.MergeOption mergeOption, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ ExecuteFunction(System::String ^ functionName, System::Data::Objects::MergeOption mergeOption, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteFunction : string * System.Data.Objects.MergeOption * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.ExecuteFunction (functionName, mergeOption, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="d5ffe-485">함수가 데이터 소스에 대해 실행될 때 반환되는 <see cref="T:System.Data.Objects.ObjectResult`1" />의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-485">The entity type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the function is executed against the data source.</span></span> <span data-ttu-id="d5ffe-486">이 형식은 <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-486">This type must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />.</span></span></typeparam>
        <param name="functionName"><span data-ttu-id="d5ffe-487">저장 프로시저나 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-487">The name of the stored procedure or function.</span></span> <span data-ttu-id="d5ffe-488">이름에는 <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>과 같은 컨테이너 이름이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-488">The name can include the container name, such as <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>.</span></span> <span data-ttu-id="d5ffe-489">기본 컨테이너 이름이 알려져 있으면 함수 이름만 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-489">When the default container name is known, only the function name is required.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="d5ffe-490">쿼리를 실행할 때 사용할 <see cref="T:System.Data.Objects.MergeOption" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-490">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span></param>
        <param name="parameters"><span data-ttu-id="d5ffe-491"><see cref="T:System.Data.Objects.ObjectParameter" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-491">An array of <see cref="T:System.Data.Objects.ObjectParameter" /> objects.</span></span></param>
        <summary><span data-ttu-id="d5ffe-492">데이터 소스에 정의되어 있으며 개념적 모델로 표현되는 지정된 저장 프로시저 또는 함수를 지정된 매개 변수와 병합 옵션을 사용하여 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-492">Executes the given stored procedure or function that is defined in the data source and expressed in the conceptual model, with the specified parameters, and merge option.</span></span> <span data-ttu-id="d5ffe-493">형식화된 <see cref="T:System.Data.Objects.ObjectResult`1" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-493">Returns a typed <see cref="T:System.Data.Objects.ObjectResult`1" />.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-494">저장 프로시저에서 반환하는 데이터의 <see cref="T:System.Data.Objects.ObjectResult`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-494">An <see cref="T:System.Data.Objects.ObjectResult`1" /> for the data that is returned by the stored procedure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-495"><xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> 메서드는 데이터 원본에 정의 되어 있고 개념적 모델로 표현 되는 함수나 저장된 프로시저를 실행 하는 데 사용 되는 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-495">The <xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> method is a helper method that is used to execute stored procedures or functions that are defined in the data source and expressed in conceptual model.</span></span> <span data-ttu-id="d5ffe-496">엔터티 데이터 모델 도구는 개념적 모델의 각 메서드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-496">The Entity Data Model tools generate a method for each  in the conceptual model.</span></span> <span data-ttu-id="d5ffe-497">이러한 메서드는 강력한 형식의 호출 `ExecuteFunction` 형식화 된 반환할 <xref:System.Data.Objects.ObjectResult%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-497">These methods call a strongly-typed `ExecuteFunction` to return a typed <xref:System.Data.Objects.ObjectResult%601>.</span></span> <span data-ttu-id="d5ffe-498">자세한 내용은 [저장 프로시저 (엔터티 프레임 워크)를 사용 하 여 응용 프로그램 코드](https://msdn.microsoft.com/library/d13dd33f-fcf9-4e86-bd00-74bc31521536)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-498">For more information, see [Application Code using Stored Procedures (Enity Framework)](https://msdn.microsoft.com/library/d13dd33f-fcf9-4e86-bd00-74bc31521536).</span></span>  
  
 <span data-ttu-id="d5ffe-499">매개 변수 배열에 필요한 함수에 대 한 모든 매개 변수 및 모든 형식을 가져오기 함수의 경우 함수 자체의 유형을 포함 하 여 메타 데이터에 대해 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-499">All parameters for the function are required in the parameters array and all types are checked against the metadata for the import function, including the type of the function itself.</span></span> <span data-ttu-id="d5ffe-500">`null` CLR 값 형식에 대 한 값이 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-500">`null` values are permitted for CLR value types.</span></span> <span data-ttu-id="d5ffe-501">매개 변수 유효성 검사는 공급자에서 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-501">Parameter validation is performed by the provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-502"><paramref name="function" />이 null이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-502"><paramref name="function" /> is null or empty</span></span> 
<span data-ttu-id="d5ffe-503">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-503">-or-</span></span> 
 <span data-ttu-id="d5ffe-504"><paramref name="function" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-504"><paramref name="function" /> is not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-505">엔터티 판독기에서 이 <paramref name="function" />을 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-505">The entity reader does not support this <paramref name="function" />.</span></span>  
  
<span data-ttu-id="d5ffe-506">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-506">-or-</span></span> 
<span data-ttu-id="d5ffe-507">판독기와 <paramref name="function" />에서 형식이 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-507">There is a type mismatch on the reader and the <paramref name="function" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-508">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-508">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoreCommand">
      <MemberSignature Language="C#" Value="public int ExecuteStoreCommand (string commandText, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteStoreCommand(string commandText, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteStoreCommand (commandText As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteStoreCommand(System::String ^ commandText, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteStoreCommand : string * obj[] -&gt; int" Usage="objectContext.ExecuteStoreCommand (commandText, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="d5ffe-509">데이터 소스의 네이티브 언어로 실행할 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-509">The command to execute, in the native language of the data source.</span></span></param>
        <param name="parameters"><span data-ttu-id="d5ffe-510">명령에 전달할 매개 변수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-510">An array of parameters to pass to the command.</span></span></param>
        <summary><span data-ttu-id="d5ffe-511">기존 연결을 사용하여 데이터 소스에 대해 직접 임의의 명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-511">Executes an arbitrary command directly against the data source using the existing connection.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-512">영향을 받은 행 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-512">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-513">매개 변수화된 명령을 사용하면 공격자가 SQL 문에 명령을 삽입하여 서버의 보안을 손상시키는 SQL 삽입 공격을 막을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-513">Using parameterized commands helps guard against SQL injection attacks, in which an attacker "injects" a command into a SQL statement that compromises security on the server.</span></span> <span data-ttu-id="d5ffe-514">매개 변수가 있는 명령을 외부 원본에서 받은 SQL 문의 일부가 아닌 값 으로만로 전달 되도록 하 여 SQL 삽입 공격 으로부터 보호 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-514">Parameterized commands guard against a SQL injection attack by guaranteeing that values received from an external source are passed as values only, and not part of the SQL statement.</span></span> <span data-ttu-id="d5ffe-515">결과적으로, 데이터 소스에서 값을 삽입 하는 SQL 명령 실행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-515">As a result, SQL commands inserted into a value are not executed at the data source.</span></span> <span data-ttu-id="d5ffe-516">매개 변수 값으로만 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-516">Rather, they are evaluated only as a parameter value.</span></span> <span data-ttu-id="d5ffe-517">보안상의 장점 외에도 매개 변수가 있는 명령을 SQL 문 또는 저장된 프로시저에 전달 된 값을 구성 하는 편리한 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-517">In addition to the security benefits, parameterized commands provide a convenient method for organizing values passed with a SQL statement or to a stored procedure.</span></span>  
  
 <span data-ttu-id="d5ffe-518">`parameters` 값은 <xref:System.Data.Common.DbParameter> 개체의 배열이거나 매개 변수 값의 배열일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-518">The `parameters` value can be an array of <xref:System.Data.Common.DbParameter> objects or an array of parameter values.</span></span> <span data-ttu-id="d5ffe-519">값이 제공 된 경우 배열을 <xref:System.Data.Common.DbParameter> 개체 배열의 값 순서에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-519">If only values are supplied, an array of <xref:System.Data.Common.DbParameter> objects are created based on the order of the values in the array.</span></span>  
  
 <span data-ttu-id="d5ffe-520">현재 트랜잭션이 존재 하는 경우 저장소 명령은 현재 트랜잭션의 컨텍스트에서 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-520">The store command is executed in the context of the current transaction, if a current transaction exists.</span></span>  
  
 <span data-ttu-id="d5ffe-521">자세한 내용은 다음을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-521">For more information, see:</span></span>  
  
 <span data-ttu-id="d5ffe-522">[저장 명령 직접 실행](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) 및</span><span class="sxs-lookup"><span data-stu-id="d5ffe-522">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="d5ffe-523">방법: 데이터 원본에 대해 명령 직접 실행</span><span class="sxs-lookup"><span data-stu-id="d5ffe-523">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoreQuery&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; ExecuteStoreQuery&lt;TElement&gt; (string commandText, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; ExecuteStoreQuery&lt;TElement&gt;(string commandText, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteStoreQuery(Of TElement) (commandText As String, ParamArray parameters As Object()) As ObjectResult(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ ExecuteStoreQuery(System::String ^ commandText, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteStoreQuery : string * obj[] -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.ExecuteStoreQuery (commandText, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="d5ffe-524">반환되는 데이터의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-524">The type of the returned data.</span></span></typeparam>
        <param name="commandText"><span data-ttu-id="d5ffe-525">데이터 소스의 네이티브 언어로 실행할 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-525">The command to execute, in the native language of the data source.</span></span></param>
        <param name="parameters"><span data-ttu-id="d5ffe-526">명령에 전달할 매개 변수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-526">An array of parameters to pass to the command.</span></span></param>
        <summary><span data-ttu-id="d5ffe-527">형식화된 결과의 시퀀스를 반환하는 쿼리를 데이터 소스에 대해 직접 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-527">Executes a query directly against the data source that returns a sequence of typed results.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-528"><paramref name="TElement" /> 형식의 개체 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-528">An enumeration of objects of type <paramref name="TElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-529"><xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 메서드는 데이터 원본에 대해 직접 임의의 명령을 실행 하려면 기존 연결을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-529">The <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method uses the existing connection to execute an arbitrary command directly against the data source.</span></span> <span data-ttu-id="d5ffe-530">현재 트랜잭션의 컨텍스트가 있는 경우 저장소 명령은 해당 컨텍스트에서 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-530">The store command is executed in the context of the current transaction, if such a transaction exists.</span></span>  
  
 <span data-ttu-id="d5ffe-531"><xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 메서드를 호출하는 것은 <xref:System.Data.Common.DbCommand.ExecuteReader%2A> 클래스의 <xref:System.Data.Common.DbCommand> 메서드를 호출하는 것과 동일합니다. 단, <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A>는 엔터티를 반환하고 <xref:System.Data.Common.DbCommand.ExecuteReader%2A>는 <xref:System.Data.Common.DbDataReader>의 속성 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-531">Calling the <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method is equivalent to calling the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method of the <xref:System.Data.Common.DbCommand> class, only <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> returns entities and the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> returns property values in the <xref:System.Data.Common.DbDataReader>.</span></span>  
  
 <span data-ttu-id="d5ffe-532">호출을 <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 위치 결과를 추적 하려는 경우 지정된 된 엔터티를 사용 하 여 이름을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-532">Call the <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> with the specified entity set name, if you want for the results to be tracked.</span></span>  
  
 <span data-ttu-id="d5ffe-533">호출을 <xref:System.Data.Objects.ObjectContext.Translate%2A> 변환 하는 메서드를 <xref:System.Data.Common.DbDataReader> 엔터티 개체는 판독기가 지정된 된 엔터티 형식에 매핑되는 데이터 행을 포함 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-533">Call the <xref:System.Data.Objects.ObjectContext.Translate%2A> method to translate a <xref:System.Data.Common.DbDataReader> into entity objects when the reader contains data rows that map to the specified entity type.</span></span>  
  
 <span data-ttu-id="d5ffe-534">매개 변수화된 명령을 사용하면 공격자가 SQL 문에 명령을 삽입하여 서버의 보안을 손상시키는 SQL 삽입 공격을 막을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-534">Using parameterized commands helps guard against SQL injection attacks, in which an attacker "injects" a command into a SQL statement that compromises security on the server.</span></span> <span data-ttu-id="d5ffe-535">매개 변수가 있는 명령을 외부 원본에서 받은 SQL 문의 일부가 아닌 값 으로만로 전달 되도록 하 여 SQL 삽입 공격 으로부터 보호 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-535">Parameterized commands guard against a SQL injection attack by guaranteeing that values received from an external source are passed as values only, and not part of the SQL statement.</span></span> <span data-ttu-id="d5ffe-536">결과적으로, 데이터 소스에서 값을 삽입 하는 SQL 명령 실행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-536">As a result, SQL commands inserted into a value are not executed at the data source.</span></span> <span data-ttu-id="d5ffe-537">매개 변수 값으로만 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-537">Rather, they are evaluated only as a parameter value.</span></span> <span data-ttu-id="d5ffe-538">보안상의 장점 외에도 매개 변수가 있는 명령을 SQL 문 또는 저장된 프로시저에 전달 된 값을 구성 하는 편리한 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-538">In addition to the security benefits, parameterized commands provide a convenient method for organizing values passed with a SQL statement or to a stored procedure.</span></span>  
  
 <span data-ttu-id="d5ffe-539">`parameters` 값은 <xref:System.Data.Common.DbParameter> 개체의 배열이거나 매개 변수 값의 배열일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-539">The `parameters` value can be an array of <xref:System.Data.Common.DbParameter> objects or an array of parameter values.</span></span> <span data-ttu-id="d5ffe-540">값이 제공 된 경우 배열을 <xref:System.Data.Common.DbParameter> 개체 배열의 값 순서에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-540">If only values are supplied, an array of <xref:System.Data.Common.DbParameter> objects are created based on the order of the values in the array.</span></span>  
  
 <span data-ttu-id="d5ffe-541">자세한 내용은 다음을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-541">For more information, see:</span></span>  
  
 <span data-ttu-id="d5ffe-542">[저장 명령 직접 실행](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) 및</span><span class="sxs-lookup"><span data-stu-id="d5ffe-542">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="d5ffe-543">방법: 데이터 원본에 대해 명령 직접 실행</span><span class="sxs-lookup"><span data-stu-id="d5ffe-543">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoreQuery&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TEntity&gt; ExecuteStoreQuery&lt;TEntity&gt; (string commandText, string entitySetName, System.Data.Objects.MergeOption mergeOption, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TEntity&gt; ExecuteStoreQuery&lt;TEntity&gt;(string commandText, string entitySetName, valuetype System.Data.Objects.MergeOption mergeOption, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; System::Data::Objects::ObjectResult&lt;TEntity&gt; ^ ExecuteStoreQuery(System::String ^ commandText, System::String ^ entitySetName, System::Data::Objects::MergeOption mergeOption, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteStoreQuery : string * string * System.Data.Objects.MergeOption * obj[] -&gt; System.Data.Objects.ObjectResult&lt;'Entity&gt;" Usage="objectContext.ExecuteStoreQuery (commandText, entitySetName, mergeOption, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entitySetName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-544">반환되는 데이터의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-544">The entity type of the returned data.</span></span></typeparam>
        <param name="commandText"><span data-ttu-id="d5ffe-545">데이터 소스의 네이티브 언어로 실행할 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-545">The command to execute, in the native language of the data source.</span></span></param>
        <param name="entitySetName"><span data-ttu-id="d5ffe-546"><typeparamref name="TEntity" /> 형식의 엔터티 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-546">The entity set of the <typeparamref name="TEntity" /> type.</span></span> <span data-ttu-id="d5ffe-547">엔터티 집합 이름을 제공하지 않으면 결과가 추적되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-547">If an entity set name is not provided, the results are not going to be tracked.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="d5ffe-548">쿼리를 실행할 때 사용할 <see cref="T:System.Data.Objects.MergeOption" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-548">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="d5ffe-549">기본값은 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-549">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="d5ffe-550">명령에 전달할 매개 변수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-550">An array of parameters to pass to the command.</span></span></param>
        <summary><span data-ttu-id="d5ffe-551">쿼리를 데이터 소스에 대해 직접 실행하고 형식화된 결과의 시퀀스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-551">Executes a query directly against the data source and returns a sequence of typed results.</span></span> <span data-ttu-id="d5ffe-552">쿼리 결과를 엔터티로 추적할 수 있도록 엔터티 집합과 병합 옵션을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-552">Specify the entity set and the merge option so that query results can be tracked as entities.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-553"><paramref name="TResult" /> 형식의 개체 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-553">An enumeration of objects of type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-554"><xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 메서드는 데이터 원본에 대해 직접 임의의 명령을 실행 하려면 기존 연결을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-554">The <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method uses the existing connection to execute an arbitrary command directly against the data source.</span></span> <span data-ttu-id="d5ffe-555">현재 트랜잭션의 컨텍스트가 있는 경우 저장소 명령은 해당 컨텍스트에서 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-555">The store command is executed in the context of the current transaction, if such a transaction exists.</span></span>  
  
 <span data-ttu-id="d5ffe-556"><xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 메서드를 호출하는 것은 <xref:System.Data.Common.DbCommand.ExecuteReader%2A> 클래스의 <xref:System.Data.Common.DbCommand> 메서드를 호출하는 것과 동일합니다. 단, <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A>는 엔터티를 반환하고 <xref:System.Data.Common.DbCommand.ExecuteReader%2A>는 <xref:System.Data.Common.DbDataReader>의 속성 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-556">Calling the <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method is equivalent to calling the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method of the <xref:System.Data.Common.DbCommand> class, only <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> returns entities and the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> returns property values in the <xref:System.Data.Common.DbDataReader>.</span></span>  
  
 <span data-ttu-id="d5ffe-557">결과 엔터티로 추적할 수 하려는 경우 엔터티 집합 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-557">Specify the entity set name, if you want for the results to be tracked as entities.</span></span>  
  
 <span data-ttu-id="d5ffe-558">호출 <xref:System.Data.Objects.ObjectContext.Translate%2A> 변환 메서드는 <xref:System.Data.Common.DbDataReader> 엔터티 개체는 판독기가 지정된 된 엔터티 형식에 매핑되는 데이터 행을 포함 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-558">Call <xref:System.Data.Objects.ObjectContext.Translate%2A> method to translate a <xref:System.Data.Common.DbDataReader> into entity objects when the reader contains data rows that map to the specified entity type.</span></span>  
  
 <span data-ttu-id="d5ffe-559">매개 변수화된 명령을 사용하면 공격자가 SQL 문에 명령을 삽입하여 서버의 보안을 손상시키는 SQL 삽입 공격을 막을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-559">Using parameterized commands helps guard against SQL injection attacks, in which an attacker "injects" a command into a SQL statement that compromises security on the server.</span></span> <span data-ttu-id="d5ffe-560">매개 변수가 있는 명령을 외부 원본에서 받은 SQL 문의 일부가 아닌 값 으로만로 전달 되도록 하 여 SQL 삽입 공격 으로부터 보호 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-560">Parameterized commands guard against a SQL injection attack by guaranteeing that values received from an external source are passed as values only, and not part of the SQL statement.</span></span> <span data-ttu-id="d5ffe-561">결과적으로, 데이터 소스에서 값을 삽입 하는 SQL 명령 실행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-561">As a result, SQL commands inserted into a value are not executed at the data source.</span></span> <span data-ttu-id="d5ffe-562">매개 변수 값으로만 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-562">Rather, they are evaluated only as a parameter value.</span></span> <span data-ttu-id="d5ffe-563">보안상의 장점 외에도 매개 변수가 있는 명령을 SQL 문 또는 저장된 프로시저에 전달 된 값을 구성 하는 편리한 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-563">In addition to the security benefits, parameterized commands provide a convenient method for organizing values passed with a SQL statement or to a stored procedure.</span></span>  
  
 <span data-ttu-id="d5ffe-564">`parameters` 값은 <xref:System.Data.Common.DbParameter> 개체의 배열이거나 매개 변수 값의 배열일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-564">The `parameters` value can be an array of <xref:System.Data.Common.DbParameter> objects or an array of parameter values.</span></span> <span data-ttu-id="d5ffe-565">값이 제공 된 경우 배열을 <xref:System.Data.Common.DbParameter> 개체 배열의 값 순서에 따라 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-565">If only values are supplied, an array of <xref:System.Data.Common.DbParameter> objects are created based on the order of the values in the array.</span></span>  
  
 <span data-ttu-id="d5ffe-566">자세한 내용은 다음을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-566">For more information, see:</span></span>  
  
 <span data-ttu-id="d5ffe-567">[저장 명령 직접 실행](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) 및</span><span class="sxs-lookup"><span data-stu-id="d5ffe-567">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="d5ffe-568">방법: 데이터 원본에 대해 명령 직접 실행</span><span class="sxs-lookup"><span data-stu-id="d5ffe-568">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownProxyTypes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Type&gt; GetKnownProxyTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; GetKnownProxyTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.GetKnownProxyTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownProxyTypes () As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ GetKnownProxyTypes();" />
      <MemberSignature Language="F#" Value="static member GetKnownProxyTypes : unit -&gt; seq&lt;Type&gt;" Usage="System.Data.Objects.ObjectContext.GetKnownProxyTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-569">기존 프록시 형식을 모두 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-569">Returns all the existing proxy types.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-570">모든 기존 프록시 형식의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-570">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of all the existing proxy types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-571"><xref:System.Data.Objects.ObjectContext.GetKnownProxyTypes%2A> 메서드는 POCO 엔터티에 대 한 프록시 개체 생성이 사용 하는 경우 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-571">The <xref:System.Data.Objects.ObjectContext.GetKnownProxyTypes%2A> method is used when proxy object generation is enabled for POCO entities.</span></span> <span data-ttu-id="d5ffe-572">자세한 내용은 참조 하세요. [POCO 프록시 만들기에 대 한 요구 사항](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) 하 고 [POCO 엔터티 작업](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-572">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectByKey">
      <MemberSignature Language="C#" Value="public object GetObjectByKey (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetObjectByKey(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectByKey (key As EntityKey) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObjectByKey(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectByKey : System.Data.EntityKey -&gt; obj" Usage="objectContext.GetObjectByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5ffe-573">찾을 개체의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-573">The key of the object to be found.</span></span></param>
        <summary><span data-ttu-id="d5ffe-574">지정된 엔터티 키가 있는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-574">Returns an object that has the specified entity key.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-575">엔터티 형식의 인스턴스인 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-575">An <see cref="T:System.Object" /> that is an instance of an entity type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-576"><xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A>에서는 지정된 <xref:System.Data.EntityKey>가 있는 개체를 <xref:System.Data.Objects.ObjectStateManager>에서 검색하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-576"><xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> tries to retrieve an object that has the specified <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="d5ffe-577">개체가 현재 개체 컨텍스트에 로드되어 있지 않으면 쿼리를 실행하여 데이터 원본에서 개체를 반환하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-577">If the object is currently not loaded into the object context, a query is executed in an attempt to return the object from the data source.</span></span> <span data-ttu-id="d5ffe-578">자세한 내용은 [개체 쿼리](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-578">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="d5ffe-579">개체를 찾을 수 없으면 <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A>에서 <xref:System.Data.ObjectNotFoundException>을 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-579"><xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> raises an <xref:System.Data.ObjectNotFoundException> when the object cannot be found.</span></span> <span data-ttu-id="d5ffe-580">이 예외가 발생하지 않도록 하려면 대신 <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-580">To avoid handling this exception, instead use the <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> method.</span></span>  
  
 <span data-ttu-id="d5ffe-581">이 메서드는 <xref:System.Data.EntityState.Deleted> 상태의 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-581">This method will return objects in the <xref:System.Data.EntityState.Deleted> state.</span></span>  
  
 <span data-ttu-id="d5ffe-582">임시 키를 사용해서는 데이터 원본의 개체를 반환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-582">A temporary key cannot be used to return an object from the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-583">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-583">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-584">예제에서는 지정된 형식의 엔터티에 대한 <xref:System.Data.EntityKey>를 만들고 키로 엔터티를 페치합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-584">The example creates an <xref:System.Data.EntityKey> for an entity of the given type and then fetches an entity by key.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_GetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_getobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_GetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_getobjectbykey)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-585"><paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-585">The <paramref name="key" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.ObjectNotFoundException"><span data-ttu-id="d5ffe-586"><see cref="T:System.Data.Objects.ObjectStateManager" /> 또는 데이터 원본에서 개체를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-586">The object is not found in either the <see cref="T:System.Data.Objects.ObjectStateManager" /> or the data source.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="d5ffe-587">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-587">Querying Data as Objects (Entity Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-588">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-588">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectType">
      <MemberSignature Language="C#" Value="public static Type GetObjectType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetObjectType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.GetObjectType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetObjectType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetObjectType : Type -&gt; Type" Usage="System.Data.Objects.ObjectContext.GetObjectType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d5ffe-589">프록시 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-589">The <see cref="T:System.Type" /> of the proxy object.</span></span></param>
        <summary><span data-ttu-id="d5ffe-590">지정된 형식의 프록시 개체와 연결된 POCO 엔터티의 엔터티 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-590">Returns the entity type of the POCO entity associated with a proxy object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-591">연결된 POCO 엔터티의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-591">The <see cref="T:System.Type" /> of the associated POCO entity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-592"><xref:System.Data.Objects.ObjectContext.GetObjectType%2A> 메서드는 POCO 엔터티에 대 한 프록시 개체 생성이 사용 하는 경우 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-592">The <xref:System.Data.Objects.ObjectContext.GetObjectType%2A> method is used when proxy object generation is enabled for POCO entities.</span></span> <span data-ttu-id="d5ffe-593">자세한 내용은 참조 하세요. [POCO 프록시 만들기에 대 한 요구 사항](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) 하 고 [POCO 엔터티 작업](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-593">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ffe-594">POCO 사용자 지정 데이터 클래스를 사용할 때 관련 개체를 명시적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-594">Explicitly loads a related object when you are using POCO custom data classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-595">POCO 사용자 지정 데이터 클래스를 사용 하면 엔터티 데이터 모델 도구에서 생성 되는 엔터티 형식의 인스턴스에 같은 관련된 개체를 명시적으로 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-595">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="d5ffe-596">이므로이 반환 하는 탐색 속성을 생성 하는 도구를 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 관련된 개체의 경우 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 라고 하는 <xref:System.Data.Objects.DataClasses.RelatedEnd>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-596">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="d5ffe-597">POCO 엔터티를 설정 하 여 지연 로드를 사용 하 여 로드할 수 있습니다는 <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> 속성을 `true` 인스턴스에서 <xref:System.Data.Objects.ObjectContextOptions> 에서 반환 하는 합니다 <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> 속성 또는 즉시 로드를 사용 하 여는 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-597">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public void LoadProperty (object entity, string navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty(object entity, string navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadProperty (entity As Object, navigationProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadProperty(System::Object ^ entity, System::String ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; unit" Usage="objectContext.LoadProperty (entity, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="d5ffe-598">관련 개체를 로드할 엔터티입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-598">The entity for which related objects are to be loaded.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="d5ffe-599">로드할 관련 개체를 반환하는 탐색 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-599">The name of the navigation property that returns the related objects to be loaded.</span></span></param>
        <summary><span data-ttu-id="d5ffe-600">지정된 탐색 속성과 기본 병합 옵션을 사용하여 제공된 개체와 관련된 개체를 명시적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-600">Explicitly loads an object related to the supplied object by the specified navigation property and using the default merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-601"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A> POCO 사용자 지정 데이터 클래스를 사용 하는 경우 명시적으로 로드 하려면 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-601">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="d5ffe-602">호출 후 <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, 관련된 개체 소스 엔터티의 탐색 속성을 통해 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-602">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="d5ffe-603">POCO 사용자 지정 데이터 클래스를 사용 하면 엔터티 데이터 모델 도구에서 생성 되는 엔터티 형식의 인스턴스에 같은 관련된 개체를 명시적으로 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-603">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="d5ffe-604">이므로이 반환 하는 탐색 속성을 생성 하는 도구를 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 관련된 개체의 경우 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 라고 하는 <xref:System.Data.Objects.DataClasses.RelatedEnd>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-604">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="d5ffe-605">POCO 엔터티를 설정 하 여 지연 로드를 사용 하 여 로드할 수 있습니다는 <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> 속성을 `true` 인스턴스에서 <xref:System.Data.Objects.ObjectContextOptions> 에서 반환 하는 합니다 <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> 속성 또는 즉시 로드를 사용 하 여는 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-605">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="d5ffe-606">경우는 <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> 메서드가 호출 되 면 개체에 로드 되는 <xref:System.Data.Objects.ObjectContext> 기본값을 사용 하 여 <xref:System.Data.Objects.MergeOption> 의 값 <xref:System.Data.Objects.MergeOption.AppendOnly>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-606">When the <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method is called, objects are loaded into the <xref:System.Data.Objects.ObjectContext> by using the default <xref:System.Data.Objects.MergeOption> value of <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-607"><paramref name="entity" />는 <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Deleted" /> 상태에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-607">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="d5ffe-608">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-608">-or-</span></span> 
<span data-ttu-id="d5ffe-609"><paramref name="entity" />는 <see cref="T:System.Data.Objects.ObjectContext" />의 다른 인스턴스에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-609">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public void LoadProperty (object entity, string navigationProperty, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty(object entity, string navigationProperty, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadProperty(System::Object ^ entity, System::String ^ navigationProperty, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Objects.MergeOption -&gt; unit" Usage="objectContext.LoadProperty (entity, navigationProperty, mergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="d5ffe-610">관련 개체를 로드할 엔터티입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-610">The entity for which related objects are to be loaded.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="d5ffe-611">로드할 관련 개체를 반환하는 탐색 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-611">The name of the navigation property that returns the related objects to be loaded.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="d5ffe-612">관련 개체를 로드할 때 사용할 <see cref="T:System.Data.Objects.MergeOption" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-612">The <see cref="T:System.Data.Objects.MergeOption" /> value to use when you load the related objects.</span></span></param>
        <summary><span data-ttu-id="d5ffe-613">지정된 탐색 속성과 지정된 병합 옵션을 사용하여 제공된 개체와 관련된 개체를 명시적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-613">Explicitly loads an object that is related to the supplied object by the specified navigation property and using the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-614"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A> POCO 사용자 지정 데이터 클래스를 사용 하는 경우 명시적으로 로드 하려면 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-614">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="d5ffe-615">호출 후 <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, 관련된 개체 소스 엔터티의 탐색 속성을 통해 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-615">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="d5ffe-616">POCO 사용자 지정 데이터 클래스를 사용 하면 엔터티 데이터 모델 도구에서 생성 되는 엔터티 형식의 인스턴스에 같은 관련된 개체를 명시적으로 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-616">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="d5ffe-617">이므로이 반환 하는 탐색 속성을 생성 하는 도구를 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 관련된 개체의 경우 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 라고 하는 <xref:System.Data.Objects.DataClasses.RelatedEnd>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-617">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="d5ffe-618">POCO 엔터티를 설정 하 여 지연 로드를 사용 하 여 로드할 수 있습니다는 <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> 속성을 `true` 인스턴스에서 <xref:System.Data.Objects.ObjectContextOptions> 에서 반환 하는 합니다 <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> 속성 또는 즉시 로드를 사용 하 여는 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-618">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-619"><paramref name="entity" />는 <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Deleted" /> 상태에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-619">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="d5ffe-620">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-620">-or-</span></span> 
<span data-ttu-id="d5ffe-621"><paramref name="entity" />는 <see cref="T:System.Data.Objects.ObjectContext" />의 다른 인스턴스에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-621">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public void LoadProperty&lt;TEntity&gt; (TEntity entity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty&lt;TEntity&gt;(!!TEntity entity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadProperty(Of TEntity) (entity As TEntity, selector As Expression(Of Func(Of TEntity, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; void LoadProperty(TEntity entity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : 'Entity * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; -&gt; unit" Usage="objectContext.LoadProperty (entity, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-622">제공된 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-622">The type of the supplied object.</span></span></typeparam>
        <param name="entity"><span data-ttu-id="d5ffe-623">관련 개체를 로드할 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-623">The source object for which related objects are to be loaded.</span></span></param>
        <param name="selector"><span data-ttu-id="d5ffe-624">로드할 관련 개체를 정의하는 LINQ 식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-624">A LINQ expression that defines the related objects to be loaded.</span></span></param>
        <summary><span data-ttu-id="d5ffe-625">지정된 LINQ 쿼리와 기본 병합 옵션을 사용하여 제공된 개체와 관련된 개체를 명시적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-625">Explicitly loads an object that is related to the supplied object by the specified LINQ query and by using the default merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-626"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A> POCO 사용자 지정 데이터 클래스를 사용 하는 경우 명시적으로 로드 하려면 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-626">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="d5ffe-627">호출 후 <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, 관련된 개체 소스 엔터티의 탐색 속성을 통해 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-627">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="d5ffe-628">LINQ 식에서 로드할 속성을 지정 `(entity) => entity.PropertyName`, 여기서 *PropertyName* 로드할 관련된 개체를 반환 하는 탐색 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-628">The property to load is specified by a LINQ expression, which must be in the form of a simple property member access, as in `(entity) => entity.PropertyName`, where *PropertyName* is the navigation property that returns the related objects to be loaded.</span></span> <span data-ttu-id="d5ffe-629">다른 형태의 LINQ 식 사용 하는 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-629">An exception will occur if other forms of the LINQ expression are used.</span></span>  
  
 <span data-ttu-id="d5ffe-630">POCO 사용자 지정 데이터 클래스를 사용 하면 엔터티 데이터 모델 도구에서 생성 되는 엔터티 형식의 인스턴스에 같은 관련된 개체를 명시적으로 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-630">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="d5ffe-631">이므로이 반환 하는 탐색 속성을 생성 하는 도구를 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 관련된 개체의 경우 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 라고 하는 <xref:System.Data.Objects.DataClasses.RelatedEnd>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-631">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="d5ffe-632">POCO 엔터티를 설정 하 여 지연 로드를 사용 하 여 로드할 수 있습니다는 <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> 속성을 `true` 인스턴스에서 <xref:System.Data.Objects.ObjectContextOptions> 에서 반환 하는 합니다 <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> 속성 또는 즉시 로드를 사용 하 여는 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-632">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-633"><paramref name="selector" />가 유효한 입력 매개 변수를 제공하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-633"><paramref name="selector" /> does not supply a valid input parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-634"><paramref name="selector" />가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-634"><paramref name="selector" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-635"><paramref name="entity" />는 <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Deleted" /> 상태에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-635">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="d5ffe-636">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-636">-or-</span></span> 
<span data-ttu-id="d5ffe-637"><paramref name="entity" />는 <see cref="T:System.Data.Objects.ObjectContext" />의 다른 인스턴스에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-637">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public void LoadProperty&lt;TEntity&gt; (TEntity entity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; selector, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty&lt;TEntity&gt;(!!TEntity entity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; selector, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; void LoadProperty(TEntity entity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ selector, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : 'Entity * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.Objects.MergeOption -&gt; unit" Usage="objectContext.LoadProperty (entity, selector, mergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-638">제공된 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-638">The type of the supplied object.</span></span></typeparam>
        <param name="entity"><span data-ttu-id="d5ffe-639">관련 개체를 로드할 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-639">The source object for which related objects are to be loaded.</span></span></param>
        <param name="selector"><span data-ttu-id="d5ffe-640">로드할 관련 개체를 정의하는 LINQ 식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-640">A LINQ expression that defines the related objects to be loaded.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="d5ffe-641">관련 개체를 로드할 때 사용할 <see cref="T:System.Data.Objects.MergeOption" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-641">The <see cref="T:System.Data.Objects.MergeOption" /> value to use when you load the related objects.</span></span></param>
        <summary><span data-ttu-id="d5ffe-642">지정된 LINQ 쿼리와 지정된 병합 옵션을 사용하여 제공된 개체와 관련된 개체를 명시적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-642">Explicitly loads an object that is related to the supplied object by the specified LINQ query and by using the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-643"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A> POCO 사용자 지정 데이터 클래스를 사용 하는 경우 명시적으로 로드 하려면 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-643">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="d5ffe-644">호출 후 <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, 관련된 개체 소스 엔터티의 탐색 속성을 통해 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-644">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="d5ffe-645">LINQ 식에서 로드할 속성 지정 `(entity) => entity.PropertyName` 여기서 *PropertyName* 로드할 관련된 개체를 반환 하는 탐색 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-645">The property to load is specified by a LINQ expression, which must be in the form of a simple property member access, as in `(entity) => entity.PropertyName` where *PropertyName* is the navigation property that returns the related objects to be loaded.</span></span> <span data-ttu-id="d5ffe-646">다른 형태의 LINQ 식 사용 하는 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-646">An exception will occur if other forms of the LINQ expression are used.</span></span>  
  
 <span data-ttu-id="d5ffe-647">POCO 사용자 지정 데이터 클래스를 사용 하면 엔터티 데이터 모델 도구에서 생성 되는 엔터티 형식의 인스턴스에 같은 관련된 개체를 명시적으로 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-647">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="d5ffe-648">이므로이 반환 하는 탐색 속성을 생성 하는 도구를 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 관련된 개체의 경우 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 라고 하는 <xref:System.Data.Objects.DataClasses.RelatedEnd>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-648">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="d5ffe-649">POCO 엔터티를 설정 하 여 지연 로드를 사용 하 여 로드할 수 있습니다는 <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> 속성을 `true` 인스턴스에서 <xref:System.Data.Objects.ObjectContextOptions> 에서 반환 하는 합니다 <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> 속성 또는 즉시 로드를 사용 하 여는 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-649">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-650"><paramref name="selector" />가 유효한 입력 매개 변수를 제공하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-650"><paramref name="selector" /> does not supply a valid input parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-651"><paramref name="selector" />가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-651"><paramref name="selector" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-652"><paramref name="entity" />는 <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Deleted" /> 상태에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-652">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="d5ffe-653">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-653">-or-</span></span> 
<span data-ttu-id="d5ffe-654"><paramref name="entity" />는 <see cref="T:System.Data.Objects.ObjectContext" />의 다른 인스턴스에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-654">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectContext.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-655">개체 컨텍스트에서 사용하는 메타데이터 작업 영역을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-655">Gets the metadata workspace used by the object context.</span></span></summary>
        <value><span data-ttu-id="d5ffe-656">이 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />와 연결된 <see cref="T:System.Data.Objects.ObjectContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-656">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> object associated with this <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-657"><xref:System.Data.Metadata.Edm.MetadataWorkspace> 클래스는 응용 프로그램의 컨텍스트에서 EDM(엔터티 데이터 모델) 메타데이터와 상호 작용하는 데 사용할 수 있는 중앙 런타임 API입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-657">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class is a central runtime API that you can use to interact with the Entity Data Model (EDM) metadata in the context of an application.</span></span> <span data-ttu-id="d5ffe-658">자세한 내용은 [메타 데이터 작업 영역](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-658">For more information, see [Metadata Workspace](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-659">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-659">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjectMaterialized">
      <MemberSignature Language="C#" Value="public event System.Data.Objects.ObjectMaterializedEventHandler ObjectMaterialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Objects.ObjectMaterializedEventHandler ObjectMaterialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectContext.ObjectMaterialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectMaterialized As ObjectMaterializedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Objects::ObjectMaterializedEventHandler ^ ObjectMaterialized;" />
      <MemberSignature Language="F#" Value="member this.ObjectMaterialized : System.Data.Objects.ObjectMaterializedEventHandler " Usage="member this.ObjectMaterialized : System.Data.Objects.ObjectMaterializedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectMaterializedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-660">쿼리 작업이나 로드 작업의 일부로 데이터 소스의 데이터에서 새 엔터티 개체가 만들어지는 경우 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-660">Occurs when a new entity object is created from data in the data source as part of a query or load operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-661">모든 스칼라, 복합 후이 이벤트가 발생 하 고 개체에 있지만 컬렉션이 로드 되기 전에 참조 속성이 설정 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-661">This event is raised after all scalar, complex, and reference properties have been set on an object, but before collections are loaded.</span></span> <span data-ttu-id="d5ffe-662">개체 컨텍스트에 동일한 키 값을 가진 개체가 있으면 Entity Framework를 다시 만들지 개체 및이 이벤트를 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-662">If an object with the same key value exists in the object context, the Entity Framework will not recreate the object and this event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateManager ObjectStateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectStateManager ObjectStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.ObjectStateManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectStateManager As ObjectStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectStateManager ^ ObjectStateManager { System::Data::Objects::ObjectStateManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManager : System.Data.Objects.ObjectStateManager" Usage="System.Data.Objects.ObjectContext.ObjectStateManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-663">개체 변경 내용을 추적하기 위해 개체 컨텍스트에서 사용하는 개체 상태 관리자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-663">Gets the object state manager used by the object context to track object changes.</span></span></summary>
        <value><span data-ttu-id="d5ffe-664">이 <see cref="T:System.Data.Objects.ObjectStateManager" />에서 사용하는 <see cref="T:System.Data.Objects.ObjectContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-664">The <see cref="T:System.Data.Objects.ObjectStateManager" /> used by this <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d5ffe-665">이러한 예제를 기반으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-665">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-666">이 예제에서는 <xref:System.Data.Objects.ObjectStateManager>의 <xref:System.Data.Objects.ObjectContext>를 가져오고 상태 관리자를 사용하여 컨텍스트의 개체에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-666">This example gets the <xref:System.Data.Objects.ObjectStateManager> from the <xref:System.Data.Objects.ObjectContext> and uses the state manager to access an object in the context.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 <span data-ttu-id="d5ffe-667">이 예제에서는 반환된 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%2A>에 대해 <xref:System.Data.Objects.ObjectStateManager> 메서드를 사용하여 해당 엔터티 키를 기반으로 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-667">This example uses the <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%2A> method on the returned <xref:System.Data.Objects.ObjectStateManager> to get an object based on its entity key.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-668">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-668">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QueryProvider">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryProvider QueryProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider QueryProvider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.QueryProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property QueryProvider As IQueryProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Linq::IQueryProvider ^ QueryProvider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryProvider : System.Linq.IQueryProvider" Usage="System.Data.Objects.ObjectContext.QueryProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-669">이 개체 컨텍스트와 연결된 LINQ 쿼리 공급자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-669">Gets the LINQ query provider associated with this object context.</span></span></summary>
        <value><span data-ttu-id="d5ffe-670">이 개체 컨텍스트에서 사용하는 <see cref="T:System.Linq.IQueryProvider" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-670">The <see cref="T:System.Linq.IQueryProvider" /> instance used by this object context.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ffe-671">개체 컨텍스트의 특정 개체를 데이터 소스의 데이터로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-671">Updates specific objects in the object context with data from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-672">@FSHO2@개체가 새로 고쳐지는 순서는 비결정적입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-672">The order in which objects are refreshed is nondeterministic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Objects.RefreshMode refreshMode, System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Objects.RefreshMode refreshMode, class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Objects::RefreshMode refreshMode, System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Objects.RefreshMode * System.Collections.IEnumerable -&gt; unit" Usage="objectContext.Refresh (refreshMode, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Objects.RefreshMode" />
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="d5ffe-673">개체 컨텍스트의 속성 변경 내용을 데이터 소스의 속성 값으로 덮어쓸지 여부를 나타내는 <see cref="T:System.Data.Objects.RefreshMode" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-673">A <see cref="T:System.Data.Objects.RefreshMode" /> value that indicates whether property changes in the object context are overwritten with property values from the data source.</span></span></param>
        <param name="collection"><span data-ttu-id="d5ffe-674">새로 고칠 개체의 <see cref="T:System.Collections.IEnumerable" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-674">An <see cref="T:System.Collections.IEnumerable" /> collection of objects to refresh.</span></span></param>
        <summary><span data-ttu-id="d5ffe-675">개체 컨텍스트의 개체 컬렉션을 데이터 소스의 데이터로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-675">Updates a collection of objects in the object context with data from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-676">이 메서드는 개체 컨텍스트의 개체를 데이터 원본의 데이터로 새로 고치는 데 사용할 수도 있고 충돌을 해결하는 메커니즘으로 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-676">This method has the dual purpose of allowing objects in the object context to be refreshed with data from the data source, and being the mechanism by which conflicts can be resolved.</span></span> <span data-ttu-id="d5ffe-677">자세한 내용은 [변경 내용 저장 및 동시성 관리](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-677">For more information, see [Saving Changes and Managing Concurrency](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 <span data-ttu-id="d5ffe-678">@FSHO2@개체가 새로 고쳐지는 순서는 비결정적입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-678">The order in which objects are refreshed is nondeterministic.</span></span>  
  
 <span data-ttu-id="d5ffe-679">후 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 호출 되는 개체의 원래 값은 항상 데이터 원본 값으로 업데이트 되지만 현재 값 수 또는 데이터 원본 값으로 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-679">After <xref:System.Data.Objects.ObjectContext.Refresh%2A> is called, the object's original values will always be updated with the data source value, but the current values might or might not be updated with the data source value.</span></span> <span data-ttu-id="d5ffe-680">업데이트되는지 여부는 <xref:System.Data.Objects.RefreshMode> 값에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-680">This depends on the <xref:System.Data.Objects.RefreshMode> value.</span></span> <span data-ttu-id="d5ffe-681"><xref:System.Data.Objects.RefreshMode.StoreWins> 모드 컬렉션의 개체를 데이터 원본 값과 일치 하도록 업데이트할지 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-681">The <xref:System.Data.Objects.RefreshMode.StoreWins> mode means that the objects in the collection should be updated to match the data source values.</span></span> <span data-ttu-id="d5ffe-682"><xref:System.Data.Objects.RefreshMode.ClientWins> 데이터 원본에 다른 변경 내용이 있는 경우에 개체 컨텍스트의 변경 내용만 유지 됩니다 있는지를 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-682"><xref:System.Data.Objects.RefreshMode.ClientWins> means that only the changes in the object context will be persisted, even if there have been other changes in the data source.</span></span>  
  
 <span data-ttu-id="d5ffe-683">데이터 원본 측 논리에 따라 개체를 업데이트하려면 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 메서드를 호출한 후 <xref:System.Data.Objects.RefreshMode.StoreWins>를 사용하여 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-683">To ensure that objects have been updated by data source-side logic, you can call <xref:System.Data.Objects.ObjectContext.Refresh%2A> with <xref:System.Data.Objects.RefreshMode.StoreWins> after you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-684"><paramref name="collection" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-684"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d5ffe-685"><paramref name="refreshMode" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-685"><paramref name="refreshMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-686"><paramref name="collection" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-686"><paramref name="collection" /> is empty.</span></span>  
  
<span data-ttu-id="d5ffe-687">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-687">-or-</span></span> 
<span data-ttu-id="d5ffe-688">개체가 컨텍스트에 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-688">An object is not attached to the context.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-689">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-689">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Objects.RefreshMode refreshMode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Objects.RefreshMode refreshMode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Objects::RefreshMode refreshMode, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Objects.RefreshMode * obj -&gt; unit" Usage="objectContext.Refresh (refreshMode, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Objects.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="d5ffe-690"><see cref="T:System.Data.Objects.RefreshMode" />를 새로 고치는 데 사용할 모드를 지정하는 <see cref="T:System.Data.Objects.ObjectStateManager" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-690">One of the <see cref="T:System.Data.Objects.RefreshMode" /> values that specifies which mode to use for refreshing the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span></param>
        <param name="entity"><span data-ttu-id="d5ffe-691">새로 고칠 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-691">The object to be refreshed.</span></span></param>
        <summary><span data-ttu-id="d5ffe-692">개체 컨텍스트의 개체를 데이터 소스의 데이터로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-692">Updates an object in the object context with data from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-693"><xref:System.Data.Objects.ObjectContext.Refresh%2A>는 개체를 데이터 원본의 데이터로 새로 고치는 데 사용할 수도 있고 충돌을 해결하는 메커니즘으로 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-693"><xref:System.Data.Objects.ObjectContext.Refresh%2A> has the dual purpose of allowing an object to be refreshed with data from the data source and being the mechanism by which conflicts can be resolved.</span></span> <span data-ttu-id="d5ffe-694">자세한 내용은 [변경 내용 저장 및 동시성 관리](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-694">For more information, see [Saving Changes and Managing Concurrency](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 <span data-ttu-id="d5ffe-695">@FSHO2@개체가 새로 고쳐지는 순서는 비결정적입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-695">The order in which objects are refreshed is nondeterministic.</span></span>  
  
 <span data-ttu-id="d5ffe-696">이후에 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 메서드는 개체의 원래 값은 항상 데이터 소스 값으로 업데이트 되지만 현재 값 수 또는 데이터 원본 값으로 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-696">After the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method is called, the object's original values will always be updated with the data source value, but the current values might or might not be updated with the data source value.</span></span> <span data-ttu-id="d5ffe-697">업데이트되는지 여부는 <xref:System.Data.Objects.RefreshMode>에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-697">This depends on the <xref:System.Data.Objects.RefreshMode>.</span></span> <span data-ttu-id="d5ffe-698"><xref:System.Data.Objects.RefreshMode.StoreWins> 모드를 사용하면 개체가 데이터 원본 값과 일치하도록 업데이트되고,</span><span class="sxs-lookup"><span data-stu-id="d5ffe-698">The <xref:System.Data.Objects.RefreshMode.StoreWins> mode means that the object should be updated to match the data source values.</span></span> <span data-ttu-id="d5ffe-699"><xref:System.Data.Objects.RefreshMode.ClientWins> 값을 사용하면 데이터 원본에 다른 변경 내용이 있어도 개체 컨텍스트의 변경 내용만 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-699">The <xref:System.Data.Objects.RefreshMode.ClientWins> value means that only the changes in the object context will be persisted, even if there have been other changes in the data source.</span></span>  
  
 <span data-ttu-id="d5ffe-700">데이터 원본 측 논리에 따라 개체를 업데이트하려면 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 메서드를 호출한 후 <xref:System.Data.Objects.RefreshMode.StoreWins> 값을 사용하여 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-700">To ensure that an object has been updated by data source-side logic, you can call the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> value after you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-701">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-701">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-702">예제에서는 동시성 충돌을 발생할 수 있는 변경 내용을 저장하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-702">The example tries to save changes, and this may cause a concurrency conflict.</span></span> <span data-ttu-id="d5ffe-703">그런 다음 변경 내용을 다시 저장하기 전에 개체 컨텍스트를 새로 고쳐 동시성 충돌을 해결하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-703">Then it shows how to resolve the concurrency conflict by refreshing the object context before re-saving changes.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Concurrency](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#concurrency)]
 [!code-vb[DP ObjectServices Concepts#Concurrency](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#concurrency)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-704"><paramref name="collection" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-704"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d5ffe-705"><paramref name="refreshMode" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-705"><paramref name="refreshMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-706"><paramref name="collection" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-706"><paramref name="collection" /> is empty.</span></span>  
  
<span data-ttu-id="d5ffe-707">또는</span><span class="sxs-lookup"><span data-stu-id="d5ffe-707">-or-</span></span> 
<span data-ttu-id="d5ffe-708">개체가 컨텍스트에 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-708">An object is not attached to the context.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-709">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-709">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ffe-710">데이터 소스에 대한 모든 업데이트를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-710">Persists all updates to the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public int SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; int" Usage="objectContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ffe-711">데이터 소스에 대한 모든 업데이트를 유지하고 개체 컨텍스트에서 변경 내용 추적을 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-711">Persists all updates to the data source and resets change tracking in the object context.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-712"><see cref="F:System.Data.EntityState.Added" />가 호출된 경우 <see cref="F:System.Data.EntityState.Modified" />, <see cref="F:System.Data.EntityState.Deleted" /> 또는 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 상태의 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-712">The number of objects in an <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" />, or <see cref="F:System.Data.EntityState.Deleted" /> state when <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-713">데이터 원본 측 논리에 따라 클라이언트의 개체를 업데이트하려면 <xref:System.Data.Objects.ObjectContext.Refresh%2A>를 호출한 후 <xref:System.Data.Objects.RefreshMode.StoreWins> 값을 사용하여 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-713">To ensure that objects on the client have been updated by data source-side logic, you can call the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> value after you call <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>.</span></span> <span data-ttu-id="d5ffe-714">자세한 내용은 [변경 내용 저장 및 동시성 관리](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-714">For more information, see [Saving Changes and Managing Concurrency](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 <span data-ttu-id="d5ffe-715"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 트랜잭션 내에서 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-715"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> operates within a transaction.</span></span> <span data-ttu-id="d5ffe-716"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 해당 트랜잭션을 롤백하고 예외를 throw 있으면 더티 <xref:System.Data.Objects.ObjectStateEntry> 개체를 유지할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-716"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> will roll back that transaction and throw an exception if any of the dirty <xref:System.Data.Objects.ObjectStateEntry> objects cannot be persisted.</span></span>  
  
 <span data-ttu-id="d5ffe-717">낙관적 동시성 위반이 발생하면 <xref:System.Data.OptimisticConcurrencyException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-717">If an optimistic concurrency violation has occurred, an <xref:System.Data.OptimisticConcurrencyException> is thrown.</span></span> <span data-ttu-id="d5ffe-718">낙관적 동시성 위반을 catch하여 해결하려면 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 또는 <xref:System.Data.Objects.RefreshMode.StoreWins> 값을 사용하여 <xref:System.Data.Objects.RefreshMode.ClientWins> 메서드를 호출한 다음 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>를 다시 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-718">You can resolve an optimistic concurrency violation by catching it, calling the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> or <xref:System.Data.Objects.RefreshMode.ClientWins> value, and then calling <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> again.</span></span> <span data-ttu-id="d5ffe-719">자세한 내용은 [방법: 개체 컨텍스트에서 데이터 동시성 관리](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-719">For more information, see [How to: Manage Data Concurrency in the Object Context](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-720">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-720">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-721">이 예제에서는 동시성 충돌을 발생할 수 있는 변경 내용을 저장하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-721">This example tries to save changes, which may cause a concurrency conflict.</span></span> <span data-ttu-id="d5ffe-722">그런 다음 변경 내용을 다시 저장하기 전에 개체 컨텍스트를 새로 고쳐 동시성 충돌을 해결하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-722">Then, it demonstrates how to resolve the concurrency conflict by refreshing the object context before re-saving changes.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Concurrency](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#concurrency)]
 [!code-vb[DP ObjectServices Concepts#Concurrency](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#concurrency)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OptimisticConcurrencyException"><span data-ttu-id="d5ffe-723">데이터 원본에서 낙관적 동시성 위반이 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-723">An optimistic concurrency violation has occurred in the data source.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-724">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-724">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public int SaveChanges (bool acceptChangesDuringSave);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SaveChanges(bool acceptChangesDuringSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (acceptChangesDuringSave As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SaveChanges(bool acceptChangesDuringSave);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : bool -&gt; int" Usage="objectContext.SaveChanges acceptChangesDuringSave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use SaveChanges(SaveOptions options) instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptChangesDuringSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="acceptChangesDuringSave"><span data-ttu-id="d5ffe-725">이 매개 변수는 클라이언트 쪽 트랜잭션을 지원하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-725">This parameter is needed for client-side transaction support.</span></span> <span data-ttu-id="d5ffe-726"><see langword="true" />이면 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" />가 완료된 후 모든 개체에 대한 변경 내용 추적이 다시 설정되고,</span><span class="sxs-lookup"><span data-stu-id="d5ffe-726">If <see langword="true" />, the change tracking on all objects is reset after <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" /> finishes.</span></span> <span data-ttu-id="d5ffe-727"><see langword="false" />이면 <see cref="M:System.Data.Objects.ObjectContext.AcceptAllChanges" />를 호출한 후 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-727">If <see langword="false" />, you must call the <see cref="M:System.Data.Objects.ObjectContext.AcceptAllChanges" /> method after <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" />.</span></span></param>
        <summary><span data-ttu-id="d5ffe-728">데이터 소스에 대한 모든 업데이트를 유지하고 선택적으로 개체 컨텍스트에서 변경 내용 추적을 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-728">Persists all updates to the data source and optionally resets change tracking in the object context.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-729"><see cref="F:System.Data.EntityState.Added" />가 호출된 경우 <see cref="F:System.Data.EntityState.Modified" />, <see cref="F:System.Data.EntityState.Deleted" /> 또는 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 상태의 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-729">The number of objects in an <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" />, or <see cref="F:System.Data.EntityState.Deleted" /> state when <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-730">호출 된 <xref:System.Data.Objects.ObjectContext.SaveChanges%28System.Data.Objects.SaveOptions%29> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-730">Call the <xref:System.Data.Objects.ObjectContext.SaveChanges%28System.Data.Objects.SaveOptions%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OptimisticConcurrencyException"><span data-ttu-id="d5ffe-731">낙관적 동시성 위반이 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-731">An optimistic concurrency violation has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public virtual int SaveChanges (System.Data.Objects.SaveOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SaveChanges(valuetype System.Data.Objects.SaveOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.SaveChanges(System.Data.Objects.SaveOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges (options As SaveOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int SaveChanges(System::Data::Objects::SaveOptions options);" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges : System.Data.Objects.SaveOptions -&gt; int&#xA;override this.SaveChanges : System.Data.Objects.SaveOptions -&gt; int" Usage="objectContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Objects.SaveOptions" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="d5ffe-732">작업의 동작을 결정하는 <see cref="T:System.Data.Objects.SaveOptions" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-732">A <see cref="T:System.Data.Objects.SaveOptions" /> value that determines the behavior of the operation.</span></span></param>
        <summary><span data-ttu-id="d5ffe-733">지정된 <see cref="T:System.Data.Objects.SaveOptions" />를 사용하여 데이터 소스에 대한 모든 업데이트를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-733">Persists all updates to the data source with the specified <see cref="T:System.Data.Objects.SaveOptions" />.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-734"><see cref="F:System.Data.EntityState.Added" />가 호출된 경우 <see cref="F:System.Data.EntityState.Modified" />, <see cref="F:System.Data.EntityState.Deleted" /> 또는 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 상태의 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-734">The number of objects in an <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" />, or <see cref="F:System.Data.EntityState.Deleted" /> state when <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-735">이 특정 오버 로드를 사용 하 여 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 하거나 있는지 <xref:System.Data.Objects.ObjectContext.DetectChanges%2A> 또는 데이터 원본에 변경 내용을 저장 하기 전에 호출 됩니다 <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> 데이터 원본에 대 한 변경 사항을 저장 하면 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-735">Use this specific overload of <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> to either make sure that <xref:System.Data.Objects.ObjectContext.DetectChanges%2A> is called before you save changes to the data source or that <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> is called after you save changes to the data source.</span></span>  
  
 <span data-ttu-id="d5ffe-736">이 열거형에는 <xref:System.FlagsAttribute> 해당 멤버 값의 비트 조합을 허용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-736">This enumeration has a <xref:System.FlagsAttribute> that allows for a bitwise combination of its member values.</span></span>  
  
 <span data-ttu-id="d5ffe-737">클라이언트에서 개체 데이터 원본 측 논리에 의해 업데이트 되었는지 확인을 호출할 수 있습니다 합니다 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 메서드를 <xref:System.Data.Objects.RefreshMode.StoreWins> 호출한 후 값 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-737">To make sure that objects on the client have been updated by data source-side logic, you can call the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> value after you call <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>.</span></span> <span data-ttu-id="d5ffe-738"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드는 트랜잭션에서 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-738">The <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method operates in a transaction.</span></span> <span data-ttu-id="d5ffe-739"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 해당 트랜잭션을 롤백하고 중 하나라도 변경 된 경우 예외를 throw <xref:System.Data.Objects.ObjectStateEntry> 개체를 유지할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-739"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> will roll back that transaction and throw an exception if any one of the dirty <xref:System.Data.Objects.ObjectStateEntry> objects cannot be persisted.</span></span>  
  
 <span data-ttu-id="d5ffe-740">낙관적 동시성 위반이 발생하면 <xref:System.Data.OptimisticConcurrencyException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-740">If an optimistic concurrency violation has occurred, an <xref:System.Data.OptimisticConcurrencyException> is thrown.</span></span> <span data-ttu-id="d5ffe-741">낙관적 동시성 위반을 catch하여 해결하려면 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 또는 <xref:System.Data.Objects.RefreshMode.StoreWins> 값을 사용하여 <xref:System.Data.Objects.RefreshMode.ClientWins> 메서드를 호출한 다음 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드를 다시 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-741">You can resolve an optimistic concurrency violation by catching it, calling the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> or <xref:System.Data.Objects.RefreshMode.ClientWins> values, and then calling the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method again.</span></span> <span data-ttu-id="d5ffe-742">자세한 내용은 [방법: 개체 컨텍스트에서 데이터 동시성 관리](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-742">For more information, see [How to: Manage Data Concurrency in the Object Context](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OptimisticConcurrencyException"><span data-ttu-id="d5ffe-743">낙관적 동시성 위반이 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-743">An optimistic concurrency violation has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SavingChanges">
      <MemberSignature Language="C#" Value="public event EventHandler SavingChanges;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SavingChanges" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectContext.SavingChanges" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SavingChanges As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SavingChanges;" />
      <MemberSignature Language="F#" Value="member this.SavingChanges : EventHandler " Usage="member this.SavingChanges : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ffe-744">변경 내용이 데이터 소스에 저장될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-744">Occurs when changes are saved to the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-745"><xref:System.Data.Objects.ObjectContext.SavingChanges> 이벤트는 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>에서 <xref:System.Data.Objects.ObjectContext> 작업을 시작할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-745">The <xref:System.Data.Objects.ObjectContext.SavingChanges> event is raised at the start of a <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> operation on an <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="d5ffe-746">이 이벤트는 일반적으로 새 값을 데이터베이스에 쓰기 전에 변경된 개체의 유효성을 검사하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-746">This event is typically used to validate changed objects before new values are written to the database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-747">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-747">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-748">이 예제에서는 엔터티 상태 유효성 검사를 수행하는 <xref:System.Data.Objects.ObjectContext.SavingChanges> 이벤트에 대한 처리기를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-748">This registers a handler for the <xref:System.Data.Objects.ObjectContext.SavingChanges> event that performs entity state validation.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#SavingChanges](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#savingchanges)]
 [!code-vb[DP ObjectServices Concepts#SavingChanges](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#savingchanges)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-749">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-749">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; Translate&lt;TElement&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; Translate&lt;TElement&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TElement) (reader As DbDataReader) As ObjectResult(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="d5ffe-750"><see cref="T:System.Data.Common.DbDataReader" />에서 데이터의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-750">The entity type of the data in the <see cref="T:System.Data.Common.DbDataReader" />.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="d5ffe-751">엔터티 개체로 변환할 엔터티 데이터를 포함하는 <see cref="T:System.Data.Common.DbDataReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-751">The <see cref="T:System.Data.Common.DbDataReader" /> that contains entity data to translate into entity objects.</span></span></param>
        <summary><span data-ttu-id="d5ffe-752">엔터티 데이터의 행이 포함된 <see cref="T:System.Data.Common.DbDataReader" />를 요청된 엔터티 형식의 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-752">Translates a <see cref="T:System.Data.Common.DbDataReader" /> that contains rows of entity data to objects of the requested entity type.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-753"><paramref name="TResult" /> 형식의 개체 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-753">An enumeration of objects of type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-754"><xref:System.Data.Objects.ObjectContext.Translate%2A> 메서드는 엔터티 데이터를 변환 데는 <xref:System.Data.Common.DbDataReader> 요청 된 형식의 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-754">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method is used to translate entity data from a <xref:System.Data.Common.DbDataReader> into objects of the requested type.</span></span> <span data-ttu-id="d5ffe-755">이 프로세스는 자동으로 수행 시기는 <xref:System.Data.Objects.ObjectQuery%601> 엔터티 데이터를 반환 하기 위해 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-755">This process is performed automatically when an <xref:System.Data.Objects.ObjectQuery%601> is executed to return entity data.</span></span> <span data-ttu-id="d5ffe-756"><xref:System.Data.Objects.ObjectContext.Translate%2A> 메서드를 사용 하면 데이터 원본에 대 한 표준 ADO.NET 쿼리를 실행 하 고 반환 된 데이터 행을 엔터티 개체로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-756">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method enables you to execute a standard ADO.NET query against a data source and translate the returned data rows into entity objects.</span></span>  
  
 <span data-ttu-id="d5ffe-757">제공 된 <xref:System.Data.Common.DbDataReader> 요청 된 엔터티 형식에 매핑되는 데이터를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-757">The supplied <xref:System.Data.Common.DbDataReader> must contain data that maps to the requested entity type.</span></span>  
  
 <span data-ttu-id="d5ffe-758">자세한 내용은 다음을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-758">For more information, see:</span></span>  
  
 <span data-ttu-id="d5ffe-759">[저장 명령 직접 실행](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) 및</span><span class="sxs-lookup"><span data-stu-id="d5ffe-759">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="d5ffe-760">방법: 데이터 원본에 대해 명령 직접 실행</span><span class="sxs-lookup"><span data-stu-id="d5ffe-760">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-761"><paramref name="reader" />가 <see langword="null" />일 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-761">When <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TEntity&gt; Translate&lt;TEntity&gt; (System.Data.Common.DbDataReader reader, string entitySetName, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TEntity&gt; Translate&lt;TEntity&gt;(class System.Data.Common.DbDataReader reader, string entitySetName, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; System::Data::Objects::ObjectResult&lt;TEntity&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader, System::String ^ entitySetName, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader * string * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'Entity&gt;" Usage="objectContext.Translate (reader, entitySetName, mergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entitySetName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="d5ffe-762"><see cref="T:System.Data.Common.DbDataReader" />에서 데이터의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-762">The entity type of the data in the <see cref="T:System.Data.Common.DbDataReader" />.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="d5ffe-763">엔터티 개체로 변환할 엔터티 데이터를 포함하는 <see cref="T:System.Data.Common.DbDataReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-763">The <see cref="T:System.Data.Common.DbDataReader" /> that contains entity data to translate into entity objects.</span></span></param>
        <param name="entitySetName"><span data-ttu-id="d5ffe-764"><typeparamref name="TEntity" /> 형식의 엔터티 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-764">The entity set of the <typeparamref name="TEntity" /> type.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="d5ffe-765">변환된 개체를 개체 컨텍스트에 추가할 때 사용하는 <see cref="T:System.Data.Objects.MergeOption" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-765">The <see cref="T:System.Data.Objects.MergeOption" /> to use when translated objects are added to the object context.</span></span> <span data-ttu-id="d5ffe-766">기본값은 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-766">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="d5ffe-767">엔터티 데이터의 행이 포함된 <see cref="T:System.Data.Common.DbDataReader" />를 특정 엔터티 집합에서 지정된 병합 옵션을 사용하여 요청된 엔터티 형식의 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-767">Translates a <see cref="T:System.Data.Common.DbDataReader" /> that contains rows of entity data to objects of the requested entity type, in a specific entity set, and with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-768"><paramref name="TResult" /> 형식의 개체 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-768">An enumeration of objects of type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-769"><xref:System.Data.Objects.ObjectContext.Translate%2A> 메서드는 엔터티 데이터를 변환 데는 <xref:System.Data.Common.DbDataReader> 요청 된 형식의 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-769">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method is used to translate entity data from a <xref:System.Data.Common.DbDataReader> into objects of the requested type.</span></span> <span data-ttu-id="d5ffe-770">이 프로세스는 자동으로 수행 시기는 <xref:System.Data.Objects.ObjectQuery%601> 엔터티 데이터를 반환 하기 위해 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-770">This process is performed automatically when an <xref:System.Data.Objects.ObjectQuery%601> is executed to return entity data.</span></span> <span data-ttu-id="d5ffe-771"><xref:System.Data.Objects.ObjectContext.Translate%2A> 메서드를 사용 하면 데이터 원본에 대 한 표준 ADO.NET 쿼리를 실행 하 고 반환 된 데이터 행을 엔터티 개체로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-771">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method enables you to execute a standard ADO.NET query against a data source and translate the returned data rows into entity objects.</span></span>  
  
 <span data-ttu-id="d5ffe-772">제공 된 <xref:System.Data.Common.DbDataReader> 요청 된 엔터티 형식에 매핑되는 데이터를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-772">The supplied <xref:System.Data.Common.DbDataReader> must contain data that maps to the requested entity type.</span></span>  
  
 <span data-ttu-id="d5ffe-773">자세한 내용은 다음을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-773">For more information, see:</span></span>  
  
 <span data-ttu-id="d5ffe-774">[저장 명령 직접 실행](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) 및</span><span class="sxs-lookup"><span data-stu-id="d5ffe-774">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="d5ffe-775">방법: 데이터 원본에 대해 명령 직접 실행</span><span class="sxs-lookup"><span data-stu-id="d5ffe-775">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-776"><paramref name="reader" />가 <see langword="null" />일 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-776">When <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d5ffe-777">제공된 <paramref name="mergeOption" />이 유효한 <see cref="T:System.Data.Objects.MergeOption" /> 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-777">When the supplied <paramref name="mergeOption" /> is not a valid <see cref="T:System.Data.Objects.MergeOption" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ffe-778">제공된 <paramref name="entitySetName" />이 <paramref name="TResult" /> 형식에 대해 유효한 엔터티 집합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-778">When the supplied <paramref name="entitySetName" /> is not a valid entity set for the <paramref name="TResult" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectByKey">
      <MemberSignature Language="C#" Value="public bool TryGetObjectByKey (System.Data.EntityKey key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectByKey(class System.Data.EntityKey key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectByKey (key As EntityKey, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectByKey(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectByKey : System.Data.EntityKey *  -&gt; bool" Usage="objectContext.TryGetObjectByKey (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5ffe-779">찾을 개체의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-779">The key of the object to be found.</span></span></param>
        <param name="value"><span data-ttu-id="d5ffe-780">이 메서드의 반환 값에는 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-780">When this method returns, contains the object.</span></span></param>
        <summary><span data-ttu-id="d5ffe-781">지정된 엔터티 키가 있는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-781">Returns an object that has the specified entity key.</span></span></summary>
        <returns><span data-ttu-id="d5ffe-782">개체가 검색되었으면 <see langword="true" />이고,</span><span class="sxs-lookup"><span data-stu-id="d5ffe-782"><see langword="true" /> if the object was retrieved successfully.</span></span> <span data-ttu-id="d5ffe-783"><paramref name="key" />가 임시 키이거나 연결이 <see langword="false" />이거나 <paramref name="value" />가 <see langword="null" />이면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-783"><see langword="false" /> if the <paramref name="key" /> is temporary, the connection is <see langword="null" />, or the <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ffe-784"><xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A>에서는 지정된 <xref:System.Data.EntityKey>가 있는 개체를 <xref:System.Data.Objects.ObjectStateManager>에서 검색하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-784"><xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> tries to retrieve an object that has the specified <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="d5ffe-785">개체가 현재 개체 컨텍스트에 로드되어 있지 않으면 쿼리를 실행하여 데이터 원본에서 개체를 반환하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-785">If the object is currently not loaded into the object context, a query is executed in an attempt to return the object from the data source.</span></span> <span data-ttu-id="d5ffe-786">자세한 내용은 [개체 쿼리](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-786">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="d5ffe-787"><xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> 메서드를 사용하여 개체를 찾을 수 없을 때 <xref:System.Data.ObjectNotFoundException>에서 <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A>이 발생하지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-787">Use the <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> method to avoid handling the <xref:System.Data.ObjectNotFoundException> raised by <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> when the object cannot be found.</span></span>  
  
 <span data-ttu-id="d5ffe-788">이 메서드는 <xref:System.Data.EntityState.Deleted> 상태의 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-788">This method will return objects in the <xref:System.Data.EntityState.Deleted> state.</span></span>  
  
 <span data-ttu-id="d5ffe-789">임시 키를 사용해서는 데이터 원본의 개체를 반환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-789">A temporary key cannot be used to return an object from the data source.</span></span>  
  
 <span data-ttu-id="d5ffe-790"><xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> 메서드는 표준.NET 적용 됩니다 `TryParse` 패턴에 대 한 합니다 <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> 메서드를 반환 `false` 경우는 <xref:System.Data.ObjectNotFoundException> 발견 되 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-790">The <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> method applies the standard .NET `TryParse` pattern for the <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> method, returning `false` when the <xref:System.Data.ObjectNotFoundException> is caught.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ffe-791">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-791">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="d5ffe-792">예제에서는 지정된 형식의 엔터티에 대한 <xref:System.Data.EntityKey>를 만들고 키로 엔터티를 검색하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-792">The example creates an <xref:System.Data.EntityKey> for an entity of the given type and then tries to retrieve an entity by key.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ffe-793"><paramref name="key" />의 메타데이터가 호환되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="d5ffe-793">Incompatible metadata for <paramref name="key" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ffe-794"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d5ffe-794"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="d5ffe-795">개체 작업(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="d5ffe-795">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>