<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29a24a3dad4fe1dce54dd6d4847aa5d5115398cd" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58730826" /></Metadata><TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FirstChanceExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="63987-101">관리되는 예외가 처음으로 발생할 때 공용 언어 런타임에서 이벤트 처리기를 검색하기 전에 발생하는 알림 이벤트에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-101">Provides data for the notification event that is raised when a managed exception first occurs, before the common language runtime begins searching for event handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63987-102">이 클래스에 대 한 예외 처리기를 제공 합니다 <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> 예외에 대 한 액세스를 사용 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="63987-102">This class provides the exception handler for the <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> event with access to the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63987-103">다음 예제에서는 일련의 명명 된 응용 프로그램 도메인을 만듭니다 `Child_0` 를 통해 `Child_3`를 사용 하 여를 `Worker` 각 응용 프로그램 도메인의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="63987-103">The following example creates a series of application domains named `Child_0` through `Child_3`, with a `Worker` object in each application domain.</span></span> <span data-ttu-id="63987-104">각 `Worker` 개체에 대 한 참조에는 `Worker` 제외 하 고 다음 응용 프로그램 도메인의 개체는 `Worker` 마지막 응용 프로그램 도메인에서.</span><span class="sxs-lookup"><span data-stu-id="63987-104">Each `Worker` object has a reference to the `Worker` object in the next application domain, except for the `Worker` in the last application domain.</span></span> <span data-ttu-id="63987-105">합니다 <xref:System.AppDomain.FirstChanceException> 를 제외한 모든 응용 프로그램 도메인에서 이벤트를 처리 `Child_1`합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-105">The <xref:System.AppDomain.FirstChanceException> event is handled in all application domains except `Child_1`.</span></span>  
  
 <span data-ttu-id="63987-106">응용 프로그램 도메인을 만든 경우 기본 응용 프로그램 도메인 호출을 `TestException` 메서드 첫 번째 자식 응용 프로그램 도메인에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-106">When the application domains have been created, the default application domain calls the `TestException` method for the first child application domain.</span></span> <span data-ttu-id="63987-107">각 `Worker` 호출 개체의 `TestException` 마지막까지 다음 방법을 `Worker` 처리 되거나 처리 되지 않은 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-107">Each `Worker` object calls the `TestException` method for the next, until the last `Worker` throws an exception that is either handled or unhandled.</span></span> <span data-ttu-id="63987-108">따라서 현재 스레드는 모든 응용 프로그램 도메인을 통해 전달 및 `TestException` 스택의 각 응용 프로그램 도메인에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="63987-108">Thus, the current thread passes through all the application domains, and `TestException` is added to the stack in each application domain.</span></span>  
  
 <span data-ttu-id="63987-109">때 마지막 `Worker` 개체에서 예외를 처리 합니다 <xref:System.AppDomain.FirstChanceException> 마지막 응용 프로그램 도메인에만 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-109">When the last `Worker` object handles the exception, the <xref:System.AppDomain.FirstChanceException> event is raised only in the last application domain.</span></span> <span data-ttu-id="63987-110">다른 응용 프로그램 도메인 이벤트가 발생 하므로 예외를 처리 하는 받은 적입니다.</span><span class="sxs-lookup"><span data-stu-id="63987-110">The other application domains never get a chance to handle the exception, so the event is not raised.</span></span>  
  
 <span data-ttu-id="63987-111">때 마지막 `Worker` 개체에서 예외를 처리 하지 않습니다는 <xref:System.AppDomain.FirstChanceException> 이벤트는 이벤트 처리기가 각 응용 프로그램 도메인에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-111">When the last `Worker` object does not handle the exception, the <xref:System.AppDomain.FirstChanceException> event is raised in each application domain that has an event handler.</span></span> <span data-ttu-id="63987-112">각 이벤트 처리기가 끝나면 스택 해제 예외는 기본 응용 프로그램 도메인에서 발견 될 때까지 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-112">After each event handler has finished, the stack continues to unwind until the exception is caught by the default application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63987-113">변경 이벤트가 더 가까운 곳으로 스택 표시 증가 하는 방법 및 기본 응용 프로그램 도메인에 가까울수록 서로 볼 `e.Exception.Message` 에 `e.Exception` 에 `FirstChanceHandler` 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="63987-113">To see how the stack display grows as the event is raised closer and closer to the default application domain, change `e.Exception.Message` to `e.Exception` in the `FirstChanceHandler` event handlers.</span></span> <span data-ttu-id="63987-114">때 `TestException` 라고 응용 프로그램 도메인 경계를 가로질러 두 번 나타납니다: 프록시에 한 번씩 및 스텁에 대 한 한 번입니다.</span><span class="sxs-lookup"><span data-stu-id="63987-114">Notice that when `TestException` is called across application domain boundaries, it appears twice: once for the proxy and once for the stub.</span></span>  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs : Exception -&gt; System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" Usage="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="63987-115">관리 코드에서 방금 throw된 예외이며 <see cref="E:System.AppDomain.UnhandledException" /> 이벤트를 통해 검사됩니다.</span><span class="sxs-lookup"><span data-stu-id="63987-115">The exception that was just thrown by managed code, and that will be examined by the <see cref="E:System.AppDomain.UnhandledException" /> event.</span></span></param>
        <summary><span data-ttu-id="63987-116">지정된 예외를 사용하여 <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="63987-116">Initializes a new instance of the <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> class with a specified exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63987-117">이 생성자는 응용 프로그램 코드가 아닌 공용 언어 런타임에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="63987-117">This constructor is called by the common language runtime, not by application code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63987-118">관리되는 코드에서 throw된 예외에 해당하는 관리되는 예외 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="63987-118">The managed exception object that corresponds to the exception thrown in managed code.</span></span></summary>
        <value><span data-ttu-id="63987-119">새로 throw된 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="63987-119">The newly thrown exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63987-120">처리 하는 메서드는 <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> 이벤트에서 예외를 검토 하 고 적절 한 로깅을 또는 다른 알림 서비스를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="63987-120">The method that handles the <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> event can examine the exception and perform appropriate logging or other notification services.</span></span>  
  
 <span data-ttu-id="63987-121">예제 코드를 보려면 <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="63987-121">For example code, see <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>